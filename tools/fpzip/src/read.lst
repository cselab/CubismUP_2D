IBM XL C/C++ for Blue Gene, Version 12.1.0.9 --- read.cpp Mon 01 Dec 2014 11:39:52 CET (C++)

>>>>> OPTIONS SECTION <<<<<

SIMD=AUTO       INLINE=NOAUTO:LEVEL=5           LINEDEBUG       LIST            
SOURCE          NOSTRICT_INDUCTION              THREADED        
ALIAS=ANSI:NOTYPEPTR:NOALLPTRS:NOADDRTAKEN:RESTRICT:NOGLOBAL    ARCH=QP         
CACHE=LEVEL=1:TYPE=D:SIZE=16:LINE=64:ASSOC=8:COST=6             
CACHE=LEVEL=1:TYPE=I:SIZE=16:LINE=64:ASSOC=4:COST=6             
CACHE=LEVEL=2:TYPE=D:SIZE=33554:LINE=128:ASSOC=16:COST=80       
CACHE=LEVEL=2:TYPE=I:SIZE=33554:LINE=128:ASSOC=16:COST=80       
HOT=NOARRAYPAD:ARRAYPAD=0:VECTOR:LEVEL=1:FASTMATH               OPT=2           
OBJECTMODE=64   PACK_SEMANTIC=GNU               PIC=SMALL       REPORT          
SHOWPDF=NO      SMP             SMP=AUTO        SMP=OPT         SMP=NOOMP       
SMP=SPECULATIVE SMP=OSTLS       SUPPRESS=CPPC0900:CPPC0922      TLS=DEFAULT     
TMPLPARSE=NO    TUNE=QP         

>>>>> SOURCE SECTION <<<<<
 
            1 | #include <cstdio>
            2 | #include <cstdlib>
            3 | #include "pcdecoder.h"
            4 | #include "rcqsmodel.h"
            5 | #include "front.h"
            6 | #include "fpzip.h"
            7 | #include "codec.h"
            8 | #include "read.h"
            9 | 
           10 | #if FPZIP_FP == FPZIP_FP_FAST || FPZIP_FP == FPZIP_FP_SAFE
           11 | // decompress 3D array at specified precision using floating-point arithmetic
           12 | template <typename T, unsigned bits>
           13 | static void
           14 | decompress3d(
           15 |   RCdecoder* rd,   // entropy decoder
           16 |   T*         data, // flattened 3D array to decompress to
           17 |   unsigned   nx,   // number of x samples
           18 |   unsigned   ny,   // number of y samples
           19 |   unsigned   nz    // number of z samples
           20 | )
           21 | {
           22 |   // initialize decompressor
           23 |   typedef PCmap<T, bits> MAP;
           24 |   RCmodel* rm = new RCqsmodel(false, PCdecoder<T, MAP>::symbols);
           25 |   PCdecoder<T, MAP>* fd = new PCdecoder<T, MAP>(rd, &rm);
           26 |   FRONT<T> f(nx, ny);
           27 | 
           28 |   // decode difference between predicted (p) and actual (a) value
           29 |   unsigned x, y, z;
           30 |   for (z = 0, f.advance(0, 0, 1); z < nz; z++)
           31 |     for (y = 0, f.advance(0, 1, 0); y < ny; y++)
           32 |       for (x = 0, f.advance(1, 0, 0); x < nx; x++) {
           33 |         #if FPZIP_FP == FPZIP_FP_SAFE
           34 |         volatile T p = f(1, 1, 1);
           35 |         p += f(1, 0, 0);
           36 |         p -= f(0, 1, 1);
           37 |         p += f(0, 1, 0);
           38 |         p -= f(1, 0, 1);
           39 |         p += f(0, 0, 1);
           40 |         p -= f(1, 1, 0);
           41 |         #else
           42 |         T p = f(1, 0, 0) - f(0, 1, 1) +
           43 |               f(0, 1, 0) - f(1, 0, 1) +
           44 |               f(0, 0, 1) - f(1, 1, 0) +
           45 |               f(1, 1, 1);
           46 |         #endif
           47 |         T a = fd->decode(p);
           48 |         *data++ = a;
           49 |         f.push(a);
           50 |       }
           51 | 
           52 |   delete fd;
           53 |   delete rm;
           54 | }
           55 | #elif FPZIP_FP == FPZIP_FP_EMUL
           56 | #include "fpe.h"
           57 | // decompress 3D array at specified precision using floating-point emulation
           58 | template <typename T, unsigned bits>
           59 | static void
           60 | decompress3d(
           61 |   RCdecoder* rd,   // entropy encoder
           62 |   T*         data, // flattened 3D array to decompress to
           63 |   unsigned   nx,   // number of x samples
           64 |   unsigned   ny,   // number of y samples
           65 |   unsigned   nz    // number of z samples
           66 | )
           67 | {
           68 |   // initialize decompressor
           69 |   typedef PCmap<T, bits> MAP;
           70 |   typedef FPE<T> FLOAT;
           71 |   RCmodel* rm = new RCqsmodel(false, PCdecoder<T, MAP>::symbols);
           72 |   PCdecoder<T, MAP>* fd = new PCdecoder<T, MAP>(rd, &rm);
           73 |   FRONT<FLOAT> f(nx, ny);
           74 | 
           75 |   // decode difference between predicted (p) and actual (a) value
           76 |   unsigned x, y, z;
           77 |   for (z = 0, f.advance(0, 0, 1); z < nz; z++)
           78 |     for (y = 0, f.advance(0, 1, 0); y < ny; y++)
           79 |       for (x = 0, f.advance(1, 0, 0); x < nx; x++) {
           80 |         FLOAT p = f(1, 0, 0) - f(0, 1, 1) +
           81 |                   f(0, 1, 0) - f(1, 0, 1) +
           82 |                   f(0, 0, 1) - f(1, 1, 0) +
           83 |                   f(1, 1, 1);
           84 |         T a = fd->decode(T(p));
           85 |         *data++ = a;
           86 |         f.push(a);
           87 |       }
           88 |                                                                                 
           89 |   delete fd;
           90 |   delete rm;
           91 | }
           92 | #else // FPZIP_FP_INT
           93 | // decompress 3D array at specified precision using integer arithmetic
           94 | template <typename T, unsigned bits>
           95 | static void
           96 | decompress3d(
           97 |   RCdecoder* rd,   // entropy decoder
           98 |   T*         data, // flattened 3D array to decompress to
           99 |   unsigned   nx,   // number of x samples
          100 |   unsigned   ny,   // number of y samples
          101 |   unsigned   nz    // number of z samples
          102 | )
          103 | {
          104 |   // initialize decompressor
          105 |   typedef PCmap<T, bits> TMAP;
          106 |   typedef typename TMAP::RANGE U;
          107 |   typedef PCmap<U, bits, U> UMAP;
          108 |   RCmodel* rm = new RCqsmodel(false, PCdecoder<U, UMAP>::symbols);
          109 |   PCdecoder<U, UMAP>* fd = new PCdecoder<U, UMAP>(rd, &rm);
          110 |   TMAP map;
          111 |   FRONT<U> f(nx, ny, map.forward(0));
          112 | 
          113 |   // decode difference between predicted (p) and actual (a) value
          114 |   unsigned x, y, z;
          115 |   for (z = 0, f.advance(0, 0, 1); z < nz; z++)
          116 |     for (y = 0, f.advance(0, 1, 0); y < ny; y++)
          117 |       for (x = 0, f.advance(1, 0, 0); x < nx; x++) {
          118 |         U p = f(1, 0, 0) - f(0, 1, 1) +
          119 |               f(0, 1, 0) - f(1, 0, 1) +
          120 |               f(0, 0, 1) - f(1, 1, 0) +
          121 |               f(1, 1, 1);
          122 |         U a = fd->decode(p);
          123 |         *data++ = map.inverse(a);
          124 |         f.push(a);
          125 |       }
          126 | 
          127 |   delete fd;
          128 |   delete rm;
          129 | }
          130 | #endif
          131 | 
          132 | // decompress 4D array
          133 | template <typename T>
          134 | static void
          135 | decompress4d(
          136 |   RCdecoder* rd,   // entropy decoder
          137 |   T*         data, // flattened 4D array to decompress to
          138 |   int*       prec, // per field precision
          139 |   unsigned   nx,   // number of x samples
          140 |   unsigned   ny,   // number of y samples
          141 |   unsigned   nz,   // number of z samples
          142 |   unsigned   nf    // number of fields
          143 | )
          144 | {
          145 |   // decompress one field at a time
          146 |   for (unsigned i = 0; i < nf; i++) {
          147 |     int bits = rd->template decode <unsigned>(32);
          148 |     if (prec)
          149 |       prec[i] = bits;
          150 |     switch (bits) {
          151 |       case subsize(T, 1): //  8-bit float, 16-bit double
          152 |         decompress3d<T, subsize(T, 1)>(rd, data, nx, ny, nz);
          153 |         break;
          154 |       case subsize(T, 2): // 16-bit float, 32-bit double
          155 |         decompress3d<T, subsize(T, 2)>(rd, data, nx, ny, nz);
          156 |         break;
          157 |       case subsize(T, 3): // 24-bit float, 48-bit double
          158 |         decompress3d<T, subsize(T, 3)>(rd, data, nx, ny, nz);
          159 |         break;
          160 |       case subsize(T, 4): // 32-bit float, 64-bit double
          161 |         decompress3d<T, subsize(T, 4)>(rd, data, nx, ny, nz);
          162 |         break;
          163 |       default:
          164 |         fprintf(stderr, "fpzip: invalid precision %d in file\n", bits);
          165 |         abort();
          166 |         break;
          167 |     }
          168 |     data += nx * ny * nz;
          169 |   }
          170 | }
          171 | 
          172 | void
          173 | read_header(
          174 |   RCdecoder* rd,
          175 |   unsigned   nx,
          176 |   unsigned   ny,
          177 |   unsigned   nz,
          178 |   unsigned   nf,
          179 |   int        dp
          180 | )
          181 | {
          182 |   // magic
          183 |   if (rd->decode<unsigned>(8) != 'f' ||
          184 |       rd->decode<unsigned>(8) != 'p' ||
          185 |       rd->decode<unsigned>(8) != 'z' ||
          186 |       rd->decode<unsigned>(8) != '\0') {
          187 |     fprintf(stderr, "fpzip: not an fpz stream\n");
          188 |     abort();
          189 |   }
          190 | 
          191 |   // format version
          192 |   if (rd->decode<unsigned>(16) != FPZ_MAJ_VERSION ||
          193 |       rd->decode<unsigned>(16) != FPZ_MIN_VERSION) {
          194 |     fprintf(stderr, "fpzip: format version not supported\n");
          195 |     abort();
          196 |   }
          197 | 
          198 |   // array dimensions
          199 |   if (rd->decode<unsigned>(32) != nf ||
          200 |       rd->decode<unsigned>(32) != nz ||
          201 |       rd->decode<unsigned>(32) != ny ||
          202 |       rd->decode<unsigned>(32) != nx) {
          203 |     fprintf(stderr, "fpzip: array dimensions do not match\n");
          204 |     fprintf(stderr, "fpzip: array dimensions do not match\n");
          205 |     abort();
          206 |   }
          207 | 
          208 |   // single or double precision
          209 |   if (rd->decode() != !!dp) {
          210 |     fprintf(stderr, "fpzip: floating-point type does not match\n");
          211 |     abort();
          212 |   }
          213 | }
          214 | 
          215 | void
          216 | get_header(
          217 |   RCdecoder* rd,
          218 |   unsigned   *nx,
          219 |   unsigned   *ny,
          220 |   unsigned   *nz,
          221 |   unsigned   *nf,
          222 |   int        *dp
          223 | )
          224 | {
          225 |   // magic
          226 |   if (rd->decode<unsigned>(8) != 'f' ||
          227 |       rd->decode<unsigned>(8) != 'p' ||
          228 |       rd->decode<unsigned>(8) != 'z' ||
          229 |       rd->decode<unsigned>(8) != '\0') {
          230 |     fprintf(stderr, "fpzip: not an fpz stream\n");
          231 |     abort();
          232 |   }
          233 | 
          234 |   // format version
          235 |   if (rd->decode<unsigned>(16) != FPZ_MAJ_VERSION ||
          236 |       rd->decode<unsigned>(16) != FPZ_MIN_VERSION) {
          237 |     fprintf(stderr, "fpzip: format version not supported\n");
          238 |     abort();
          239 |   }
          240 | 
          241 |   // array dimensions
          242 |   *nf = rd->decode<unsigned>(32);
          243 |   *nz = rd->decode<unsigned>(32);
          244 |   *ny = rd->decode<unsigned>(32);
          245 |   *nx = rd->decode<unsigned>(32);
          246 | 
          247 |   *dp = rd->decode();
          248 | }
          249 | 
          250 | static void
          251 | fpzip_stream_read(
          252 |   RCdecoder* rd,   // entropy decoder
          253 |   void*      data, // array to read
          254 |   int*       prec, // per field bits of precision
          255 |   int        dp,   // double precision array if nonzero
          256 |   unsigned   nx,   // number of x samples
          257 |   unsigned   ny,   // number of y samples
          258 |   unsigned   nz,   // number of z samples
          259 |   unsigned   nf    // number of fields
          260 | )
          261 | {
          262 |   rd->init();
          263 |   read_header(rd, nx, ny, nz, nf, dp);
          264 |   if (dp)
          265 |     decompress4d(rd, (double*)data, prec, nx, ny, nz, nf);
          266 |   else
          267 |     decompress4d(rd, (float*)data, prec, nx, ny, nz, nf);
          268 | }
          269 | 
          270 | static void
          271 | fpzip_stream_get_header(
          272 |   RCdecoder* rd,   // entropy decoder
          273 |   int        *dp,   // double precision array if nonzero
          274 |   unsigned   *nx,   // number of x samples
          275 |   unsigned   *ny,   // number of y samples
          276 |   unsigned   *nz,   // number of z samples
          277 |   unsigned   *nf    // number of fields
          278 | )
          279 | {
          280 |   rd->init();
          281 |   get_header(rd, nx, ny, nz, nf, dp);
          282 | }
          283 | 
          284 | // read and decompress a single or double precision 4D array from file
          285 | unsigned
          286 | fpzip_file_read(
          287 |   FILE*       file, // binary input stream
          288 |   void*       data, // array to read
          289 |   int*        prec, // per field bits of precision
          290 |   int         dp,   // double precision array if nonzero
          291 |   unsigned    nx,   // number of x samples
          292 |   unsigned    ny,   // number of y samples
          293 |   unsigned    nz,   // number of z samples
          294 |   unsigned    nf    // number of fields
          295 | )
          296 | {
          297 |   RCfiledecoder* rd = new RCfiledecoder(file);
          298 |   fpzip_stream_read(rd, data, prec, dp, nx, ny, nz, nf);
          299 |   unsigned bytes = rd->error ? 0 : rd->bytes();
          300 |   delete rd;
          301 |   return bytes;
          302 | }
          303 | 
          304 | // read and decompress a single or double precision 4D array from file
          305 | unsigned
          306 | fpzip_memory_read(
          307 |   const void* buffer, // pointer to compressed data
          308 |   void*       data,   // array to read
          309 |   int*        prec,   // per field bits of precision
          310 |   int         dp,     // double precision array if nonzero
          311 |   unsigned    nx,     // number of x samples
          312 |   unsigned    ny,     // number of y samples
          313 |   unsigned    nz,     // number of z samples
          314 |   unsigned    nf      // number of fields
          315 | )
          316 | {
          317 |   RCmemdecoder* rd = new RCmemdecoder(buffer);
          318 |   fpzip_stream_read(rd, data, prec, dp, nx, ny, nz, nf);
          319 |   unsigned bytes = rd->error ? 0 : rd->bytes();
          320 |   delete rd;
          321 |   return bytes;
          322 | }
          323 | 
          324 | // read and decompress a single or double precision 4D array from file
          325 | void
          326 | fpzip_memory_get_header(
          327 |   const void* buffer, // pointer to compressed data
          328 |   int         *dp,     // double precision array if nonzero
          329 |   unsigned    *nx,     // number of x samples
          330 |   unsigned    *ny,     // number of y samples
          331 |   unsigned    *nz,     // number of z samples
          332 |   unsigned    *nf      // number of fields
          333 | )
          334 | {
          335 |   RCmemdecoder* rd = new RCmemdecoder(buffer);
          336 |   fpzip_stream_get_header(rd, dp, nx, ny, nz, nf);
          337 |   delete rd;
          338 | }
          339 | 
          340 | // wrappers for fortran calls
          341 | void
          342 | fpzip_file_read_f(
          343 |   const char* path, // path to input file
          344 |   void*       data, // array to read
          345 |   int*        prec, // per field bits of precision
          346 |   const int*  dp,   // double precision array if nonzero
          347 |   const int*  nx,   // number of x samples
          348 |   const int*  ny,   // number of y samples
          349 |   const int*  nz,   // number of z samples
          350 |   const int*  nf    // number of fields
          351 | )
          352 | {
          353 |   FILE* file = fopen(path, "rb");
          354 |   if (!file) {
          355 |     fprintf(stderr, "fpzip: cannot open file %s\n", path);
          356 |     abort();
          357 |   }
          358 |   if (!fpzip_file_read(file, data, prec, *dp, *nx, *ny, *nz, *nf)) {
          359 |     fprintf(stderr, "fpzip: cannot read file %s\n", path);
          360 |     abort();
          361 |   }
          362 |   fclose(file);
          363 | }
          364 | 
          365 | void
          366 | fpzip_file_read_f_(
          367 |   const char* path, // path to input file
          368 |   void*       data, // array to read
          369 |   int*        prec, // per field bits of precision
          370 |   const int*  dp,   // double precision array if nonzero
          371 |   const int*  nx,   // number of x samples
          372 |   const int*  ny,   // number of y samples
          373 |   const int*  nz,   // number of z samples
          374 |   const int*  nf    // number of fields
          375 | )
          376 | {
          377 |   fpzip_file_read_f(path, data, prec, dp, nx, ny, nz, nf);
          378 | }


>>>>> FILE TABLE SECTION <<<<<
    1  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/cstdio
    2  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/powerpc64-bgq-linux/bits/c++config.h
    3  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/powerpc64-bgq-linux/bits/os_defines.h
    4  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/features.h
    5  =  /opt/ibmcmp/vacpp/bg/12.1/include/sys/cdefs.h
    6  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/sys/cdefs.h
    7  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/bits/wordsize.h
    8  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/gnu/stubs.h
    9  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/bits/wordsize.h
   10  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/gnu/stubs-64.h
   11  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/powerpc64-bgq-linux/bits/cpu_defines.h
   12  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/cstddef
   13  =  /opt/ibmcmp/vacpp/bg/12.1/include/stddef.h
   14  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/include/stddef.h
   15  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/stdio.h
   16  =  /opt/ibmcmp/vacpp/bg/12.1/include/stddef.h
   17  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/include/stddef.h
   18  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/bits/types.h
   19  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/bits/wordsize.h
   20  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/bits/typesizes.h
   21  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/libio.h
   22  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/_G_config.h
   23  =  /opt/ibmcmp/vacpp/bg/12.1/include/stddef.h
   24  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/include/stddef.h
   25  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/wchar.h
   26  =  /opt/ibmcmp/vacpp/bg/12.1/include/stddef.h
   27  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/include/stddef.h
   28  =  /opt/ibmcmp/vacpp/bg/12.1/include/stdarg.h
   29  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/bits/stdio_lim.h
   30  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/bits/sys_errlist.h
   31  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/bits/stdio.h
   32  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/cstdlib
   33  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/cstddef
   34  =  /opt/ibmcmp/vacpp/bg/12.1/include/stddef.h
   35  =  /opt/ibmcmp/vacpp/bg/12.1/include/stdlib.h
   36  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/sys/types.h
   37  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/time.h
   38  =  /opt/ibmcmp/vacpp/bg/12.1/include/stddef.h
   39  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/include/stddef.h
   40  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/endian.h
   41  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/bits/endian.h
   42  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/bits/byteswap.h
   43  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/sys/select.h
   44  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/bits/select.h
   45  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/bits/sigset.h
   46  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/time.h
   47  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/bits/time.h
   48  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/sys/sysmacros.h
   49  =  /opt/ibmcmp/vacpp/bg/12.1/include/bits/pthreadtypes.h
   50  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/bits/pthreadtypes.h
   51  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/bits/wordsize.h
   52  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/stdlib.h
   53  =  /opt/ibmcmp/vacpp/bg/12.1/include/stddef.h
   54  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/include/stddef.h
   55  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/bits/waitflags.h
   56  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/bits/waitstatus.h
   57  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/xlocale.h
   58  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/alloca.h
   59  =  /opt/ibmcmp/vacpp/bg/12.1/include/stddef.h
   60  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/include/stddef.h
   61  =  ../inc/pcdecoder.h
   62  =  ../inc/pccodec.h
   63  =  ../inc/pccodec.inl
   64  =  ../inc/pcmap.h
   65  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/climits
   66  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/include-fixed/limits.h
   67  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/include-fixed/syslimits.h
   68  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/include-fixed/limits.h
   69  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/limits.h
   70  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/bits/posix1_lim.h
   71  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/bits/local_lim.h
   72  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/linux/limits.h
   73  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/bits/posix2_lim.h
   74  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/bits/xopen_lim.h
   75  =  /bgsys/drivers/toolchain/V1R2M2_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/sys-include/bits/stdio_lim.h
   76  =  ../inc/pcmap.inl
   77  =  ../inc/rcdecoder.h
   78  =  ../inc/rcmodel.h
   79  =  ../inc/rcdecoder.inl
   80  =  ../inc/pcdecoder.inl
   81  =  ../inc/rcqsmodel.h
   82  =  ../inc/rcqsmodel.inl
   83  =  ../inc/front.h
   84  =  ../inc/fpzip.h
   85  =  ../inc/codec.h
   86  =  ../inc/read.h


























>>>>> COMPILATION EPILOGUE SECTION <<<<<

 IBM C and C++ Compilers Language Summary of Diagnosed Conditions

TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
Compilation succeeded for file read.cpp.

>>>>> OBJECT SECTION, OPTIMIZATION <<<<<
   173 |  void read_header(RCdecoder*, unsigned int, unsigned int, unsigned int, unsigned int, int)(char * rd, unsigned int nx, unsigned int ny, unsigned int nz, unsigned int nf, int dp)
   181 |  {
   183 |    __2 = 8u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_8;
            $$CIV0 = 0ll;
            do {   /* id=10 guarded */ /* ~6 */ 
              /* region = 89 */
              /* bump-normalized */
     7 |      if (!(__2 > 16u)) goto lab_9;
     3 |      $$RET0 = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RET0 << m);
     9 |      m = m + 16u;
    10 |      __2 = __2 - 16u;
    11 |    lab_9:
     6 |      $$CIV0 = $$CIV0 + 1ll;
            } while ((unsigned long long) $$CIV0 < 1ull);    /* ~6 */
          lab_8:
    12 |    $$RET1 = RCdecoder::decode_shift(unsigned int)(rd,__2);
    13 |    if (102u != ($$RET1 << m) + s) goto lab_2;
   184 |    __6 = 8u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_13;
            $$CIV1 = 0ll;
            do {   /* id=9 guarded */ /* ~11 */ 
              /* region = 88 */
              /* bump-normalized */
     7 |      if (!(__6 > 16u)) goto lab_14;
     3 |      $$RET2 = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RET2 << m);
     9 |      m = m + 16u;
    10 |      __6 = __6 - 16u;
    11 |    lab_14:
     6 |      $$CIV1 = $$CIV1 + 1ll;
            } while ((unsigned long long) $$CIV1 < 1ull);    /* ~11 */
          lab_13:
    12 |    $$RET3 = RCdecoder::decode_shift(unsigned int)(rd,__6);
    13 |    if (112u != ($$RET3 << m) + s) goto lab_2;
   185 |    __10 = 8u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_18;
            $$CIV2 = 0ll;
            do {   /* id=8 guarded */ /* ~16 */ 
              /* region = 87 */
              /* bump-normalized */
     7 |      if (!(__10 > 16u)) goto lab_19;
     3 |      $$RET4 = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RET4 << m);
     9 |      m = m + 16u;
    10 |      __10 = __10 - 16u;
    11 |    lab_19:
     6 |      $$CIV2 = $$CIV2 + 1ll;
            } while ((unsigned long long) $$CIV2 < 1ull);    /* ~16 */
          lab_18:
    12 |    $$RET5 = RCdecoder::decode_shift(unsigned int)(rd,__10);
    13 |    if (122u != ($$RET5 << m) + s) goto lab_2;
   186 |    __14 = 8u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_23;
            $$CIV3 = 0ll;
            do {   /* id=7 guarded */ /* ~21 */ 
              /* region = 86 */
              /* bump-normalized */
     7 |      if (!(__14 > 16u)) goto lab_24;
     3 |      $$RET6 = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RET6 << m);
     9 |      m = m + 16u;
    10 |      __14 = __14 - 16u;
    11 |    lab_24:
     6 |      $$CIV3 = $$CIV3 + 1ll;
            } while ((unsigned long long) $$CIV3 < 1ull);    /* ~21 */
          lab_23:
    12 |    $$RET7 = RCdecoder::decode_shift(unsigned int)(rd,__14);
    13 |    if (!(0u != ($$RET7 << m) + s)) goto lab_1;
          lab_2:
   187 |    fprintf(stderr,"fpzip: not an fpz stream/n");
   188 |    abort()
            return;
   189 |  lab_1:
   192 |    __18 = 16u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_31;
            $$CIV4 = 0ll;
            do {   /* id=6 guarded */ /* ~29 */ 
              /* region = 85 */
              /* bump-normalized */
     7 |      if (!(__18 > 16u)) goto lab_32;
     3 |      $$RET8 = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RET8 << m);
     9 |      m = m + 16u;
    10 |      __18 = __18 - 16u;
    11 |    lab_32:
     6 |      $$CIV4 = $$CIV4 + 1ll;
            } while ((unsigned long long) $$CIV4 < 1ull);    /* ~29 */
          lab_31:
    12 |    $$RET9 = RCdecoder::decode_shift(unsigned int)(rd,__18);
    13 |    if (257u != ($$RET9 << m) + s) goto lab_27;
   193 |    __22 = 16u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_36;
            $$CIV5 = 0ll;
            do {   /* id=5 guarded */ /* ~34 */ 
              /* region = 84 */
              /* bump-normalized */
     7 |      if (!(__22 > 16u)) goto lab_37;
     3 |      $$RETA = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RETA << m);
     9 |      m = m + 16u;
    10 |      __22 = __22 - 16u;
    11 |    lab_37:
     6 |      $$CIV5 = $$CIV5 + 1ll;
            } while ((unsigned long long) $$CIV5 < 1ull);    /* ~34 */
          lab_36:
    12 |    $$RETB = RCdecoder::decode_shift(unsigned int)(rd,__22);
    13 |    if (!(1u != ($$RETB << m) + s)) goto lab_26;
          lab_27:
   194 |    fprintf(stderr,"fpzip: format version not supported/n");
   195 |    abort()
            return;
   196 |  lab_26:
   199 |    __26 = 32u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_46;
            $$CIV6 = 0ll;
            do {   /* id=4 guarded */ /* ~44 */ 
              /* region = 83 */
              /* bump-normalized */
     7 |      if (!(__26 > 16u)) goto lab_47;
     3 |      $$RETC = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RETC << m);
     9 |      m = m + 16u;
    10 |      __26 = __26 - 16u;
    11 |    lab_47:
     6 |      $$CIV6 = $$CIV6 + 1ll;
            } while ((unsigned long long) $$CIV6 < 1ull);    /* ~44 */
          lab_46:
    12 |    $$RETD = RCdecoder::decode_shift(unsigned int)(rd,__26);
    13 |    if (nf != ($$RETD << m) + s) goto lab_40;
   200 |    __30 = 32u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_51;
            $$CIV7 = 0ll;
            do {   /* id=3 guarded */ /* ~49 */ 
              /* region = 82 */
              /* bump-normalized */
     7 |      if (!(__30 > 16u)) goto lab_52;
     3 |      $$RETE = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RETE << m);
     9 |      m = m + 16u;
    10 |      __30 = __30 - 16u;
    11 |    lab_52:
     6 |      $$CIV7 = $$CIV7 + 1ll;
            } while ((unsigned long long) $$CIV7 < 1ull);    /* ~49 */
          lab_51:
    12 |    $$RETF = RCdecoder::decode_shift(unsigned int)(rd,__30);
    13 |    if (nz != ($$RETF << m) + s) goto lab_40;
   201 |    __34 = 32u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_56;
            $$CIV8 = 0ll;
            do {   /* id=2 guarded */ /* ~54 */ 
              /* region = 81 */
              /* bump-normalized */
     7 |      if (!(__34 > 16u)) goto lab_57;
     3 |      $$RET10 = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RET10 << m);
     9 |      m = m + 16u;
    10 |      __34 = __34 - 16u;
    11 |    lab_57:
     6 |      $$CIV8 = $$CIV8 + 1ll;
            } while ((unsigned long long) $$CIV8 < 1ull);    /* ~54 */
          lab_56:
    12 |    $$RET11 = RCdecoder::decode_shift(unsigned int)(rd,__34);
    13 |    if (ny != ($$RET11 << m) + s) goto lab_40;
   202 |    __38 = 32u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_61;
            $$CIV9 = 0ll;
            do {   /* id=1 guarded */ /* ~59 */ 
              /* region = 80 */
              /* bump-normalized */
     7 |      if (!(__38 > 16u)) goto lab_62;
     3 |      $$RET12 = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RET12 << m);
     9 |      m = m + 16u;
    10 |      __38 = __38 - 16u;
    11 |    lab_62:
     6 |      $$CIV9 = $$CIV9 + 1ll;
            } while ((unsigned long long) $$CIV9 < 1ull);    /* ~59 */
          lab_61:
    12 |    $$RET13 = RCdecoder::decode_shift(unsigned int)(rd,__38);
    13 |    if (!(nx != ($$RET13 << m) + s)) goto lab_39;
          lab_40:
   203 |    fprintf(stderr,"fpzip: array dimensions do not match/n");
   204 |    fprintf(stderr,"fpzip: array dimensions do not match/n");
   205 |    abort()
            return;
   206 |  lab_39:
            $$RET14 = (int) RCdecoder::decode()(rd);
   209 |    if (!($$RET14 != (0u == (char) (0u == (char) (dp != 0))))) goto lab_64;
   210 |    fprintf(stderr,"fpzip: floating-point type does not match/n");
   211 |    abort()
            return;
   212 |  lab_64:
   213 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        79             6            10    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder12decode_shiftEj" 
                                          that may have side effects.
        79             6             9    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder12decode_shiftEj" 
                                          that may have side effects.
        79             6             8    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder12decode_shiftEj" 
                                          that may have side effects.
        79             6             7    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder12decode_shiftEj" 
                                          that may have side effects.
        79             6             6    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder12decode_shiftEj" 
                                          that may have side effects.
        79             6             5    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder12decode_shiftEj" 
                                          that may have side effects.
        79             6             4    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder12decode_shiftEj" 
                                          that may have side effects.
        79             6             3    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder12decode_shiftEj" 
                                          that may have side effects.
        79             6             2    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder12decode_shiftEj" 
                                          that may have side effects.
        79             6             1    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder12decode_shiftEj" 
                                          that may have side effects.

   216 |  void get_header(RCdecoder*, unsigned int*, unsigned int*, unsigned int*, unsigned int*, int*)(char * rd, int *nx, int *ny, int *nz, int *nf, int *dp)
   224 |  {
   226 |    __52 = 8u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_8;
            $$CIVA = 0ll;
            do {   /* id=10 guarded */ /* ~6 */ 
              /* region = 82 */
              /* bump-normalized */
     7 |      if (!(__52 > 16u)) goto lab_9;
     3 |      $$RET15 = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RET15 << m);
     9 |      m = m + 16u;
    10 |      __52 = __52 - 16u;
    11 |    lab_9:
     6 |      $$CIVA = $$CIVA + 1ll;
            } while ((unsigned long long) $$CIVA < 1ull);    /* ~6 */
          lab_8:
    12 |    $$RET16 = RCdecoder::decode_shift(unsigned int)(rd,__52);
    13 |    if (102u != ($$RET16 << m) + s) goto lab_2;
   227 |    __56 = 8u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_13;
            $$CIVB = 0ll;
            do {   /* id=9 guarded */ /* ~11 */ 
              /* region = 81 */
              /* bump-normalized */
     7 |      if (!(__56 > 16u)) goto lab_14;
     3 |      $$RET17 = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RET17 << m);
     9 |      m = m + 16u;
    10 |      __56 = __56 - 16u;
    11 |    lab_14:
     6 |      $$CIVB = $$CIVB + 1ll;
            } while ((unsigned long long) $$CIVB < 1ull);    /* ~11 */
          lab_13:
    12 |    $$RET18 = RCdecoder::decode_shift(unsigned int)(rd,__56);
    13 |    if (112u != ($$RET18 << m) + s) goto lab_2;
   228 |    __60 = 8u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_18;
            $$CIVC = 0ll;
            do {   /* id=8 guarded */ /* ~16 */ 
              /* region = 80 */
              /* bump-normalized */
     7 |      if (!(__60 > 16u)) goto lab_19;
     3 |      $$RET19 = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RET19 << m);
     9 |      m = m + 16u;
    10 |      __60 = __60 - 16u;
    11 |    lab_19:
     6 |      $$CIVC = $$CIVC + 1ll;
            } while ((unsigned long long) $$CIVC < 1ull);    /* ~16 */
          lab_18:
    12 |    $$RET1A = RCdecoder::decode_shift(unsigned int)(rd,__60);
    13 |    if (122u != ($$RET1A << m) + s) goto lab_2;
   229 |    __64 = 8u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_23;
            $$CIVD = 0ll;
            do {   /* id=7 guarded */ /* ~21 */ 
              /* region = 79 */
              /* bump-normalized */
     7 |      if (!(__64 > 16u)) goto lab_24;
     3 |      $$RET1B = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RET1B << m);
     9 |      m = m + 16u;
    10 |      __64 = __64 - 16u;
    11 |    lab_24:
     6 |      $$CIVD = $$CIVD + 1ll;
            } while ((unsigned long long) $$CIVD < 1ull);    /* ~21 */
          lab_23:
    12 |    $$RET1C = RCdecoder::decode_shift(unsigned int)(rd,__64);
    13 |    if (!(0u != ($$RET1C << m) + s)) goto lab_1;
          lab_2:
   230 |    fprintf(stderr,"fpzip: not an fpz stream/n");
   231 |    abort()
            return;
   232 |  lab_1:
   235 |    __68 = 16u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_31;
            $$CIVE = 0ll;
            do {   /* id=6 guarded */ /* ~29 */ 
              /* region = 78 */
              /* bump-normalized */
     7 |      if (!(__68 > 16u)) goto lab_32;
     3 |      $$RET1D = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RET1D << m);
     9 |      m = m + 16u;
    10 |      __68 = __68 - 16u;
    11 |    lab_32:
     6 |      $$CIVE = $$CIVE + 1ll;
            } while ((unsigned long long) $$CIVE < 1ull);    /* ~29 */
          lab_31:
    12 |    $$RET1E = RCdecoder::decode_shift(unsigned int)(rd,__68);
    13 |    if (257u != ($$RET1E << m) + s) goto lab_27;
   236 |    __72 = 16u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_36;
            $$CIVF = 0ll;
            do {   /* id=5 guarded */ /* ~34 */ 
              /* region = 77 */
              /* bump-normalized */
     7 |      if (!(__72 > 16u)) goto lab_37;
     3 |      $$RET1F = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RET1F << m);
     9 |      m = m + 16u;
    10 |      __72 = __72 - 16u;
    11 |    lab_37:
     6 |      $$CIVF = $$CIVF + 1ll;
            } while ((unsigned long long) $$CIVF < 1ull);    /* ~34 */
          lab_36:
    12 |    $$RET20 = RCdecoder::decode_shift(unsigned int)(rd,__72);
    13 |    if (!(1u != ($$RET20 << m) + s)) goto lab_26;
          lab_27:
   237 |    fprintf(stderr,"fpzip: format version not supported/n");
   238 |    abort()
            return;
   239 |  lab_26:
   242 |    __76 = 32u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_41;
            $$CIV10 = 0ll;
            do {   /* id=4 guarded */ /* ~39 */ 
              /* region = 76 */
              /* bump-normalized */
     7 |      if (!(__76 > 16u)) goto lab_42;
     3 |      $$RET21 = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RET21 << m);
     9 |      m = m + 16u;
    10 |      __76 = __76 - 16u;
    11 |    lab_42:
     6 |      $$CIV10 = $$CIV10 + 1ll;
            } while ((unsigned long long) $$CIV10 < 1ull);    /* ~39 */
          lab_41:
    12 |    $$RET22 = RCdecoder::decode_shift(unsigned int)(rd,__76);
    13 |    *nf = ($$RET22 << m) + s;
   243 |    __80 = 32u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_46;
            $$CIV11 = 0ll;
            do {   /* id=3 guarded */ /* ~44 */ 
              /* region = 75 */
              /* bump-normalized */
     7 |      if (!(__80 > 16u)) goto lab_47;
     3 |      $$RET23 = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RET23 << m);
     9 |      m = m + 16u;
    10 |      __80 = __80 - 16u;
    11 |    lab_47:
     6 |      $$CIV11 = $$CIV11 + 1ll;
            } while ((unsigned long long) $$CIV11 < 1ull);    /* ~44 */
          lab_46:
    12 |    $$RET24 = RCdecoder::decode_shift(unsigned int)(rd,__80);
    13 |    *nz = ($$RET24 << m) + s;
   244 |    __84 = 32u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_51;
            $$CIV12 = 0ll;
            do {   /* id=2 guarded */ /* ~49 */ 
              /* region = 74 */
              /* bump-normalized */
     7 |      if (!(__84 > 16u)) goto lab_52;
     3 |      $$RET25 = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RET25 << m);
     9 |      m = m + 16u;
    10 |      __84 = __84 - 16u;
    11 |    lab_52:
     6 |      $$CIV12 = $$CIV12 + 1ll;
            } while ((unsigned long long) $$CIV12 < 1ull);    /* ~49 */
          lab_51:
    12 |    $$RET26 = RCdecoder::decode_shift(unsigned int)(rd,__84);
    13 |    *ny = ($$RET26 << m) + s;
   245 |    __88 = 32u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_56;
            $$CIV13 = 0ll;
            do {   /* id=1 guarded */ /* ~54 */ 
              /* region = 73 */
              /* bump-normalized */
     7 |      if (!(__88 > 16u)) goto lab_57;
     3 |      $$RET27 = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RET27 << m);
     9 |      m = m + 16u;
    10 |      __88 = __88 - 16u;
    11 |    lab_57:
     6 |      $$CIV13 = $$CIV13 + 1ll;
            } while ((unsigned long long) $$CIV13 < 1ull);    /* ~54 */
          lab_56:
    12 |    $$RET28 = RCdecoder::decode_shift(unsigned int)(rd,__88);
    13 |    *nx = ($$RET28 << m) + s;
            $$RET29 = (int) RCdecoder::decode()(rd);
   247 |    *dp = $$RET29;
   248 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        79             6            10    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder12decode_shiftEj" 
                                          that may have side effects.
        79             6             9    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder12decode_shiftEj" 
                                          that may have side effects.
        79             6             8    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder12decode_shiftEj" 
                                          that may have side effects.
        79             6             7    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder12decode_shiftEj" 
                                          that may have side effects.
        79             6             6    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder12decode_shiftEj" 
                                          that may have side effects.
        79             6             5    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder12decode_shiftEj" 
                                          that may have side effects.
        79             6             4    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder12decode_shiftEj" 
                                          that may have side effects.
        79             6             3    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder12decode_shiftEj" 
                                          that may have side effects.
        79             6             2    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder12decode_shiftEj" 
                                          that may have side effects.
        79             6             1    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder12decode_shiftEj" 
                                          that may have side effects.

   286 |  unsigned int fpzip_file_read(char * file, char * data, char * prec, int dp, unsigned int nx, unsigned int ny, unsigned int nz, unsigned int nf)
   296 |  {
   297 |    __102 = operator new(unsigned long)(4144ull);
            if (!(__102 != NULL)) goto lab_2;
     8 |    *((unsigned int *)(__102 + 8)) = 0u;
            *((unsigned int *)(__102 + 12)) = 4294967295u;
            *((unsigned int *)(__102 + 16)) = 0u;
   297 |    *((char * *)__102) = ((char *)&vtable for RCfiledecoder  + 16ll);
    10 |    *((char *)(__102 + 20)) = 0u;
            *((char * *)(__102 + 24)) = file;
            *((unsigned int *)(__102 + 32)) = 0u;
            *((unsigned int *)(__102 + 36)) = 0u;
            *((unsigned int *)(__102 + 40)) = 0u;
          lab_2:
   298 |    $$PARM.rd89 = __102;
            $$PARM.data8A = data;
            $$PARM.prec8B = prec;
            $$PARM.dp8C = dp;
            $$PARM.nx8D = nx;
            $$PARM.ny8E = ny;
            $$PARM.nz8F = nz;
            $$PARM.nf90 = nf;
   262 |    RCdecoder::init()($$PARM.rd89)
   263 |    read_header(RCdecoder*, unsigned int, unsigned int, unsigned int, unsigned int, int)($$PARM.rd89,$$PARM.nx8D,$$PARM.ny8E,$$PARM.nz8F,$$PARM.nf90,$$PARM.dp8C)
   264 |    if (!($$PARM.dp8C != 0)) goto lab_10;
   265 |    void decompress4d<double>(RCdecoder*, double*, int*, unsigned int, unsigned int, unsigned int, unsigned int)($$PARM.rd89,$$PARM.data8A,$$PARM.prec8B,$$PARM.nx8D,$$PARM.ny8E,$$PARM.nz8F,$$PARM.nf90)
            goto lab_11;
          lab_10:
   267 |    void decompress4d<float>(RCdecoder*, float*, int*, unsigned int, unsigned int, unsigned int, unsigned int)($$PARM.rd89,$$PARM.data8A,$$PARM.prec8B,$$PARM.nx8D,$$PARM.ny8E,$$PARM.nz8F,$$PARM.nf90)
          lab_11:
   299 |    if (!(*((char *)(__102 + 20)) != 0u)) goto lab_5;
            __110 = 0u;
            goto lab_6;
          lab_5:
    25 |    __110 = *((unsigned int *)(__102 + 32));
          lab_6:
   300 |    if (!(__102 != NULL)) goto lab_8;
            ((funcaddr *)(*((char * *)__102)))[8ll / 8]->(()vf).rns20.(__102);
          lab_8:
   301 |    rstr = __110;
            return rstr;
   302 |  } /* function */ 


   306 |  unsigned int fpzip_memory_read(char * buffer, char * data, char * prec, int dp, unsigned int nx, unsigned int ny, unsigned int nz, unsigned int nf)
   316 |  {
   317 |    __111 = operator new(unsigned long)(40ull);
            if (!(__111 != NULL)) goto lab_2;
     8 |    *((unsigned int *)(__111 + 8)) = 0u;
            *((unsigned int *)(__111 + 12)) = 4294967295u;
            *((unsigned int *)(__111 + 16)) = 0u;
   317 |    *((char * *)__111) = ((char *)&vtable for RCmemdecoder  + 16ll);
    57 |    *((char *)(__111 + 20)) = 0u;
            *((char * *)(__111 + 24)) = buffer;
            *((char * *)(__111 + 32)) = buffer;
          lab_2:
   318 |    $$PARM.rd91 = __111;
            $$PARM.data92 = data;
            $$PARM.prec93 = prec;
            $$PARM.dp94 = dp;
            $$PARM.nx95 = nx;
            $$PARM.ny96 = ny;
            $$PARM.nz97 = nz;
            $$PARM.nf98 = nf;
   262 |    RCdecoder::init()($$PARM.rd91)
   263 |    read_header(RCdecoder*, unsigned int, unsigned int, unsigned int, unsigned int, int)($$PARM.rd91,$$PARM.nx95,$$PARM.ny96,$$PARM.nz97,$$PARM.nf98,$$PARM.dp94)
   264 |    if (!($$PARM.dp94 != 0)) goto lab_10;
   265 |    void decompress4d<double>(RCdecoder*, double*, int*, unsigned int, unsigned int, unsigned int, unsigned int)($$PARM.rd91,$$PARM.data92,$$PARM.prec93,$$PARM.nx95,$$PARM.ny96,$$PARM.nz97,$$PARM.nf98)
            goto lab_11;
          lab_10:
   267 |    void decompress4d<float>(RCdecoder*, float*, int*, unsigned int, unsigned int, unsigned int, unsigned int)($$PARM.rd91,$$PARM.data92,$$PARM.prec93,$$PARM.nx95,$$PARM.ny96,$$PARM.nz97,$$PARM.nf98)
          lab_11:
   319 |    if (!(*((char *)(__111 + 20)) != 0u)) goto lab_5;
            __118 = 0u;
            goto lab_6;
          lab_5:
    59 |    __118 = (unsigned int) (*((char * *)(__111 + 24)) - *((char * *)(__111 + 32)));
          lab_6:
   320 |    if (!(__111 != NULL)) goto lab_8;
            ((funcaddr *)(*((char * *)__111)))[8ll / 8]->(()vf).rns34.(__111);
          lab_8:
   321 |    rstr = __118;
            return rstr;
   322 |  } /* function */ 


   326 |  void fpzip_memory_get_header(char * buffer, char * dp, char * nx, char * ny, char * nz, char * nf)
   334 |  {
   335 |    __119 = operator new(unsigned long)(40ull);
            if (!(__119 != NULL)) goto lab_11;
     8 |    *((unsigned int *)(__119 + 8)) = 0u;
            *((unsigned int *)(__119 + 12)) = 4294967295u;
            *((unsigned int *)(__119 + 16)) = 0u;
   335 |    *((char * *)__119) = ((char *)&vtable for RCmemdecoder  + 16ll);
    57 |    *((char *)(__119 + 20)) = 0u;
            *((char * *)(__119 + 24)) = buffer;
            *((char * *)(__119 + 32)) = buffer;
            goto lab_2;
          lab_11:
            $$PARM.rdAF = NULL;
            $$PARM.dpB0 = dp;
            $$PARM.nxB1 = nx;
            $$PARM.nyB2 = ny;
            $$PARM.nzB3 = nz;
            $$PARM.nfB4 = nf;
   280 |    RCdecoder::init()($$PARM.rdAF)
   281 |    get_header(RCdecoder*, unsigned int*, unsigned int*, unsigned int*, unsigned int*, int*)($$PARM.rdAF,$$PARM.nxB1,$$PARM.nyB2,$$PARM.nzB3,$$PARM.nfB4,$$PARM.dpB0)
   282 |    goto lab_5;
    57 |  lab_2:
   336 |    $$PARM.rdA9 = __119;
            $$PARM.dpAA = dp;
            $$PARM.nxAB = nx;
            $$PARM.nyAC = ny;
            $$PARM.nzAD = nz;
            $$PARM.nfAE = nf;
   280 |    RCdecoder::init()($$PARM.rdA9)
   281 |    get_header(RCdecoder*, unsigned int*, unsigned int*, unsigned int*, unsigned int*, int*)($$PARM.rdA9,$$PARM.nxAB,$$PARM.nyAC,$$PARM.nzAD,$$PARM.nfAE,$$PARM.dpAA)
   337 |    ((funcaddr *)(*((char * *)__119)))[8ll / 8]->(()vf).rns49.(__119);
          lab_5:
   338 |    return;
          } /* function */ 


   342 |  void fpzip_file_read_f(char * path, char * data, char * prec, int *dp, int *nx, int *ny, int *nz, int *nf)
   352 |  {
   353 |    file = fopen(path,"rb");
   354 |    if (file != NULL) goto lab_1;
   355 |    fprintf(stderr,"fpzip: cannot open file %s/n",path);
   356 |    abort()
            return;
   357 |  lab_1:
            $$PARM.file99 = file;
            $$PARM.dp9C = *dp;
            $$PARM.nx9D = (unsigned int) *nx;
            $$PARM.ny9E = (unsigned int) *ny;
            $$PARM.nz9F = (unsigned int) *nz;
            $$PARM.nfA0 = (unsigned int) *nf;
   297 |    __102 = operator new(unsigned long)(4144ull);
            if (!(__102 != NULL)) goto lab_11;
     8 |    *((unsigned int *)(__102 + 8)) = 0u;
            *((unsigned int *)(__102 + 12)) = 4294967295u;
            *((unsigned int *)(__102 + 16)) = 0u;
   297 |    *((char * *)__102) = ((char *)&vtable for RCfiledecoder  + 16ll);
    10 |    *((char *)(__102 + 20)) = 0u;
            *((char * *)(__102 + 24)) = $$PARM.file99;
            *((unsigned int *)(__102 + 32)) = 0u;
            *((unsigned int *)(__102 + 36)) = 0u;
            *((unsigned int *)(__102 + 40)) = 0u;
          lab_11:
   298 |    $$PARM.rd89 = __102;
            $$PARM.data8A = data;
            $$PARM.prec8B = prec;
            $$PARM.dp8C = $$PARM.dp9C;
            $$PARM.nx8D = $$PARM.nx9D;
            $$PARM.ny8E = $$PARM.ny9E;
            $$PARM.nz8F = $$PARM.nz9F;
            $$PARM.nf90 = $$PARM.nfA0;
   262 |    RCdecoder::init()($$PARM.rd89)
   263 |    read_header(RCdecoder*, unsigned int, unsigned int, unsigned int, unsigned int, int)($$PARM.rd89,$$PARM.nx8D,$$PARM.ny8E,$$PARM.nz8F,$$PARM.nf90,$$PARM.dp8C)
   264 |    if (!($$PARM.dp8C != 0)) goto lab_12;
   265 |    void decompress4d<double>(RCdecoder*, double*, int*, unsigned int, unsigned int, unsigned int, unsigned int)($$PARM.rd89,$$PARM.data8A,$$PARM.prec8B,$$PARM.nx8D,$$PARM.ny8E,$$PARM.nz8F,$$PARM.nf90)
            goto lab_13;
          lab_12:
   267 |    void decompress4d<float>(RCdecoder*, float*, int*, unsigned int, unsigned int, unsigned int, unsigned int)($$PARM.rd89,$$PARM.data8A,$$PARM.prec8B,$$PARM.nx8D,$$PARM.ny8E,$$PARM.nz8F,$$PARM.nf90)
          lab_13:
   299 |    if (!(*((char *)(__102 + 20)) != 0u)) goto lab_15;
            __110 = 0u;
            goto lab_16;
          lab_15:
    25 |    __110 = *((unsigned int *)(__102 + 32));
          lab_16:
   300 |    if (!(__102 != NULL)) goto lab_17;
            ((funcaddr *)(*((char * *)__102)))[8ll / 8]->(()vf).rns20.$$67(__102);
          lab_17:
   301 |    $$IRET44 = __110;
   357 |    $$RET2A.rnn2A = 0u == $$IRET44;
   358 |    if ($$RET2A.rnn2A == 0) goto lab_3;
   359 |    fprintf(stderr,"fpzip: cannot read file %s/n",path);
   360 |    abort()
            return;
   361 |  lab_3:
   362 |    fclose(file);
   363 |    return;
          } /* function */ 


   366 |  void fpzip_file_read_f_(char * path, char * data, char * prec, int *dp, int *nx, int *ny, int *nz, int *nf)
   376 |  {
   377 |    $$PARM.pathA1 = path;
   353 |    file = fopen($$PARM.pathA1,"rb");
   354 |    if (file != NULL) goto lab_5;
   355 |    fprintf(stderr,"fpzip: cannot open file %s/n",$$PARM.pathA1);
   356 |    abort()
            return;
   357 |  lab_5:
            $$PARM.file99 = file;
            $$PARM.dp9C = *dp;
            $$PARM.nx9D = (unsigned int) *nx;
            $$PARM.ny9E = (unsigned int) *ny;
            $$PARM.nz9F = (unsigned int) *nz;
            $$PARM.nfA0 = (unsigned int) *nf;
   297 |    __102 = operator new(unsigned long)(4144ull);
            if (!(__102 != NULL)) goto lab_7;
     8 |    *((unsigned int *)(__102 + 8)) = 0u;
            *((unsigned int *)(__102 + 12)) = 4294967295u;
            *((unsigned int *)(__102 + 16)) = 0u;
   297 |    *((char * *)__102) = ((char *)&vtable for RCfiledecoder  + 16ll);
    10 |    *((char *)(__102 + 20)) = 0u;
            *((char * *)(__102 + 24)) = $$PARM.file99;
            *((unsigned int *)(__102 + 32)) = 0u;
            *((unsigned int *)(__102 + 36)) = 0u;
            *((unsigned int *)(__102 + 40)) = 0u;
          lab_7:
   298 |    $$PARM.rd89 = __102;
            $$PARM.data8A = data;
            $$PARM.prec8B = prec;
            $$PARM.dp8C = $$PARM.dp9C;
            $$PARM.nx8D = $$PARM.nx9D;
            $$PARM.ny8E = $$PARM.ny9E;
            $$PARM.nz8F = $$PARM.nz9F;
            $$PARM.nf90 = $$PARM.nfA0;
   262 |    RCdecoder::init()($$PARM.rd89)
   263 |    read_header(RCdecoder*, unsigned int, unsigned int, unsigned int, unsigned int, int)($$PARM.rd89,$$PARM.nx8D,$$PARM.ny8E,$$PARM.nz8F,$$PARM.nf90,$$PARM.dp8C)
   264 |    if (!($$PARM.dp8C != 0)) goto lab_8;
   265 |    void decompress4d<double>(RCdecoder*, double*, int*, unsigned int, unsigned int, unsigned int, unsigned int)($$PARM.rd89,$$PARM.data8A,$$PARM.prec8B,$$PARM.nx8D,$$PARM.ny8E,$$PARM.nz8F,$$PARM.nf90)
            goto lab_9;
          lab_8:
   267 |    void decompress4d<float>(RCdecoder*, float*, int*, unsigned int, unsigned int, unsigned int, unsigned int)($$PARM.rd89,$$PARM.data8A,$$PARM.prec8B,$$PARM.nx8D,$$PARM.ny8E,$$PARM.nz8F,$$PARM.nf90)
          lab_9:
   299 |    if (!(*((char *)(__102 + 20)) != 0u)) goto lab_11;
            __110 = 0u;
            goto lab_12;
          lab_11:
    25 |    __110 = *((unsigned int *)(__102 + 32));
          lab_12:
   300 |    if (!(__102 != NULL)) goto lab_13;
            ((funcaddr *)(*((char * *)__102)))[8ll / 8]->(()vf).rns20.$$67$$73(__102);
          lab_13:
   301 |    $$IRET44 = __110;
   357 |    $$RET2A.rnn2A = 0u == $$IRET44;
   358 |    if ($$RET2A.rnn2A == 0) goto lab_15;
   359 |    fprintf(stderr,"fpzip: cannot read file %s/n",$$PARM.pathA1);
   360 |    abort()
            return;
   361 |  lab_15:
   362 |    fclose(file);
   378 |    return;
          } /* function */ 


   251 |  void fpzip_stream_read(RCdecoder*, void*, int*, int, unsigned int, unsigned int, unsigned int, unsigned int)(char * rd, char * data, char * prec, int dp, unsigned int nx, unsigned int ny, unsigned int nz, unsigned int nf)
   261 |  {
   262 |    RCdecoder::init()(rd)
   263 |    read_header(RCdecoder*, unsigned int, unsigned int, unsigned int, unsigned int, int)(rd,nx,ny,nz,nf,dp)
   264 |    if (!(dp != 0)) goto lab_1;
   265 |    void decompress4d<double>(RCdecoder*, double*, int*, unsigned int, unsigned int, unsigned int, unsigned int)(rd,data,prec,nx,ny,nz,nf)
            goto lab_3;
          lab_1:
   267 |    void decompress4d<float>(RCdecoder*, float*, int*, unsigned int, unsigned int, unsigned int, unsigned int)(rd,data,prec,nx,ny,nz,nf)
          lab_3:
   268 |    return;
          } /* function */ 


   271 |  void fpzip_stream_get_header(RCdecoder*, int*, unsigned int*, unsigned int*, unsigned int*, unsigned int*)(char * rd, char * dp, char * nx, char * ny, char * nz, char * nf)
   279 |  {
   280 |    RCdecoder::init()(rd)
   281 |    get_header(RCdecoder*, unsigned int*, unsigned int*, unsigned int*, unsigned int*, int*)(rd,nx,ny,nz,nf,dp)
   282 |    return;
          } /* function */ 


   135 |  void void decompress4d<double>(RCdecoder*, double*, int*, unsigned int, unsigned int, unsigned int, unsigned int)(char * rd, char * data, int *prec, unsigned int nx, unsigned int ny, unsigned int nz, unsigned int nf)
   144 |  {
   146 |    if (!(0u < nf)) goto lab_3;
            $$CIV15 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 24 */
              /* bump-normalized */
   147 |      __124 = 32u;
     4 |      s = 0u;
     5 |      m = 0u;
     6 |      if (!1) goto lab_6;
              $$CIV14 = 0ll;
              do {   /* id=2 guarded */ /* ~4 */ 
                /* region = 23 */
                /* bump-normalized */
     7 |        if (!(__124 > 16u)) goto lab_7;
     3 |        $$RET2B = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |        s = s + ($$RET2B << m);
     9 |        m = m + 16u;
    10 |        __124 = __124 - 16u;
    11 |      lab_7:
     6 |        $$CIV14 = $$CIV14 + 1ll;
              } while ((unsigned long long) $$CIV14 < 1ull);    /* ~4 */
            lab_6:
    12 |      $$RET2C = RCdecoder::decode_shift(unsigned int)(rd,__124);
   148 |      if (!(prec != NULL)) goto lab_9;
   149 |      prec[(long long) ((unsigned int) ((unsigned long long) $$CIV15))] = (int) (($$RET2C << m) + s);
            lab_9:
   150 |      switchxjp((int) (($$RET2C << m) + s)) {
                case 16: label=lab_18
                case 32: label=lab_17
                case 48: label=lab_16
                case 64: label=lab_15
                default: label=lab_14
              }  /* switchxjp */ 
   151 |    lab_18:
   152 |      void decompress3d<double, 16u>(RCdecoder*, double*, unsigned int, unsigned int, unsigned int)(rd,((char *)data  + 8ll * ($$CIV15 * (long long) (nx * (ny * nz)))),nx,ny,nz)
   167 |      goto lab_22;
   154 |    lab_17:
   155 |      void decompress3d<double, 32u>(RCdecoder*, double*, unsigned int, unsigned int, unsigned int)(rd,((char *)data  + 8ll * ($$CIV15 * (long long) (nx * (ny * nz)))),nx,ny,nz)
   156 |      goto lab_19;
   157 |    lab_16:
   158 |      void decompress3d<double, 48u>(RCdecoder*, double*, unsigned int, unsigned int, unsigned int)(rd,((char *)data  + 8ll * ($$CIV15 * (long long) (nx * (ny * nz)))),nx,ny,nz)
   159 |      goto lab_19;
   160 |    lab_15:
   161 |      void decompress3d<double, 64u>(RCdecoder*, double*, unsigned int, unsigned int, unsigned int)(rd,((char *)data  + 8ll * ($$CIV15 * (long long) (nx * (ny * nz)))),nx,ny,nz)
   167 |    lab_22:
            lab_19:
   146 |      $$CIV15 = $$CIV15 + 1ll;
            } while ((unsigned long long) $$CIV15 < (unsigned long long) nf);    /* ~1 */
          lab_3:
   165 |    goto lab_23;
   163 |  lab_14:
   164 |    fprintf(stderr,"fpzip: invalid precision %d in file/n",(int) (($$RET2C << m) + s));
   165 |    abort()
            return;
          lab_23:
            return;
   170 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0           146             1    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder12decode_shiftEj" 
                                          that may have side effects.
        79             6             2    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder12decode_shiftEj" 
                                          that may have side effects.

   135 |  void void decompress4d<float>(RCdecoder*, float*, int*, unsigned int, unsigned int, unsigned int, unsigned int)(char * rd, char * data, int *prec, unsigned int nx, unsigned int ny, unsigned int nz, unsigned int nf)
   144 |  {
   146 |    if (!(0u < nf)) goto lab_3;
            $$CIV17 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 24 */
              /* bump-normalized */
   147 |      __130 = 32u;
     4 |      s = 0u;
     5 |      m = 0u;
     6 |      if (!1) goto lab_6;
              $$CIV16 = 0ll;
              do {   /* id=2 guarded */ /* ~4 */ 
                /* region = 23 */
                /* bump-normalized */
     7 |        if (!(__130 > 16u)) goto lab_7;
     3 |        $$RET2D = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |        s = s + ($$RET2D << m);
     9 |        m = m + 16u;
    10 |        __130 = __130 - 16u;
    11 |      lab_7:
     6 |        $$CIV16 = $$CIV16 + 1ll;
              } while ((unsigned long long) $$CIV16 < 1ull);    /* ~4 */
            lab_6:
    12 |      $$RET2E = RCdecoder::decode_shift(unsigned int)(rd,__130);
   148 |      if (!(prec != NULL)) goto lab_9;
   149 |      prec[(long long) ((unsigned int) ((unsigned long long) $$CIV17))] = (int) (($$RET2E << m) + s);
            lab_9:
   150 |      switchxjp((int) (($$RET2E << m) + s)) {
                case 8: label=lab_18
                case 16: label=lab_17
                case 24: label=lab_16
                case 32: label=lab_15
                default: label=lab_14
              }  /* switchxjp */ 
   151 |    lab_18:
   152 |      void decompress3d<float, 8u>(RCdecoder*, float*, unsigned int, unsigned int, unsigned int)(rd,((char *)data  + 4ll * ($$CIV17 * (long long) (nx * (ny * nz)))),nx,ny,nz)
   167 |      goto lab_22;
   154 |    lab_17:
   155 |      void decompress3d<float, 16u>(RCdecoder*, float*, unsigned int, unsigned int, unsigned int)(rd,((char *)data  + 4ll * ($$CIV17 * (long long) (nx * (ny * nz)))),nx,ny,nz)
   156 |      goto lab_19;
   157 |    lab_16:
   158 |      void decompress3d<float, 24u>(RCdecoder*, float*, unsigned int, unsigned int, unsigned int)(rd,((char *)data  + 4ll * ($$CIV17 * (long long) (nx * (ny * nz)))),nx,ny,nz)
   159 |      goto lab_19;
   160 |    lab_15:
   161 |      void decompress3d<float, 32u>(RCdecoder*, float*, unsigned int, unsigned int, unsigned int)(rd,((char *)data  + 4ll * ($$CIV17 * (long long) (nx * (ny * nz)))),nx,ny,nz)
   167 |    lab_22:
            lab_19:
   146 |      $$CIV17 = $$CIV17 + 1ll;
            } while ((unsigned long long) $$CIV17 < (unsigned long long) nf);    /* ~1 */
          lab_3:
   165 |    goto lab_23;
   163 |  lab_14:
   164 |    fprintf(stderr,"fpzip: invalid precision %d in file/n",(int) (($$RET2E << m) + s));
   165 |    abort()
            return;
          lab_23:
            return;
   170 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0           146             1    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder12decode_shiftEj" 
                                          that may have side effects.
        79             6             2    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder12decode_shiftEj" 
                                          that may have side effects.

    14 |  void void decompress3d<double, 16u>(RCdecoder*, double*, unsigned int, unsigned int, unsigned int)(char * rd, long long *data, unsigned int nx, unsigned int ny, unsigned int nz)
    21 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
    24 |    __144 = operator new(unsigned long)(72ull);
            if (!(__144 != NULL)) goto lab_2;
            __es.__c4@3 = 1u;
            RCqsmodel::RCqsmodel(bool, unsigned int, unsigned int, unsigned int)(__144,0u,33u,16u,1024u);
            __es.__c4@3 = 0u;
          lab_2:
            $$rm.nat.0 = __144;
    25 |    __145 = operator new(unsigned long)(24ull);
            rm = $$rm.nat.0;
            if (!(__145 != NULL)) goto lab_5;
    34 |    *((char * *)((char *)__145 + 8)) = rd;
            rm = $$rm.nat.0;
            *((char * *)((char *)__145 + 16)) = &rm;
          lab_5:
    26 |    f.zero@0 =  0.0000000000000000E+000;
     9 |    f.dx@8 = 1u;
            f.dy@c = nx + 1u;
            f.dz@10 = (ny + 1u) * (nx + 1u);
    45 |    __178.rnn35 = (2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u;
            if (!(0u != (((2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u) + 1u & (2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u))) goto lab_9;
            do {   /* id=8 guarded */ /* ~7 */ 
              /* region = 135 */
     9 |      __178.rnn35 = __178.rnn35 | __178.rnn35 + 1u;
    45 |    } while (0u != (__178.rnn35 + 1u & __178.rnn35));    /* ~7 */
          lab_9:
    47 |    f.m@14 = __178.rnn35;
    10 |    f.i@18 = 0u;
            f.a@20 = operator new[](unsigned long)((unsigned long long) (__178.rnn35 + 1u) * 8ull);
            __es.__c4@3 = 2u;
    23 |    f.a@20[(long long) (f.i@18 & f.m@14)] = f.zero@0;
            f.i@18 = f.i@18 + 1u;
    24 |    if (!(1u != f.dz@10)) goto lab_43;
            $$CIV18 = 0ll;
    22 |    do {   /* id=7 guarded */ /* ~13 */ 
              /* region = 136 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV18))] = f.zero@0;
    24 |      $$CIV18 = $$CIV18 + 1ll;
            } while ((unsigned long long) $$CIV18 < (unsigned long long) (f.dz@10 - 1u));    /* ~13 */
            f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dz@10 - 1u))) + f.i@18;
          lab_43:
    31 |    if (!(0u < nz)) goto lab_12;
            if (!(0u < ny)) goto lab_70;
            if (!(0u < nx)) goto lab_58;
            if (!1) goto lab_57;
            $$CIV1E = 0ll;
            do {   /* id=1 guarded */ /* ~10 */ 
              /* region = 141 */
              /* bump-normalized */
    30 |      __157 = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    24 |      if (!(1u != f.dy@c)) goto lab_44;
              $$CIV19 = 0ll;
    22 |      do {   /* id=6 guarded */ /* ~19 */ 
                /* region = 137 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV19))] = __157;
    24 |        $$CIV19 = $$CIV19 + 1ll;
              } while ((unsigned long long) $$CIV19 < (unsigned long long) (f.dy@c - 1u));    /* ~19 */
              f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u))) + f.i@18;
            lab_44:
    31 |      if (!1) goto lab_18;
              $$CIV1D = 0ll;
              do {   /* id=2 guarded */ /* ~16 */ 
                /* region = 140 */
                /* bump-normalized */
    30 |        __161 = f.zero@0;
    23 |        f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
                f.i@18 = f.i@18 + 1u;
    24 |        if (!(1u != f.dx@8)) goto lab_45;
                $$CIV1A = 0ll;
    22 |        do {   /* id=5 guarded */ /* ~25 */ 
                  /* region = 138 */
                  /* bump-normalized */
    23 |          f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV1A))] = __161;
    24 |          $$CIV1A = $$CIV1A + 1ll;
                } while ((unsigned long long) $$CIV1A < (unsigned long long) (f.dx@8 - 1u));    /* ~25 */
                f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dx@8 - 1u))) + f.i@18;
              lab_45:
    31 |        if (!1) goto lab_24;
                $$CIV1C = 0ll;
                do {   /* id=3 guarded */ /* ~22 */ 
                  /* region = 139 */
                  /* bump-normalized */
    47 |          $$TVX.$$.a00 = PCdecoder<double, PCmap<double, 16u, void>, true>::decode(double, unsigned int)(__145,(((((f.a@20[(long long) (f.i@18 - f.dx@8 & f.m@14)] - f.a@20[(long long) ((f.i@18 - f.dy@c) - f.dz@10 & f.m@14)]) + f.a@20[(long long) (f.i@18 - f.dy@c & f.m@14)]) - f.a@20[(long long) ((f.i@18 - f.dx@8) - f.dz@10 & f.m@14)]) + f.a@20[(long long) (f.i@18 - f.dz@10 & f.m@14)]) - f.a@20[(long long) ((f.i@18 - f.dx@8) - f.dy@c & f.m@14)]) + f.a@20[(long long) (((f.i@18 - f.dx@8) - f.dy@c) - f.dz@10 & f.m@14)],0u);
    48 |          data[$$CIV1C] = $$TVX.$$.a00;
    23 |          f.a@20[(long long) (f.m@14 & f.i@18)] = $$TVX.$$.a00;
                  f.i@18 = f.i@18 + 1u;
    32 |          $$CIV1C = $$CIV1C + 1ll;
                } while ((unsigned long long) $$CIV1C < (unsigned long long) nx);    /* ~22 */
                data = ((char *)data  + (long long) ((unsigned long long) nx * 8ull));
              lab_24:
    31 |        $$CIV1D = $$CIV1D + 1ll;
              } while ((unsigned long long) $$CIV1D < (unsigned long long) ny);    /* ~16 */
            lab_18:
    30 |      $$CIV1E = $$CIV1E + 1ll;
            } while ((unsigned long long) $$CIV1E < (unsigned long long) nz);    /* ~10 */
          lab_57:
            goto lab_71;
          lab_58:
    31 |    if (!1) goto lab_71;
            if (!(1u != f.dy@c)) goto lab_109;
            if (!(1u != f.dx@8)) goto lab_99;
            if (!1) goto lab_98;
            $$CIV1E = 0ll;
            do {   /* id=4 guarded */ /* ~60 */ 
              /* region = 145 */
              /* bump-normalized */
    30 |      __157 = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    24 |      if (!1) goto lab_62;
              $$CIV19 = 0ll;
    22 |      do {   /* id=9 guarded */ /* ~61 */ 
                /* region = 144 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV19))] = __157;
    24 |        $$CIV19 = $$CIV19 + 1ll;
              } while ((unsigned long long) $$CIV19 < (unsigned long long) (f.dy@c - 1u));    /* ~61 */
              f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u))) + f.i@18;
            lab_62:
    31 |      if (!1) goto lab_68;
              $$CIV1D = 0ll;
              do {   /* id=10 guarded */ /* ~63 */ 
                /* region = 143 */
                /* bump-normalized */
    30 |        $$TVX.$$.__16111 = f.zero@0;
    23 |        f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
                f.i@18 = f.i@18 + 1u;
    24 |        if (!1) goto lab_65;
                $$CIV1A = 0ll;
    22 |        do {   /* id=11 guarded */ /* ~64 */ 
                  /* region = 142 */
                  /* bump-normalized */
    23 |          f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV1A))] = $$TVX.$$.__16111;
    24 |          $$CIV1A = $$CIV1A + 1ll;
                } while ((unsigned long long) $$CIV1A < (unsigned long long) (f.dx@8 - 1u));    /* ~64 */
                f.i@18 = f.i@18 + (unsigned int) ((int) ((unsigned long long) (f.dx@8 - 1u)));
              lab_65:
    31 |        $$CIV1D = $$CIV1D + 1ll;
              } while ((unsigned long long) $$CIV1D < (unsigned long long) ny);    /* ~63 */
            lab_68:
    30 |      $$CIV1E = $$CIV1E + 1ll;
            } while ((unsigned long long) $$CIV1E < (unsigned long long) nz);    /* ~60 */
          lab_98:
            goto lab_71;
          lab_99:
    31 |    if (!1) goto lab_108;
            $$CIV1E = 0ll;
            do {   /* id=22 guarded */ /* ~101 */ 
              /* region = 148 */
              /* bump-normalized */
    30 |      __157 = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    24 |      if (!1) goto lab_103;
              $$CIV19 = 0ll;
    22 |      do {   /* id=21 guarded */ /* ~102 */ 
                /* region = 147 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV19))] = __157;
    24 |        $$CIV19 = $$CIV19 + 1ll;
              } while ((unsigned long long) $$CIV19 < (unsigned long long) (f.dy@c - 1u));    /* ~102 */
              f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u))) + f.i@18;
            lab_103:
    31 |      if (!1) goto lab_107;
              $$CIV1D = 0ll;
              $$SCREP3 = f.i@18;
              do {   /* id=20 guarded */ /* ~104 */ 
                /* region = 146 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & $$SCREP3)] = f.zero@0;
                $$SCREP3 = $$SCREP3 + 1u;
    31 |        $$CIV1D = $$CIV1D + 1ll;
              } while ((unsigned long long) $$CIV1D < (unsigned long long) ny);    /* ~104 */
              f.i@18 = $$SCREP3;
            lab_107:
    30 |      $$CIV1E = $$CIV1E + 1ll;
            } while ((unsigned long long) $$CIV1E < (unsigned long long) nz);    /* ~101 */
          lab_108:
            goto lab_71;
          lab_109:
    31 |    if (!(1u != f.dx@8)) goto lab_119;
            if (!1) goto lab_118;
            $$CIV1E = 0ll;
            do {   /* id=16 guarded */ /* ~111 */ 
              /* region = 151 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    31 |      if (!1) goto lab_117;
              $$CIV1D = 0ll;
              do {   /* id=12 guarded */ /* ~114 */ 
                /* region = 150 */
                /* bump-normalized */
    30 |        $$TVX.$$.__16123 = f.zero@0;
    23 |        f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
                f.i@18 = f.i@18 + 1u;
    24 |        if (!1) goto lab_116;
                $$CIV1A = 0ll;
    22 |        do {   /* id=23 guarded */ /* ~115 */ 
                  /* region = 149 */
                  /* bump-normalized */
    23 |          f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV1A))] = $$TVX.$$.__16123;
    24 |          $$CIV1A = $$CIV1A + 1ll;
                } while ((unsigned long long) $$CIV1A < (unsigned long long) (f.dx@8 - 1u));    /* ~115 */
                f.i@18 = f.i@18 + (unsigned int) ((int) ((unsigned long long) (f.dx@8 - 1u)));
              lab_116:
    31 |        $$CIV1D = $$CIV1D + 1ll;
              } while ((unsigned long long) $$CIV1D < (unsigned long long) ny);    /* ~114 */
            lab_117:
    30 |      $$CIV1E = $$CIV1E + 1ll;
            } while ((unsigned long long) $$CIV1E < (unsigned long long) nz);    /* ~111 */
          lab_118:
            goto lab_71;
          lab_119:
    31 |    if (!1) goto lab_127;
            $$CIV1E = 0ll;
            do {   /* id=24 guarded */ /* ~120 */ 
              /* region = 153 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    31 |      if (!1) goto lab_126;
              $$CIV1D = 0ll;
              $$SCREP2 = f.i@18;
              do {   /* id=26 guarded */ /* ~123 */ 
                /* region = 152 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & $$SCREP2)] = f.zero@0;
                $$SCREP2 = $$SCREP2 + 1u;
    31 |        $$CIV1D = $$CIV1D + 1ll;
              } while ((unsigned long long) $$CIV1D < (unsigned long long) ny);    /* ~123 */
              f.i@18 = $$SCREP2;
            lab_126:
    30 |      $$CIV1E = $$CIV1E + 1ll;
            } while ((unsigned long long) $$CIV1E < (unsigned long long) nz);    /* ~120 */
          lab_127:
            goto lab_71;
          lab_70:
    31 |    if (!(0u < nx)) goto lab_82;
            if (!1) goto lab_93;
            if (!(1u != f.dy@c)) goto lab_130;
            if (!1) goto lab_129;
            $$CIV1E = 0ll;
            do {   /* id=13 guarded */ /* ~72 */ 
              /* region = 155 */
              /* bump-normalized */
    30 |      $$TVX.$$.__15735 = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    24 |      if (!1) goto lab_74;
              $$CIV19 = 0ll;
    22 |      do {   /* id=14 guarded */ /* ~73 */ 
                /* region = 154 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV19))] = $$TVX.$$.__15735;
    24 |        $$CIV19 = $$CIV19 + 1ll;
              } while ((unsigned long long) $$CIV19 < (unsigned long long) (f.dy@c - 1u));    /* ~73 */
              f.i@18 = f.i@18 + (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u)));
            lab_74:
    30 |      $$CIV1E = $$CIV1E + 1ll;
            } while ((unsigned long long) $$CIV1E < (unsigned long long) nz);    /* ~72 */
          lab_129:
            goto lab_93;
          lab_130:
    31 |    if (!1) goto lab_135;
            $$CIV1E = 0ll;
            $$SCREP1 = f.i@18;
            do {   /* id=28 guarded */ /* ~132 */ 
              /* region = 156 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & $$SCREP1)] = f.zero@0;
              $$SCREP1 = $$SCREP1 + 1u;
    30 |      $$CIV1E = $$CIV1E + 1ll;
            } while ((unsigned long long) $$CIV1E < (unsigned long long) nz);    /* ~132 */
            f.i@18 = $$SCREP1;
          lab_135:
            goto lab_93;
          lab_82:
    31 |    if (!1) goto lab_92;
            if (!(1u != f.dy@c)) goto lab_137;
            if (!1) goto lab_136;
            $$CIV1E = 0ll;
            do {   /* id=18 guarded */ /* ~83 */ 
              /* region = 158 */
              /* bump-normalized */
    30 |      $$TVX.$$.__15747 = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    24 |      if (!1) goto lab_85;
              $$CIV19 = 0ll;
    22 |      do {   /* id=19 guarded */ /* ~84 */ 
                /* region = 157 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV19))] = $$TVX.$$.__15747;
    24 |        $$CIV19 = $$CIV19 + 1ll;
              } while ((unsigned long long) $$CIV19 < (unsigned long long) (f.dy@c - 1u));    /* ~84 */
              f.i@18 = f.i@18 + (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u)));
            lab_85:
    30 |      $$CIV1E = $$CIV1E + 1ll;
            } while ((unsigned long long) $$CIV1E < (unsigned long long) nz);    /* ~83 */
          lab_136:
            goto lab_138;
          lab_137:
    31 |    if (!1) goto lab_142;
            $$CIV1E = 0ll;
            $$SCREP0 = f.i@18;
            do {   /* id=30 guarded */ /* ~139 */ 
              /* region = 159 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & $$SCREP0)] = f.zero@0;
              $$SCREP0 = $$SCREP0 + 1u;
    30 |      $$CIV1E = $$CIV1E + 1ll;
            } while ((unsigned long long) $$CIV1E < (unsigned long long) nz);    /* ~139 */
            f.i@18 = $$SCREP0;
          lab_142:
          lab_138:
          lab_92:
          lab_93:
          lab_71:
          lab_12:
    52 |    if (!(__145 != NULL)) goto lab_32;
    35 |    operator delete(void*)(__145)
          lab_32:
    53 |    if (!(rm != NULL)) goto lab_35;
            ((funcaddr *)(*((char * *)rm)))[8ll / 8]->(()vf).rns107.(rm);
          lab_35:
    11 |    operator delete[](void*)(f.a@20)
    54 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        83            22             7    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(double).rns98.".
        83            31             1    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj16EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            22             6    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(double).rns99.".
        83            31             2    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj16EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            22             5    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(double).rns100.".
        83            31             3    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj16EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            31             4    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj16EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            22             9    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(double).rns99.".
        83            31            10    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj16EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            22            11    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(double).rns100.".
        83            31            22    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj16EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            22            21    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(double).rns99.".
        83            31            20    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj16EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            31            16    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj16EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            31            12    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj16EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            22            23    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(double).rns100.".
        83            31            24    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj16EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            31            26    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj16EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            31            13    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj16EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            22            14    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(double).rns99.".
        83            31            28    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj16EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            31            18    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj16EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            22            19    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(double).rns99.".
        83            31            30    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj16EvELb1EE6decodeEdj" that 
                                          may have side effects.

    14 |  void void decompress3d<double, 32u>(RCdecoder*, double*, unsigned int, unsigned int, unsigned int)(char * rd, long long *data, unsigned int nx, unsigned int ny, unsigned int nz)
    21 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
    24 |    __199 = operator new(unsigned long)(72ull);
            if (!(__199 != NULL)) goto lab_2;
            __es.__c4@3 = 1u;
            RCqsmodel::RCqsmodel(bool, unsigned int, unsigned int, unsigned int)(__199,0u,65u,16u,1024u);
            __es.__c4@3 = 0u;
          lab_2:
            $$rm.nat.6 = __199;
    25 |    __200 = operator new(unsigned long)(24ull);
            rm = $$rm.nat.6;
            if (!(__200 != NULL)) goto lab_5;
    34 |    *((char * *)((char *)__200 + 8)) = rd;
            rm = $$rm.nat.6;
            *((char * *)((char *)__200 + 16)) = &rm;
          lab_5:
    26 |    f.zero@0 =  0.0000000000000000E+000;
     9 |    f.dx@8 = 1u;
            f.dy@c = nx + 1u;
            f.dz@10 = (ny + 1u) * (nx + 1u);
    45 |    __233.rnn41 = (2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u;
            if (!(0u != (((2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u) + 1u & (2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u))) goto lab_9;
            do {   /* id=8 guarded */ /* ~7 */ 
              /* region = 135 */
     9 |      __233.rnn41 = __233.rnn41 | __233.rnn41 + 1u;
    45 |    } while (0u != (__233.rnn41 + 1u & __233.rnn41));    /* ~7 */
          lab_9:
    47 |    f.m@14 = __233.rnn41;
    10 |    f.i@18 = 0u;
            f.a@20 = operator new[](unsigned long)((unsigned long long) (__233.rnn41 + 1u) * 8ull);
            __es.__c4@3 = 2u;
    23 |    f.a@20[(long long) (f.i@18 & f.m@14)] = f.zero@0;
            f.i@18 = f.i@18 + 1u;
    24 |    if (!(1u != f.dz@10)) goto lab_43;
            $$CIV1F = 0ll;
    22 |    do {   /* id=7 guarded */ /* ~13 */ 
              /* region = 136 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV1F))] = f.zero@0;
    24 |      $$CIV1F = $$CIV1F + 1ll;
            } while ((unsigned long long) $$CIV1F < (unsigned long long) (f.dz@10 - 1u));    /* ~13 */
            f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dz@10 - 1u))) + f.i@18;
          lab_43:
    31 |    if (!(0u < nz)) goto lab_12;
            if (!(0u < ny)) goto lab_70;
            if (!(0u < nx)) goto lab_58;
            if (!1) goto lab_57;
            $$CIV25 = 0ll;
            do {   /* id=1 guarded */ /* ~10 */ 
              /* region = 141 */
              /* bump-normalized */
    30 |      __212 = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    24 |      if (!(1u != f.dy@c)) goto lab_44;
              $$CIV20 = 0ll;
    22 |      do {   /* id=6 guarded */ /* ~19 */ 
                /* region = 137 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV20))] = __212;
    24 |        $$CIV20 = $$CIV20 + 1ll;
              } while ((unsigned long long) $$CIV20 < (unsigned long long) (f.dy@c - 1u));    /* ~19 */
              f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u))) + f.i@18;
            lab_44:
    31 |      if (!1) goto lab_18;
              $$CIV24 = 0ll;
              do {   /* id=2 guarded */ /* ~16 */ 
                /* region = 140 */
                /* bump-normalized */
    30 |        __216 = f.zero@0;
    23 |        f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
                f.i@18 = f.i@18 + 1u;
    24 |        if (!(1u != f.dx@8)) goto lab_45;
                $$CIV21 = 0ll;
    22 |        do {   /* id=5 guarded */ /* ~25 */ 
                  /* region = 138 */
                  /* bump-normalized */
    23 |          f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV21))] = __216;
    24 |          $$CIV21 = $$CIV21 + 1ll;
                } while ((unsigned long long) $$CIV21 < (unsigned long long) (f.dx@8 - 1u));    /* ~25 */
                f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dx@8 - 1u))) + f.i@18;
              lab_45:
    31 |        if (!1) goto lab_24;
                $$CIV23 = 0ll;
                do {   /* id=3 guarded */ /* ~22 */ 
                  /* region = 139 */
                  /* bump-normalized */
    47 |          $$TVX.$$.a99 = PCdecoder<double, PCmap<double, 32u, void>, true>::decode(double, unsigned int)(__200,(((((f.a@20[(long long) (f.i@18 - f.dx@8 & f.m@14)] - f.a@20[(long long) ((f.i@18 - f.dy@c) - f.dz@10 & f.m@14)]) + f.a@20[(long long) (f.i@18 - f.dy@c & f.m@14)]) - f.a@20[(long long) ((f.i@18 - f.dx@8) - f.dz@10 & f.m@14)]) + f.a@20[(long long) (f.i@18 - f.dz@10 & f.m@14)]) - f.a@20[(long long) ((f.i@18 - f.dx@8) - f.dy@c & f.m@14)]) + f.a@20[(long long) (((f.i@18 - f.dx@8) - f.dy@c) - f.dz@10 & f.m@14)],0u);
    48 |          data[$$CIV23] = $$TVX.$$.a99;
    23 |          f.a@20[(long long) (f.m@14 & f.i@18)] = $$TVX.$$.a99;
                  f.i@18 = f.i@18 + 1u;
    32 |          $$CIV23 = $$CIV23 + 1ll;
                } while ((unsigned long long) $$CIV23 < (unsigned long long) nx);    /* ~22 */
                data = ((char *)data  + (long long) ((unsigned long long) nx * 8ull));
              lab_24:
    31 |        $$CIV24 = $$CIV24 + 1ll;
              } while ((unsigned long long) $$CIV24 < (unsigned long long) ny);    /* ~16 */
            lab_18:
    30 |      $$CIV25 = $$CIV25 + 1ll;
            } while ((unsigned long long) $$CIV25 < (unsigned long long) nz);    /* ~10 */
          lab_57:
            goto lab_71;
          lab_58:
    31 |    if (!1) goto lab_71;
            if (!(1u != f.dy@c)) goto lab_109;
            if (!(1u != f.dx@8)) goto lab_99;
            if (!1) goto lab_98;
            $$CIV25 = 0ll;
            do {   /* id=4 guarded */ /* ~60 */ 
              /* region = 145 */
              /* bump-normalized */
    30 |      __212 = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    24 |      if (!1) goto lab_62;
              $$CIV20 = 0ll;
    22 |      do {   /* id=9 guarded */ /* ~61 */ 
                /* region = 144 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV20))] = __212;
    24 |        $$CIV20 = $$CIV20 + 1ll;
              } while ((unsigned long long) $$CIV20 < (unsigned long long) (f.dy@c - 1u));    /* ~61 */
              f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u))) + f.i@18;
            lab_62:
    31 |      if (!1) goto lab_68;
              $$CIV24 = 0ll;
              do {   /* id=10 guarded */ /* ~63 */ 
                /* region = 143 */
                /* bump-normalized */
    30 |        $$TVX.$$.__216AA = f.zero@0;
    23 |        f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
                f.i@18 = f.i@18 + 1u;
    24 |        if (!1) goto lab_65;
                $$CIV21 = 0ll;
    22 |        do {   /* id=11 guarded */ /* ~64 */ 
                  /* region = 142 */
                  /* bump-normalized */
    23 |          f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV21))] = $$TVX.$$.__216AA;
    24 |          $$CIV21 = $$CIV21 + 1ll;
                } while ((unsigned long long) $$CIV21 < (unsigned long long) (f.dx@8 - 1u));    /* ~64 */
                f.i@18 = f.i@18 + (unsigned int) ((int) ((unsigned long long) (f.dx@8 - 1u)));
              lab_65:
    31 |        $$CIV24 = $$CIV24 + 1ll;
              } while ((unsigned long long) $$CIV24 < (unsigned long long) ny);    /* ~63 */
            lab_68:
    30 |      $$CIV25 = $$CIV25 + 1ll;
            } while ((unsigned long long) $$CIV25 < (unsigned long long) nz);    /* ~60 */
          lab_98:
            goto lab_71;
          lab_99:
    31 |    if (!1) goto lab_108;
            $$CIV25 = 0ll;
            do {   /* id=22 guarded */ /* ~101 */ 
              /* region = 148 */
              /* bump-normalized */
    30 |      __212 = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    24 |      if (!1) goto lab_103;
              $$CIV20 = 0ll;
    22 |      do {   /* id=21 guarded */ /* ~102 */ 
                /* region = 147 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV20))] = __212;
    24 |        $$CIV20 = $$CIV20 + 1ll;
              } while ((unsigned long long) $$CIV20 < (unsigned long long) (f.dy@c - 1u));    /* ~102 */
              f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u))) + f.i@18;
            lab_103:
    31 |      if (!1) goto lab_107;
              $$CIV24 = 0ll;
              $$SCREP7 = f.i@18;
              do {   /* id=20 guarded */ /* ~104 */ 
                /* region = 146 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & $$SCREP7)] = f.zero@0;
                $$SCREP7 = $$SCREP7 + 1u;
    31 |        $$CIV24 = $$CIV24 + 1ll;
              } while ((unsigned long long) $$CIV24 < (unsigned long long) ny);    /* ~104 */
              f.i@18 = $$SCREP7;
            lab_107:
    30 |      $$CIV25 = $$CIV25 + 1ll;
            } while ((unsigned long long) $$CIV25 < (unsigned long long) nz);    /* ~101 */
          lab_108:
            goto lab_71;
          lab_109:
    31 |    if (!(1u != f.dx@8)) goto lab_119;
            if (!1) goto lab_118;
            $$CIV25 = 0ll;
            do {   /* id=16 guarded */ /* ~111 */ 
              /* region = 151 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    31 |      if (!1) goto lab_117;
              $$CIV24 = 0ll;
              do {   /* id=12 guarded */ /* ~114 */ 
                /* region = 150 */
                /* bump-normalized */
    30 |        $$TVX.$$.__216BC = f.zero@0;
    23 |        f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
                f.i@18 = f.i@18 + 1u;
    24 |        if (!1) goto lab_116;
                $$CIV21 = 0ll;
    22 |        do {   /* id=23 guarded */ /* ~115 */ 
                  /* region = 149 */
                  /* bump-normalized */
    23 |          f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV21))] = $$TVX.$$.__216BC;
    24 |          $$CIV21 = $$CIV21 + 1ll;
                } while ((unsigned long long) $$CIV21 < (unsigned long long) (f.dx@8 - 1u));    /* ~115 */
                f.i@18 = f.i@18 + (unsigned int) ((int) ((unsigned long long) (f.dx@8 - 1u)));
              lab_116:
    31 |        $$CIV24 = $$CIV24 + 1ll;
              } while ((unsigned long long) $$CIV24 < (unsigned long long) ny);    /* ~114 */
            lab_117:
    30 |      $$CIV25 = $$CIV25 + 1ll;
            } while ((unsigned long long) $$CIV25 < (unsigned long long) nz);    /* ~111 */
          lab_118:
            goto lab_71;
          lab_119:
    31 |    if (!1) goto lab_127;
            $$CIV25 = 0ll;
            do {   /* id=24 guarded */ /* ~120 */ 
              /* region = 153 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    31 |      if (!1) goto lab_126;
              $$CIV24 = 0ll;
              $$SCREP6 = f.i@18;
              do {   /* id=26 guarded */ /* ~123 */ 
                /* region = 152 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & $$SCREP6)] = f.zero@0;
                $$SCREP6 = $$SCREP6 + 1u;
    31 |        $$CIV24 = $$CIV24 + 1ll;
              } while ((unsigned long long) $$CIV24 < (unsigned long long) ny);    /* ~123 */
              f.i@18 = $$SCREP6;
            lab_126:
    30 |      $$CIV25 = $$CIV25 + 1ll;
            } while ((unsigned long long) $$CIV25 < (unsigned long long) nz);    /* ~120 */
          lab_127:
            goto lab_71;
          lab_70:
    31 |    if (!(0u < nx)) goto lab_82;
            if (!1) goto lab_93;
            if (!(1u != f.dy@c)) goto lab_130;
            if (!1) goto lab_129;
            $$CIV25 = 0ll;
            do {   /* id=13 guarded */ /* ~72 */ 
              /* region = 155 */
              /* bump-normalized */
    30 |      $$TVX.$$.__212CE = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    24 |      if (!1) goto lab_74;
              $$CIV20 = 0ll;
    22 |      do {   /* id=14 guarded */ /* ~73 */ 
                /* region = 154 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV20))] = $$TVX.$$.__212CE;
    24 |        $$CIV20 = $$CIV20 + 1ll;
              } while ((unsigned long long) $$CIV20 < (unsigned long long) (f.dy@c - 1u));    /* ~73 */
              f.i@18 = f.i@18 + (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u)));
            lab_74:
    30 |      $$CIV25 = $$CIV25 + 1ll;
            } while ((unsigned long long) $$CIV25 < (unsigned long long) nz);    /* ~72 */
          lab_129:
            goto lab_93;
          lab_130:
    31 |    if (!1) goto lab_135;
            $$CIV25 = 0ll;
            $$SCREP5 = f.i@18;
            do {   /* id=28 guarded */ /* ~132 */ 
              /* region = 156 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & $$SCREP5)] = f.zero@0;
              $$SCREP5 = $$SCREP5 + 1u;
    30 |      $$CIV25 = $$CIV25 + 1ll;
            } while ((unsigned long long) $$CIV25 < (unsigned long long) nz);    /* ~132 */
            f.i@18 = $$SCREP5;
          lab_135:
            goto lab_93;
          lab_82:
    31 |    if (!1) goto lab_92;
            if (!(1u != f.dy@c)) goto lab_137;
            if (!1) goto lab_136;
            $$CIV25 = 0ll;
            do {   /* id=18 guarded */ /* ~83 */ 
              /* region = 158 */
              /* bump-normalized */
    30 |      $$TVX.$$.__212D10 = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    24 |      if (!1) goto lab_85;
              $$CIV20 = 0ll;
    22 |      do {   /* id=19 guarded */ /* ~84 */ 
                /* region = 157 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV20))] = $$TVX.$$.__212D10;
    24 |        $$CIV20 = $$CIV20 + 1ll;
              } while ((unsigned long long) $$CIV20 < (unsigned long long) (f.dy@c - 1u));    /* ~84 */
              f.i@18 = f.i@18 + (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u)));
            lab_85:
    30 |      $$CIV25 = $$CIV25 + 1ll;
            } while ((unsigned long long) $$CIV25 < (unsigned long long) nz);    /* ~83 */
          lab_136:
            goto lab_138;
          lab_137:
    31 |    if (!1) goto lab_142;
            $$CIV25 = 0ll;
            $$SCREP4 = f.i@18;
            do {   /* id=30 guarded */ /* ~139 */ 
              /* region = 159 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & $$SCREP4)] = f.zero@0;
              $$SCREP4 = $$SCREP4 + 1u;
    30 |      $$CIV25 = $$CIV25 + 1ll;
            } while ((unsigned long long) $$CIV25 < (unsigned long long) nz);    /* ~139 */
            f.i@18 = $$SCREP4;
          lab_142:
          lab_138:
          lab_92:
          lab_93:
          lab_71:
          lab_12:
    52 |    if (!(__200 != NULL)) goto lab_32;
    35 |    operator delete(void*)(__200)
          lab_32:
    53 |    if (!(rm != NULL)) goto lab_35;
            ((funcaddr *)(*((char * *)rm)))[8ll / 8]->(()vf).rns123.(rm);
          lab_35:
    11 |    operator delete[](void*)(f.a@20)
    54 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        83            22             7    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(double).rns114.".
        83            31             1    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj32EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            22             6    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(double).rns115.".
        83            31             2    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj32EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            22             5    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(double).rns116.".
        83            31             3    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj32EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            31             4    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj32EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            22             9    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(double).rns115.".
        83            31            10    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj32EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            22            11    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(double).rns116.".
        83            31            22    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj32EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            22            21    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(double).rns115.".
        83            31            20    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj32EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            31            16    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj32EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            31            12    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj32EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            22            23    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(double).rns116.".
        83            31            24    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj32EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            31            26    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj32EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            31            13    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj32EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            22            14    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(double).rns115.".
        83            31            28    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj32EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            31            18    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj32EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            22            19    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(double).rns115.".
        83            31            30    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj32EvELb1EE6decodeEdj" that 
                                          may have side effects.

    14 |  void void decompress3d<double, 48u>(RCdecoder*, double*, unsigned int, unsigned int, unsigned int)(char * rd, long long *data, unsigned int nx, unsigned int ny, unsigned int nz)
    21 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
    24 |    __254 = operator new(unsigned long)(72ull);
            if (!(__254 != NULL)) goto lab_2;
            __es.__c4@3 = 1u;
            RCqsmodel::RCqsmodel(bool, unsigned int, unsigned int, unsigned int)(__254,0u,97u,16u,1024u);
            __es.__c4@3 = 0u;
          lab_2:
            $$rm.nat.C = __254;
    25 |    __255 = operator new(unsigned long)(24ull);
            rm = $$rm.nat.C;
            if (!(__255 != NULL)) goto lab_5;
    34 |    *((char * *)((char *)__255 + 8)) = rd;
            rm = $$rm.nat.C;
            *((char * *)((char *)__255 + 16)) = &rm;
          lab_5:
    26 |    f.zero@0 =  0.0000000000000000E+000;
     9 |    f.dx@8 = 1u;
            f.dy@c = nx + 1u;
            f.dz@10 = (ny + 1u) * (nx + 1u);
    45 |    __288.rnn4D = (2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u;
            if (!(0u != (((2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u) + 1u & (2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u))) goto lab_9;
            do {   /* id=8 guarded */ /* ~7 */ 
              /* region = 135 */
     9 |      __288.rnn4D = __288.rnn4D | __288.rnn4D + 1u;
    45 |    } while (0u != (__288.rnn4D + 1u & __288.rnn4D));    /* ~7 */
          lab_9:
    47 |    f.m@14 = __288.rnn4D;
    10 |    f.i@18 = 0u;
            f.a@20 = operator new[](unsigned long)((unsigned long long) (__288.rnn4D + 1u) * 8ull);
            __es.__c4@3 = 2u;
    23 |    f.a@20[(long long) (f.i@18 & f.m@14)] = f.zero@0;
            f.i@18 = f.i@18 + 1u;
    24 |    if (!(1u != f.dz@10)) goto lab_43;
            $$CIV26 = 0ll;
    22 |    do {   /* id=7 guarded */ /* ~13 */ 
              /* region = 136 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV26))] = f.zero@0;
    24 |      $$CIV26 = $$CIV26 + 1ll;
            } while ((unsigned long long) $$CIV26 < (unsigned long long) (f.dz@10 - 1u));    /* ~13 */
            f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dz@10 - 1u))) + f.i@18;
          lab_43:
    31 |    if (!(0u < nz)) goto lab_12;
            if (!(0u < ny)) goto lab_70;
            if (!(0u < nx)) goto lab_58;
            if (!1) goto lab_57;
            $$CIV2C = 0ll;
            do {   /* id=1 guarded */ /* ~10 */ 
              /* region = 141 */
              /* bump-normalized */
    30 |      __267 = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    24 |      if (!(1u != f.dy@c)) goto lab_44;
              $$CIV27 = 0ll;
    22 |      do {   /* id=6 guarded */ /* ~19 */ 
                /* region = 137 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV27))] = __267;
    24 |        $$CIV27 = $$CIV27 + 1ll;
              } while ((unsigned long long) $$CIV27 < (unsigned long long) (f.dy@c - 1u));    /* ~19 */
              f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u))) + f.i@18;
            lab_44:
    31 |      if (!1) goto lab_18;
              $$CIV2B = 0ll;
              do {   /* id=2 guarded */ /* ~16 */ 
                /* region = 140 */
                /* bump-normalized */
    30 |        __271 = f.zero@0;
    23 |        f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
                f.i@18 = f.i@18 + 1u;
    24 |        if (!(1u != f.dx@8)) goto lab_45;
                $$CIV28 = 0ll;
    22 |        do {   /* id=5 guarded */ /* ~25 */ 
                  /* region = 138 */
                  /* bump-normalized */
    23 |          f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV28))] = __271;
    24 |          $$CIV28 = $$CIV28 + 1ll;
                } while ((unsigned long long) $$CIV28 < (unsigned long long) (f.dx@8 - 1u));    /* ~25 */
                f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dx@8 - 1u))) + f.i@18;
              lab_45:
    31 |        if (!1) goto lab_24;
                $$CIV2A = 0ll;
                do {   /* id=3 guarded */ /* ~22 */ 
                  /* region = 139 */
                  /* bump-normalized */
    47 |          $$TVX.$$.a1212 = PCdecoder<double, PCmap<double, 48u, void>, true>::decode(double, unsigned int)(__255,(((((f.a@20[(long long) (f.i@18 - f.dx@8 & f.m@14)] - f.a@20[(long long) ((f.i@18 - f.dy@c) - f.dz@10 & f.m@14)]) + f.a@20[(long long) (f.i@18 - f.dy@c & f.m@14)]) - f.a@20[(long long) ((f.i@18 - f.dx@8) - f.dz@10 & f.m@14)]) + f.a@20[(long long) (f.i@18 - f.dz@10 & f.m@14)]) - f.a@20[(long long) ((f.i@18 - f.dx@8) - f.dy@c & f.m@14)]) + f.a@20[(long long) (((f.i@18 - f.dx@8) - f.dy@c) - f.dz@10 & f.m@14)],0u);
    48 |          data[$$CIV2A] = $$TVX.$$.a1212;
    23 |          f.a@20[(long long) (f.m@14 & f.i@18)] = $$TVX.$$.a1212;
                  f.i@18 = f.i@18 + 1u;
    32 |          $$CIV2A = $$CIV2A + 1ll;
                } while ((unsigned long long) $$CIV2A < (unsigned long long) nx);    /* ~22 */
                data = ((char *)data  + (long long) ((unsigned long long) nx * 8ull));
              lab_24:
    31 |        $$CIV2B = $$CIV2B + 1ll;
              } while ((unsigned long long) $$CIV2B < (unsigned long long) ny);    /* ~16 */
            lab_18:
    30 |      $$CIV2C = $$CIV2C + 1ll;
            } while ((unsigned long long) $$CIV2C < (unsigned long long) nz);    /* ~10 */
          lab_57:
            goto lab_71;
          lab_58:
    31 |    if (!1) goto lab_71;
            if (!(1u != f.dy@c)) goto lab_109;
            if (!(1u != f.dx@8)) goto lab_99;
            if (!1) goto lab_98;
            $$CIV2C = 0ll;
            do {   /* id=4 guarded */ /* ~60 */ 
              /* region = 145 */
              /* bump-normalized */
    30 |      __267 = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    24 |      if (!1) goto lab_62;
              $$CIV27 = 0ll;
    22 |      do {   /* id=9 guarded */ /* ~61 */ 
                /* region = 144 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV27))] = __267;
    24 |        $$CIV27 = $$CIV27 + 1ll;
              } while ((unsigned long long) $$CIV27 < (unsigned long long) (f.dy@c - 1u));    /* ~61 */
              f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u))) + f.i@18;
            lab_62:
    31 |      if (!1) goto lab_68;
              $$CIV2B = 0ll;
              do {   /* id=10 guarded */ /* ~63 */ 
                /* region = 143 */
                /* bump-normalized */
    30 |        $$TVX.$$.__2711313 = f.zero@0;
    23 |        f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
                f.i@18 = f.i@18 + 1u;
    24 |        if (!1) goto lab_65;
                $$CIV28 = 0ll;
    22 |        do {   /* id=11 guarded */ /* ~64 */ 
                  /* region = 142 */
                  /* bump-normalized */
    23 |          f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV28))] = $$TVX.$$.__2711313;
    24 |          $$CIV28 = $$CIV28 + 1ll;
                } while ((unsigned long long) $$CIV28 < (unsigned long long) (f.dx@8 - 1u));    /* ~64 */
                f.i@18 = f.i@18 + (unsigned int) ((int) ((unsigned long long) (f.dx@8 - 1u)));
              lab_65:
    31 |        $$CIV2B = $$CIV2B + 1ll;
              } while ((unsigned long long) $$CIV2B < (unsigned long long) ny);    /* ~63 */
            lab_68:
    30 |      $$CIV2C = $$CIV2C + 1ll;
            } while ((unsigned long long) $$CIV2C < (unsigned long long) nz);    /* ~60 */
          lab_98:
            goto lab_71;
          lab_99:
    31 |    if (!1) goto lab_108;
            $$CIV2C = 0ll;
            do {   /* id=22 guarded */ /* ~101 */ 
              /* region = 148 */
              /* bump-normalized */
    30 |      __267 = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    24 |      if (!1) goto lab_103;
              $$CIV27 = 0ll;
    22 |      do {   /* id=21 guarded */ /* ~102 */ 
                /* region = 147 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV27))] = __267;
    24 |        $$CIV27 = $$CIV27 + 1ll;
              } while ((unsigned long long) $$CIV27 < (unsigned long long) (f.dy@c - 1u));    /* ~102 */
              f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u))) + f.i@18;
            lab_103:
    31 |      if (!1) goto lab_107;
              $$CIV2B = 0ll;
              $$SCREPB = f.i@18;
              do {   /* id=20 guarded */ /* ~104 */ 
                /* region = 146 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & $$SCREPB)] = f.zero@0;
                $$SCREPB = $$SCREPB + 1u;
    31 |        $$CIV2B = $$CIV2B + 1ll;
              } while ((unsigned long long) $$CIV2B < (unsigned long long) ny);    /* ~104 */
              f.i@18 = $$SCREPB;
            lab_107:
    30 |      $$CIV2C = $$CIV2C + 1ll;
            } while ((unsigned long long) $$CIV2C < (unsigned long long) nz);    /* ~101 */
          lab_108:
            goto lab_71;
          lab_109:
    31 |    if (!(1u != f.dx@8)) goto lab_119;
            if (!1) goto lab_118;
            $$CIV2C = 0ll;
            do {   /* id=16 guarded */ /* ~111 */ 
              /* region = 151 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    31 |      if (!1) goto lab_117;
              $$CIV2B = 0ll;
              do {   /* id=12 guarded */ /* ~114 */ 
                /* region = 150 */
                /* bump-normalized */
    30 |        $$TVX.$$.__2711415 = f.zero@0;
    23 |        f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
                f.i@18 = f.i@18 + 1u;
    24 |        if (!1) goto lab_116;
                $$CIV28 = 0ll;
    22 |        do {   /* id=23 guarded */ /* ~115 */ 
                  /* region = 149 */
                  /* bump-normalized */
    23 |          f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV28))] = $$TVX.$$.__2711415;
    24 |          $$CIV28 = $$CIV28 + 1ll;
                } while ((unsigned long long) $$CIV28 < (unsigned long long) (f.dx@8 - 1u));    /* ~115 */
                f.i@18 = f.i@18 + (unsigned int) ((int) ((unsigned long long) (f.dx@8 - 1u)));
              lab_116:
    31 |        $$CIV2B = $$CIV2B + 1ll;
              } while ((unsigned long long) $$CIV2B < (unsigned long long) ny);    /* ~114 */
            lab_117:
    30 |      $$CIV2C = $$CIV2C + 1ll;
            } while ((unsigned long long) $$CIV2C < (unsigned long long) nz);    /* ~111 */
          lab_118:
            goto lab_71;
          lab_119:
    31 |    if (!1) goto lab_127;
            $$CIV2C = 0ll;
            do {   /* id=24 guarded */ /* ~120 */ 
              /* region = 153 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    31 |      if (!1) goto lab_126;
              $$CIV2B = 0ll;
              $$SCREPA = f.i@18;
              do {   /* id=26 guarded */ /* ~123 */ 
                /* region = 152 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & $$SCREPA)] = f.zero@0;
                $$SCREPA = $$SCREPA + 1u;
    31 |        $$CIV2B = $$CIV2B + 1ll;
              } while ((unsigned long long) $$CIV2B < (unsigned long long) ny);    /* ~123 */
              f.i@18 = $$SCREPA;
            lab_126:
    30 |      $$CIV2C = $$CIV2C + 1ll;
            } while ((unsigned long long) $$CIV2C < (unsigned long long) nz);    /* ~120 */
          lab_127:
            goto lab_71;
          lab_70:
    31 |    if (!(0u < nx)) goto lab_82;
            if (!1) goto lab_93;
            if (!(1u != f.dy@c)) goto lab_130;
            if (!1) goto lab_129;
            $$CIV2C = 0ll;
            do {   /* id=13 guarded */ /* ~72 */ 
              /* region = 155 */
              /* bump-normalized */
    30 |      $$TVX.$$.__2671517 = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    24 |      if (!1) goto lab_74;
              $$CIV27 = 0ll;
    22 |      do {   /* id=14 guarded */ /* ~73 */ 
                /* region = 154 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV27))] = $$TVX.$$.__2671517;
    24 |        $$CIV27 = $$CIV27 + 1ll;
              } while ((unsigned long long) $$CIV27 < (unsigned long long) (f.dy@c - 1u));    /* ~73 */
              f.i@18 = f.i@18 + (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u)));
            lab_74:
    30 |      $$CIV2C = $$CIV2C + 1ll;
            } while ((unsigned long long) $$CIV2C < (unsigned long long) nz);    /* ~72 */
          lab_129:
            goto lab_93;
          lab_130:
    31 |    if (!1) goto lab_135;
            $$CIV2C = 0ll;
            $$SCREP9 = f.i@18;
            do {   /* id=28 guarded */ /* ~132 */ 
              /* region = 156 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & $$SCREP9)] = f.zero@0;
              $$SCREP9 = $$SCREP9 + 1u;
    30 |      $$CIV2C = $$CIV2C + 1ll;
            } while ((unsigned long long) $$CIV2C < (unsigned long long) nz);    /* ~132 */
            f.i@18 = $$SCREP9;
          lab_135:
            goto lab_93;
          lab_82:
    31 |    if (!1) goto lab_92;
            if (!(1u != f.dy@c)) goto lab_137;
            if (!1) goto lab_136;
            $$CIV2C = 0ll;
            do {   /* id=18 guarded */ /* ~83 */ 
              /* region = 158 */
              /* bump-normalized */
    30 |      $$TVX.$$.__2671619 = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    24 |      if (!1) goto lab_85;
              $$CIV27 = 0ll;
    22 |      do {   /* id=19 guarded */ /* ~84 */ 
                /* region = 157 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV27))] = $$TVX.$$.__2671619;
    24 |        $$CIV27 = $$CIV27 + 1ll;
              } while ((unsigned long long) $$CIV27 < (unsigned long long) (f.dy@c - 1u));    /* ~84 */
              f.i@18 = f.i@18 + (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u)));
            lab_85:
    30 |      $$CIV2C = $$CIV2C + 1ll;
            } while ((unsigned long long) $$CIV2C < (unsigned long long) nz);    /* ~83 */
          lab_136:
            goto lab_138;
          lab_137:
    31 |    if (!1) goto lab_142;
            $$CIV2C = 0ll;
            $$SCREP8 = f.i@18;
            do {   /* id=30 guarded */ /* ~139 */ 
              /* region = 159 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & $$SCREP8)] = f.zero@0;
              $$SCREP8 = $$SCREP8 + 1u;
    30 |      $$CIV2C = $$CIV2C + 1ll;
            } while ((unsigned long long) $$CIV2C < (unsigned long long) nz);    /* ~139 */
            f.i@18 = $$SCREP8;
          lab_142:
          lab_138:
          lab_92:
          lab_93:
          lab_71:
          lab_12:
    52 |    if (!(__255 != NULL)) goto lab_32;
    35 |    operator delete(void*)(__255)
          lab_32:
    53 |    if (!(rm != NULL)) goto lab_35;
            ((funcaddr *)(*((char * *)rm)))[8ll / 8]->(()vf).rns139.(rm);
          lab_35:
    11 |    operator delete[](void*)(f.a@20)
    54 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        83            22             7    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(double).rns130.".
        83            31             1    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj48EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            22             6    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(double).rns131.".
        83            31             2    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj48EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            22             5    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(double).rns132.".
        83            31             3    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj48EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            31             4    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj48EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            22             9    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(double).rns131.".
        83            31            10    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj48EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            22            11    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(double).rns132.".
        83            31            22    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj48EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            22            21    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(double).rns131.".
        83            31            20    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj48EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            31            16    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj48EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            31            12    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj48EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            22            23    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(double).rns132.".
        83            31            24    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj48EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            31            26    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj48EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            31            13    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj48EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            22            14    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(double).rns131.".
        83            31            28    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj48EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            31            18    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj48EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            22            19    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(double).rns131.".
        83            31            30    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj48EvELb1EE6decodeEdj" that 
                                          may have side effects.

    14 |  void void decompress3d<double, 64u>(RCdecoder*, double*, unsigned int, unsigned int, unsigned int)(char * rd, long long *data, unsigned int nx, unsigned int ny, unsigned int nz)
    21 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
    24 |    __309 = operator new(unsigned long)(72ull);
            if (!(__309 != NULL)) goto lab_2;
            __es.__c4@3 = 1u;
            RCqsmodel::RCqsmodel(bool, unsigned int, unsigned int, unsigned int)(__309,0u,129u,16u,1024u);
            __es.__c4@3 = 0u;
          lab_2:
            $$rm.nat.12 = __309;
    25 |    __310 = operator new(unsigned long)(24ull);
            rm = $$rm.nat.12;
            if (!(__310 != NULL)) goto lab_5;
    34 |    *((char * *)((char *)__310 + 8)) = rd;
            rm = $$rm.nat.12;
            *((char * *)((char *)__310 + 16)) = &rm;
          lab_5:
    26 |    f.zero@0 =  0.0000000000000000E+000;
     9 |    f.dx@8 = 1u;
            f.dy@c = nx + 1u;
            f.dz@10 = (ny + 1u) * (nx + 1u);
    45 |    __343.rnn59 = (2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u;
            if (!(0u != (((2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u) + 1u & (2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u))) goto lab_9;
            do {   /* id=8 guarded */ /* ~7 */ 
              /* region = 135 */
     9 |      __343.rnn59 = __343.rnn59 | __343.rnn59 + 1u;
    45 |    } while (0u != (__343.rnn59 + 1u & __343.rnn59));    /* ~7 */
          lab_9:
    47 |    f.m@14 = __343.rnn59;
    10 |    f.i@18 = 0u;
            f.a@20 = operator new[](unsigned long)((unsigned long long) (__343.rnn59 + 1u) * 8ull);
            __es.__c4@3 = 2u;
    23 |    f.a@20[(long long) (f.i@18 & f.m@14)] = f.zero@0;
            f.i@18 = f.i@18 + 1u;
    24 |    if (!(1u != f.dz@10)) goto lab_43;
            $$CIV2D = 0ll;
    22 |    do {   /* id=7 guarded */ /* ~13 */ 
              /* region = 136 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV2D))] = f.zero@0;
    24 |      $$CIV2D = $$CIV2D + 1ll;
            } while ((unsigned long long) $$CIV2D < (unsigned long long) (f.dz@10 - 1u));    /* ~13 */
            f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dz@10 - 1u))) + f.i@18;
          lab_43:
    31 |    if (!(0u < nz)) goto lab_12;
            if (!(0u < ny)) goto lab_70;
            if (!(0u < nx)) goto lab_58;
            if (!1) goto lab_57;
            $$CIV33 = 0ll;
            do {   /* id=1 guarded */ /* ~10 */ 
              /* region = 141 */
              /* bump-normalized */
    30 |      __322 = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    24 |      if (!(1u != f.dy@c)) goto lab_44;
              $$CIV2E = 0ll;
    22 |      do {   /* id=6 guarded */ /* ~19 */ 
                /* region = 137 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV2E))] = __322;
    24 |        $$CIV2E = $$CIV2E + 1ll;
              } while ((unsigned long long) $$CIV2E < (unsigned long long) (f.dy@c - 1u));    /* ~19 */
              f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u))) + f.i@18;
            lab_44:
    31 |      if (!1) goto lab_18;
              $$CIV32 = 0ll;
              do {   /* id=2 guarded */ /* ~16 */ 
                /* region = 140 */
                /* bump-normalized */
    30 |        __326 = f.zero@0;
    23 |        f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
                f.i@18 = f.i@18 + 1u;
    24 |        if (!(1u != f.dx@8)) goto lab_45;
                $$CIV2F = 0ll;
    22 |        do {   /* id=5 guarded */ /* ~25 */ 
                  /* region = 138 */
                  /* bump-normalized */
    23 |          f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV2F))] = __326;
    24 |          $$CIV2F = $$CIV2F + 1ll;
                } while ((unsigned long long) $$CIV2F < (unsigned long long) (f.dx@8 - 1u));    /* ~25 */
                f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dx@8 - 1u))) + f.i@18;
              lab_45:
    31 |        if (!1) goto lab_24;
                $$CIV31 = 0ll;
                do {   /* id=3 guarded */ /* ~22 */ 
                  /* region = 139 */
                  /* bump-normalized */
    47 |          $$TVX.$$.a1B1B = PCdecoder<double, PCmap<double, 64u, void>, true>::decode(double, unsigned int)(__310,(((((f.a@20[(long long) (f.i@18 - f.dx@8 & f.m@14)] - f.a@20[(long long) ((f.i@18 - f.dy@c) - f.dz@10 & f.m@14)]) + f.a@20[(long long) (f.i@18 - f.dy@c & f.m@14)]) - f.a@20[(long long) ((f.i@18 - f.dx@8) - f.dz@10 & f.m@14)]) + f.a@20[(long long) (f.i@18 - f.dz@10 & f.m@14)]) - f.a@20[(long long) ((f.i@18 - f.dx@8) - f.dy@c & f.m@14)]) + f.a@20[(long long) (((f.i@18 - f.dx@8) - f.dy@c) - f.dz@10 & f.m@14)],0u);
    48 |          data[$$CIV31] = $$TVX.$$.a1B1B;
    23 |          f.a@20[(long long) (f.m@14 & f.i@18)] = $$TVX.$$.a1B1B;
                  f.i@18 = f.i@18 + 1u;
    32 |          $$CIV31 = $$CIV31 + 1ll;
                } while ((unsigned long long) $$CIV31 < (unsigned long long) nx);    /* ~22 */
                data = ((char *)data  + (long long) ((unsigned long long) nx * 8ull));
              lab_24:
    31 |        $$CIV32 = $$CIV32 + 1ll;
              } while ((unsigned long long) $$CIV32 < (unsigned long long) ny);    /* ~16 */
            lab_18:
    30 |      $$CIV33 = $$CIV33 + 1ll;
            } while ((unsigned long long) $$CIV33 < (unsigned long long) nz);    /* ~10 */
          lab_57:
            goto lab_71;
          lab_58:
    31 |    if (!1) goto lab_71;
            if (!(1u != f.dy@c)) goto lab_109;
            if (!(1u != f.dx@8)) goto lab_99;
            if (!1) goto lab_98;
            $$CIV33 = 0ll;
            do {   /* id=4 guarded */ /* ~60 */ 
              /* region = 145 */
              /* bump-normalized */
    30 |      __322 = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    24 |      if (!1) goto lab_62;
              $$CIV2E = 0ll;
    22 |      do {   /* id=9 guarded */ /* ~61 */ 
                /* region = 144 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV2E))] = __322;
    24 |        $$CIV2E = $$CIV2E + 1ll;
              } while ((unsigned long long) $$CIV2E < (unsigned long long) (f.dy@c - 1u));    /* ~61 */
              f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u))) + f.i@18;
            lab_62:
    31 |      if (!1) goto lab_68;
              $$CIV32 = 0ll;
              do {   /* id=10 guarded */ /* ~63 */ 
                /* region = 143 */
                /* bump-normalized */
    30 |        $$TVX.$$.__3261C1C = f.zero@0;
    23 |        f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
                f.i@18 = f.i@18 + 1u;
    24 |        if (!1) goto lab_65;
                $$CIV2F = 0ll;
    22 |        do {   /* id=11 guarded */ /* ~64 */ 
                  /* region = 142 */
                  /* bump-normalized */
    23 |          f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV2F))] = $$TVX.$$.__3261C1C;
    24 |          $$CIV2F = $$CIV2F + 1ll;
                } while ((unsigned long long) $$CIV2F < (unsigned long long) (f.dx@8 - 1u));    /* ~64 */
                f.i@18 = f.i@18 + (unsigned int) ((int) ((unsigned long long) (f.dx@8 - 1u)));
              lab_65:
    31 |        $$CIV32 = $$CIV32 + 1ll;
              } while ((unsigned long long) $$CIV32 < (unsigned long long) ny);    /* ~63 */
            lab_68:
    30 |      $$CIV33 = $$CIV33 + 1ll;
            } while ((unsigned long long) $$CIV33 < (unsigned long long) nz);    /* ~60 */
          lab_98:
            goto lab_71;
          lab_99:
    31 |    if (!1) goto lab_108;
            $$CIV33 = 0ll;
            do {   /* id=22 guarded */ /* ~101 */ 
              /* region = 148 */
              /* bump-normalized */
    30 |      __322 = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    24 |      if (!1) goto lab_103;
              $$CIV2E = 0ll;
    22 |      do {   /* id=21 guarded */ /* ~102 */ 
                /* region = 147 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV2E))] = __322;
    24 |        $$CIV2E = $$CIV2E + 1ll;
              } while ((unsigned long long) $$CIV2E < (unsigned long long) (f.dy@c - 1u));    /* ~102 */
              f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u))) + f.i@18;
            lab_103:
    31 |      if (!1) goto lab_107;
              $$CIV32 = 0ll;
              $$SCREPF = f.i@18;
              do {   /* id=20 guarded */ /* ~104 */ 
                /* region = 146 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & $$SCREPF)] = f.zero@0;
                $$SCREPF = $$SCREPF + 1u;
    31 |        $$CIV32 = $$CIV32 + 1ll;
              } while ((unsigned long long) $$CIV32 < (unsigned long long) ny);    /* ~104 */
              f.i@18 = $$SCREPF;
            lab_107:
    30 |      $$CIV33 = $$CIV33 + 1ll;
            } while ((unsigned long long) $$CIV33 < (unsigned long long) nz);    /* ~101 */
          lab_108:
            goto lab_71;
          lab_109:
    31 |    if (!(1u != f.dx@8)) goto lab_119;
            if (!1) goto lab_118;
            $$CIV33 = 0ll;
            do {   /* id=16 guarded */ /* ~111 */ 
              /* region = 151 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    31 |      if (!1) goto lab_117;
              $$CIV32 = 0ll;
              do {   /* id=12 guarded */ /* ~114 */ 
                /* region = 150 */
                /* bump-normalized */
    30 |        $$TVX.$$.__3261D1E = f.zero@0;
    23 |        f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
                f.i@18 = f.i@18 + 1u;
    24 |        if (!1) goto lab_116;
                $$CIV2F = 0ll;
    22 |        do {   /* id=23 guarded */ /* ~115 */ 
                  /* region = 149 */
                  /* bump-normalized */
    23 |          f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV2F))] = $$TVX.$$.__3261D1E;
    24 |          $$CIV2F = $$CIV2F + 1ll;
                } while ((unsigned long long) $$CIV2F < (unsigned long long) (f.dx@8 - 1u));    /* ~115 */
                f.i@18 = f.i@18 + (unsigned int) ((int) ((unsigned long long) (f.dx@8 - 1u)));
              lab_116:
    31 |        $$CIV32 = $$CIV32 + 1ll;
              } while ((unsigned long long) $$CIV32 < (unsigned long long) ny);    /* ~114 */
            lab_117:
    30 |      $$CIV33 = $$CIV33 + 1ll;
            } while ((unsigned long long) $$CIV33 < (unsigned long long) nz);    /* ~111 */
          lab_118:
            goto lab_71;
          lab_119:
    31 |    if (!1) goto lab_127;
            $$CIV33 = 0ll;
            do {   /* id=24 guarded */ /* ~120 */ 
              /* region = 153 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    31 |      if (!1) goto lab_126;
              $$CIV32 = 0ll;
              $$SCREPE = f.i@18;
              do {   /* id=26 guarded */ /* ~123 */ 
                /* region = 152 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & $$SCREPE)] = f.zero@0;
                $$SCREPE = $$SCREPE + 1u;
    31 |        $$CIV32 = $$CIV32 + 1ll;
              } while ((unsigned long long) $$CIV32 < (unsigned long long) ny);    /* ~123 */
              f.i@18 = $$SCREPE;
            lab_126:
    30 |      $$CIV33 = $$CIV33 + 1ll;
            } while ((unsigned long long) $$CIV33 < (unsigned long long) nz);    /* ~120 */
          lab_127:
            goto lab_71;
          lab_70:
    31 |    if (!(0u < nx)) goto lab_82;
            if (!1) goto lab_93;
            if (!(1u != f.dy@c)) goto lab_130;
            if (!1) goto lab_129;
            $$CIV33 = 0ll;
            do {   /* id=13 guarded */ /* ~72 */ 
              /* region = 155 */
              /* bump-normalized */
    30 |      $$TVX.$$.__3221E20 = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    24 |      if (!1) goto lab_74;
              $$CIV2E = 0ll;
    22 |      do {   /* id=14 guarded */ /* ~73 */ 
                /* region = 154 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV2E))] = $$TVX.$$.__3221E20;
    24 |        $$CIV2E = $$CIV2E + 1ll;
              } while ((unsigned long long) $$CIV2E < (unsigned long long) (f.dy@c - 1u));    /* ~73 */
              f.i@18 = f.i@18 + (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u)));
            lab_74:
    30 |      $$CIV33 = $$CIV33 + 1ll;
            } while ((unsigned long long) $$CIV33 < (unsigned long long) nz);    /* ~72 */
          lab_129:
            goto lab_93;
          lab_130:
    31 |    if (!1) goto lab_135;
            $$CIV33 = 0ll;
            $$SCREPD = f.i@18;
            do {   /* id=28 guarded */ /* ~132 */ 
              /* region = 156 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & $$SCREPD)] = f.zero@0;
              $$SCREPD = $$SCREPD + 1u;
    30 |      $$CIV33 = $$CIV33 + 1ll;
            } while ((unsigned long long) $$CIV33 < (unsigned long long) nz);    /* ~132 */
            f.i@18 = $$SCREPD;
          lab_135:
            goto lab_93;
          lab_82:
    31 |    if (!1) goto lab_92;
            if (!(1u != f.dy@c)) goto lab_137;
            if (!1) goto lab_136;
            $$CIV33 = 0ll;
            do {   /* id=18 guarded */ /* ~83 */ 
              /* region = 158 */
              /* bump-normalized */
    30 |      $$TVX.$$.__3221F22 = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    24 |      if (!1) goto lab_85;
              $$CIV2E = 0ll;
    22 |      do {   /* id=19 guarded */ /* ~84 */ 
                /* region = 157 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV2E))] = $$TVX.$$.__3221F22;
    24 |        $$CIV2E = $$CIV2E + 1ll;
              } while ((unsigned long long) $$CIV2E < (unsigned long long) (f.dy@c - 1u));    /* ~84 */
              f.i@18 = f.i@18 + (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u)));
            lab_85:
    30 |      $$CIV33 = $$CIV33 + 1ll;
            } while ((unsigned long long) $$CIV33 < (unsigned long long) nz);    /* ~83 */
          lab_136:
            goto lab_138;
          lab_137:
    31 |    if (!1) goto lab_142;
            $$CIV33 = 0ll;
            $$SCREPC = f.i@18;
            do {   /* id=30 guarded */ /* ~139 */ 
              /* region = 159 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & $$SCREPC)] = f.zero@0;
              $$SCREPC = $$SCREPC + 1u;
    30 |      $$CIV33 = $$CIV33 + 1ll;
            } while ((unsigned long long) $$CIV33 < (unsigned long long) nz);    /* ~139 */
            f.i@18 = $$SCREPC;
          lab_142:
          lab_138:
          lab_92:
          lab_93:
          lab_71:
          lab_12:
    52 |    if (!(__310 != NULL)) goto lab_32;
    35 |    operator delete(void*)(__310)
          lab_32:
    53 |    if (!(rm != NULL)) goto lab_35;
            ((funcaddr *)(*((char * *)rm)))[8ll / 8]->(()vf).rns155.(rm);
          lab_35:
    11 |    operator delete[](void*)(f.a@20)
    54 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        83            22             7    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(double).rns146.".
        83            31             1    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj64EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            22             6    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(double).rns147.".
        83            31             2    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj64EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            22             5    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(double).rns148.".
        83            31             3    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj64EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            31             4    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj64EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            22             9    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(double).rns147.".
        83            31            10    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj64EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            22            11    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(double).rns148.".
        83            31            22    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj64EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            22            21    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(double).rns147.".
        83            31            20    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj64EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            31            16    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj64EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            31            12    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj64EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            22            23    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(double).rns148.".
        83            31            24    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj64EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            31            26    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj64EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            31            13    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj64EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            22            14    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(double).rns147.".
        83            31            28    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj64EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            31            18    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj64EvELb1EE6decodeEdj" that 
                                          may have side effects.
        83            22            19    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(double).rns147.".
        83            31            30    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderId5PCmapIdLj64EvELb1EE6decodeEdj" that 
                                          may have side effects.

    14 |  void void decompress3d<float, 8u>(RCdecoder*, float*, unsigned int, unsigned int, unsigned int)(char * rd, float *data, unsigned int nx, unsigned int ny, unsigned int nz)
    21 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
    24 |    __364 = operator new(unsigned long)(72ull);
            if (!(__364 != NULL)) goto lab_2;
            __es.__c4@3 = 1u;
            RCqsmodel::RCqsmodel(bool, unsigned int, unsigned int, unsigned int)(__364,0u,511u,16u,1024u);
            __es.__c4@3 = 0u;
          lab_2:
            $$rm.nat.18 = __364;
    25 |    __365 = operator new(unsigned long)(24ull);
            rm = $$rm.nat.18;
            if (!(__365 != NULL)) goto lab_5;
     6 |    *((char * *)((char *)__365 + 8)) = rd;
            rm = $$rm.nat.18;
            *((char * *)((char *)__365 + 16)) = &rm;
          lab_5:
    26 |    f.zero@0 =  0.00000000E+00;
     9 |    f.dx@4 = 1u;
            f.dy@8 = nx + 1u;
            f.dz@c = (ny + 1u) * (nx + 1u);
    45 |    __398.rnn65 = (2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u;
            if (!(0u != (((2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u) + 1u & (2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u))) goto lab_9;
            do {   /* id=8 guarded */ /* ~7 */ 
              /* region = 135 */
     9 |      __398.rnn65 = __398.rnn65 | __398.rnn65 + 1u;
    45 |    } while (0u != (__398.rnn65 + 1u & __398.rnn65));    /* ~7 */
          lab_9:
    47 |    f.m@10 = __398.rnn65;
    10 |    f.i@14 = 0u;
            f.a@18 = operator new[](unsigned long)((unsigned long long) (__398.rnn65 + 1u) * 4ull);
            __es.__c4@3 = 2u;
    23 |    f.a@18[(long long) (f.i@14 & f.m@10)] = f.zero@0;
            f.i@14 = f.i@14 + 1u;
    24 |    if (!(1u != f.dz@c)) goto lab_43;
            $$CIV34 = 0ll;
    22 |    do {   /* id=7 guarded */ /* ~13 */ 
              /* region = 136 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV34))] = f.zero@0;
    24 |      $$CIV34 = $$CIV34 + 1ll;
            } while ((unsigned long long) $$CIV34 < (unsigned long long) (f.dz@c - 1u));    /* ~13 */
            f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dz@c - 1u))) + f.i@14;
          lab_43:
    31 |    if (!(0u < nz)) goto lab_12;
            if (!(0u < ny)) goto lab_75;
            if (!(0u < nx)) goto lab_63;
            if (!1) goto lab_62;
            $$CIV3A = 0ll;
            do {   /* id=1 guarded */ /* ~10 */ 
              /* region = 141 */
              /* bump-normalized */
    30 |      __377 = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    24 |      if (!(1u != f.dy@8)) goto lab_44;
              $$CIV35 = 0ll;
    22 |      do {   /* id=6 guarded */ /* ~19 */ 
                /* region = 137 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV35))] = __377;
    24 |        $$CIV35 = $$CIV35 + 1ll;
              } while ((unsigned long long) $$CIV35 < (unsigned long long) (f.dy@8 - 1u));    /* ~19 */
              f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u))) + f.i@14;
            lab_44:
    31 |      if (!1) goto lab_18;
              $$CIV39 = 0ll;
              do {   /* id=2 guarded */ /* ~16 */ 
                /* region = 140 */
                /* bump-normalized */
    30 |        __381 = f.zero@0;
    23 |        f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
                f.i@14 = f.i@14 + 1u;
    24 |        if (!(1u != f.dx@4)) goto lab_45;
                $$CIV36 = 0ll;
    22 |        do {   /* id=5 guarded */ /* ~25 */ 
                  /* region = 138 */
                  /* bump-normalized */
    23 |          f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV36))] = __381;
    24 |          $$CIV36 = $$CIV36 + 1ll;
                } while ((unsigned long long) $$CIV36 < (unsigned long long) (f.dx@4 - 1u));    /* ~25 */
                f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dx@4 - 1u))) + f.i@14;
              lab_45:
    31 |        if (!1) goto lab_24;
                $$CIV38 = 0ll;
                do {   /* id=3 guarded */ /* ~22 */ 
                  /* region = 139 */
                  /* bump-normalized */
     8 |          shared.d@0 = (((((f.a@18[(long long) (f.i@14 - f.dx@4 & f.m@10)] - f.a@18[(long long) ((f.i@14 - f.dy@8) - f.dz@c & f.m@10)]) + f.a@18[(long long) (f.i@14 - f.dy@8 & f.m@10)]) - f.a@18[(long long) ((f.i@14 - f.dx@4) - f.dz@c & f.m@10)]) + f.a@18[(long long) (f.i@14 - f.dz@c & f.m@10)]) - f.a@18[(long long) ((f.i@14 - f.dx@4) - f.dy@8 & f.m@10)]) + f.a@18[(long long) (((f.i@14 - f.dx@4) - f.dy@8) - f.dz@c & f.m@10)];
    23 |          $$RET4B = RCdecoder::decode(RCmodel*)(*((char * *)((char *)__365 + 8)),((char * *)(*((char * *)((char *)__365 + 16))))[0ll]);
    24 |          shared.r@0 = ~ ((($$RET4B + ((~ shared.r@0 >> 31) * 4294967295u >> 25u ^ ~ shared.r@0 >> 24u)) - 255u >> 7u) * 4294967295u >> 25u ^ ($$RET4B + ((~ shared.r@0 >> 31) * 4294967295u >> 25u ^ ~ shared.r@0 >> 24u)) - 255u) << 24u;
    48 |          data[$$CIV38] = shared.d@0;
    23 |          f.a@18[(long long) (f.i@14 & f.m@10)] = shared.d@0;
                  f.i@14 = f.i@14 + 1u;
    32 |          $$CIV38 = $$CIV38 + 1ll;
                } while ((unsigned long long) $$CIV38 < (unsigned long long) nx);    /* ~22 */
                data = ((char *)data  + (long long) ((unsigned long long) nx * 4ull));
              lab_24:
    31 |        $$CIV39 = $$CIV39 + 1ll;
              } while ((unsigned long long) $$CIV39 < (unsigned long long) ny);    /* ~16 */
            lab_18:
    30 |      $$CIV3A = $$CIV3A + 1ll;
            } while ((unsigned long long) $$CIV3A < (unsigned long long) nz);    /* ~10 */
          lab_62:
            goto lab_76;
          lab_63:
    31 |    if (!1) goto lab_76;
            if (!(1u != f.dy@8)) goto lab_114;
            if (!(1u != f.dx@4)) goto lab_104;
            if (!1) goto lab_103;
            $$CIV3A = 0ll;
            do {   /* id=4 guarded */ /* ~65 */ 
              /* region = 145 */
              /* bump-normalized */
    30 |      __377 = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    24 |      if (!1) goto lab_67;
              $$CIV35 = 0ll;
    22 |      do {   /* id=9 guarded */ /* ~66 */ 
                /* region = 144 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV35))] = __377;
    24 |        $$CIV35 = $$CIV35 + 1ll;
              } while ((unsigned long long) $$CIV35 < (unsigned long long) (f.dy@8 - 1u));    /* ~66 */
              f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u))) + f.i@14;
            lab_67:
    31 |      if (!1) goto lab_73;
              $$CIV39 = 0ll;
              do {   /* id=10 guarded */ /* ~68 */ 
                /* region = 143 */
                /* bump-normalized */
    30 |        $$TVX.$$.__3812D2D = f.zero@0;
    23 |        f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
                f.i@14 = f.i@14 + 1u;
    24 |        if (!1) goto lab_70;
                $$CIV36 = 0ll;
    22 |        do {   /* id=11 guarded */ /* ~69 */ 
                  /* region = 142 */
                  /* bump-normalized */
    23 |          f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV36))] = $$TVX.$$.__3812D2D;
    24 |          $$CIV36 = $$CIV36 + 1ll;
                } while ((unsigned long long) $$CIV36 < (unsigned long long) (f.dx@4 - 1u));    /* ~69 */
                f.i@14 = f.i@14 + (unsigned int) ((int) ((unsigned long long) (f.dx@4 - 1u)));
              lab_70:
    31 |        $$CIV39 = $$CIV39 + 1ll;
              } while ((unsigned long long) $$CIV39 < (unsigned long long) ny);    /* ~68 */
            lab_73:
    30 |      $$CIV3A = $$CIV3A + 1ll;
            } while ((unsigned long long) $$CIV3A < (unsigned long long) nz);    /* ~65 */
          lab_103:
            goto lab_76;
          lab_104:
    31 |    if (!1) goto lab_113;
            $$CIV3A = 0ll;
            do {   /* id=22 guarded */ /* ~106 */ 
              /* region = 148 */
              /* bump-normalized */
    30 |      __377 = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    24 |      if (!1) goto lab_108;
              $$CIV35 = 0ll;
    22 |      do {   /* id=21 guarded */ /* ~107 */ 
                /* region = 147 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV35))] = __377;
    24 |        $$CIV35 = $$CIV35 + 1ll;
              } while ((unsigned long long) $$CIV35 < (unsigned long long) (f.dy@8 - 1u));    /* ~107 */
              f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u))) + f.i@14;
            lab_108:
    31 |      if (!1) goto lab_112;
              $$CIV39 = 0ll;
              $$SCREP13 = f.i@14;
              do {   /* id=20 guarded */ /* ~109 */ 
                /* region = 146 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & $$SCREP13)] = f.zero@0;
                $$SCREP13 = $$SCREP13 + 1u;
    31 |        $$CIV39 = $$CIV39 + 1ll;
              } while ((unsigned long long) $$CIV39 < (unsigned long long) ny);    /* ~109 */
              f.i@14 = $$SCREP13;
            lab_112:
    30 |      $$CIV3A = $$CIV3A + 1ll;
            } while ((unsigned long long) $$CIV3A < (unsigned long long) nz);    /* ~106 */
          lab_113:
            goto lab_76;
          lab_114:
    31 |    if (!(1u != f.dx@4)) goto lab_124;
            if (!1) goto lab_123;
            $$CIV3A = 0ll;
            do {   /* id=16 guarded */ /* ~116 */ 
              /* region = 151 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    31 |      if (!1) goto lab_122;
              $$CIV39 = 0ll;
              do {   /* id=12 guarded */ /* ~119 */ 
                /* region = 150 */
                /* bump-normalized */
    30 |        $$TVX.$$.__3812E2F = f.zero@0;
    23 |        f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
                f.i@14 = f.i@14 + 1u;
    24 |        if (!1) goto lab_121;
                $$CIV36 = 0ll;
    22 |        do {   /* id=23 guarded */ /* ~120 */ 
                  /* region = 149 */
                  /* bump-normalized */
    23 |          f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV36))] = $$TVX.$$.__3812E2F;
    24 |          $$CIV36 = $$CIV36 + 1ll;
                } while ((unsigned long long) $$CIV36 < (unsigned long long) (f.dx@4 - 1u));    /* ~120 */
                f.i@14 = f.i@14 + (unsigned int) ((int) ((unsigned long long) (f.dx@4 - 1u)));
              lab_121:
    31 |        $$CIV39 = $$CIV39 + 1ll;
              } while ((unsigned long long) $$CIV39 < (unsigned long long) ny);    /* ~119 */
            lab_122:
    30 |      $$CIV3A = $$CIV3A + 1ll;
            } while ((unsigned long long) $$CIV3A < (unsigned long long) nz);    /* ~116 */
          lab_123:
            goto lab_76;
          lab_124:
    31 |    if (!1) goto lab_132;
            $$CIV3A = 0ll;
            do {   /* id=24 guarded */ /* ~125 */ 
              /* region = 153 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    31 |      if (!1) goto lab_131;
              $$CIV39 = 0ll;
              $$SCREP12 = f.i@14;
              do {   /* id=26 guarded */ /* ~128 */ 
                /* region = 152 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & $$SCREP12)] = f.zero@0;
                $$SCREP12 = $$SCREP12 + 1u;
    31 |        $$CIV39 = $$CIV39 + 1ll;
              } while ((unsigned long long) $$CIV39 < (unsigned long long) ny);    /* ~128 */
              f.i@14 = $$SCREP12;
            lab_131:
    30 |      $$CIV3A = $$CIV3A + 1ll;
            } while ((unsigned long long) $$CIV3A < (unsigned long long) nz);    /* ~125 */
          lab_132:
            goto lab_76;
          lab_75:
    31 |    if (!(0u < nx)) goto lab_87;
            if (!1) goto lab_98;
            if (!(1u != f.dy@8)) goto lab_135;
            if (!1) goto lab_134;
            $$CIV3A = 0ll;
            do {   /* id=13 guarded */ /* ~77 */ 
              /* region = 155 */
              /* bump-normalized */
    30 |      $$TVX.$$.__3772F31 = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    24 |      if (!1) goto lab_79;
              $$CIV35 = 0ll;
    22 |      do {   /* id=14 guarded */ /* ~78 */ 
                /* region = 154 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV35))] = $$TVX.$$.__3772F31;
    24 |        $$CIV35 = $$CIV35 + 1ll;
              } while ((unsigned long long) $$CIV35 < (unsigned long long) (f.dy@8 - 1u));    /* ~78 */
              f.i@14 = f.i@14 + (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u)));
            lab_79:
    30 |      $$CIV3A = $$CIV3A + 1ll;
            } while ((unsigned long long) $$CIV3A < (unsigned long long) nz);    /* ~77 */
          lab_134:
            goto lab_98;
          lab_135:
    31 |    if (!1) goto lab_140;
            $$CIV3A = 0ll;
            $$SCREP11 = f.i@14;
            do {   /* id=28 guarded */ /* ~137 */ 
              /* region = 156 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & $$SCREP11)] = f.zero@0;
              $$SCREP11 = $$SCREP11 + 1u;
    30 |      $$CIV3A = $$CIV3A + 1ll;
            } while ((unsigned long long) $$CIV3A < (unsigned long long) nz);    /* ~137 */
            f.i@14 = $$SCREP11;
          lab_140:
            goto lab_98;
          lab_87:
    31 |    if (!1) goto lab_97;
            if (!(1u != f.dy@8)) goto lab_142;
            if (!1) goto lab_141;
            $$CIV3A = 0ll;
            do {   /* id=18 guarded */ /* ~88 */ 
              /* region = 158 */
              /* bump-normalized */
    30 |      $$TVX.$$.__3773033 = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    24 |      if (!1) goto lab_90;
              $$CIV35 = 0ll;
    22 |      do {   /* id=19 guarded */ /* ~89 */ 
                /* region = 157 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV35))] = $$TVX.$$.__3773033;
    24 |        $$CIV35 = $$CIV35 + 1ll;
              } while ((unsigned long long) $$CIV35 < (unsigned long long) (f.dy@8 - 1u));    /* ~89 */
              f.i@14 = f.i@14 + (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u)));
            lab_90:
    30 |      $$CIV3A = $$CIV3A + 1ll;
            } while ((unsigned long long) $$CIV3A < (unsigned long long) nz);    /* ~88 */
          lab_141:
            goto lab_143;
          lab_142:
    31 |    if (!1) goto lab_147;
            $$CIV3A = 0ll;
            $$SCREP10 = f.i@14;
            do {   /* id=30 guarded */ /* ~144 */ 
              /* region = 159 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & $$SCREP10)] = f.zero@0;
              $$SCREP10 = $$SCREP10 + 1u;
    30 |      $$CIV3A = $$CIV3A + 1ll;
            } while ((unsigned long long) $$CIV3A < (unsigned long long) nz);    /* ~144 */
            f.i@14 = $$SCREP10;
          lab_147:
          lab_143:
          lab_97:
          lab_98:
          lab_76:
          lab_12:
    52 |    if (!(__365 != NULL)) goto lab_32;
     7 |    operator delete(void*)(__365)
          lab_32:
    53 |    if (!(rm != NULL)) goto lab_35;
            ((funcaddr *)(*((char * *)rm)))[8ll / 8]->(()vf).rns171.(rm);
          lab_35:
    11 |    operator delete[](void*)(f.a@18)
    54 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        83            22             7    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(float).rns162.".
        83            31             1    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder6decodeEP7RCmodel" 
                                          that may have side effects.
        83            22             6    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(float).rns163.".
        83            31             2    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder6decodeEP7RCmodel" 
                                          that may have side effects.
        83            22             5    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(float).rns164.".
        83            31             3    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder6decodeEP7RCmodel" 
                                          that may have side effects.
        83            31             4    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder6decodeEP7RCmodel" 
                                          that may have side effects.
        83            22             9    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(float).rns163.".
        83            31            10    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder6decodeEP7RCmodel" 
                                          that may have side effects.
        83            22            11    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(float).rns164.".
        83            31            22    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder6decodeEP7RCmodel" 
                                          that may have side effects.
        83            22            21    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(float).rns163.".
        83            31            20    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder6decodeEP7RCmodel" 
                                          that may have side effects.
        83            31            16    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder6decodeEP7RCmodel" 
                                          that may have side effects.
        83            31            12    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder6decodeEP7RCmodel" 
                                          that may have side effects.
        83            22            23    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(float).rns164.".
        83            31            24    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder6decodeEP7RCmodel" 
                                          that may have side effects.
        83            31            26    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder6decodeEP7RCmodel" 
                                          that may have side effects.
        83            31            13    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder6decodeEP7RCmodel" 
                                          that may have side effects.
        83            22            14    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(float).rns163.".
        83            31            28    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder6decodeEP7RCmodel" 
                                          that may have side effects.
        83            31            18    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder6decodeEP7RCmodel" 
                                          that may have side effects.
        83            22            19    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(float).rns163.".
        83            31            30    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder6decodeEP7RCmodel" 
                                          that may have side effects.

    14 |  void void decompress3d<float, 16u>(RCdecoder*, float*, unsigned int, unsigned int, unsigned int)(char * rd, float *data, unsigned int nx, unsigned int ny, unsigned int nz)
    21 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
    24 |    __419 = operator new(unsigned long)(72ull);
            if (!(__419 != NULL)) goto lab_2;
            __es.__c4@3 = 1u;
            RCqsmodel::RCqsmodel(bool, unsigned int, unsigned int, unsigned int)(__419,0u,33u,16u,1024u);
            __es.__c4@3 = 0u;
          lab_2:
            $$rm.nat.1E = __419;
    25 |    __420 = operator new(unsigned long)(24ull);
            rm = $$rm.nat.1E;
            if (!(__420 != NULL)) goto lab_5;
    34 |    *((char * *)((char *)__420 + 8)) = rd;
            rm = $$rm.nat.1E;
            *((char * *)((char *)__420 + 16)) = &rm;
          lab_5:
    26 |    f.zero@0 =  0.00000000E+00;
     9 |    f.dx@4 = 1u;
            f.dy@8 = nx + 1u;
            f.dz@c = (ny + 1u) * (nx + 1u);
    45 |    __453.rnn71 = (2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u;
            if (!(0u != (((2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u) + 1u & (2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u))) goto lab_9;
            do {   /* id=8 guarded */ /* ~7 */ 
              /* region = 135 */
     9 |      __453.rnn71 = __453.rnn71 | __453.rnn71 + 1u;
    45 |    } while (0u != (__453.rnn71 + 1u & __453.rnn71));    /* ~7 */
          lab_9:
    47 |    f.m@10 = __453.rnn71;
    10 |    f.i@14 = 0u;
            f.a@18 = operator new[](unsigned long)((unsigned long long) (__453.rnn71 + 1u) * 4ull);
            __es.__c4@3 = 2u;
    23 |    f.a@18[(long long) (f.i@14 & f.m@10)] = f.zero@0;
            f.i@14 = f.i@14 + 1u;
    24 |    if (!(1u != f.dz@c)) goto lab_43;
            $$CIV3B = 0ll;
    22 |    do {   /* id=7 guarded */ /* ~13 */ 
              /* region = 136 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV3B))] = f.zero@0;
    24 |      $$CIV3B = $$CIV3B + 1ll;
            } while ((unsigned long long) $$CIV3B < (unsigned long long) (f.dz@c - 1u));    /* ~13 */
            f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dz@c - 1u))) + f.i@14;
          lab_43:
    31 |    if (!(0u < nz)) goto lab_12;
            if (!(0u < ny)) goto lab_70;
            if (!(0u < nx)) goto lab_58;
            if (!1) goto lab_57;
            $$CIV41 = 0ll;
            do {   /* id=1 guarded */ /* ~10 */ 
              /* region = 141 */
              /* bump-normalized */
    30 |      __432 = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    24 |      if (!(1u != f.dy@8)) goto lab_44;
              $$CIV3C = 0ll;
    22 |      do {   /* id=6 guarded */ /* ~19 */ 
                /* region = 137 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV3C))] = __432;
    24 |        $$CIV3C = $$CIV3C + 1ll;
              } while ((unsigned long long) $$CIV3C < (unsigned long long) (f.dy@8 - 1u));    /* ~19 */
              f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u))) + f.i@14;
            lab_44:
    31 |      if (!1) goto lab_18;
              $$CIV40 = 0ll;
              do {   /* id=2 guarded */ /* ~16 */ 
                /* region = 140 */
                /* bump-normalized */
    30 |        __436 = f.zero@0;
    23 |        f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
                f.i@14 = f.i@14 + 1u;
    24 |        if (!(1u != f.dx@4)) goto lab_45;
                $$CIV3D = 0ll;
    22 |        do {   /* id=5 guarded */ /* ~25 */ 
                  /* region = 138 */
                  /* bump-normalized */
    23 |          f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV3D))] = __436;
    24 |          $$CIV3D = $$CIV3D + 1ll;
                } while ((unsigned long long) $$CIV3D < (unsigned long long) (f.dx@4 - 1u));    /* ~25 */
                f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dx@4 - 1u))) + f.i@14;
              lab_45:
    31 |        if (!1) goto lab_24;
                $$CIV3F = 0ll;
                do {   /* id=3 guarded */ /* ~22 */ 
                  /* region = 139 */
                  /* bump-normalized */
    47 |          $$TVX.$$.a3535 = PCdecoder<float, PCmap<float, 16u, void>, true>::decode(float, unsigned int)(__420,(((((f.a@18[(long long) (f.i@14 - f.dx@4 & f.m@10)] - f.a@18[(long long) ((f.i@14 - f.dy@8) - f.dz@c & f.m@10)]) + f.a@18[(long long) (f.i@14 - f.dy@8 & f.m@10)]) - f.a@18[(long long) ((f.i@14 - f.dx@4) - f.dz@c & f.m@10)]) + f.a@18[(long long) (f.i@14 - f.dz@c & f.m@10)]) - f.a@18[(long long) ((f.i@14 - f.dx@4) - f.dy@8 & f.m@10)]) + f.a@18[(long long) (((f.i@14 - f.dx@4) - f.dy@8) - f.dz@c & f.m@10)],0u);
    48 |          data[$$CIV3F] = $$TVX.$$.a3535;
    23 |          f.a@18[(long long) (f.m@10 & f.i@14)] = $$TVX.$$.a3535;
                  f.i@14 = f.i@14 + 1u;
    32 |          $$CIV3F = $$CIV3F + 1ll;
                } while ((unsigned long long) $$CIV3F < (unsigned long long) nx);    /* ~22 */
                data = ((char *)data  + (long long) ((unsigned long long) nx * 4ull));
              lab_24:
    31 |        $$CIV40 = $$CIV40 + 1ll;
              } while ((unsigned long long) $$CIV40 < (unsigned long long) ny);    /* ~16 */
            lab_18:
    30 |      $$CIV41 = $$CIV41 + 1ll;
            } while ((unsigned long long) $$CIV41 < (unsigned long long) nz);    /* ~10 */
          lab_57:
            goto lab_71;
          lab_58:
    31 |    if (!1) goto lab_71;
            if (!(1u != f.dy@8)) goto lab_109;
            if (!(1u != f.dx@4)) goto lab_99;
            if (!1) goto lab_98;
            $$CIV41 = 0ll;
            do {   /* id=4 guarded */ /* ~60 */ 
              /* region = 145 */
              /* bump-normalized */
    30 |      __432 = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    24 |      if (!1) goto lab_62;
              $$CIV3C = 0ll;
    22 |      do {   /* id=9 guarded */ /* ~61 */ 
                /* region = 144 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV3C))] = __432;
    24 |        $$CIV3C = $$CIV3C + 1ll;
              } while ((unsigned long long) $$CIV3C < (unsigned long long) (f.dy@8 - 1u));    /* ~61 */
              f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u))) + f.i@14;
            lab_62:
    31 |      if (!1) goto lab_68;
              $$CIV40 = 0ll;
              do {   /* id=10 guarded */ /* ~63 */ 
                /* region = 143 */
                /* bump-normalized */
    30 |        $$TVX.$$.__4363636 = f.zero@0;
    23 |        f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
                f.i@14 = f.i@14 + 1u;
    24 |        if (!1) goto lab_65;
                $$CIV3D = 0ll;
    22 |        do {   /* id=11 guarded */ /* ~64 */ 
                  /* region = 142 */
                  /* bump-normalized */
    23 |          f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV3D))] = $$TVX.$$.__4363636;
    24 |          $$CIV3D = $$CIV3D + 1ll;
                } while ((unsigned long long) $$CIV3D < (unsigned long long) (f.dx@4 - 1u));    /* ~64 */
                f.i@14 = f.i@14 + (unsigned int) ((int) ((unsigned long long) (f.dx@4 - 1u)));
              lab_65:
    31 |        $$CIV40 = $$CIV40 + 1ll;
              } while ((unsigned long long) $$CIV40 < (unsigned long long) ny);    /* ~63 */
            lab_68:
    30 |      $$CIV41 = $$CIV41 + 1ll;
            } while ((unsigned long long) $$CIV41 < (unsigned long long) nz);    /* ~60 */
          lab_98:
            goto lab_71;
          lab_99:
    31 |    if (!1) goto lab_108;
            $$CIV41 = 0ll;
            do {   /* id=22 guarded */ /* ~101 */ 
              /* region = 148 */
              /* bump-normalized */
    30 |      __432 = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    24 |      if (!1) goto lab_103;
              $$CIV3C = 0ll;
    22 |      do {   /* id=21 guarded */ /* ~102 */ 
                /* region = 147 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV3C))] = __432;
    24 |        $$CIV3C = $$CIV3C + 1ll;
              } while ((unsigned long long) $$CIV3C < (unsigned long long) (f.dy@8 - 1u));    /* ~102 */
              f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u))) + f.i@14;
            lab_103:
    31 |      if (!1) goto lab_107;
              $$CIV40 = 0ll;
              $$SCREP17 = f.i@14;
              do {   /* id=20 guarded */ /* ~104 */ 
                /* region = 146 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & $$SCREP17)] = f.zero@0;
                $$SCREP17 = $$SCREP17 + 1u;
    31 |        $$CIV40 = $$CIV40 + 1ll;
              } while ((unsigned long long) $$CIV40 < (unsigned long long) ny);    /* ~104 */
              f.i@14 = $$SCREP17;
            lab_107:
    30 |      $$CIV41 = $$CIV41 + 1ll;
            } while ((unsigned long long) $$CIV41 < (unsigned long long) nz);    /* ~101 */
          lab_108:
            goto lab_71;
          lab_109:
    31 |    if (!(1u != f.dx@4)) goto lab_119;
            if (!1) goto lab_118;
            $$CIV41 = 0ll;
            do {   /* id=16 guarded */ /* ~111 */ 
              /* region = 151 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    31 |      if (!1) goto lab_117;
              $$CIV40 = 0ll;
              do {   /* id=12 guarded */ /* ~114 */ 
                /* region = 150 */
                /* bump-normalized */
    30 |        $$TVX.$$.__4363738 = f.zero@0;
    23 |        f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
                f.i@14 = f.i@14 + 1u;
    24 |        if (!1) goto lab_116;
                $$CIV3D = 0ll;
    22 |        do {   /* id=23 guarded */ /* ~115 */ 
                  /* region = 149 */
                  /* bump-normalized */
    23 |          f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV3D))] = $$TVX.$$.__4363738;
    24 |          $$CIV3D = $$CIV3D + 1ll;
                } while ((unsigned long long) $$CIV3D < (unsigned long long) (f.dx@4 - 1u));    /* ~115 */
                f.i@14 = f.i@14 + (unsigned int) ((int) ((unsigned long long) (f.dx@4 - 1u)));
              lab_116:
    31 |        $$CIV40 = $$CIV40 + 1ll;
              } while ((unsigned long long) $$CIV40 < (unsigned long long) ny);    /* ~114 */
            lab_117:
    30 |      $$CIV41 = $$CIV41 + 1ll;
            } while ((unsigned long long) $$CIV41 < (unsigned long long) nz);    /* ~111 */
          lab_118:
            goto lab_71;
          lab_119:
    31 |    if (!1) goto lab_127;
            $$CIV41 = 0ll;
            do {   /* id=24 guarded */ /* ~120 */ 
              /* region = 153 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    31 |      if (!1) goto lab_126;
              $$CIV40 = 0ll;
              $$SCREP16 = f.i@14;
              do {   /* id=26 guarded */ /* ~123 */ 
                /* region = 152 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & $$SCREP16)] = f.zero@0;
                $$SCREP16 = $$SCREP16 + 1u;
    31 |        $$CIV40 = $$CIV40 + 1ll;
              } while ((unsigned long long) $$CIV40 < (unsigned long long) ny);    /* ~123 */
              f.i@14 = $$SCREP16;
            lab_126:
    30 |      $$CIV41 = $$CIV41 + 1ll;
            } while ((unsigned long long) $$CIV41 < (unsigned long long) nz);    /* ~120 */
          lab_127:
            goto lab_71;
          lab_70:
    31 |    if (!(0u < nx)) goto lab_82;
            if (!1) goto lab_93;
            if (!(1u != f.dy@8)) goto lab_130;
            if (!1) goto lab_129;
            $$CIV41 = 0ll;
            do {   /* id=13 guarded */ /* ~72 */ 
              /* region = 155 */
              /* bump-normalized */
    30 |      $$TVX.$$.__432383A = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    24 |      if (!1) goto lab_74;
              $$CIV3C = 0ll;
    22 |      do {   /* id=14 guarded */ /* ~73 */ 
                /* region = 154 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV3C))] = $$TVX.$$.__432383A;
    24 |        $$CIV3C = $$CIV3C + 1ll;
              } while ((unsigned long long) $$CIV3C < (unsigned long long) (f.dy@8 - 1u));    /* ~73 */
              f.i@14 = f.i@14 + (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u)));
            lab_74:
    30 |      $$CIV41 = $$CIV41 + 1ll;
            } while ((unsigned long long) $$CIV41 < (unsigned long long) nz);    /* ~72 */
          lab_129:
            goto lab_93;
          lab_130:
    31 |    if (!1) goto lab_135;
            $$CIV41 = 0ll;
            $$SCREP15 = f.i@14;
            do {   /* id=28 guarded */ /* ~132 */ 
              /* region = 156 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & $$SCREP15)] = f.zero@0;
              $$SCREP15 = $$SCREP15 + 1u;
    30 |      $$CIV41 = $$CIV41 + 1ll;
            } while ((unsigned long long) $$CIV41 < (unsigned long long) nz);    /* ~132 */
            f.i@14 = $$SCREP15;
          lab_135:
            goto lab_93;
          lab_82:
    31 |    if (!1) goto lab_92;
            if (!(1u != f.dy@8)) goto lab_137;
            if (!1) goto lab_136;
            $$CIV41 = 0ll;
            do {   /* id=18 guarded */ /* ~83 */ 
              /* region = 158 */
              /* bump-normalized */
    30 |      $$TVX.$$.__432393C = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    24 |      if (!1) goto lab_85;
              $$CIV3C = 0ll;
    22 |      do {   /* id=19 guarded */ /* ~84 */ 
                /* region = 157 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV3C))] = $$TVX.$$.__432393C;
    24 |        $$CIV3C = $$CIV3C + 1ll;
              } while ((unsigned long long) $$CIV3C < (unsigned long long) (f.dy@8 - 1u));    /* ~84 */
              f.i@14 = f.i@14 + (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u)));
            lab_85:
    30 |      $$CIV41 = $$CIV41 + 1ll;
            } while ((unsigned long long) $$CIV41 < (unsigned long long) nz);    /* ~83 */
          lab_136:
            goto lab_138;
          lab_137:
    31 |    if (!1) goto lab_142;
            $$CIV41 = 0ll;
            $$SCREP14 = f.i@14;
            do {   /* id=30 guarded */ /* ~139 */ 
              /* region = 159 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & $$SCREP14)] = f.zero@0;
              $$SCREP14 = $$SCREP14 + 1u;
    30 |      $$CIV41 = $$CIV41 + 1ll;
            } while ((unsigned long long) $$CIV41 < (unsigned long long) nz);    /* ~139 */
            f.i@14 = $$SCREP14;
          lab_142:
          lab_138:
          lab_92:
          lab_93:
          lab_71:
          lab_12:
    52 |    if (!(__420 != NULL)) goto lab_32;
    35 |    operator delete(void*)(__420)
          lab_32:
    53 |    if (!(rm != NULL)) goto lab_35;
            ((funcaddr *)(*((char * *)rm)))[8ll / 8]->(()vf).rns187.(rm);
          lab_35:
    11 |    operator delete[](void*)(f.a@18)
    54 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        83            22             7    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(float).rns178.".
        83            31             1    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj16EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            22             6    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(float).rns179.".
        83            31             2    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj16EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            22             5    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(float).rns180.".
        83            31             3    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj16EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            31             4    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj16EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            22             9    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(float).rns179.".
        83            31            10    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj16EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            22            11    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(float).rns180.".
        83            31            22    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj16EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            22            21    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(float).rns179.".
        83            31            20    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj16EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            31            16    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj16EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            31            12    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj16EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            22            23    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(float).rns180.".
        83            31            24    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj16EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            31            26    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj16EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            31            13    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj16EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            22            14    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(float).rns179.".
        83            31            28    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj16EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            31            18    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj16EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            22            19    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(float).rns179.".
        83            31            30    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj16EvELb1EE6decodeEfj" that 
                                          may have side effects.

    14 |  void void decompress3d<float, 24u>(RCdecoder*, float*, unsigned int, unsigned int, unsigned int)(char * rd, float *data, unsigned int nx, unsigned int ny, unsigned int nz)
    21 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
    24 |    __474 = operator new(unsigned long)(72ull);
            if (!(__474 != NULL)) goto lab_2;
            __es.__c4@3 = 1u;
            RCqsmodel::RCqsmodel(bool, unsigned int, unsigned int, unsigned int)(__474,0u,49u,16u,1024u);
            __es.__c4@3 = 0u;
          lab_2:
            $$rm.nat.24 = __474;
    25 |    __475 = operator new(unsigned long)(24ull);
            rm = $$rm.nat.24;
            if (!(__475 != NULL)) goto lab_5;
    34 |    *((char * *)((char *)__475 + 8)) = rd;
            rm = $$rm.nat.24;
            *((char * *)((char *)__475 + 16)) = &rm;
          lab_5:
    26 |    f.zero@0 =  0.00000000E+00;
     9 |    f.dx@4 = 1u;
            f.dy@8 = nx + 1u;
            f.dz@c = (ny + 1u) * (nx + 1u);
    45 |    __508.rnn7D = (2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u;
            if (!(0u != (((2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u) + 1u & (2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u))) goto lab_9;
            do {   /* id=8 guarded */ /* ~7 */ 
              /* region = 135 */
     9 |      __508.rnn7D = __508.rnn7D | __508.rnn7D + 1u;
    45 |    } while (0u != (__508.rnn7D + 1u & __508.rnn7D));    /* ~7 */
          lab_9:
    47 |    f.m@10 = __508.rnn7D;
    10 |    f.i@14 = 0u;
            f.a@18 = operator new[](unsigned long)((unsigned long long) (__508.rnn7D + 1u) * 4ull);
            __es.__c4@3 = 2u;
    23 |    f.a@18[(long long) (f.i@14 & f.m@10)] = f.zero@0;
            f.i@14 = f.i@14 + 1u;
    24 |    if (!(1u != f.dz@c)) goto lab_43;
            $$CIV42 = 0ll;
    22 |    do {   /* id=7 guarded */ /* ~13 */ 
              /* region = 136 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV42))] = f.zero@0;
    24 |      $$CIV42 = $$CIV42 + 1ll;
            } while ((unsigned long long) $$CIV42 < (unsigned long long) (f.dz@c - 1u));    /* ~13 */
            f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dz@c - 1u))) + f.i@14;
          lab_43:
    31 |    if (!(0u < nz)) goto lab_12;
            if (!(0u < ny)) goto lab_70;
            if (!(0u < nx)) goto lab_58;
            if (!1) goto lab_57;
            $$CIV48 = 0ll;
            do {   /* id=1 guarded */ /* ~10 */ 
              /* region = 141 */
              /* bump-normalized */
    30 |      __487 = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    24 |      if (!(1u != f.dy@8)) goto lab_44;
              $$CIV43 = 0ll;
    22 |      do {   /* id=6 guarded */ /* ~19 */ 
                /* region = 137 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV43))] = __487;
    24 |        $$CIV43 = $$CIV43 + 1ll;
              } while ((unsigned long long) $$CIV43 < (unsigned long long) (f.dy@8 - 1u));    /* ~19 */
              f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u))) + f.i@14;
            lab_44:
    31 |      if (!1) goto lab_18;
              $$CIV47 = 0ll;
              do {   /* id=2 guarded */ /* ~16 */ 
                /* region = 140 */
                /* bump-normalized */
    30 |        __491 = f.zero@0;
    23 |        f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
                f.i@14 = f.i@14 + 1u;
    24 |        if (!(1u != f.dx@4)) goto lab_45;
                $$CIV44 = 0ll;
    22 |        do {   /* id=5 guarded */ /* ~25 */ 
                  /* region = 138 */
                  /* bump-normalized */
    23 |          f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV44))] = __491;
    24 |          $$CIV44 = $$CIV44 + 1ll;
                } while ((unsigned long long) $$CIV44 < (unsigned long long) (f.dx@4 - 1u));    /* ~25 */
                f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dx@4 - 1u))) + f.i@14;
              lab_45:
    31 |        if (!1) goto lab_24;
                $$CIV46 = 0ll;
                do {   /* id=3 guarded */ /* ~22 */ 
                  /* region = 139 */
                  /* bump-normalized */
    47 |          $$TVX.$$.a3E3E = PCdecoder<float, PCmap<float, 24u, void>, true>::decode(float, unsigned int)(__475,(((((f.a@18[(long long) (f.i@14 - f.dx@4 & f.m@10)] - f.a@18[(long long) ((f.i@14 - f.dy@8) - f.dz@c & f.m@10)]) + f.a@18[(long long) (f.i@14 - f.dy@8 & f.m@10)]) - f.a@18[(long long) ((f.i@14 - f.dx@4) - f.dz@c & f.m@10)]) + f.a@18[(long long) (f.i@14 - f.dz@c & f.m@10)]) - f.a@18[(long long) ((f.i@14 - f.dx@4) - f.dy@8 & f.m@10)]) + f.a@18[(long long) (((f.i@14 - f.dx@4) - f.dy@8) - f.dz@c & f.m@10)],0u);
    48 |          data[$$CIV46] = $$TVX.$$.a3E3E;
    23 |          f.a@18[(long long) (f.m@10 & f.i@14)] = $$TVX.$$.a3E3E;
                  f.i@14 = f.i@14 + 1u;
    32 |          $$CIV46 = $$CIV46 + 1ll;
                } while ((unsigned long long) $$CIV46 < (unsigned long long) nx);    /* ~22 */
                data = ((char *)data  + (long long) ((unsigned long long) nx * 4ull));
              lab_24:
    31 |        $$CIV47 = $$CIV47 + 1ll;
              } while ((unsigned long long) $$CIV47 < (unsigned long long) ny);    /* ~16 */
            lab_18:
    30 |      $$CIV48 = $$CIV48 + 1ll;
            } while ((unsigned long long) $$CIV48 < (unsigned long long) nz);    /* ~10 */
          lab_57:
            goto lab_71;
          lab_58:
    31 |    if (!1) goto lab_71;
            if (!(1u != f.dy@8)) goto lab_109;
            if (!(1u != f.dx@4)) goto lab_99;
            if (!1) goto lab_98;
            $$CIV48 = 0ll;
            do {   /* id=4 guarded */ /* ~60 */ 
              /* region = 145 */
              /* bump-normalized */
    30 |      __487 = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    24 |      if (!1) goto lab_62;
              $$CIV43 = 0ll;
    22 |      do {   /* id=9 guarded */ /* ~61 */ 
                /* region = 144 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV43))] = __487;
    24 |        $$CIV43 = $$CIV43 + 1ll;
              } while ((unsigned long long) $$CIV43 < (unsigned long long) (f.dy@8 - 1u));    /* ~61 */
              f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u))) + f.i@14;
            lab_62:
    31 |      if (!1) goto lab_68;
              $$CIV47 = 0ll;
              do {   /* id=10 guarded */ /* ~63 */ 
                /* region = 143 */
                /* bump-normalized */
    30 |        $$TVX.$$.__4913F3F = f.zero@0;
    23 |        f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
                f.i@14 = f.i@14 + 1u;
    24 |        if (!1) goto lab_65;
                $$CIV44 = 0ll;
    22 |        do {   /* id=11 guarded */ /* ~64 */ 
                  /* region = 142 */
                  /* bump-normalized */
    23 |          f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV44))] = $$TVX.$$.__4913F3F;
    24 |          $$CIV44 = $$CIV44 + 1ll;
                } while ((unsigned long long) $$CIV44 < (unsigned long long) (f.dx@4 - 1u));    /* ~64 */
                f.i@14 = f.i@14 + (unsigned int) ((int) ((unsigned long long) (f.dx@4 - 1u)));
              lab_65:
    31 |        $$CIV47 = $$CIV47 + 1ll;
              } while ((unsigned long long) $$CIV47 < (unsigned long long) ny);    /* ~63 */
            lab_68:
    30 |      $$CIV48 = $$CIV48 + 1ll;
            } while ((unsigned long long) $$CIV48 < (unsigned long long) nz);    /* ~60 */
          lab_98:
            goto lab_71;
          lab_99:
    31 |    if (!1) goto lab_108;
            $$CIV48 = 0ll;
            do {   /* id=22 guarded */ /* ~101 */ 
              /* region = 148 */
              /* bump-normalized */
    30 |      __487 = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    24 |      if (!1) goto lab_103;
              $$CIV43 = 0ll;
    22 |      do {   /* id=21 guarded */ /* ~102 */ 
                /* region = 147 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV43))] = __487;
    24 |        $$CIV43 = $$CIV43 + 1ll;
              } while ((unsigned long long) $$CIV43 < (unsigned long long) (f.dy@8 - 1u));    /* ~102 */
              f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u))) + f.i@14;
            lab_103:
    31 |      if (!1) goto lab_107;
              $$CIV47 = 0ll;
              $$SCREP1B = f.i@14;
              do {   /* id=20 guarded */ /* ~104 */ 
                /* region = 146 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & $$SCREP1B)] = f.zero@0;
                $$SCREP1B = $$SCREP1B + 1u;
    31 |        $$CIV47 = $$CIV47 + 1ll;
              } while ((unsigned long long) $$CIV47 < (unsigned long long) ny);    /* ~104 */
              f.i@14 = $$SCREP1B;
            lab_107:
    30 |      $$CIV48 = $$CIV48 + 1ll;
            } while ((unsigned long long) $$CIV48 < (unsigned long long) nz);    /* ~101 */
          lab_108:
            goto lab_71;
          lab_109:
    31 |    if (!(1u != f.dx@4)) goto lab_119;
            if (!1) goto lab_118;
            $$CIV48 = 0ll;
            do {   /* id=16 guarded */ /* ~111 */ 
              /* region = 151 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    31 |      if (!1) goto lab_117;
              $$CIV47 = 0ll;
              do {   /* id=12 guarded */ /* ~114 */ 
                /* region = 150 */
                /* bump-normalized */
    30 |        $$TVX.$$.__4914041 = f.zero@0;
    23 |        f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
                f.i@14 = f.i@14 + 1u;
    24 |        if (!1) goto lab_116;
                $$CIV44 = 0ll;
    22 |        do {   /* id=23 guarded */ /* ~115 */ 
                  /* region = 149 */
                  /* bump-normalized */
    23 |          f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV44))] = $$TVX.$$.__4914041;
    24 |          $$CIV44 = $$CIV44 + 1ll;
                } while ((unsigned long long) $$CIV44 < (unsigned long long) (f.dx@4 - 1u));    /* ~115 */
                f.i@14 = f.i@14 + (unsigned int) ((int) ((unsigned long long) (f.dx@4 - 1u)));
              lab_116:
    31 |        $$CIV47 = $$CIV47 + 1ll;
              } while ((unsigned long long) $$CIV47 < (unsigned long long) ny);    /* ~114 */
            lab_117:
    30 |      $$CIV48 = $$CIV48 + 1ll;
            } while ((unsigned long long) $$CIV48 < (unsigned long long) nz);    /* ~111 */
          lab_118:
            goto lab_71;
          lab_119:
    31 |    if (!1) goto lab_127;
            $$CIV48 = 0ll;
            do {   /* id=24 guarded */ /* ~120 */ 
              /* region = 153 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    31 |      if (!1) goto lab_126;
              $$CIV47 = 0ll;
              $$SCREP1A = f.i@14;
              do {   /* id=26 guarded */ /* ~123 */ 
                /* region = 152 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & $$SCREP1A)] = f.zero@0;
                $$SCREP1A = $$SCREP1A + 1u;
    31 |        $$CIV47 = $$CIV47 + 1ll;
              } while ((unsigned long long) $$CIV47 < (unsigned long long) ny);    /* ~123 */
              f.i@14 = $$SCREP1A;
            lab_126:
    30 |      $$CIV48 = $$CIV48 + 1ll;
            } while ((unsigned long long) $$CIV48 < (unsigned long long) nz);    /* ~120 */
          lab_127:
            goto lab_71;
          lab_70:
    31 |    if (!(0u < nx)) goto lab_82;
            if (!1) goto lab_93;
            if (!(1u != f.dy@8)) goto lab_130;
            if (!1) goto lab_129;
            $$CIV48 = 0ll;
            do {   /* id=13 guarded */ /* ~72 */ 
              /* region = 155 */
              /* bump-normalized */
    30 |      $$TVX.$$.__4874143 = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    24 |      if (!1) goto lab_74;
              $$CIV43 = 0ll;
    22 |      do {   /* id=14 guarded */ /* ~73 */ 
                /* region = 154 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV43))] = $$TVX.$$.__4874143;
    24 |        $$CIV43 = $$CIV43 + 1ll;
              } while ((unsigned long long) $$CIV43 < (unsigned long long) (f.dy@8 - 1u));    /* ~73 */
              f.i@14 = f.i@14 + (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u)));
            lab_74:
    30 |      $$CIV48 = $$CIV48 + 1ll;
            } while ((unsigned long long) $$CIV48 < (unsigned long long) nz);    /* ~72 */
          lab_129:
            goto lab_93;
          lab_130:
    31 |    if (!1) goto lab_135;
            $$CIV48 = 0ll;
            $$SCREP19 = f.i@14;
            do {   /* id=28 guarded */ /* ~132 */ 
              /* region = 156 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & $$SCREP19)] = f.zero@0;
              $$SCREP19 = $$SCREP19 + 1u;
    30 |      $$CIV48 = $$CIV48 + 1ll;
            } while ((unsigned long long) $$CIV48 < (unsigned long long) nz);    /* ~132 */
            f.i@14 = $$SCREP19;
          lab_135:
            goto lab_93;
          lab_82:
    31 |    if (!1) goto lab_92;
            if (!(1u != f.dy@8)) goto lab_137;
            if (!1) goto lab_136;
            $$CIV48 = 0ll;
            do {   /* id=18 guarded */ /* ~83 */ 
              /* region = 158 */
              /* bump-normalized */
    30 |      $$TVX.$$.__4874245 = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    24 |      if (!1) goto lab_85;
              $$CIV43 = 0ll;
    22 |      do {   /* id=19 guarded */ /* ~84 */ 
                /* region = 157 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV43))] = $$TVX.$$.__4874245;
    24 |        $$CIV43 = $$CIV43 + 1ll;
              } while ((unsigned long long) $$CIV43 < (unsigned long long) (f.dy@8 - 1u));    /* ~84 */
              f.i@14 = f.i@14 + (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u)));
            lab_85:
    30 |      $$CIV48 = $$CIV48 + 1ll;
            } while ((unsigned long long) $$CIV48 < (unsigned long long) nz);    /* ~83 */
          lab_136:
            goto lab_138;
          lab_137:
    31 |    if (!1) goto lab_142;
            $$CIV48 = 0ll;
            $$SCREP18 = f.i@14;
            do {   /* id=30 guarded */ /* ~139 */ 
              /* region = 159 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & $$SCREP18)] = f.zero@0;
              $$SCREP18 = $$SCREP18 + 1u;
    30 |      $$CIV48 = $$CIV48 + 1ll;
            } while ((unsigned long long) $$CIV48 < (unsigned long long) nz);    /* ~139 */
            f.i@14 = $$SCREP18;
          lab_142:
          lab_138:
          lab_92:
          lab_93:
          lab_71:
          lab_12:
    52 |    if (!(__475 != NULL)) goto lab_32;
    35 |    operator delete(void*)(__475)
          lab_32:
    53 |    if (!(rm != NULL)) goto lab_35;
            ((funcaddr *)(*((char * *)rm)))[8ll / 8]->(()vf).rns203.(rm);
          lab_35:
    11 |    operator delete[](void*)(f.a@18)
    54 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        83            22             7    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(float).rns194.".
        83            31             1    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj24EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            22             6    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(float).rns195.".
        83            31             2    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj24EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            22             5    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(float).rns196.".
        83            31             3    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj24EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            31             4    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj24EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            22             9    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(float).rns195.".
        83            31            10    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj24EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            22            11    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(float).rns196.".
        83            31            22    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj24EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            22            21    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(float).rns195.".
        83            31            20    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj24EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            31            16    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj24EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            31            12    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj24EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            22            23    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(float).rns196.".
        83            31            24    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj24EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            31            26    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj24EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            31            13    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj24EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            22            14    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(float).rns195.".
        83            31            28    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj24EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            31            18    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj24EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            22            19    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(float).rns195.".
        83            31            30    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj24EvELb1EE6decodeEfj" that 
                                          may have side effects.

    14 |  void void decompress3d<float, 32u>(RCdecoder*, float*, unsigned int, unsigned int, unsigned int)(char * rd, float *data, unsigned int nx, unsigned int ny, unsigned int nz)
    21 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
    24 |    __529 = operator new(unsigned long)(72ull);
            if (!(__529 != NULL)) goto lab_2;
            __es.__c4@3 = 1u;
            RCqsmodel::RCqsmodel(bool, unsigned int, unsigned int, unsigned int)(__529,0u,65u,16u,1024u);
            __es.__c4@3 = 0u;
          lab_2:
            $$rm.nat.2A = __529;
    25 |    __530 = operator new(unsigned long)(24ull);
            rm = $$rm.nat.2A;
            if (!(__530 != NULL)) goto lab_5;
    34 |    *((char * *)((char *)__530 + 8)) = rd;
            rm = $$rm.nat.2A;
            *((char * *)((char *)__530 + 16)) = &rm;
          lab_5:
    26 |    f.zero@0 =  0.00000000E+00;
     9 |    f.dx@4 = 1u;
            f.dy@8 = nx + 1u;
            f.dz@c = (ny + 1u) * (nx + 1u);
    45 |    __563.rnn89 = (2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u;
            if (!(0u != (((2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u) + 1u & (2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u))) goto lab_9;
            do {   /* id=8 guarded */ /* ~7 */ 
              /* region = 135 */
     9 |      __563.rnn89 = __563.rnn89 | __563.rnn89 + 1u;
    45 |    } while (0u != (__563.rnn89 + 1u & __563.rnn89));    /* ~7 */
          lab_9:
    47 |    f.m@10 = __563.rnn89;
    10 |    f.i@14 = 0u;
            f.a@18 = operator new[](unsigned long)((unsigned long long) (__563.rnn89 + 1u) * 4ull);
            __es.__c4@3 = 2u;
    23 |    f.a@18[(long long) (f.i@14 & f.m@10)] = f.zero@0;
            f.i@14 = f.i@14 + 1u;
    24 |    if (!(1u != f.dz@c)) goto lab_43;
            $$CIV49 = 0ll;
    22 |    do {   /* id=7 guarded */ /* ~13 */ 
              /* region = 136 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV49))] = f.zero@0;
    24 |      $$CIV49 = $$CIV49 + 1ll;
            } while ((unsigned long long) $$CIV49 < (unsigned long long) (f.dz@c - 1u));    /* ~13 */
            f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dz@c - 1u))) + f.i@14;
          lab_43:
    31 |    if (!(0u < nz)) goto lab_12;
            if (!(0u < ny)) goto lab_70;
            if (!(0u < nx)) goto lab_58;
            if (!1) goto lab_57;
            $$CIV4F = 0ll;
            do {   /* id=1 guarded */ /* ~10 */ 
              /* region = 141 */
              /* bump-normalized */
    30 |      __542 = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    24 |      if (!(1u != f.dy@8)) goto lab_44;
              $$CIV4A = 0ll;
    22 |      do {   /* id=6 guarded */ /* ~19 */ 
                /* region = 137 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV4A))] = __542;
    24 |        $$CIV4A = $$CIV4A + 1ll;
              } while ((unsigned long long) $$CIV4A < (unsigned long long) (f.dy@8 - 1u));    /* ~19 */
              f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u))) + f.i@14;
            lab_44:
    31 |      if (!1) goto lab_18;
              $$CIV4E = 0ll;
              do {   /* id=2 guarded */ /* ~16 */ 
                /* region = 140 */
                /* bump-normalized */
    30 |        __546 = f.zero@0;
    23 |        f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
                f.i@14 = f.i@14 + 1u;
    24 |        if (!(1u != f.dx@4)) goto lab_45;
                $$CIV4B = 0ll;
    22 |        do {   /* id=5 guarded */ /* ~25 */ 
                  /* region = 138 */
                  /* bump-normalized */
    23 |          f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV4B))] = __546;
    24 |          $$CIV4B = $$CIV4B + 1ll;
                } while ((unsigned long long) $$CIV4B < (unsigned long long) (f.dx@4 - 1u));    /* ~25 */
                f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dx@4 - 1u))) + f.i@14;
              lab_45:
    31 |        if (!1) goto lab_24;
                $$CIV4D = 0ll;
                do {   /* id=3 guarded */ /* ~22 */ 
                  /* region = 139 */
                  /* bump-normalized */
    47 |          $$TVX.$$.a4747 = PCdecoder<float, PCmap<float, 32u, void>, true>::decode(float, unsigned int)(__530,(((((f.a@18[(long long) (f.i@14 - f.dx@4 & f.m@10)] - f.a@18[(long long) ((f.i@14 - f.dy@8) - f.dz@c & f.m@10)]) + f.a@18[(long long) (f.i@14 - f.dy@8 & f.m@10)]) - f.a@18[(long long) ((f.i@14 - f.dx@4) - f.dz@c & f.m@10)]) + f.a@18[(long long) (f.i@14 - f.dz@c & f.m@10)]) - f.a@18[(long long) ((f.i@14 - f.dx@4) - f.dy@8 & f.m@10)]) + f.a@18[(long long) (((f.i@14 - f.dx@4) - f.dy@8) - f.dz@c & f.m@10)],0u);
    48 |          data[$$CIV4D] = $$TVX.$$.a4747;
    23 |          f.a@18[(long long) (f.m@10 & f.i@14)] = $$TVX.$$.a4747;
                  f.i@14 = f.i@14 + 1u;
    32 |          $$CIV4D = $$CIV4D + 1ll;
                } while ((unsigned long long) $$CIV4D < (unsigned long long) nx);    /* ~22 */
                data = ((char *)data  + (long long) ((unsigned long long) nx * 4ull));
              lab_24:
    31 |        $$CIV4E = $$CIV4E + 1ll;
              } while ((unsigned long long) $$CIV4E < (unsigned long long) ny);    /* ~16 */
            lab_18:
    30 |      $$CIV4F = $$CIV4F + 1ll;
            } while ((unsigned long long) $$CIV4F < (unsigned long long) nz);    /* ~10 */
          lab_57:
            goto lab_71;
          lab_58:
    31 |    if (!1) goto lab_71;
            if (!(1u != f.dy@8)) goto lab_109;
            if (!(1u != f.dx@4)) goto lab_99;
            if (!1) goto lab_98;
            $$CIV4F = 0ll;
            do {   /* id=4 guarded */ /* ~60 */ 
              /* region = 145 */
              /* bump-normalized */
    30 |      __542 = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    24 |      if (!1) goto lab_62;
              $$CIV4A = 0ll;
    22 |      do {   /* id=9 guarded */ /* ~61 */ 
                /* region = 144 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV4A))] = __542;
    24 |        $$CIV4A = $$CIV4A + 1ll;
              } while ((unsigned long long) $$CIV4A < (unsigned long long) (f.dy@8 - 1u));    /* ~61 */
              f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u))) + f.i@14;
            lab_62:
    31 |      if (!1) goto lab_68;
              $$CIV4E = 0ll;
              do {   /* id=10 guarded */ /* ~63 */ 
                /* region = 143 */
                /* bump-normalized */
    30 |        $$TVX.$$.__5464848 = f.zero@0;
    23 |        f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
                f.i@14 = f.i@14 + 1u;
    24 |        if (!1) goto lab_65;
                $$CIV4B = 0ll;
    22 |        do {   /* id=11 guarded */ /* ~64 */ 
                  /* region = 142 */
                  /* bump-normalized */
    23 |          f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV4B))] = $$TVX.$$.__5464848;
    24 |          $$CIV4B = $$CIV4B + 1ll;
                } while ((unsigned long long) $$CIV4B < (unsigned long long) (f.dx@4 - 1u));    /* ~64 */
                f.i@14 = f.i@14 + (unsigned int) ((int) ((unsigned long long) (f.dx@4 - 1u)));
              lab_65:
    31 |        $$CIV4E = $$CIV4E + 1ll;
              } while ((unsigned long long) $$CIV4E < (unsigned long long) ny);    /* ~63 */
            lab_68:
    30 |      $$CIV4F = $$CIV4F + 1ll;
            } while ((unsigned long long) $$CIV4F < (unsigned long long) nz);    /* ~60 */
          lab_98:
            goto lab_71;
          lab_99:
    31 |    if (!1) goto lab_108;
            $$CIV4F = 0ll;
            do {   /* id=22 guarded */ /* ~101 */ 
              /* region = 148 */
              /* bump-normalized */
    30 |      __542 = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    24 |      if (!1) goto lab_103;
              $$CIV4A = 0ll;
    22 |      do {   /* id=21 guarded */ /* ~102 */ 
                /* region = 147 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV4A))] = __542;
    24 |        $$CIV4A = $$CIV4A + 1ll;
              } while ((unsigned long long) $$CIV4A < (unsigned long long) (f.dy@8 - 1u));    /* ~102 */
              f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u))) + f.i@14;
            lab_103:
    31 |      if (!1) goto lab_107;
              $$CIV4E = 0ll;
              $$SCREP1F = f.i@14;
              do {   /* id=20 guarded */ /* ~104 */ 
                /* region = 146 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & $$SCREP1F)] = f.zero@0;
                $$SCREP1F = $$SCREP1F + 1u;
    31 |        $$CIV4E = $$CIV4E + 1ll;
              } while ((unsigned long long) $$CIV4E < (unsigned long long) ny);    /* ~104 */
              f.i@14 = $$SCREP1F;
            lab_107:
    30 |      $$CIV4F = $$CIV4F + 1ll;
            } while ((unsigned long long) $$CIV4F < (unsigned long long) nz);    /* ~101 */
          lab_108:
            goto lab_71;
          lab_109:
    31 |    if (!(1u != f.dx@4)) goto lab_119;
            if (!1) goto lab_118;
            $$CIV4F = 0ll;
            do {   /* id=16 guarded */ /* ~111 */ 
              /* region = 151 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    31 |      if (!1) goto lab_117;
              $$CIV4E = 0ll;
              do {   /* id=12 guarded */ /* ~114 */ 
                /* region = 150 */
                /* bump-normalized */
    30 |        $$TVX.$$.__546494A = f.zero@0;
    23 |        f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
                f.i@14 = f.i@14 + 1u;
    24 |        if (!1) goto lab_116;
                $$CIV4B = 0ll;
    22 |        do {   /* id=23 guarded */ /* ~115 */ 
                  /* region = 149 */
                  /* bump-normalized */
    23 |          f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV4B))] = $$TVX.$$.__546494A;
    24 |          $$CIV4B = $$CIV4B + 1ll;
                } while ((unsigned long long) $$CIV4B < (unsigned long long) (f.dx@4 - 1u));    /* ~115 */
                f.i@14 = f.i@14 + (unsigned int) ((int) ((unsigned long long) (f.dx@4 - 1u)));
              lab_116:
    31 |        $$CIV4E = $$CIV4E + 1ll;
              } while ((unsigned long long) $$CIV4E < (unsigned long long) ny);    /* ~114 */
            lab_117:
    30 |      $$CIV4F = $$CIV4F + 1ll;
            } while ((unsigned long long) $$CIV4F < (unsigned long long) nz);    /* ~111 */
          lab_118:
            goto lab_71;
          lab_119:
    31 |    if (!1) goto lab_127;
            $$CIV4F = 0ll;
            do {   /* id=24 guarded */ /* ~120 */ 
              /* region = 153 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    31 |      if (!1) goto lab_126;
              $$CIV4E = 0ll;
              $$SCREP1E = f.i@14;
              do {   /* id=26 guarded */ /* ~123 */ 
                /* region = 152 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & $$SCREP1E)] = f.zero@0;
                $$SCREP1E = $$SCREP1E + 1u;
    31 |        $$CIV4E = $$CIV4E + 1ll;
              } while ((unsigned long long) $$CIV4E < (unsigned long long) ny);    /* ~123 */
              f.i@14 = $$SCREP1E;
            lab_126:
    30 |      $$CIV4F = $$CIV4F + 1ll;
            } while ((unsigned long long) $$CIV4F < (unsigned long long) nz);    /* ~120 */
          lab_127:
            goto lab_71;
          lab_70:
    31 |    if (!(0u < nx)) goto lab_82;
            if (!1) goto lab_93;
            if (!(1u != f.dy@8)) goto lab_130;
            if (!1) goto lab_129;
            $$CIV4F = 0ll;
            do {   /* id=13 guarded */ /* ~72 */ 
              /* region = 155 */
              /* bump-normalized */
    30 |      $$TVX.$$.__5424A4C = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    24 |      if (!1) goto lab_74;
              $$CIV4A = 0ll;
    22 |      do {   /* id=14 guarded */ /* ~73 */ 
                /* region = 154 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV4A))] = $$TVX.$$.__5424A4C;
    24 |        $$CIV4A = $$CIV4A + 1ll;
              } while ((unsigned long long) $$CIV4A < (unsigned long long) (f.dy@8 - 1u));    /* ~73 */
              f.i@14 = f.i@14 + (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u)));
            lab_74:
    30 |      $$CIV4F = $$CIV4F + 1ll;
            } while ((unsigned long long) $$CIV4F < (unsigned long long) nz);    /* ~72 */
          lab_129:
            goto lab_93;
          lab_130:
    31 |    if (!1) goto lab_135;
            $$CIV4F = 0ll;
            $$SCREP1D = f.i@14;
            do {   /* id=28 guarded */ /* ~132 */ 
              /* region = 156 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & $$SCREP1D)] = f.zero@0;
              $$SCREP1D = $$SCREP1D + 1u;
    30 |      $$CIV4F = $$CIV4F + 1ll;
            } while ((unsigned long long) $$CIV4F < (unsigned long long) nz);    /* ~132 */
            f.i@14 = $$SCREP1D;
          lab_135:
            goto lab_93;
          lab_82:
    31 |    if (!1) goto lab_92;
            if (!(1u != f.dy@8)) goto lab_137;
            if (!1) goto lab_136;
            $$CIV4F = 0ll;
            do {   /* id=18 guarded */ /* ~83 */ 
              /* region = 158 */
              /* bump-normalized */
    30 |      $$TVX.$$.__5424B4E = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    24 |      if (!1) goto lab_85;
              $$CIV4A = 0ll;
    22 |      do {   /* id=19 guarded */ /* ~84 */ 
                /* region = 157 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV4A))] = $$TVX.$$.__5424B4E;
    24 |        $$CIV4A = $$CIV4A + 1ll;
              } while ((unsigned long long) $$CIV4A < (unsigned long long) (f.dy@8 - 1u));    /* ~84 */
              f.i@14 = f.i@14 + (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u)));
            lab_85:
    30 |      $$CIV4F = $$CIV4F + 1ll;
            } while ((unsigned long long) $$CIV4F < (unsigned long long) nz);    /* ~83 */
          lab_136:
            goto lab_138;
          lab_137:
    31 |    if (!1) goto lab_142;
            $$CIV4F = 0ll;
            $$SCREP1C = f.i@14;
            do {   /* id=30 guarded */ /* ~139 */ 
              /* region = 159 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & $$SCREP1C)] = f.zero@0;
              $$SCREP1C = $$SCREP1C + 1u;
    30 |      $$CIV4F = $$CIV4F + 1ll;
            } while ((unsigned long long) $$CIV4F < (unsigned long long) nz);    /* ~139 */
            f.i@14 = $$SCREP1C;
          lab_142:
          lab_138:
          lab_92:
          lab_93:
          lab_71:
          lab_12:
    52 |    if (!(__530 != NULL)) goto lab_32;
    35 |    operator delete(void*)(__530)
          lab_32:
    53 |    if (!(rm != NULL)) goto lab_35;
            ((funcaddr *)(*((char * *)rm)))[8ll / 8]->(()vf).rns219.(rm);
          lab_35:
    11 |    operator delete[](void*)(f.a@18)
    54 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        83            22             7    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(float).rns210.".
        83            31             1    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj32EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            22             6    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(float).rns211.".
        83            31             2    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj32EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            22             5    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(float).rns212.".
        83            31             3    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj32EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            31             4    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj32EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            22             9    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(float).rns211.".
        83            31            10    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj32EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            22            11    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(float).rns212.".
        83            31            22    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj32EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            22            21    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(float).rns211.".
        83            31            20    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj32EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            31            16    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj32EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            31            12    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj32EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            22            23    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(float).rns212.".
        83            31            24    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj32EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            31            26    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj32EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            31            13    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj32EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            22            14    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(float).rns211.".
        83            31            28    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj32EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            31            18    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj32EvELb1EE6decodeEfj" that 
                                          may have side effects.
        83            22            19    Loop cannot be automatically parallelized.  A 
                                          dependency is carried by variable "(float).rns211.".
        83            31            30    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to 
                                          "_ZN9PCdecoderIf5PCmapIfLj32EvELb1EE6decodeEfj" that 
                                          may have side effects.

    47 |  double PCdecoder<double, PCmap<double, 16u, void>, true>::decode(double, unsigned int)(PCdecoder<double,PCmap<double,16,void>,1> *this, double pred, unsigned int context)
    48 |  {
    50 |    s = RCdecoder::decode(RCmodel*)(*((char * *)((char *)this + 8)),((char * *)(*((char * *)((char *)this + 16))))[(long long) context]);
    51 |    if (!(s > 16u)) goto lab_1;
    53 |    __577 = *((char * *)((char *)this + 8));
            __576 = (s - 16u) - 1u;
     4 |    s = 0ull;
     5 |    m = 0u;
     6 |    if (!1) goto lab_5;
            $$CIV50 = 0ll;
            do {   /* id=2 guarded */ /* ~3 */ 
              /* region = 20 */
              /* bump-normalized */
     7 |      if (!(__576 > 16u)) goto lab_6;
     3 |      $$RET2F = (unsigned long long) RCdecoder::decode_shift(unsigned int)(__577,16u);
     8 |      s = s + ($$RET2F << m);
     9 |      m = m + 16u;
    10 |      __576 = __576 - 16u;
    11 |    lab_6:
     6 |      $$CIV50 = $$CIV50 + 1ll;
            } while ((unsigned long long) $$CIV50 < 3ull);    /* ~3 */
          lab_5:
    12 |    $$RET30 = (unsigned long long) RCdecoder::decode_shift(unsigned int)(__577,__576);
    54 |    $$PARM.this42 = this;
            $$PARM.d43 = pred;
   100 |    $$PARM.this3E = this;
            $$PARM.d3F = pred;
    71 |    shared.d@0 = pred;
    72 |    $$IRET1F = shared.r@0;
   100 |    r = shared.r@0;
   104 |    $$IRET21 = (~ shared.r@0 >> 63) * 18446744073709551615ull >> 49u ^ ~ shared.r@0 >> 48u;
    54 |    p = (~ shared.r@0 >> 63) * 18446744073709551615ull >> 49u ^ ~ shared.r@0 >> 48u;
    55 |    $$PARM.this3A = this;
            $$PARM.r3B = (s + (1ull << (s - 16u) - 1u)) + (($$RET30 << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 49u ^ ~ shared.r@0 >> 48u));
   111 |    $$PARM.r3B = ((s + (1ull << (s - 16u) - 1u)) + (($$RET30 << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 49u ^ ~ shared.r@0 >> 48u)) >> 15u) * 18446744073709551615ull >> 49u ^ (s + (1ull << (s - 16u) - 1u)) + (($$RET30 << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 49u ^ ~ shared.r@0 >> 48u));
   113 |    $$PARM.this36 = this;
            $$PARM.r37 = ~ (((s + (1ull << (s - 16u) - 1u)) + (($$RET30 << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 49u ^ ~ shared.r@0 >> 48u)) >> 15u) * 18446744073709551615ull >> 49u ^ (s + (1ull << (s - 16u) - 1u)) + (($$RET30 << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 49u ^ ~ shared.r@0 >> 48u))) << 48u;
    87 |    shared.r@0 = ~ (((s + (1ull << (s - 16u) - 1u)) + (($$RET30 << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 49u ^ ~ shared.r@0 >> 48u)) >> 15u) * 18446744073709551615ull >> 49u ^ (s + (1ull << (s - 16u) - 1u)) + (($$RET30 << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 49u ^ ~ shared.r@0 >> 48u))) << 48u;
    88 |    $$IRET1B = shared.d@0;
   113 |    $$RET62 = shared.d@0;
   114 |    $$IRET1D = shared.d@0;
    55 |    $$RET31 = shared.d@0;
    56 |    rstr = shared.d@0;
            return rstr;
    57 |  lab_1:
    58 |    if (!(s < 16u)) goto lab_9;
    60 |    __581 = *((char * *)((char *)this + 8));
            __580 = 15u - s;
     4 |    s = 0ull;
     5 |    m = 0u;
     6 |    if (!1) goto lab_13;
            $$CIV51 = 0ll;
            do {   /* id=1 guarded */ /* ~11 */ 
              /* region = 21 */
              /* bump-normalized */
     7 |      if (!(__580 > 16u)) goto lab_14;
     3 |      $$RET32 = (unsigned long long) RCdecoder::decode_shift(unsigned int)(__581,16u);
     8 |      s = s + ($$RET32 << m);
     9 |      m = m + 16u;
    10 |      __580 = __580 - 16u;
    11 |    lab_14:
     6 |      $$CIV51 = $$CIV51 + 1ll;
            } while ((unsigned long long) $$CIV51 < 3ull);    /* ~11 */
          lab_13:
    12 |    $$RET33 = (unsigned long long) RCdecoder::decode_shift(unsigned int)(__581,__580);
    61 |    $$PARM.this44 = this;
            $$PARM.d45 = pred;
   100 |    $$PARM.this3E = this;
            $$PARM.d3F = pred;
    71 |    shared.d@0 = pred;
    72 |    $$IRET1F = shared.r@0;
   100 |    r = shared.r@0;
   104 |    $$IRET22 = (~ shared.r@0 >> 63) * 18446744073709551615ull >> 49u ^ ~ shared.r@0 >> 48u;
    61 |    p = (~ shared.r@0 >> 63) * 18446744073709551615ull >> 49u ^ ~ shared.r@0 >> 48u;
    62 |    $$PARM.this3C = this;
            $$PARM.r3D = ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 49u ^ ~ shared.r@0 >> 48u) - (($$RET33 << m) + ((1ull << 15u - s) + s));
   111 |    $$PARM.r3D = (((~ shared.r@0 >> 63) * 18446744073709551615ull >> 49u ^ ~ shared.r@0 >> 48u) - (($$RET33 << m) + ((1ull << 15u - s) + s)) >> 15u) * 18446744073709551615ull >> 49u ^ ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 49u ^ ~ shared.r@0 >> 48u) - (($$RET33 << m) + ((1ull << 15u - s) + s));
   113 |    $$PARM.this36 = this;
            $$PARM.r37 = ~ ((((~ shared.r@0 >> 63) * 18446744073709551615ull >> 49u ^ ~ shared.r@0 >> 48u) - (($$RET33 << m) + ((1ull << 15u - s) + s)) >> 15u) * 18446744073709551615ull >> 49u ^ ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 49u ^ ~ shared.r@0 >> 48u) - (($$RET33 << m) + ((1ull << 15u - s) + s))) << 48u;
    87 |    shared.r@0 = ~ ((((~ shared.r@0 >> 63) * 18446744073709551615ull >> 49u ^ ~ shared.r@0 >> 48u) - (($$RET33 << m) + ((1ull << 15u - s) + s)) >> 15u) * 18446744073709551615ull >> 49u ^ ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 49u ^ ~ shared.r@0 >> 48u) - (($$RET33 << m) + ((1ull << 15u - s) + s))) << 48u;
    88 |    $$IRET1B = shared.d@0;
   113 |    $$RET62 = shared.d@0;
   114 |    $$IRET1E = shared.d@0;
    62 |    $$RET34 = shared.d@0;
    63 |    rstr = shared.d@0;
            return rstr;
    64 |  lab_9:
    66 |    $$PARM.this46 = this;
            $$PARM.d47 = pred;
   121 |    $$PARM.this40 = this;
            $$PARM.d41 = pred;
    71 |    shared.d@0 = pred;
    72 |    $$IRET20 = shared.r@0;
   121 |    r = shared.r@0;
   123 |    $$PARM.this38 = this;
            $$PARM.r39 = (shared.r@0 >> 48u) << 48u;
    87 |    shared.r@0 = (shared.r@0 >> 48u) << 48u;
    88 |    $$IRET1C = shared.d@0;
   123 |    $$RET63 = shared.d@0;
   124 |    $$IRET23 = shared.d@0;
    66 |    $$RET35 = shared.d@0;
            rstr = shared.d@0;
            return rstr;
    67 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        79             6             2    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder12decode_shiftEj" 
                                          that may have side effects.
        79             6             1    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder12decode_shiftEj" 
                                          that may have side effects.

    11 |  char * FRONT<double>::~FRONT()(FRONT<double> *this)
          {
            operator delete[](void*)(*((char * *)((char *)this + 32)))
            rstr = this;
            return rstr;
          } /* function */ 


    47 |  double PCdecoder<double, PCmap<double, 32u, void>, true>::decode(double, unsigned int)(PCdecoder<double,PCmap<double,32,void>,1> *this, double pred, unsigned int context)
    48 |  {
    50 |    s = RCdecoder::decode(RCmodel*)(*((char * *)((char *)this + 8)),((char * *)(*((char * *)((char *)this + 16))))[(long long) context]);
    51 |    if (!(s > 32u)) goto lab_1;
    53 |    __587 = *((char * *)((char *)this + 8));
            __586 = (s - 32u) - 1u;
     4 |    s = 0ull;
     5 |    m = 0u;
     6 |    if (!1) goto lab_5;
            $$CIV52 = 0ll;
            do {   /* id=2 guarded */ /* ~3 */ 
              /* region = 20 */
              /* bump-normalized */
     7 |      if (!(__586 > 16u)) goto lab_6;
     3 |      $$RET36 = (unsigned long long) RCdecoder::decode_shift(unsigned int)(__587,16u);
     8 |      s = s + ($$RET36 << m);
     9 |      m = m + 16u;
    10 |      __586 = __586 - 16u;
    11 |    lab_6:
     6 |      $$CIV52 = $$CIV52 + 1ll;
            } while ((unsigned long long) $$CIV52 < 3ull);    /* ~3 */
          lab_5:
    12 |    $$RET37 = (unsigned long long) RCdecoder::decode_shift(unsigned int)(__587,__586);
    54 |    $$PARM.this30 = this;
            $$PARM.d31 = pred;
   100 |    $$PARM.this2C = this;
            $$PARM.d2D = pred;
    71 |    shared.d@0 = pred;
    72 |    $$IRET16 = shared.r@0;
   100 |    r = shared.r@0;
   104 |    $$IRET18 = (~ shared.r@0 >> 63) * 18446744073709551615ull >> 33u ^ ~ shared.r@0 >> 32u;
    54 |    p = (~ shared.r@0 >> 63) * 18446744073709551615ull >> 33u ^ ~ shared.r@0 >> 32u;
    55 |    $$PARM.this28 = this;
            $$PARM.r29 = (s + (1ull << (s - 32u) - 1u)) + (($$RET37 << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 33u ^ ~ shared.r@0 >> 32u));
   111 |    $$PARM.r29 = ((s + (1ull << (s - 32u) - 1u)) + (($$RET37 << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 33u ^ ~ shared.r@0 >> 32u)) >> 31u) * 18446744073709551615ull >> 33u ^ (s + (1ull << (s - 32u) - 1u)) + (($$RET37 << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 33u ^ ~ shared.r@0 >> 32u));
   113 |    $$PARM.this24 = this;
            $$PARM.r25 = ~ (((s + (1ull << (s - 32u) - 1u)) + (($$RET37 << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 33u ^ ~ shared.r@0 >> 32u)) >> 31u) * 18446744073709551615ull >> 33u ^ (s + (1ull << (s - 32u) - 1u)) + (($$RET37 << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 33u ^ ~ shared.r@0 >> 32u))) << 32u;
    87 |    shared.r@0 = ~ (((s + (1ull << (s - 32u) - 1u)) + (($$RET37 << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 33u ^ ~ shared.r@0 >> 32u)) >> 31u) * 18446744073709551615ull >> 33u ^ (s + (1ull << (s - 32u) - 1u)) + (($$RET37 << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 33u ^ ~ shared.r@0 >> 32u))) << 32u;
    88 |    $$IRET12 = shared.d@0;
   113 |    $$RET64 = shared.d@0;
   114 |    $$IRET14 = shared.d@0;
    55 |    $$RET38 = shared.d@0;
    56 |    rstr = shared.d@0;
            return rstr;
    57 |  lab_1:
    58 |    if (!(s < 32u)) goto lab_9;
    60 |    __591 = *((char * *)((char *)this + 8));
            __590 = 31u - s;
     4 |    s = 0ull;
     5 |    m = 0u;
     6 |    if (!1) goto lab_13;
            $$CIV53 = 0ll;
            do {   /* id=1 guarded */ /* ~11 */ 
              /* region = 21 */
              /* bump-normalized */
     7 |      if (!(__590 > 16u)) goto lab_14;
     3 |      $$RET39 = (unsigned long long) RCdecoder::decode_shift(unsigned int)(__591,16u);
     8 |      s = s + ($$RET39 << m);
     9 |      m = m + 16u;
    10 |      __590 = __590 - 16u;
    11 |    lab_14:
     6 |      $$CIV53 = $$CIV53 + 1ll;
            } while ((unsigned long long) $$CIV53 < 3ull);    /* ~11 */
          lab_13:
    12 |    $$RET3A = (unsigned long long) RCdecoder::decode_shift(unsigned int)(__591,__590);
    61 |    $$PARM.this32 = this;
            $$PARM.d33 = pred;
   100 |    $$PARM.this2C = this;
            $$PARM.d2D = pred;
    71 |    shared.d@0 = pred;
    72 |    $$IRET16 = shared.r@0;
   100 |    r = shared.r@0;
   104 |    $$IRET19 = (~ shared.r@0 >> 63) * 18446744073709551615ull >> 33u ^ ~ shared.r@0 >> 32u;
    61 |    p = (~ shared.r@0 >> 63) * 18446744073709551615ull >> 33u ^ ~ shared.r@0 >> 32u;
    62 |    $$PARM.this2A = this;
            $$PARM.r2B = ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 33u ^ ~ shared.r@0 >> 32u) - (($$RET3A << m) + ((1ull << 31u - s) + s));
   111 |    $$PARM.r2B = (((~ shared.r@0 >> 63) * 18446744073709551615ull >> 33u ^ ~ shared.r@0 >> 32u) - (($$RET3A << m) + ((1ull << 31u - s) + s)) >> 31u) * 18446744073709551615ull >> 33u ^ ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 33u ^ ~ shared.r@0 >> 32u) - (($$RET3A << m) + ((1ull << 31u - s) + s));
   113 |    $$PARM.this24 = this;
            $$PARM.r25 = ~ ((((~ shared.r@0 >> 63) * 18446744073709551615ull >> 33u ^ ~ shared.r@0 >> 32u) - (($$RET3A << m) + ((1ull << 31u - s) + s)) >> 31u) * 18446744073709551615ull >> 33u ^ ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 33u ^ ~ shared.r@0 >> 32u) - (($$RET3A << m) + ((1ull << 31u - s) + s))) << 32u;
    87 |    shared.r@0 = ~ ((((~ shared.r@0 >> 63) * 18446744073709551615ull >> 33u ^ ~ shared.r@0 >> 32u) - (($$RET3A << m) + ((1ull << 31u - s) + s)) >> 31u) * 18446744073709551615ull >> 33u ^ ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 33u ^ ~ shared.r@0 >> 32u) - (($$RET3A << m) + ((1ull << 31u - s) + s))) << 32u;
    88 |    $$IRET12 = shared.d@0;
   113 |    $$RET64 = shared.d@0;
   114 |    $$IRET15 = shared.d@0;
    62 |    $$RET3B = shared.d@0;
    63 |    rstr = shared.d@0;
            return rstr;
    64 |  lab_9:
    66 |    $$PARM.this34 = this;
            $$PARM.d35 = pred;
   121 |    $$PARM.this2E = this;
            $$PARM.d2F = pred;
    71 |    shared.d@0 = pred;
    72 |    $$IRET17 = shared.r@0;
   121 |    r = shared.r@0;
   123 |    $$PARM.this26 = this;
            $$PARM.r27 = (shared.r@0 >> 32u) << 32u;
    87 |    shared.r@0 = (shared.r@0 >> 32u) << 32u;
    88 |    $$IRET13 = shared.d@0;
   123 |    $$RET65 = shared.d@0;
   124 |    $$IRET1A = shared.d@0;
    66 |    $$RET3C = shared.d@0;
            rstr = shared.d@0;
            return rstr;
    67 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        79             6             2    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder12decode_shiftEj" 
                                          that may have side effects.
        79             6             1    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder12decode_shiftEj" 
                                          that may have side effects.

    47 |  double PCdecoder<double, PCmap<double, 48u, void>, true>::decode(double, unsigned int)(PCdecoder<double,PCmap<double,48,void>,1> *this, double pred, unsigned int context)
    48 |  {
    50 |    s = RCdecoder::decode(RCmodel*)(*((char * *)((char *)this + 8)),((char * *)(*((char * *)((char *)this + 16))))[(long long) context]);
    51 |    if (!(s > 48u)) goto lab_1;
    53 |    __597 = *((char * *)((char *)this + 8));
            __596 = (s - 48u) - 1u;
     4 |    s = 0ull;
     5 |    m = 0u;
     6 |    if (!1) goto lab_5;
            $$CIV54 = 0ll;
            do {   /* id=2 guarded */ /* ~3 */ 
              /* region = 20 */
              /* bump-normalized */
     7 |      if (!(__596 > 16u)) goto lab_6;
     3 |      $$RET3D = (unsigned long long) RCdecoder::decode_shift(unsigned int)(__597,16u);
     8 |      s = s + ($$RET3D << m);
     9 |      m = m + 16u;
    10 |      __596 = __596 - 16u;
    11 |    lab_6:
     6 |      $$CIV54 = $$CIV54 + 1ll;
            } while ((unsigned long long) $$CIV54 < 3ull);    /* ~3 */
          lab_5:
    12 |    $$RET3E = (unsigned long long) RCdecoder::decode_shift(unsigned int)(__597,__596);
    54 |    $$PARM.this1E = this;
            $$PARM.d1F = pred;
   100 |    $$PARM.this1A = this;
            $$PARM.d1B = pred;
    71 |    shared.d@0 = pred;
    72 |    $$IRETD = shared.r@0;
   100 |    r = shared.r@0;
   104 |    $$IRETF = (~ shared.r@0 >> 63) * 18446744073709551615ull >> 17u ^ ~ shared.r@0 >> 16u;
    54 |    p = (~ shared.r@0 >> 63) * 18446744073709551615ull >> 17u ^ ~ shared.r@0 >> 16u;
    55 |    $$PARM.this16 = this;
            $$PARM.r17 = (s + (1ull << (s - 48u) - 1u)) + (($$RET3E << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 17u ^ ~ shared.r@0 >> 16u));
   111 |    $$PARM.r17 = ((s + (1ull << (s - 48u) - 1u)) + (($$RET3E << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 17u ^ ~ shared.r@0 >> 16u)) >> 47u) * 18446744073709551615ull >> 17u ^ (s + (1ull << (s - 48u) - 1u)) + (($$RET3E << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 17u ^ ~ shared.r@0 >> 16u));
   113 |    $$PARM.this12 = this;
            $$PARM.r13 = ~ (((s + (1ull << (s - 48u) - 1u)) + (($$RET3E << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 17u ^ ~ shared.r@0 >> 16u)) >> 47u) * 18446744073709551615ull >> 17u ^ (s + (1ull << (s - 48u) - 1u)) + (($$RET3E << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 17u ^ ~ shared.r@0 >> 16u))) << 16u;
    87 |    shared.r@0 = ~ (((s + (1ull << (s - 48u) - 1u)) + (($$RET3E << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 17u ^ ~ shared.r@0 >> 16u)) >> 47u) * 18446744073709551615ull >> 17u ^ (s + (1ull << (s - 48u) - 1u)) + (($$RET3E << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 17u ^ ~ shared.r@0 >> 16u))) << 16u;
    88 |    $$IRET9 = shared.d@0;
   113 |    $$RET66 = shared.d@0;
   114 |    $$IRETB = shared.d@0;
    55 |    $$RET3F = shared.d@0;
    56 |    rstr = shared.d@0;
            return rstr;
    57 |  lab_1:
    58 |    if (!(s < 48u)) goto lab_9;
    60 |    __601 = *((char * *)((char *)this + 8));
            __600 = 47u - s;
     4 |    s = 0ull;
     5 |    m = 0u;
     6 |    if (!1) goto lab_13;
            $$CIV55 = 0ll;
            do {   /* id=1 guarded */ /* ~11 */ 
              /* region = 21 */
              /* bump-normalized */
     7 |      if (!(__600 > 16u)) goto lab_14;
     3 |      $$RET40 = (unsigned long long) RCdecoder::decode_shift(unsigned int)(__601,16u);
     8 |      s = s + ($$RET40 << m);
     9 |      m = m + 16u;
    10 |      __600 = __600 - 16u;
    11 |    lab_14:
     6 |      $$CIV55 = $$CIV55 + 1ll;
            } while ((unsigned long long) $$CIV55 < 3ull);    /* ~11 */
          lab_13:
    12 |    $$RET41 = (unsigned long long) RCdecoder::decode_shift(unsigned int)(__601,__600);
    61 |    $$PARM.this20 = this;
            $$PARM.d21 = pred;
   100 |    $$PARM.this1A = this;
            $$PARM.d1B = pred;
    71 |    shared.d@0 = pred;
    72 |    $$IRETD = shared.r@0;
   100 |    r = shared.r@0;
   104 |    $$IRET10 = (~ shared.r@0 >> 63) * 18446744073709551615ull >> 17u ^ ~ shared.r@0 >> 16u;
    61 |    p = (~ shared.r@0 >> 63) * 18446744073709551615ull >> 17u ^ ~ shared.r@0 >> 16u;
    62 |    $$PARM.this18 = this;
            $$PARM.r19 = ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 17u ^ ~ shared.r@0 >> 16u) - (($$RET41 << m) + ((1ull << 47u - s) + s));
   111 |    $$PARM.r19 = (((~ shared.r@0 >> 63) * 18446744073709551615ull >> 17u ^ ~ shared.r@0 >> 16u) - (($$RET41 << m) + ((1ull << 47u - s) + s)) >> 47u) * 18446744073709551615ull >> 17u ^ ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 17u ^ ~ shared.r@0 >> 16u) - (($$RET41 << m) + ((1ull << 47u - s) + s));
   113 |    $$PARM.this12 = this;
            $$PARM.r13 = ~ ((((~ shared.r@0 >> 63) * 18446744073709551615ull >> 17u ^ ~ shared.r@0 >> 16u) - (($$RET41 << m) + ((1ull << 47u - s) + s)) >> 47u) * 18446744073709551615ull >> 17u ^ ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 17u ^ ~ shared.r@0 >> 16u) - (($$RET41 << m) + ((1ull << 47u - s) + s))) << 16u;
    87 |    shared.r@0 = ~ ((((~ shared.r@0 >> 63) * 18446744073709551615ull >> 17u ^ ~ shared.r@0 >> 16u) - (($$RET41 << m) + ((1ull << 47u - s) + s)) >> 47u) * 18446744073709551615ull >> 17u ^ ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 17u ^ ~ shared.r@0 >> 16u) - (($$RET41 << m) + ((1ull << 47u - s) + s))) << 16u;
    88 |    $$IRET9 = shared.d@0;
   113 |    $$RET66 = shared.d@0;
   114 |    $$IRETC = shared.d@0;
    62 |    $$RET42 = shared.d@0;
    63 |    rstr = shared.d@0;
            return rstr;
    64 |  lab_9:
    66 |    $$PARM.this22 = this;
            $$PARM.d23 = pred;
   121 |    $$PARM.this1C = this;
            $$PARM.d1D = pred;
    71 |    shared.d@0 = pred;
    72 |    $$IRETE = shared.r@0;
   121 |    r = shared.r@0;
   123 |    $$PARM.this14 = this;
            $$PARM.r15 = (shared.r@0 >> 16u) << 16u;
    87 |    shared.r@0 = (shared.r@0 >> 16u) << 16u;
    88 |    $$IRETA = shared.d@0;
   123 |    $$RET67 = shared.d@0;
   124 |    $$IRET11 = shared.d@0;
    66 |    $$RET43 = shared.d@0;
            rstr = shared.d@0;
            return rstr;
    67 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        79             6             2    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder12decode_shiftEj" 
                                          that may have side effects.
        79             6             1    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder12decode_shiftEj" 
                                          that may have side effects.

    47 |  double PCdecoder<double, PCmap<double, 64u, void>, true>::decode(double, unsigned int)(PCdecoder<double,PCmap<double,64,void>,1> *this, double pred, unsigned int context)
    48 |  {
    50 |    s = RCdecoder::decode(RCmodel*)(*((char * *)((char *)this + 8)),((char * *)(*((char * *)((char *)this + 16))))[(long long) context]);
    51 |    if (!(s > 64u)) goto lab_1;
    53 |    __607 = *((char * *)((char *)this + 8));
            __606 = (s - 64u) - 1u;
     4 |    s = 0ull;
     5 |    m = 0u;
     6 |    if (!1) goto lab_5;
            $$CIV56 = 0ll;
            do {   /* id=2 guarded */ /* ~3 */ 
              /* region = 20 */
              /* bump-normalized */
     7 |      if (!(__606 > 16u)) goto lab_6;
     3 |      $$RET44 = (unsigned long long) RCdecoder::decode_shift(unsigned int)(__607,16u);
     8 |      s = s + ($$RET44 << m);
     9 |      m = m + 16u;
    10 |      __606 = __606 - 16u;
    11 |    lab_6:
     6 |      $$CIV56 = $$CIV56 + 1ll;
            } while ((unsigned long long) $$CIV56 < 3ull);    /* ~3 */
          lab_5:
    12 |    $$RET45 = (unsigned long long) RCdecoder::decode_shift(unsigned int)(__607,__606);
    54 |    $$PARM.thisC = this;
            $$PARM.dD = pred;
   100 |    $$PARM.this8 = this;
            $$PARM.d9 = pred;
    71 |    shared.d@0 = pred;
    72 |    $$IRET4 = shared.r@0;
   100 |    r = shared.r@0;
   104 |    $$IRET6 = (~ shared.r@0 >> 63u) * 18446744073709551615ull >> 1u ^ ~ shared.r@0;
    54 |    p = (~ shared.r@0 >> 63u) * 18446744073709551615ull >> 1u ^ ~ shared.r@0;
    55 |    $$PARM.this4 = this;
            $$PARM.r5 = (s + (1ull << (s - 64u) - 1u)) + (($$RET45 << m) + ((~ shared.r@0 >> 63u) * 18446744073709551615ull >> 1u ^ ~ shared.r@0));
   111 |    $$PARM.r5 = ((s + (1ull << (s - 64u) - 1u)) + (($$RET45 << m) + ((~ shared.r@0 >> 63u) * 18446744073709551615ull >> 1u ^ ~ shared.r@0)) >> 63u) * 18446744073709551615ull >> 1u ^ (s + (1ull << (s - 64u) - 1u)) + (($$RET45 << m) + ((~ shared.r@0 >> 63u) * 18446744073709551615ull >> 1u ^ ~ shared.r@0));
   113 |    $$PARM.this0 = this;
            $$PARM.r1 = ~ (((s + (1ull << (s - 64u) - 1u)) + (($$RET45 << m) + ((~ shared.r@0 >> 63u) * 18446744073709551615ull >> 1u ^ ~ shared.r@0)) >> 63u) * 18446744073709551615ull >> 1u ^ (s + (1ull << (s - 64u) - 1u)) + (($$RET45 << m) + ((~ shared.r@0 >> 63u) * 18446744073709551615ull >> 1u ^ ~ shared.r@0)));
    87 |    shared.r@0 = ~ (((s + (1ull << (s - 64u) - 1u)) + (($$RET45 << m) + ((~ shared.r@0 >> 63u) * 18446744073709551615ull >> 1u ^ ~ shared.r@0)) >> 63u) * 18446744073709551615ull >> 1u ^ (s + (1ull << (s - 64u) - 1u)) + (($$RET45 << m) + ((~ shared.r@0 >> 63u) * 18446744073709551615ull >> 1u ^ ~ shared.r@0)));
    88 |    $$IRET0 = shared.d@0;
   113 |    $$RET68 = shared.d@0;
   114 |    $$IRET2 = shared.d@0;
    55 |    $$RET46 = shared.d@0;
    56 |    rstr = shared.d@0;
            return rstr;
    57 |  lab_1:
    58 |    if (!(s < 64u)) goto lab_9;
    60 |    __611 = *((char * *)((char *)this + 8));
            __610 = 63u - s;
     4 |    s = 0ull;
     5 |    m = 0u;
     6 |    if (!1) goto lab_13;
            $$CIV57 = 0ll;
            do {   /* id=1 guarded */ /* ~11 */ 
              /* region = 21 */
              /* bump-normalized */
     7 |      if (!(__610 > 16u)) goto lab_14;
     3 |      $$RET47 = (unsigned long long) RCdecoder::decode_shift(unsigned int)(__611,16u);
     8 |      s = s + ($$RET47 << m);
     9 |      m = m + 16u;
    10 |      __610 = __610 - 16u;
    11 |    lab_14:
     6 |      $$CIV57 = $$CIV57 + 1ll;
            } while ((unsigned long long) $$CIV57 < 3ull);    /* ~11 */
          lab_13:
    12 |    $$RET48 = (unsigned long long) RCdecoder::decode_shift(unsigned int)(__611,__610);
    61 |    $$PARM.thisE = this;
            $$PARM.dF = pred;
   100 |    $$PARM.this8 = this;
            $$PARM.d9 = pred;
    71 |    shared.d@0 = pred;
    72 |    $$IRET4 = shared.r@0;
   100 |    r = shared.r@0;
   104 |    $$IRET7 = (~ shared.r@0 >> 63u) * 18446744073709551615ull >> 1u ^ ~ shared.r@0;
    61 |    p = (~ shared.r@0 >> 63u) * 18446744073709551615ull >> 1u ^ ~ shared.r@0;
    62 |    $$PARM.this6 = this;
            $$PARM.r7 = ((~ shared.r@0 >> 63u) * 18446744073709551615ull >> 1u ^ ~ shared.r@0) - (($$RET48 << m) + ((1ull << 63u - s) + s));
   111 |    $$PARM.r7 = (((~ shared.r@0 >> 63u) * 18446744073709551615ull >> 1u ^ ~ shared.r@0) - (($$RET48 << m) + ((1ull << 63u - s) + s)) >> 63u) * 18446744073709551615ull >> 1u ^ ((~ shared.r@0 >> 63u) * 18446744073709551615ull >> 1u ^ ~ shared.r@0) - (($$RET48 << m) + ((1ull << 63u - s) + s));
   113 |    $$PARM.this0 = this;
            $$PARM.r1 = ~ ((((~ shared.r@0 >> 63u) * 18446744073709551615ull >> 1u ^ ~ shared.r@0) - (($$RET48 << m) + ((1ull << 63u - s) + s)) >> 63u) * 18446744073709551615ull >> 1u ^ ((~ shared.r@0 >> 63u) * 18446744073709551615ull >> 1u ^ ~ shared.r@0) - (($$RET48 << m) + ((1ull << 63u - s) + s)));
    87 |    shared.r@0 = ~ ((((~ shared.r@0 >> 63u) * 18446744073709551615ull >> 1u ^ ~ shared.r@0) - (($$RET48 << m) + ((1ull << 63u - s) + s)) >> 63u) * 18446744073709551615ull >> 1u ^ ((~ shared.r@0 >> 63u) * 18446744073709551615ull >> 1u ^ ~ shared.r@0) - (($$RET48 << m) + ((1ull << 63u - s) + s)));
    88 |    $$IRET0 = shared.d@0;
   113 |    $$RET68 = shared.d@0;
   114 |    $$IRET3 = shared.d@0;
    62 |    $$RET49 = shared.d@0;
    63 |    rstr = shared.d@0;
            return rstr;
    64 |  lab_9:
    66 |    $$PARM.this10 = this;
            $$PARM.d11 = pred;
   121 |    $$PARM.thisA = this;
            $$PARM.dB = pred;
    71 |    shared.d@0 = pred;
    72 |    $$IRET5 = shared.r@0;
   121 |    r = shared.r@0;
   123 |    $$PARM.this2 = this;
            $$PARM.r3 = shared.r@0;
    87 |    shared.r@0 = shared.r@0;
    88 |    $$IRET1 = shared.d@0;
   123 |    $$RET69 = shared.d@0;
   124 |    $$IRET8 = shared.d@0;
    66 |    $$RET4A = shared.d@0;
            rstr = shared.d@0;
            return rstr;
    67 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        79             6             2    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder12decode_shiftEj" 
                                          that may have side effects.
        79             6             1    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder12decode_shiftEj" 
                                          that may have side effects.

    19 |  float PCdecoder<float, PCmap<float, 8u, void>, false>::decode(float, unsigned int)(PCdecoder<float,PCmap<float,8,void>,0> *this, float pred, unsigned int context)
    20 |  {
    23 |    $$PARM.this84 = this;
            $$PARM.d85 = pred;
    37 |    $$PARM.this82 = $$PARM.this84;
            $$PARM.d83 = $$PARM.d85;
     8 |    shared.d@0 = $$PARM.d83;
     9 |    $$IRET41 = shared.r@0;
    37 |    r = $$IRET41;
    41 |    $$IRET42 = (~ r >> 31) * 4294967295u >> 25u ^ ~ r >> 24u;
    23 |    p = $$IRET42;
            $$RET4B = RCdecoder::decode(RCmodel*)(*((char * *)((char *)this + 8)),((char * *)(*((char * *)((char *)this + 16))))[(long long) context]);
    25 |    $$PARM.this80 = this;
            $$PARM.r81 = ($$RET4B + p) - 255u;
    48 |    $$PARM.r81 = ($$PARM.r81 >> 7u) * 4294967295u >> 25u ^ $$PARM.r81;
    50 |    $$PARM.this7E = $$PARM.this80;
            $$PARM.r7F = ~ $$PARM.r81 << 24u;
    24 |    shared.r@0 = $$PARM.r7F;
    25 |    $$IRET3F = shared.d@0;
    50 |    $$RET6A = $$IRET3F;
    51 |    $$IRET40 = $$RET6A;
    25 |    $$RET4C = $$IRET40;
    26 |    rstr = $$RET4C;
            return rstr;
    27 |  } /* function */ 


    11 |  char * FRONT<float>::~FRONT()(FRONT<float> *this)
          {
            operator delete[](void*)(*((char * *)((char *)this + 24)))
            rstr = this;
            return rstr;
          } /* function */ 


    47 |  float PCdecoder<float, PCmap<float, 16u, void>, true>::decode(float, unsigned int)(PCdecoder<float,PCmap<float,16,void>,1> *this, float pred, unsigned int context)
    48 |  {
    50 |    s = RCdecoder::decode(RCmodel*)(*((char * *)((char *)this + 8)),((char * *)(*((char * *)((char *)this + 16))))[(long long) context]);
    51 |    if (!(s > 16u)) goto lab_1;
    53 |    __617 = *((char * *)((char *)this + 8));
            __616 = (s - 16u) - 1u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_5;
            $$CIV58 = 0ll;
            do {   /* id=2 guarded */ /* ~3 */ 
              /* region = 20 */
              /* bump-normalized */
     7 |      if (!(__616 > 16u)) goto lab_6;
     3 |      $$RET4D = RCdecoder::decode_shift(unsigned int)(__617,16u);
     8 |      s = s + ($$RET4D << m);
     9 |      m = m + 16u;
    10 |      __616 = __616 - 16u;
    11 |    lab_6:
     6 |      $$CIV58 = $$CIV58 + 1ll;
            } while ((unsigned long long) $$CIV58 < 1ull);    /* ~3 */
          lab_5:
    12 |    $$RET4E = RCdecoder::decode_shift(unsigned int)(__617,__616);
    54 |    $$PARM.this78 = this;
            $$PARM.d79 = pred;
    37 |    $$PARM.this74 = this;
            $$PARM.d75 = pred;
     8 |    shared.d@0 = pred;
     9 |    $$IRET3A = shared.r@0;
    37 |    r = shared.r@0;
    41 |    $$IRET3C = (~ shared.r@0 >> 31) * 4294967295u >> 17u ^ ~ shared.r@0 >> 16u;
    54 |    p = (~ shared.r@0 >> 31) * 4294967295u >> 17u ^ ~ shared.r@0 >> 16u;
    55 |    $$PARM.this70 = this;
            $$PARM.r71 = (s + (1u << (s - 16u) - 1u)) + (($$RET4E << m) + ((~ shared.r@0 >> 31) * 4294967295u >> 17u ^ ~ shared.r@0 >> 16u));
    48 |    $$PARM.r71 = ((s + (1u << (s - 16u) - 1u)) + (($$RET4E << m) + ((~ shared.r@0 >> 31) * 4294967295u >> 17u ^ ~ shared.r@0 >> 16u)) >> 15u) * 4294967295u >> 17u ^ (s + (1u << (s - 16u) - 1u)) + (($$RET4E << m) + ((~ shared.r@0 >> 31) * 4294967295u >> 17u ^ ~ shared.r@0 >> 16u));
    50 |    $$PARM.this6C = this;
            $$PARM.r6D = ~ (((s + (1u << (s - 16u) - 1u)) + (($$RET4E << m) + ((~ shared.r@0 >> 31) * 4294967295u >> 17u ^ ~ shared.r@0 >> 16u)) >> 15u) * 4294967295u >> 17u ^ (s + (1u << (s - 16u) - 1u)) + (($$RET4E << m) + ((~ shared.r@0 >> 31) * 4294967295u >> 17u ^ ~ shared.r@0 >> 16u))) << 16u;
    24 |    shared.r@0 = ~ (((s + (1u << (s - 16u) - 1u)) + (($$RET4E << m) + ((~ shared.r@0 >> 31) * 4294967295u >> 17u ^ ~ shared.r@0 >> 16u)) >> 15u) * 4294967295u >> 17u ^ (s + (1u << (s - 16u) - 1u)) + (($$RET4E << m) + ((~ shared.r@0 >> 31) * 4294967295u >> 17u ^ ~ shared.r@0 >> 16u))) << 16u;
    25 |    $$IRET36 = shared.d@0;
    50 |    $$RET6B = shared.d@0;
    51 |    $$IRET38 = shared.d@0;
    55 |    $$RET4F = shared.d@0;
    56 |    rstr = shared.d@0;
            return rstr;
    57 |  lab_1:
    58 |    if (!(s < 16u)) goto lab_9;
    60 |    __621 = *((char * *)((char *)this + 8));
            __620 = 15u - s;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_13;
            $$CIV59 = 0ll;
            do {   /* id=1 guarded */ /* ~11 */ 
              /* region = 21 */
              /* bump-normalized */
     7 |      if (!(__620 > 16u)) goto lab_14;
     3 |      $$RET50 = RCdecoder::decode_shift(unsigned int)(__621,16u);
     8 |      s = s + ($$RET50 << m);
     9 |      m = m + 16u;
    10 |      __620 = __620 - 16u;
    11 |    lab_14:
     6 |      $$CIV59 = $$CIV59 + 1ll;
            } while ((unsigned long long) $$CIV59 < 1ull);    /* ~11 */
          lab_13:
    12 |    $$RET51 = RCdecoder::decode_shift(unsigned int)(__621,__620);
    61 |    $$PARM.this7A = this;
            $$PARM.d7B = pred;
    37 |    $$PARM.this74 = this;
            $$PARM.d75 = pred;
     8 |    shared.d@0 = pred;
     9 |    $$IRET3A = shared.r@0;
    37 |    r = shared.r@0;
    41 |    $$IRET3D = (~ shared.r@0 >> 31) * 4294967295u >> 17u ^ ~ shared.r@0 >> 16u;
    61 |    p = (~ shared.r@0 >> 31) * 4294967295u >> 17u ^ ~ shared.r@0 >> 16u;
    62 |    $$PARM.this72 = this;
            $$PARM.r73 = ((~ shared.r@0 >> 31) * 4294967295u >> 17u ^ ~ shared.r@0 >> 16u) - (($$RET51 << m) + ((1u << 15u - s) + s));
    48 |    $$PARM.r73 = (((~ shared.r@0 >> 31) * 4294967295u >> 17u ^ ~ shared.r@0 >> 16u) - (($$RET51 << m) + ((1u << 15u - s) + s)) >> 15u) * 4294967295u >> 17u ^ ((~ shared.r@0 >> 31) * 4294967295u >> 17u ^ ~ shared.r@0 >> 16u) - (($$RET51 << m) + ((1u << 15u - s) + s));
    50 |    $$PARM.this6C = this;
            $$PARM.r6D = ~ ((((~ shared.r@0 >> 31) * 4294967295u >> 17u ^ ~ shared.r@0 >> 16u) - (($$RET51 << m) + ((1u << 15u - s) + s)) >> 15u) * 4294967295u >> 17u ^ ((~ shared.r@0 >> 31) * 4294967295u >> 17u ^ ~ shared.r@0 >> 16u) - (($$RET51 << m) + ((1u << 15u - s) + s))) << 16u;
    24 |    shared.r@0 = ~ ((((~ shared.r@0 >> 31) * 4294967295u >> 17u ^ ~ shared.r@0 >> 16u) - (($$RET51 << m) + ((1u << 15u - s) + s)) >> 15u) * 4294967295u >> 17u ^ ((~ shared.r@0 >> 31) * 4294967295u >> 17u ^ ~ shared.r@0 >> 16u) - (($$RET51 << m) + ((1u << 15u - s) + s))) << 16u;
    25 |    $$IRET36 = shared.d@0;
    50 |    $$RET6B = shared.d@0;
    51 |    $$IRET39 = shared.d@0;
    62 |    $$RET52 = shared.d@0;
    63 |    rstr = shared.d@0;
            return rstr;
    64 |  lab_9:
    66 |    $$PARM.this7C = this;
            $$PARM.d7D = pred;
    58 |    $$PARM.this76 = this;
            $$PARM.d77 = pred;
     8 |    shared.d@0 = pred;
     9 |    $$IRET3B = shared.r@0;
    58 |    r = shared.r@0;
    60 |    $$PARM.this6E = this;
            $$PARM.r6F = (shared.r@0 >> 16u) << 16u;
    24 |    shared.r@0 = (shared.r@0 >> 16u) << 16u;
    25 |    $$IRET37 = shared.d@0;
    60 |    $$RET6C = shared.d@0;
    61 |    $$IRET3E = shared.d@0;
    66 |    $$RET53 = shared.d@0;
            rstr = shared.d@0;
            return rstr;
    67 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        79             6             2    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder12decode_shiftEj" 
                                          that may have side effects.
        79             6             1    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder12decode_shiftEj" 
                                          that may have side effects.

    47 |  float PCdecoder<float, PCmap<float, 24u, void>, true>::decode(float, unsigned int)(PCdecoder<float,PCmap<float,24,void>,1> *this, float pred, unsigned int context)
    48 |  {
    50 |    s = RCdecoder::decode(RCmodel*)(*((char * *)((char *)this + 8)),((char * *)(*((char * *)((char *)this + 16))))[(long long) context]);
    51 |    if (!(s > 24u)) goto lab_1;
    53 |    __627 = *((char * *)((char *)this + 8));
            __626 = (s - 24u) - 1u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_5;
            $$CIV5A = 0ll;
            do {   /* id=2 guarded */ /* ~3 */ 
              /* region = 20 */
              /* bump-normalized */
     7 |      if (!(__626 > 16u)) goto lab_6;
     3 |      $$RET54 = RCdecoder::decode_shift(unsigned int)(__627,16u);
     8 |      s = s + ($$RET54 << m);
     9 |      m = m + 16u;
    10 |      __626 = __626 - 16u;
    11 |    lab_6:
     6 |      $$CIV5A = $$CIV5A + 1ll;
            } while ((unsigned long long) $$CIV5A < 1ull);    /* ~3 */
          lab_5:
    12 |    $$RET55 = RCdecoder::decode_shift(unsigned int)(__627,__626);
    54 |    $$PARM.this66 = this;
            $$PARM.d67 = pred;
    37 |    $$PARM.this62 = this;
            $$PARM.d63 = pred;
     8 |    shared.d@0 = pred;
     9 |    $$IRET31 = shared.r@0;
    37 |    r = shared.r@0;
    41 |    $$IRET33 = (~ shared.r@0 >> 31) * 4294967295u >> 9u ^ ~ shared.r@0 >> 8u;
    54 |    p = (~ shared.r@0 >> 31) * 4294967295u >> 9u ^ ~ shared.r@0 >> 8u;
    55 |    $$PARM.this5E = this;
            $$PARM.r5F = (s + (1u << (s - 24u) - 1u)) + (($$RET55 << m) + ((~ shared.r@0 >> 31) * 4294967295u >> 9u ^ ~ shared.r@0 >> 8u));
    48 |    $$PARM.r5F = ((s + (1u << (s - 24u) - 1u)) + (($$RET55 << m) + ((~ shared.r@0 >> 31) * 4294967295u >> 9u ^ ~ shared.r@0 >> 8u)) >> 23u) * 4294967295u >> 9u ^ (s + (1u << (s - 24u) - 1u)) + (($$RET55 << m) + ((~ shared.r@0 >> 31) * 4294967295u >> 9u ^ ~ shared.r@0 >> 8u));
    50 |    $$PARM.this5A = this;
            $$PARM.r5B = ~ (((s + (1u << (s - 24u) - 1u)) + (($$RET55 << m) + ((~ shared.r@0 >> 31) * 4294967295u >> 9u ^ ~ shared.r@0 >> 8u)) >> 23u) * 4294967295u >> 9u ^ (s + (1u << (s - 24u) - 1u)) + (($$RET55 << m) + ((~ shared.r@0 >> 31) * 4294967295u >> 9u ^ ~ shared.r@0 >> 8u))) << 8u;
    24 |    shared.r@0 = ~ (((s + (1u << (s - 24u) - 1u)) + (($$RET55 << m) + ((~ shared.r@0 >> 31) * 4294967295u >> 9u ^ ~ shared.r@0 >> 8u)) >> 23u) * 4294967295u >> 9u ^ (s + (1u << (s - 24u) - 1u)) + (($$RET55 << m) + ((~ shared.r@0 >> 31) * 4294967295u >> 9u ^ ~ shared.r@0 >> 8u))) << 8u;
    25 |    $$IRET2D = shared.d@0;
    50 |    $$RET6D = shared.d@0;
    51 |    $$IRET2F = shared.d@0;
    55 |    $$RET56 = shared.d@0;
    56 |    rstr = shared.d@0;
            return rstr;
    57 |  lab_1:
    58 |    if (!(s < 24u)) goto lab_9;
    60 |    __631 = *((char * *)((char *)this + 8));
            __630 = 23u - s;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_13;
            $$CIV5B = 0ll;
            do {   /* id=1 guarded */ /* ~11 */ 
              /* region = 21 */
              /* bump-normalized */
     7 |      if (!(__630 > 16u)) goto lab_14;
     3 |      $$RET57 = RCdecoder::decode_shift(unsigned int)(__631,16u);
     8 |      s = s + ($$RET57 << m);
     9 |      m = m + 16u;
    10 |      __630 = __630 - 16u;
    11 |    lab_14:
     6 |      $$CIV5B = $$CIV5B + 1ll;
            } while ((unsigned long long) $$CIV5B < 1ull);    /* ~11 */
          lab_13:
    12 |    $$RET58 = RCdecoder::decode_shift(unsigned int)(__631,__630);
    61 |    $$PARM.this68 = this;
            $$PARM.d69 = pred;
    37 |    $$PARM.this62 = this;
            $$PARM.d63 = pred;
     8 |    shared.d@0 = pred;
     9 |    $$IRET31 = shared.r@0;
    37 |    r = shared.r@0;
    41 |    $$IRET34 = (~ shared.r@0 >> 31) * 4294967295u >> 9u ^ ~ shared.r@0 >> 8u;
    61 |    p = (~ shared.r@0 >> 31) * 4294967295u >> 9u ^ ~ shared.r@0 >> 8u;
    62 |    $$PARM.this60 = this;
            $$PARM.r61 = ((~ shared.r@0 >> 31) * 4294967295u >> 9u ^ ~ shared.r@0 >> 8u) - (($$RET58 << m) + ((1u << 23u - s) + s));
    48 |    $$PARM.r61 = (((~ shared.r@0 >> 31) * 4294967295u >> 9u ^ ~ shared.r@0 >> 8u) - (($$RET58 << m) + ((1u << 23u - s) + s)) >> 23u) * 4294967295u >> 9u ^ ((~ shared.r@0 >> 31) * 4294967295u >> 9u ^ ~ shared.r@0 >> 8u) - (($$RET58 << m) + ((1u << 23u - s) + s));
    50 |    $$PARM.this5A = this;
            $$PARM.r5B = ~ ((((~ shared.r@0 >> 31) * 4294967295u >> 9u ^ ~ shared.r@0 >> 8u) - (($$RET58 << m) + ((1u << 23u - s) + s)) >> 23u) * 4294967295u >> 9u ^ ((~ shared.r@0 >> 31) * 4294967295u >> 9u ^ ~ shared.r@0 >> 8u) - (($$RET58 << m) + ((1u << 23u - s) + s))) << 8u;
    24 |    shared.r@0 = ~ ((((~ shared.r@0 >> 31) * 4294967295u >> 9u ^ ~ shared.r@0 >> 8u) - (($$RET58 << m) + ((1u << 23u - s) + s)) >> 23u) * 4294967295u >> 9u ^ ((~ shared.r@0 >> 31) * 4294967295u >> 9u ^ ~ shared.r@0 >> 8u) - (($$RET58 << m) + ((1u << 23u - s) + s))) << 8u;
    25 |    $$IRET2D = shared.d@0;
    50 |    $$RET6D = shared.d@0;
    51 |    $$IRET30 = shared.d@0;
    62 |    $$RET59 = shared.d@0;
    63 |    rstr = shared.d@0;
            return rstr;
    64 |  lab_9:
    66 |    $$PARM.this6A = this;
            $$PARM.d6B = pred;
    58 |    $$PARM.this64 = this;
            $$PARM.d65 = pred;
     8 |    shared.d@0 = pred;
     9 |    $$IRET32 = shared.r@0;
    58 |    r = shared.r@0;
    60 |    $$PARM.this5C = this;
            $$PARM.r5D = (shared.r@0 >> 8u) << 8u;
    24 |    shared.r@0 = (shared.r@0 >> 8u) << 8u;
    25 |    $$IRET2E = shared.d@0;
    60 |    $$RET6E = shared.d@0;
    61 |    $$IRET35 = shared.d@0;
    66 |    $$RET5A = shared.d@0;
            rstr = shared.d@0;
            return rstr;
    67 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        79             6             2    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder12decode_shiftEj" 
                                          that may have side effects.
        79             6             1    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder12decode_shiftEj" 
                                          that may have side effects.

    47 |  float PCdecoder<float, PCmap<float, 32u, void>, true>::decode(float, unsigned int)(PCdecoder<float,PCmap<float,32,void>,1> *this, float pred, unsigned int context)
    48 |  {
    50 |    s = RCdecoder::decode(RCmodel*)(*((char * *)((char *)this + 8)),((char * *)(*((char * *)((char *)this + 16))))[(long long) context]);
    51 |    if (!(s > 32u)) goto lab_1;
    53 |    __637 = *((char * *)((char *)this + 8));
            __636 = (s - 32u) - 1u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_5;
            $$CIV5C = 0ll;
            do {   /* id=2 guarded */ /* ~3 */ 
              /* region = 20 */
              /* bump-normalized */
     7 |      if (!(__636 > 16u)) goto lab_6;
     3 |      $$RET5B = RCdecoder::decode_shift(unsigned int)(__637,16u);
     8 |      s = s + ($$RET5B << m);
     9 |      m = m + 16u;
    10 |      __636 = __636 - 16u;
    11 |    lab_6:
     6 |      $$CIV5C = $$CIV5C + 1ll;
            } while ((unsigned long long) $$CIV5C < 1ull);    /* ~3 */
          lab_5:
    12 |    $$RET5C = RCdecoder::decode_shift(unsigned int)(__637,__636);
    54 |    $$PARM.this54 = this;
            $$PARM.d55 = pred;
    37 |    $$PARM.this50 = this;
            $$PARM.d51 = pred;
     8 |    shared.d@0 = pred;
     9 |    $$IRET28 = shared.r@0;
    37 |    r = shared.r@0;
    41 |    $$IRET2A = (~ shared.r@0 >> 31u) * 4294967295u >> 1u ^ ~ shared.r@0;
    54 |    p = (~ shared.r@0 >> 31u) * 4294967295u >> 1u ^ ~ shared.r@0;
    55 |    $$PARM.this4C = this;
            $$PARM.r4D = (s + (1u << (s - 32u) - 1u)) + (($$RET5C << m) + ((~ shared.r@0 >> 31u) * 4294967295u >> 1u ^ ~ shared.r@0));
    48 |    $$PARM.r4D = ((s + (1u << (s - 32u) - 1u)) + (($$RET5C << m) + ((~ shared.r@0 >> 31u) * 4294967295u >> 1u ^ ~ shared.r@0)) >> 31u) * 4294967295u >> 1u ^ (s + (1u << (s - 32u) - 1u)) + (($$RET5C << m) + ((~ shared.r@0 >> 31u) * 4294967295u >> 1u ^ ~ shared.r@0));
    50 |    $$PARM.this48 = this;
            $$PARM.r49 = ~ (((s + (1u << (s - 32u) - 1u)) + (($$RET5C << m) + ((~ shared.r@0 >> 31u) * 4294967295u >> 1u ^ ~ shared.r@0)) >> 31u) * 4294967295u >> 1u ^ (s + (1u << (s - 32u) - 1u)) + (($$RET5C << m) + ((~ shared.r@0 >> 31u) * 4294967295u >> 1u ^ ~ shared.r@0)));
    24 |    shared.r@0 = ~ (((s + (1u << (s - 32u) - 1u)) + (($$RET5C << m) + ((~ shared.r@0 >> 31u) * 4294967295u >> 1u ^ ~ shared.r@0)) >> 31u) * 4294967295u >> 1u ^ (s + (1u << (s - 32u) - 1u)) + (($$RET5C << m) + ((~ shared.r@0 >> 31u) * 4294967295u >> 1u ^ ~ shared.r@0)));
    25 |    $$IRET24 = shared.d@0;
    50 |    $$RET6F = shared.d@0;
    51 |    $$IRET26 = shared.d@0;
    55 |    $$RET5D = shared.d@0;
    56 |    rstr = shared.d@0;
            return rstr;
    57 |  lab_1:
    58 |    if (!(s < 32u)) goto lab_9;
    60 |    __641 = *((char * *)((char *)this + 8));
            __640 = 31u - s;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_13;
            $$CIV5D = 0ll;
            do {   /* id=1 guarded */ /* ~11 */ 
              /* region = 21 */
              /* bump-normalized */
     7 |      if (!(__640 > 16u)) goto lab_14;
     3 |      $$RET5E = RCdecoder::decode_shift(unsigned int)(__641,16u);
     8 |      s = s + ($$RET5E << m);
     9 |      m = m + 16u;
    10 |      __640 = __640 - 16u;
    11 |    lab_14:
     6 |      $$CIV5D = $$CIV5D + 1ll;
            } while ((unsigned long long) $$CIV5D < 1ull);    /* ~11 */
          lab_13:
    12 |    $$RET5F = RCdecoder::decode_shift(unsigned int)(__641,__640);
    61 |    $$PARM.this56 = this;
            $$PARM.d57 = pred;
    37 |    $$PARM.this50 = this;
            $$PARM.d51 = pred;
     8 |    shared.d@0 = pred;
     9 |    $$IRET28 = shared.r@0;
    37 |    r = shared.r@0;
    41 |    $$IRET2B = (~ shared.r@0 >> 31u) * 4294967295u >> 1u ^ ~ shared.r@0;
    61 |    p = (~ shared.r@0 >> 31u) * 4294967295u >> 1u ^ ~ shared.r@0;
    62 |    $$PARM.this4E = this;
            $$PARM.r4F = ((~ shared.r@0 >> 31u) * 4294967295u >> 1u ^ ~ shared.r@0) - (($$RET5F << m) + ((1u << 31u - s) + s));
    48 |    $$PARM.r4F = (((~ shared.r@0 >> 31u) * 4294967295u >> 1u ^ ~ shared.r@0) - (($$RET5F << m) + ((1u << 31u - s) + s)) >> 31u) * 4294967295u >> 1u ^ ((~ shared.r@0 >> 31u) * 4294967295u >> 1u ^ ~ shared.r@0) - (($$RET5F << m) + ((1u << 31u - s) + s));
    50 |    $$PARM.this48 = this;
            $$PARM.r49 = ~ ((((~ shared.r@0 >> 31u) * 4294967295u >> 1u ^ ~ shared.r@0) - (($$RET5F << m) + ((1u << 31u - s) + s)) >> 31u) * 4294967295u >> 1u ^ ((~ shared.r@0 >> 31u) * 4294967295u >> 1u ^ ~ shared.r@0) - (($$RET5F << m) + ((1u << 31u - s) + s)));
    24 |    shared.r@0 = ~ ((((~ shared.r@0 >> 31u) * 4294967295u >> 1u ^ ~ shared.r@0) - (($$RET5F << m) + ((1u << 31u - s) + s)) >> 31u) * 4294967295u >> 1u ^ ((~ shared.r@0 >> 31u) * 4294967295u >> 1u ^ ~ shared.r@0) - (($$RET5F << m) + ((1u << 31u - s) + s)));
    25 |    $$IRET24 = shared.d@0;
    50 |    $$RET6F = shared.d@0;
    51 |    $$IRET27 = shared.d@0;
    62 |    $$RET60 = shared.d@0;
    63 |    rstr = shared.d@0;
            return rstr;
    64 |  lab_9:
    66 |    $$PARM.this58 = this;
            $$PARM.d59 = pred;
    58 |    $$PARM.this52 = this;
            $$PARM.d53 = pred;
     8 |    shared.d@0 = pred;
     9 |    $$IRET29 = shared.r@0;
    58 |    r = shared.r@0;
    60 |    $$PARM.this4A = this;
            $$PARM.r4B = shared.r@0;
    24 |    shared.r@0 = shared.r@0;
    25 |    $$IRET25 = shared.d@0;
    60 |    $$RET70 = shared.d@0;
    61 |    $$IRET2C = shared.d@0;
    66 |    $$RET61 = shared.d@0;
            rstr = shared.d@0;
            return rstr;
    67 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        79             6             2    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder12decode_shiftEj" 
                                          that may have side effects.
        79             6             1    Loop cannot be automatically parallelized.  Loop 
                                          contains a call to "_ZN9RCdecoder12decode_shiftEj" 
                                          that may have side effects.

    98 |  unsigned long long PCmap<double, 16u, void>::forward(double) const(char * this, double d)
    99 |  {
   100 |    $$PARM.this3E = this;
            $$PARM.d3F = d;
    71 |    shared.d@0 = $$PARM.d3F;
    72 |    $$IRET1F = shared.r@0;
   100 |    r = $$IRET1F;
   104 |    rstr = (~ r >> 63) * 18446744073709551615ull >> 49u ^ ~ r >> 48u;
            return rstr;
   105 |  } /* function */ 


   109 |  double PCmap<double, 16u, void>::inverse(unsigned long long) const(char * this, unsigned long long r)
   110 |  {
   111 |    r = (r >> 15u) * 18446744073709551615ull >> 49u ^ r;
   113 |    $$PARM.this36 = this;
            $$PARM.r37 = ~ r << 48u;
    87 |    shared.r@0 = $$PARM.r37;
    88 |    $$IRET1B = shared.d@0;
   113 |    $$RET62 = $$IRET1B;
   114 |    rstr = $$RET62;
            return rstr;
   115 |  } /* function */ 


   119 |  double PCmap<double, 16u, void>::identity(double) const(char * this, double d)
   120 |  {
   121 |    $$PARM.this40 = this;
            $$PARM.d41 = d;
    71 |    shared.d@0 = $$PARM.d41;
    72 |    $$IRET20 = shared.r@0;
   121 |    r = $$IRET20;
   123 |    $$PARM.this38 = this;
            $$PARM.r39 = (r >> 48u) << 48u;
    87 |    shared.r@0 = $$PARM.r39;
    88 |    $$IRET1C = shared.d@0;
   123 |    $$RET63 = $$IRET1C;
   124 |    rstr = $$RET63;
            return rstr;
   125 |  } /* function */ 


    98 |  unsigned long long PCmap<double, 32u, void>::forward(double) const(char * this, double d)
    99 |  {
   100 |    $$PARM.this2C = this;
            $$PARM.d2D = d;
    71 |    shared.d@0 = $$PARM.d2D;
    72 |    $$IRET16 = shared.r@0;
   100 |    r = $$IRET16;
   104 |    rstr = (~ r >> 63) * 18446744073709551615ull >> 33u ^ ~ r >> 32u;
            return rstr;
   105 |  } /* function */ 


   109 |  double PCmap<double, 32u, void>::inverse(unsigned long long) const(char * this, unsigned long long r)
   110 |  {
   111 |    r = (r >> 31u) * 18446744073709551615ull >> 33u ^ r;
   113 |    $$PARM.this24 = this;
            $$PARM.r25 = ~ r << 32u;
    87 |    shared.r@0 = $$PARM.r25;
    88 |    $$IRET12 = shared.d@0;
   113 |    $$RET64 = $$IRET12;
   114 |    rstr = $$RET64;
            return rstr;
   115 |  } /* function */ 


   119 |  double PCmap<double, 32u, void>::identity(double) const(char * this, double d)
   120 |  {
   121 |    $$PARM.this2E = this;
            $$PARM.d2F = d;
    71 |    shared.d@0 = $$PARM.d2F;
    72 |    $$IRET17 = shared.r@0;
   121 |    r = $$IRET17;
   123 |    $$PARM.this26 = this;
            $$PARM.r27 = (r >> 32u) << 32u;
    87 |    shared.r@0 = $$PARM.r27;
    88 |    $$IRET13 = shared.d@0;
   123 |    $$RET65 = $$IRET13;
   124 |    rstr = $$RET65;
            return rstr;
   125 |  } /* function */ 


    98 |  unsigned long long PCmap<double, 48u, void>::forward(double) const(char * this, double d)
    99 |  {
   100 |    $$PARM.this1A = this;
            $$PARM.d1B = d;
    71 |    shared.d@0 = $$PARM.d1B;
    72 |    $$IRETD = shared.r@0;
   100 |    r = $$IRETD;
   104 |    rstr = (~ r >> 63) * 18446744073709551615ull >> 17u ^ ~ r >> 16u;
            return rstr;
   105 |  } /* function */ 


   109 |  double PCmap<double, 48u, void>::inverse(unsigned long long) const(char * this, unsigned long long r)
   110 |  {
   111 |    r = (r >> 47u) * 18446744073709551615ull >> 17u ^ r;
   113 |    $$PARM.this12 = this;
            $$PARM.r13 = ~ r << 16u;
    87 |    shared.r@0 = $$PARM.r13;
    88 |    $$IRET9 = shared.d@0;
   113 |    $$RET66 = $$IRET9;
   114 |    rstr = $$RET66;
            return rstr;
   115 |  } /* function */ 


   119 |  double PCmap<double, 48u, void>::identity(double) const(char * this, double d)
   120 |  {
   121 |    $$PARM.this1C = this;
            $$PARM.d1D = d;
    71 |    shared.d@0 = $$PARM.d1D;
    72 |    $$IRETE = shared.r@0;
   121 |    r = $$IRETE;
   123 |    $$PARM.this14 = this;
            $$PARM.r15 = (r >> 16u) << 16u;
    87 |    shared.r@0 = $$PARM.r15;
    88 |    $$IRETA = shared.d@0;
   123 |    $$RET67 = $$IRETA;
   124 |    rstr = $$RET67;
            return rstr;
   125 |  } /* function */ 


    98 |  unsigned long long PCmap<double, 64u, void>::forward(double) const(char * this, double d)
    99 |  {
   100 |    $$PARM.this8 = this;
            $$PARM.d9 = d;
    71 |    shared.d@0 = $$PARM.d9;
    72 |    $$IRET4 = shared.r@0;
   100 |    r = $$IRET4;
   104 |    rstr = (~ r >> 63u) * 18446744073709551615ull >> 1u ^ ~ r;
            return rstr;
   105 |  } /* function */ 


   109 |  double PCmap<double, 64u, void>::inverse(unsigned long long) const(char * this, unsigned long long r)
   110 |  {
   111 |    r = (r >> 63u) * 18446744073709551615ull >> 1u ^ r;
   113 |    $$PARM.this0 = this;
            $$PARM.r1 = ~ r;
    87 |    shared.r@0 = $$PARM.r1;
    88 |    $$IRET0 = shared.d@0;
   113 |    $$RET68 = $$IRET0;
   114 |    rstr = $$RET68;
            return rstr;
   115 |  } /* function */ 


   119 |  double PCmap<double, 64u, void>::identity(double) const(char * this, double d)
   120 |  {
   121 |    $$PARM.thisA = this;
            $$PARM.dB = d;
    71 |    shared.d@0 = $$PARM.dB;
    72 |    $$IRET5 = shared.r@0;
   121 |    r = $$IRET5;
   123 |    $$PARM.this2 = this;
            $$PARM.r3 = r;
    87 |    shared.r@0 = $$PARM.r3;
    88 |    $$IRET1 = shared.d@0;
   123 |    $$RET69 = $$IRET1;
   124 |    rstr = $$RET69;
            return rstr;
   125 |  } /* function */ 


    35 |  unsigned int PCmap<float, 8u, void>::forward(float) const(char * this, float d)
    36 |  {
    37 |    $$PARM.this82 = this;
            $$PARM.d83 = d;
     8 |    shared.d@0 = $$PARM.d83;
     9 |    $$IRET41 = shared.r@0;
    37 |    r = $$IRET41;
    41 |    rstr = (~ r >> 31) * 4294967295u >> 25u ^ ~ r >> 24u;
            return rstr;
    42 |  } /* function */ 


    46 |  float PCmap<float, 8u, void>::inverse(unsigned int) const(char * this, unsigned int r)
    47 |  {
    48 |    r = (r >> 7u) * 4294967295u >> 25u ^ r;
    50 |    $$PARM.this7E = this;
            $$PARM.r7F = ~ r << 24u;
    24 |    shared.r@0 = $$PARM.r7F;
    25 |    $$IRET3F = shared.d@0;
    50 |    $$RET6A = $$IRET3F;
    51 |    rstr = $$RET6A;
            return rstr;
    52 |  } /* function */ 


    35 |  unsigned int PCmap<float, 16u, void>::forward(float) const(char * this, float d)
    36 |  {
    37 |    $$PARM.this74 = this;
            $$PARM.d75 = d;
     8 |    shared.d@0 = $$PARM.d75;
     9 |    $$IRET3A = shared.r@0;
    37 |    r = $$IRET3A;
    41 |    rstr = (~ r >> 31) * 4294967295u >> 17u ^ ~ r >> 16u;
            return rstr;
    42 |  } /* function */ 


    46 |  float PCmap<float, 16u, void>::inverse(unsigned int) const(char * this, unsigned int r)
    47 |  {
    48 |    r = (r >> 15u) * 4294967295u >> 17u ^ r;
    50 |    $$PARM.this6C = this;
            $$PARM.r6D = ~ r << 16u;
    24 |    shared.r@0 = $$PARM.r6D;
    25 |    $$IRET36 = shared.d@0;
    50 |    $$RET6B = $$IRET36;
    51 |    rstr = $$RET6B;
            return rstr;
    52 |  } /* function */ 


    56 |  float PCmap<float, 16u, void>::identity(float) const(char * this, float d)
    57 |  {
    58 |    $$PARM.this76 = this;
            $$PARM.d77 = d;
     8 |    shared.d@0 = $$PARM.d77;
     9 |    $$IRET3B = shared.r@0;
    58 |    r = $$IRET3B;
    60 |    $$PARM.this6E = this;
            $$PARM.r6F = (r >> 16u) << 16u;
    24 |    shared.r@0 = $$PARM.r6F;
    25 |    $$IRET37 = shared.d@0;
    60 |    $$RET6C = $$IRET37;
    61 |    rstr = $$RET6C;
            return rstr;
    62 |  } /* function */ 


    35 |  unsigned int PCmap<float, 24u, void>::forward(float) const(char * this, float d)
    36 |  {
    37 |    $$PARM.this62 = this;
            $$PARM.d63 = d;
     8 |    shared.d@0 = $$PARM.d63;
     9 |    $$IRET31 = shared.r@0;
    37 |    r = $$IRET31;
    41 |    rstr = (~ r >> 31) * 4294967295u >> 9u ^ ~ r >> 8u;
            return rstr;
    42 |  } /* function */ 


    46 |  float PCmap<float, 24u, void>::inverse(unsigned int) const(char * this, unsigned int r)
    47 |  {
    48 |    r = (r >> 23u) * 4294967295u >> 9u ^ r;
    50 |    $$PARM.this5A = this;
            $$PARM.r5B = ~ r << 8u;
    24 |    shared.r@0 = $$PARM.r5B;
    25 |    $$IRET2D = shared.d@0;
    50 |    $$RET6D = $$IRET2D;
    51 |    rstr = $$RET6D;
            return rstr;
    52 |  } /* function */ 


    56 |  float PCmap<float, 24u, void>::identity(float) const(char * this, float d)
    57 |  {
    58 |    $$PARM.this64 = this;
            $$PARM.d65 = d;
     8 |    shared.d@0 = $$PARM.d65;
     9 |    $$IRET32 = shared.r@0;
    58 |    r = $$IRET32;
    60 |    $$PARM.this5C = this;
            $$PARM.r5D = (r >> 8u) << 8u;
    24 |    shared.r@0 = $$PARM.r5D;
    25 |    $$IRET2E = shared.d@0;
    60 |    $$RET6E = $$IRET2E;
    61 |    rstr = $$RET6E;
            return rstr;
    62 |  } /* function */ 


    35 |  unsigned int PCmap<float, 32u, void>::forward(float) const(char * this, float d)
    36 |  {
    37 |    $$PARM.this50 = this;
            $$PARM.d51 = d;
     8 |    shared.d@0 = $$PARM.d51;
     9 |    $$IRET28 = shared.r@0;
    37 |    r = $$IRET28;
    41 |    rstr = (~ r >> 31u) * 4294967295u >> 1u ^ ~ r;
            return rstr;
    42 |  } /* function */ 


    46 |  float PCmap<float, 32u, void>::inverse(unsigned int) const(char * this, unsigned int r)
    47 |  {
    48 |    r = (r >> 31u) * 4294967295u >> 1u ^ r;
    50 |    $$PARM.this48 = this;
            $$PARM.r49 = ~ r;
    24 |    shared.r@0 = $$PARM.r49;
    25 |    $$IRET24 = shared.d@0;
    50 |    $$RET6F = $$IRET24;
    51 |    rstr = $$RET6F;
            return rstr;
    52 |  } /* function */ 


    56 |  float PCmap<float, 32u, void>::identity(float) const(char * this, float d)
    57 |  {
    58 |    $$PARM.this52 = this;
            $$PARM.d53 = d;
     8 |    shared.d@0 = $$PARM.d53;
     9 |    $$IRET29 = shared.r@0;
    58 |    r = $$IRET29;
    60 |    $$PARM.this4A = this;
            $$PARM.r4B = r;
    24 |    shared.r@0 = $$PARM.r4B;
    25 |    $$IRET25 = shared.d@0;
    60 |    $$RET70 = $$IRET25;
    61 |    rstr = $$RET70;
            return rstr;
    62 |  } /* function */ 


    66 |  unsigned long long PCmap<double, 16u, void>::fcast(double) const(char * this, double d)
    67 |  {
    71 |    shared.d@0 = d;
    72 |    rstr = shared.r@0;
            return rstr;
    78 |  } /* function */ 


    82 |  double PCmap<double, 16u, void>::icast(unsigned long long) const(char * this, unsigned long long r)
    83 |  {
    87 |    shared.r@0 = r;
    88 |    rstr = shared.d@0;
            return rstr;
    94 |  } /* function */ 


    66 |  unsigned long long PCmap<double, 32u, void>::fcast(double) const(char * this, double d)
    67 |  {
    71 |    shared.d@0 = d;
    72 |    rstr = shared.r@0;
            return rstr;
    78 |  } /* function */ 


    82 |  double PCmap<double, 32u, void>::icast(unsigned long long) const(char * this, unsigned long long r)
    83 |  {
    87 |    shared.r@0 = r;
    88 |    rstr = shared.d@0;
            return rstr;
    94 |  } /* function */ 


    66 |  unsigned long long PCmap<double, 48u, void>::fcast(double) const(char * this, double d)
    67 |  {
    71 |    shared.d@0 = d;
    72 |    rstr = shared.r@0;
            return rstr;
    78 |  } /* function */ 


    82 |  double PCmap<double, 48u, void>::icast(unsigned long long) const(char * this, unsigned long long r)
    83 |  {
    87 |    shared.r@0 = r;
    88 |    rstr = shared.d@0;
            return rstr;
    94 |  } /* function */ 


    66 |  unsigned long long PCmap<double, 64u, void>::fcast(double) const(char * this, double d)
    67 |  {
    71 |    shared.d@0 = d;
    72 |    rstr = shared.r@0;
            return rstr;
    78 |  } /* function */ 


    82 |  double PCmap<double, 64u, void>::icast(unsigned long long) const(char * this, unsigned long long r)
    83 |  {
    87 |    shared.r@0 = r;
    88 |    rstr = shared.d@0;
            return rstr;
    94 |  } /* function */ 


     3 |  unsigned int PCmap<float, 8u, void>::fcast(float) const(char * this, float d)
     4 |  {
     8 |    shared.d@0 = d;
     9 |    rstr = shared.r@0;
            return rstr;
    15 |  } /* function */ 


    19 |  float PCmap<float, 8u, void>::icast(unsigned int) const(char * this, unsigned int r)
    20 |  {
    24 |    shared.r@0 = r;
    25 |    rstr = shared.d@0;
            return rstr;
    31 |  } /* function */ 


     3 |  unsigned int PCmap<float, 16u, void>::fcast(float) const(char * this, float d)
     4 |  {
     8 |    shared.d@0 = d;
     9 |    rstr = shared.r@0;
            return rstr;
    15 |  } /* function */ 


    19 |  float PCmap<float, 16u, void>::icast(unsigned int) const(char * this, unsigned int r)
    20 |  {
    24 |    shared.r@0 = r;
    25 |    rstr = shared.d@0;
            return rstr;
    31 |  } /* function */ 


     3 |  unsigned int PCmap<float, 24u, void>::fcast(float) const(char * this, float d)
     4 |  {
     8 |    shared.d@0 = d;
     9 |    rstr = shared.r@0;
            return rstr;
    15 |  } /* function */ 


    19 |  float PCmap<float, 24u, void>::icast(unsigned int) const(char * this, unsigned int r)
    20 |  {
    24 |    shared.r@0 = r;
    25 |    rstr = shared.d@0;
            return rstr;
    31 |  } /* function */ 


     3 |  unsigned int PCmap<float, 32u, void>::fcast(float) const(char * this, float d)
     4 |  {
     8 |    shared.d@0 = d;
     9 |    rstr = shared.r@0;
            return rstr;
    15 |  } /* function */ 


    19 |  float PCmap<float, 32u, void>::icast(unsigned int) const(char * this, unsigned int r)
    20 |  {
    24 |    shared.r@0 = r;
    25 |    rstr = shared.d@0;
            return rstr;
    31 |  } /* function */ 


          char * RCmemdecoder::~RCmemdecoder()(RCdecoder *this)
          {
            *((char * *)this) = ((char *)&vtable for RCdecoder  + 16ll);
            rstr = this;
            return rstr;
          } /* function */ 


          char * RCfiledecoder::~RCfiledecoder()(RCdecoder *this)
          {
            *((char * *)this) = ((char *)&vtable for RCdecoder  + 16ll);
            rstr = this;
            return rstr;
          } /* function */ 


     9 |  char * RCdecoder::~RCdecoder()(RCdecoder *this)
          {
            *((char * *)this) = ((char *)&vtable for RCdecoder  + 16ll);
            operator delete(void*)(this)
            rstr = this;
            return rstr;
          } /* function */ 


          char * RCfiledecoder::~RCfiledecoder()(RCdecoder *this)
          {
            *((char * *)this) = ((char *)&vtable for RCdecoder  + 16ll);
            operator delete(void*)(this)
            rstr = this;
            return rstr;
          } /* function */ 


          char * RCmemdecoder::~RCmemdecoder()(RCdecoder *this)
          {
            *((char * *)this) = ((char *)&vtable for RCdecoder  + 16ll);
            operator delete(void*)(this)
            rstr = this;
            return rstr;
          } /* function */ 


     9 |  char * RCdecoder::~RCdecoder()(RCdecoder *this)
          {
            *((char * *)this) = ((char *)&vtable for RCdecoder  + 16ll);
            rstr = this;
            return rstr;
          } /* function */ 


    11 |  unsigned int RCfiledecoder::getbyte()(RCfiledecoder *this)
    12 |  {
    13 |    if (!(*((unsigned int *)((char *)this + 36)) == *((unsigned int *)((char *)this + 40)))) goto lab_1;
            $$RET71 = (unsigned int) fread((this + 44),1ull,4096ull,*((char * *)((char *)this + 24)));
    14 |    *((unsigned int *)((char *)this + 40)) = $$RET71;
    15 |    if ($$RET71 != 0u) goto lab_3;
    16 |    *((unsigned int *)((char *)this + 40)) = 1u;
    17 |    *((char *)((char *)this + 20)) = 1u;
    18 |    goto lab_5;
          lab_3:
    20 |    *((unsigned int *)((char *)this + 32)) = *((unsigned int *)((char *)this + 32)) + $$RET71;
          lab_5:
    21 |    *((unsigned int *)((char *)this + 36)) = 0u;
    22 |  lab_1:
    23 |    $$SFX0 = (unsigned int) ((char *)((char *)this + 44))[(long long) *((unsigned int *)((char *)this + 36))];
            *((unsigned int *)((char *)this + 36)) = *((unsigned int *)((char *)this + 36)) + 1u;
            rstr = $$SFX0;
            return rstr;
    24 |  } /* function */ 


    58 |  unsigned int RCmemdecoder::getbyte()(RCmemdecoder *this)
          {
            $$SFX1 = (unsigned int) *((char * *)((char *)this + 24))->(unsigned char).rns329.;
            *((char * *)((char *)this + 24)) = ((char *)*((char * *)((char *)this + 24))  + 1ll);
            rstr = $$SFX1;
            return rstr;
          } /* function */ 


   173 |  void read_header(RCdecoder*, unsigned int, unsigned int, unsigned int, unsigned int, int)(char * rd, unsigned int nx, unsigned int ny, unsigned int nz, unsigned int nf, int dp)
   181 |  {
   183 |    __2 = 8u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_8;
            $$CIV0 = 0ll;
            do {   /* id=10 guarded */ /* ~6 */ 
              /* region = 89 */
              /* bump-normalized */
     7 |      if (!(__2 > 16u)) goto lab_9;
     3 |      $$RET0 = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RET0 << m);
     9 |      m = m + 16u;
    10 |      __2 = __2 - 16u;
    11 |    lab_9:
     6 |      $$CIV0 = $$CIV0 + 1ll;
            } while ((unsigned long long) $$CIV0 < 1ull);    /* ~6 */
          lab_8:
    12 |    $$RET1 = RCdecoder::decode_shift(unsigned int)(rd,__2);
    13 |    if (102u != ($$RET1 << m) + s) goto lab_2;
   184 |    __6 = 8u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_13;
            $$CIV1 = 0ll;
            do {   /* id=9 guarded */ /* ~11 */ 
              /* region = 88 */
              /* bump-normalized */
     7 |      if (!(__6 > 16u)) goto lab_14;
     3 |      $$RET2 = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RET2 << m);
     9 |      m = m + 16u;
    10 |      __6 = __6 - 16u;
    11 |    lab_14:
     6 |      $$CIV1 = $$CIV1 + 1ll;
            } while ((unsigned long long) $$CIV1 < 1ull);    /* ~11 */
          lab_13:
    12 |    $$RET3 = RCdecoder::decode_shift(unsigned int)(rd,__6);
    13 |    if (112u != ($$RET3 << m) + s) goto lab_2;
   185 |    __10 = 8u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_18;
            $$CIV2 = 0ll;
            do {   /* id=8 guarded */ /* ~16 */ 
              /* region = 87 */
              /* bump-normalized */
     7 |      if (!(__10 > 16u)) goto lab_19;
     3 |      $$RET4 = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RET4 << m);
     9 |      m = m + 16u;
    10 |      __10 = __10 - 16u;
    11 |    lab_19:
     6 |      $$CIV2 = $$CIV2 + 1ll;
            } while ((unsigned long long) $$CIV2 < 1ull);    /* ~16 */
          lab_18:
    12 |    $$RET5 = RCdecoder::decode_shift(unsigned int)(rd,__10);
    13 |    if (122u != ($$RET5 << m) + s) goto lab_2;
   186 |    __14 = 8u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_23;
            $$CIV3 = 0ll;
            do {   /* id=7 guarded */ /* ~21 */ 
              /* region = 86 */
              /* bump-normalized */
     7 |      if (!(__14 > 16u)) goto lab_24;
     3 |      $$RET6 = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RET6 << m);
     9 |      m = m + 16u;
    10 |      __14 = __14 - 16u;
    11 |    lab_24:
     6 |      $$CIV3 = $$CIV3 + 1ll;
            } while ((unsigned long long) $$CIV3 < 1ull);    /* ~21 */
          lab_23:
    12 |    $$RET7 = RCdecoder::decode_shift(unsigned int)(rd,__14);
    13 |    if (!(0u != ($$RET7 << m) + s)) goto lab_1;
          lab_2:
   187 |    fprintf(stderr,"fpzip: not an fpz stream/n");
   188 |    abort()
            return;
   189 |  lab_1:
   192 |    __18 = 16u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_31;
            $$CIV4 = 0ll;
            do {   /* id=6 guarded */ /* ~29 */ 
              /* region = 85 */
              /* bump-normalized */
     7 |      if (!(__18 > 16u)) goto lab_32;
     3 |      $$RET8 = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RET8 << m);
     9 |      m = m + 16u;
    10 |      __18 = __18 - 16u;
    11 |    lab_32:
     6 |      $$CIV4 = $$CIV4 + 1ll;
            } while ((unsigned long long) $$CIV4 < 1ull);    /* ~29 */
          lab_31:
    12 |    $$RET9 = RCdecoder::decode_shift(unsigned int)(rd,__18);
    13 |    if (257u != ($$RET9 << m) + s) goto lab_27;
   193 |    __22 = 16u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_36;
            $$CIV5 = 0ll;
            do {   /* id=5 guarded */ /* ~34 */ 
              /* region = 84 */
              /* bump-normalized */
     7 |      if (!(__22 > 16u)) goto lab_37;
     3 |      $$RETA = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RETA << m);
     9 |      m = m + 16u;
    10 |      __22 = __22 - 16u;
    11 |    lab_37:
     6 |      $$CIV5 = $$CIV5 + 1ll;
            } while ((unsigned long long) $$CIV5 < 1ull);    /* ~34 */
          lab_36:
    12 |    $$RETB = RCdecoder::decode_shift(unsigned int)(rd,__22);
    13 |    if (!(1u != ($$RETB << m) + s)) goto lab_26;
          lab_27:
   194 |    fprintf(stderr,"fpzip: format version not supported/n");
   195 |    abort()
            return;
   196 |  lab_26:
   199 |    __26 = 32u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_46;
            $$CIV6 = 0ll;
            do {   /* id=4 guarded */ /* ~44 */ 
              /* region = 83 */
              /* bump-normalized */
     7 |      if (!(__26 > 16u)) goto lab_47;
     3 |      $$RETC = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RETC << m);
     9 |      m = m + 16u;
    10 |      __26 = __26 - 16u;
    11 |    lab_47:
     6 |      $$CIV6 = $$CIV6 + 1ll;
            } while ((unsigned long long) $$CIV6 < 1ull);    /* ~44 */
          lab_46:
    12 |    $$RETD = RCdecoder::decode_shift(unsigned int)(rd,__26);
    13 |    if (nf != ($$RETD << m) + s) goto lab_40;
   200 |    __30 = 32u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_51;
            $$CIV7 = 0ll;
            do {   /* id=3 guarded */ /* ~49 */ 
              /* region = 82 */
              /* bump-normalized */
     7 |      if (!(__30 > 16u)) goto lab_52;
     3 |      $$RETE = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RETE << m);
     9 |      m = m + 16u;
    10 |      __30 = __30 - 16u;
    11 |    lab_52:
     6 |      $$CIV7 = $$CIV7 + 1ll;
            } while ((unsigned long long) $$CIV7 < 1ull);    /* ~49 */
          lab_51:
    12 |    $$RETF = RCdecoder::decode_shift(unsigned int)(rd,__30);
    13 |    if (nz != ($$RETF << m) + s) goto lab_40;
   201 |    __34 = 32u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_56;
            $$CIV8 = 0ll;
            do {   /* id=2 guarded */ /* ~54 */ 
              /* region = 81 */
              /* bump-normalized */
     7 |      if (!(__34 > 16u)) goto lab_57;
     3 |      $$RET10 = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RET10 << m);
     9 |      m = m + 16u;
    10 |      __34 = __34 - 16u;
    11 |    lab_57:
     6 |      $$CIV8 = $$CIV8 + 1ll;
            } while ((unsigned long long) $$CIV8 < 1ull);    /* ~54 */
          lab_56:
    12 |    $$RET11 = RCdecoder::decode_shift(unsigned int)(rd,__34);
    13 |    if (ny != ($$RET11 << m) + s) goto lab_40;
   202 |    __38 = 32u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_61;
            $$CIV9 = 0ll;
            do {   /* id=1 guarded */ /* ~59 */ 
              /* region = 80 */
              /* bump-normalized */
     7 |      if (!(__38 > 16u)) goto lab_62;
     3 |      $$RET12 = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RET12 << m);
     9 |      m = m + 16u;
    10 |      __38 = __38 - 16u;
    11 |    lab_62:
     6 |      $$CIV9 = $$CIV9 + 1ll;
            } while ((unsigned long long) $$CIV9 < 1ull);    /* ~59 */
          lab_61:
    12 |    $$RET13 = RCdecoder::decode_shift(unsigned int)(rd,__38);
    13 |    if (!(nx != ($$RET13 << m) + s)) goto lab_39;
          lab_40:
   203 |    fprintf(stderr,"fpzip: array dimensions do not match/n");
   204 |    fprintf(stderr,"fpzip: array dimensions do not match/n");
   205 |    abort()
            return;
   206 |  lab_39:
            $$RET14 = (int) RCdecoder::decode()(rd);
   209 |    if (!($$RET14 != (0u == (char) (0u == (char) (dp != 0))))) goto lab_64;
   210 |    fprintf(stderr,"fpzip: floating-point type does not match/n");
   211 |    abort()
            return;
   212 |  lab_64:
   213 |    return;
          } /* function */ 


   216 |  void get_header(RCdecoder*, unsigned int*, unsigned int*, unsigned int*, unsigned int*, int*)(char * rd, int *nx, int *ny, int *nz, int *nf, int *dp)
   224 |  {
   226 |    __52 = 8u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_8;
            $$CIVA = 0ll;
            do {   /* id=10 guarded */ /* ~6 */ 
              /* region = 82 */
              /* bump-normalized */
     7 |      if (!(__52 > 16u)) goto lab_9;
     3 |      $$RET15 = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RET15 << m);
     9 |      m = m + 16u;
    10 |      __52 = __52 - 16u;
    11 |    lab_9:
     6 |      $$CIVA = $$CIVA + 1ll;
            } while ((unsigned long long) $$CIVA < 1ull);    /* ~6 */
          lab_8:
    12 |    $$RET16 = RCdecoder::decode_shift(unsigned int)(rd,__52);
    13 |    if (102u != ($$RET16 << m) + s) goto lab_2;
   227 |    __56 = 8u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_13;
            $$CIVB = 0ll;
            do {   /* id=9 guarded */ /* ~11 */ 
              /* region = 81 */
              /* bump-normalized */
     7 |      if (!(__56 > 16u)) goto lab_14;
     3 |      $$RET17 = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RET17 << m);
     9 |      m = m + 16u;
    10 |      __56 = __56 - 16u;
    11 |    lab_14:
     6 |      $$CIVB = $$CIVB + 1ll;
            } while ((unsigned long long) $$CIVB < 1ull);    /* ~11 */
          lab_13:
    12 |    $$RET18 = RCdecoder::decode_shift(unsigned int)(rd,__56);
    13 |    if (112u != ($$RET18 << m) + s) goto lab_2;
   228 |    __60 = 8u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_18;
            $$CIVC = 0ll;
            do {   /* id=8 guarded */ /* ~16 */ 
              /* region = 80 */
              /* bump-normalized */
     7 |      if (!(__60 > 16u)) goto lab_19;
     3 |      $$RET19 = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RET19 << m);
     9 |      m = m + 16u;
    10 |      __60 = __60 - 16u;
    11 |    lab_19:
     6 |      $$CIVC = $$CIVC + 1ll;
            } while ((unsigned long long) $$CIVC < 1ull);    /* ~16 */
          lab_18:
    12 |    $$RET1A = RCdecoder::decode_shift(unsigned int)(rd,__60);
    13 |    if (122u != ($$RET1A << m) + s) goto lab_2;
   229 |    __64 = 8u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_23;
            $$CIVD = 0ll;
            do {   /* id=7 guarded */ /* ~21 */ 
              /* region = 79 */
              /* bump-normalized */
     7 |      if (!(__64 > 16u)) goto lab_24;
     3 |      $$RET1B = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RET1B << m);
     9 |      m = m + 16u;
    10 |      __64 = __64 - 16u;
    11 |    lab_24:
     6 |      $$CIVD = $$CIVD + 1ll;
            } while ((unsigned long long) $$CIVD < 1ull);    /* ~21 */
          lab_23:
    12 |    $$RET1C = RCdecoder::decode_shift(unsigned int)(rd,__64);
    13 |    if (!(0u != ($$RET1C << m) + s)) goto lab_1;
          lab_2:
   230 |    fprintf(stderr,"fpzip: not an fpz stream/n");
   231 |    abort()
            return;
   232 |  lab_1:
   235 |    __68 = 16u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_31;
            $$CIVE = 0ll;
            do {   /* id=6 guarded */ /* ~29 */ 
              /* region = 78 */
              /* bump-normalized */
     7 |      if (!(__68 > 16u)) goto lab_32;
     3 |      $$RET1D = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RET1D << m);
     9 |      m = m + 16u;
    10 |      __68 = __68 - 16u;
    11 |    lab_32:
     6 |      $$CIVE = $$CIVE + 1ll;
            } while ((unsigned long long) $$CIVE < 1ull);    /* ~29 */
          lab_31:
    12 |    $$RET1E = RCdecoder::decode_shift(unsigned int)(rd,__68);
    13 |    if (257u != ($$RET1E << m) + s) goto lab_27;
   236 |    __72 = 16u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_36;
            $$CIVF = 0ll;
            do {   /* id=5 guarded */ /* ~34 */ 
              /* region = 77 */
              /* bump-normalized */
     7 |      if (!(__72 > 16u)) goto lab_37;
     3 |      $$RET1F = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RET1F << m);
     9 |      m = m + 16u;
    10 |      __72 = __72 - 16u;
    11 |    lab_37:
     6 |      $$CIVF = $$CIVF + 1ll;
            } while ((unsigned long long) $$CIVF < 1ull);    /* ~34 */
          lab_36:
    12 |    $$RET20 = RCdecoder::decode_shift(unsigned int)(rd,__72);
    13 |    if (!(1u != ($$RET20 << m) + s)) goto lab_26;
          lab_27:
   237 |    fprintf(stderr,"fpzip: format version not supported/n");
   238 |    abort()
            return;
   239 |  lab_26:
   242 |    __76 = 32u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_41;
            $$CIV10 = 0ll;
            do {   /* id=4 guarded */ /* ~39 */ 
              /* region = 76 */
              /* bump-normalized */
     7 |      if (!(__76 > 16u)) goto lab_42;
     3 |      $$RET21 = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RET21 << m);
     9 |      m = m + 16u;
    10 |      __76 = __76 - 16u;
    11 |    lab_42:
     6 |      $$CIV10 = $$CIV10 + 1ll;
            } while ((unsigned long long) $$CIV10 < 1ull);    /* ~39 */
          lab_41:
    12 |    $$RET22 = RCdecoder::decode_shift(unsigned int)(rd,__76);
    13 |    *nf = ($$RET22 << m) + s;
   243 |    __80 = 32u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_46;
            $$CIV11 = 0ll;
            do {   /* id=3 guarded */ /* ~44 */ 
              /* region = 75 */
              /* bump-normalized */
     7 |      if (!(__80 > 16u)) goto lab_47;
     3 |      $$RET23 = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RET23 << m);
     9 |      m = m + 16u;
    10 |      __80 = __80 - 16u;
    11 |    lab_47:
     6 |      $$CIV11 = $$CIV11 + 1ll;
            } while ((unsigned long long) $$CIV11 < 1ull);    /* ~44 */
          lab_46:
    12 |    $$RET24 = RCdecoder::decode_shift(unsigned int)(rd,__80);
    13 |    *nz = ($$RET24 << m) + s;
   244 |    __84 = 32u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_51;
            $$CIV12 = 0ll;
            do {   /* id=2 guarded */ /* ~49 */ 
              /* region = 74 */
              /* bump-normalized */
     7 |      if (!(__84 > 16u)) goto lab_52;
     3 |      $$RET25 = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RET25 << m);
     9 |      m = m + 16u;
    10 |      __84 = __84 - 16u;
    11 |    lab_52:
     6 |      $$CIV12 = $$CIV12 + 1ll;
            } while ((unsigned long long) $$CIV12 < 1ull);    /* ~49 */
          lab_51:
    12 |    $$RET26 = RCdecoder::decode_shift(unsigned int)(rd,__84);
    13 |    *ny = ($$RET26 << m) + s;
   245 |    __88 = 32u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_56;
            $$CIV13 = 0ll;
            do {   /* id=1 guarded */ /* ~54 */ 
              /* region = 73 */
              /* bump-normalized */
     7 |      if (!(__88 > 16u)) goto lab_57;
     3 |      $$RET27 = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |      s = s + ($$RET27 << m);
     9 |      m = m + 16u;
    10 |      __88 = __88 - 16u;
    11 |    lab_57:
     6 |      $$CIV13 = $$CIV13 + 1ll;
            } while ((unsigned long long) $$CIV13 < 1ull);    /* ~54 */
          lab_56:
    12 |    $$RET28 = RCdecoder::decode_shift(unsigned int)(rd,__88);
    13 |    *nx = ($$RET28 << m) + s;
            $$RET29 = (int) RCdecoder::decode()(rd);
   247 |    *dp = $$RET29;
   248 |    return;
          } /* function */ 


   286 |  unsigned int fpzip_file_read(char * file, char * data, char * prec, int dp, unsigned int nx, unsigned int ny, unsigned int nz, unsigned int nf)
   296 |  {
   297 |    __102 = operator new(unsigned long)(4144ull);
            if (!(__102 != NULL)) goto lab_2;
     8 |    *((unsigned int *)(__102 + 8)) = 0u;
            *((unsigned int *)(__102 + 12)) = 4294967295u;
            *((unsigned int *)(__102 + 16)) = 0u;
   297 |    *((char * *)__102) = ((char *)&vtable for RCfiledecoder  + 16ll);
    10 |    *((char *)(__102 + 20)) = 0u;
            *((char * *)(__102 + 24)) = file;
            *((unsigned int *)(__102 + 32)) = 0u;
            *((unsigned int *)(__102 + 36)) = 0u;
            *((unsigned int *)(__102 + 40)) = 0u;
          lab_2:
   298 |    $$PARM.rd89 = __102;
            $$PARM.data8A = data;
            $$PARM.prec8B = prec;
            $$PARM.dp8C = dp;
            $$PARM.nx8D = nx;
            $$PARM.ny8E = ny;
            $$PARM.nz8F = nz;
            $$PARM.nf90 = nf;
   262 |    RCdecoder::init()($$PARM.rd89)
   263 |    read_header(RCdecoder*, unsigned int, unsigned int, unsigned int, unsigned int, int)($$PARM.rd89,$$PARM.nx8D,$$PARM.ny8E,$$PARM.nz8F,$$PARM.nf90,$$PARM.dp8C)
   264 |    if (!($$PARM.dp8C != 0)) goto lab_10;
   265 |    void decompress4d<double>(RCdecoder*, double*, int*, unsigned int, unsigned int, unsigned int, unsigned int)($$PARM.rd89,$$PARM.data8A,$$PARM.prec8B,$$PARM.nx8D,$$PARM.ny8E,$$PARM.nz8F,$$PARM.nf90)
            goto lab_11;
          lab_10:
   267 |    void decompress4d<float>(RCdecoder*, float*, int*, unsigned int, unsigned int, unsigned int, unsigned int)($$PARM.rd89,$$PARM.data8A,$$PARM.prec8B,$$PARM.nx8D,$$PARM.ny8E,$$PARM.nz8F,$$PARM.nf90)
          lab_11:
   299 |    if (!(*((char *)(__102 + 20)) != 0u)) goto lab_5;
            __110 = 0u;
            goto lab_6;
          lab_5:
    25 |    __110 = *((unsigned int *)(__102 + 32));
          lab_6:
   300 |    if (!(__102 != NULL)) goto lab_8;
            ((funcaddr *)(*((char * *)__102)))[8ll / 8]->(()vf).rns20.(__102);
          lab_8:
   301 |    rstr = __110;
            return rstr;
   302 |  } /* function */ 


   306 |  unsigned int fpzip_memory_read(char * buffer, char * data, char * prec, int dp, unsigned int nx, unsigned int ny, unsigned int nz, unsigned int nf)
   316 |  {
   317 |    __111 = operator new(unsigned long)(40ull);
            if (!(__111 != NULL)) goto lab_2;
     8 |    *((unsigned int *)(__111 + 8)) = 0u;
            *((unsigned int *)(__111 + 12)) = 4294967295u;
            *((unsigned int *)(__111 + 16)) = 0u;
   317 |    *((char * *)__111) = ((char *)&vtable for RCmemdecoder  + 16ll);
    57 |    *((char *)(__111 + 20)) = 0u;
            *((char * *)(__111 + 24)) = buffer;
            *((char * *)(__111 + 32)) = buffer;
          lab_2:
   318 |    $$PARM.rd91 = __111;
            $$PARM.data92 = data;
            $$PARM.prec93 = prec;
            $$PARM.dp94 = dp;
            $$PARM.nx95 = nx;
            $$PARM.ny96 = ny;
            $$PARM.nz97 = nz;
            $$PARM.nf98 = nf;
   262 |    RCdecoder::init()($$PARM.rd91)
   263 |    read_header(RCdecoder*, unsigned int, unsigned int, unsigned int, unsigned int, int)($$PARM.rd91,$$PARM.nx95,$$PARM.ny96,$$PARM.nz97,$$PARM.nf98,$$PARM.dp94)
   264 |    if (!($$PARM.dp94 != 0)) goto lab_10;
   265 |    void decompress4d<double>(RCdecoder*, double*, int*, unsigned int, unsigned int, unsigned int, unsigned int)($$PARM.rd91,$$PARM.data92,$$PARM.prec93,$$PARM.nx95,$$PARM.ny96,$$PARM.nz97,$$PARM.nf98)
            goto lab_11;
          lab_10:
   267 |    void decompress4d<float>(RCdecoder*, float*, int*, unsigned int, unsigned int, unsigned int, unsigned int)($$PARM.rd91,$$PARM.data92,$$PARM.prec93,$$PARM.nx95,$$PARM.ny96,$$PARM.nz97,$$PARM.nf98)
          lab_11:
   319 |    if (!(*((char *)(__111 + 20)) != 0u)) goto lab_5;
            __118 = 0u;
            goto lab_6;
          lab_5:
    59 |    __118 = (unsigned int) (*((char * *)(__111 + 24)) - *((char * *)(__111 + 32)));
          lab_6:
   320 |    if (!(__111 != NULL)) goto lab_8;
            ((funcaddr *)(*((char * *)__111)))[8ll / 8]->(()vf).rns34.(__111);
          lab_8:
   321 |    rstr = __118;
            return rstr;
   322 |  } /* function */ 


   326 |  void fpzip_memory_get_header(char * buffer, char * dp, char * nx, char * ny, char * nz, char * nf)
   334 |  {
   335 |    __119 = operator new(unsigned long)(40ull);
            if (!(__119 != NULL)) goto lab_11;
     8 |    *((unsigned int *)(__119 + 8)) = 0u;
            *((unsigned int *)(__119 + 12)) = 4294967295u;
            *((unsigned int *)(__119 + 16)) = 0u;
   335 |    *((char * *)__119) = ((char *)&vtable for RCmemdecoder  + 16ll);
    57 |    *((char *)(__119 + 20)) = 0u;
            *((char * *)(__119 + 24)) = buffer;
            *((char * *)(__119 + 32)) = buffer;
            goto lab_2;
          lab_11:
            $$PARM.rdAF = NULL;
            $$PARM.dpB0 = dp;
            $$PARM.nxB1 = nx;
            $$PARM.nyB2 = ny;
            $$PARM.nzB3 = nz;
            $$PARM.nfB4 = nf;
   280 |    RCdecoder::init()($$PARM.rdAF)
   281 |    get_header(RCdecoder*, unsigned int*, unsigned int*, unsigned int*, unsigned int*, int*)($$PARM.rdAF,$$PARM.nxB1,$$PARM.nyB2,$$PARM.nzB3,$$PARM.nfB4,$$PARM.dpB0)
   282 |    goto lab_5;
    57 |  lab_2:
   336 |    $$PARM.rdA9 = __119;
            $$PARM.dpAA = dp;
            $$PARM.nxAB = nx;
            $$PARM.nyAC = ny;
            $$PARM.nzAD = nz;
            $$PARM.nfAE = nf;
   280 |    RCdecoder::init()($$PARM.rdA9)
   281 |    get_header(RCdecoder*, unsigned int*, unsigned int*, unsigned int*, unsigned int*, int*)($$PARM.rdA9,$$PARM.nxAB,$$PARM.nyAC,$$PARM.nzAD,$$PARM.nfAE,$$PARM.dpAA)
   337 |    ((funcaddr *)(*((char * *)__119)))[8ll / 8]->(()vf).rns49.(__119);
          lab_5:
   338 |    return;
          } /* function */ 


   342 |  void fpzip_file_read_f(char * path, char * data, char * prec, int *dp, int *nx, int *ny, int *nz, int *nf)
   352 |  {
   353 |    file = fopen(path,"rb");
   354 |    if (file != NULL) goto lab_1;
   355 |    fprintf(stderr,"fpzip: cannot open file %s/n",path);
   356 |    abort()
            return;
   357 |  lab_1:
            $$PARM.file99 = file;
            $$PARM.dp9C = *dp;
            $$PARM.nx9D = (unsigned int) *nx;
            $$PARM.ny9E = (unsigned int) *ny;
            $$PARM.nz9F = (unsigned int) *nz;
            $$PARM.nfA0 = (unsigned int) *nf;
   297 |    __102 = operator new(unsigned long)(4144ull);
            if (!(__102 != NULL)) goto lab_11;
     8 |    *((unsigned int *)(__102 + 8)) = 0u;
            *((unsigned int *)(__102 + 12)) = 4294967295u;
            *((unsigned int *)(__102 + 16)) = 0u;
   297 |    *((char * *)__102) = ((char *)&vtable for RCfiledecoder  + 16ll);
    10 |    *((char *)(__102 + 20)) = 0u;
            *((char * *)(__102 + 24)) = $$PARM.file99;
            *((unsigned int *)(__102 + 32)) = 0u;
            *((unsigned int *)(__102 + 36)) = 0u;
            *((unsigned int *)(__102 + 40)) = 0u;
          lab_11:
   298 |    $$PARM.rd89 = __102;
            $$PARM.data8A = data;
            $$PARM.prec8B = prec;
            $$PARM.dp8C = $$PARM.dp9C;
            $$PARM.nx8D = $$PARM.nx9D;
            $$PARM.ny8E = $$PARM.ny9E;
            $$PARM.nz8F = $$PARM.nz9F;
            $$PARM.nf90 = $$PARM.nfA0;
   262 |    RCdecoder::init()($$PARM.rd89)
   263 |    read_header(RCdecoder*, unsigned int, unsigned int, unsigned int, unsigned int, int)($$PARM.rd89,$$PARM.nx8D,$$PARM.ny8E,$$PARM.nz8F,$$PARM.nf90,$$PARM.dp8C)
   264 |    if (!($$PARM.dp8C != 0)) goto lab_12;
   265 |    void decompress4d<double>(RCdecoder*, double*, int*, unsigned int, unsigned int, unsigned int, unsigned int)($$PARM.rd89,$$PARM.data8A,$$PARM.prec8B,$$PARM.nx8D,$$PARM.ny8E,$$PARM.nz8F,$$PARM.nf90)
            goto lab_13;
          lab_12:
   267 |    void decompress4d<float>(RCdecoder*, float*, int*, unsigned int, unsigned int, unsigned int, unsigned int)($$PARM.rd89,$$PARM.data8A,$$PARM.prec8B,$$PARM.nx8D,$$PARM.ny8E,$$PARM.nz8F,$$PARM.nf90)
          lab_13:
   299 |    if (!(*((char *)(__102 + 20)) != 0u)) goto lab_15;
            __110 = 0u;
            goto lab_16;
          lab_15:
    25 |    __110 = *((unsigned int *)(__102 + 32));
          lab_16:
   300 |    if (!(__102 != NULL)) goto lab_17;
            ((funcaddr *)(*((char * *)__102)))[8ll / 8]->(()vf).rns20.$$67(__102);
          lab_17:
   301 |    $$IRET44 = __110;
   357 |    $$RET2A.rnn2A = 0u == $$IRET44;
   358 |    if ($$RET2A.rnn2A == 0) goto lab_3;
   359 |    fprintf(stderr,"fpzip: cannot read file %s/n",path);
   360 |    abort()
            return;
   361 |  lab_3:
   362 |    fclose(file);
   363 |    return;
          } /* function */ 


   366 |  void fpzip_file_read_f_(char * path, char * data, char * prec, int *dp, int *nx, int *ny, int *nz, int *nf)
   376 |  {
   377 |    $$PARM.pathA1 = path;
   353 |    file = fopen($$PARM.pathA1,"rb");
   354 |    if (file != NULL) goto lab_5;
   355 |    fprintf(stderr,"fpzip: cannot open file %s/n",$$PARM.pathA1);
   356 |    abort()
            return;
   357 |  lab_5:
            $$PARM.file99 = file;
            $$PARM.dp9C = *dp;
            $$PARM.nx9D = (unsigned int) *nx;
            $$PARM.ny9E = (unsigned int) *ny;
            $$PARM.nz9F = (unsigned int) *nz;
            $$PARM.nfA0 = (unsigned int) *nf;
   297 |    __102 = operator new(unsigned long)(4144ull);
            if (!(__102 != NULL)) goto lab_7;
     8 |    *((unsigned int *)(__102 + 8)) = 0u;
            *((unsigned int *)(__102 + 12)) = 4294967295u;
            *((unsigned int *)(__102 + 16)) = 0u;
   297 |    *((char * *)__102) = ((char *)&vtable for RCfiledecoder  + 16ll);
    10 |    *((char *)(__102 + 20)) = 0u;
            *((char * *)(__102 + 24)) = $$PARM.file99;
            *((unsigned int *)(__102 + 32)) = 0u;
            *((unsigned int *)(__102 + 36)) = 0u;
            *((unsigned int *)(__102 + 40)) = 0u;
          lab_7:
   298 |    $$PARM.rd89 = __102;
            $$PARM.data8A = data;
            $$PARM.prec8B = prec;
            $$PARM.dp8C = $$PARM.dp9C;
            $$PARM.nx8D = $$PARM.nx9D;
            $$PARM.ny8E = $$PARM.ny9E;
            $$PARM.nz8F = $$PARM.nz9F;
            $$PARM.nf90 = $$PARM.nfA0;
   262 |    RCdecoder::init()($$PARM.rd89)
   263 |    read_header(RCdecoder*, unsigned int, unsigned int, unsigned int, unsigned int, int)($$PARM.rd89,$$PARM.nx8D,$$PARM.ny8E,$$PARM.nz8F,$$PARM.nf90,$$PARM.dp8C)
   264 |    if (!($$PARM.dp8C != 0)) goto lab_8;
   265 |    void decompress4d<double>(RCdecoder*, double*, int*, unsigned int, unsigned int, unsigned int, unsigned int)($$PARM.rd89,$$PARM.data8A,$$PARM.prec8B,$$PARM.nx8D,$$PARM.ny8E,$$PARM.nz8F,$$PARM.nf90)
            goto lab_9;
          lab_8:
   267 |    void decompress4d<float>(RCdecoder*, float*, int*, unsigned int, unsigned int, unsigned int, unsigned int)($$PARM.rd89,$$PARM.data8A,$$PARM.prec8B,$$PARM.nx8D,$$PARM.ny8E,$$PARM.nz8F,$$PARM.nf90)
          lab_9:
   299 |    if (!(*((char *)(__102 + 20)) != 0u)) goto lab_11;
            __110 = 0u;
            goto lab_12;
          lab_11:
    25 |    __110 = *((unsigned int *)(__102 + 32));
          lab_12:
   300 |    if (!(__102 != NULL)) goto lab_13;
            ((funcaddr *)(*((char * *)__102)))[8ll / 8]->(()vf).rns20.$$67$$73(__102);
          lab_13:
   301 |    $$IRET44 = __110;
   357 |    $$RET2A.rnn2A = 0u == $$IRET44;
   358 |    if ($$RET2A.rnn2A == 0) goto lab_15;
   359 |    fprintf(stderr,"fpzip: cannot read file %s/n",$$PARM.pathA1);
   360 |    abort()
            return;
   361 |  lab_15:
   362 |    fclose(file);
   378 |    return;
          } /* function */ 


   135 |  void void decompress4d<double>(RCdecoder*, double*, int*, unsigned int, unsigned int, unsigned int, unsigned int)(char * rd, char * data, int *prec, unsigned int nx, unsigned int ny, unsigned int nz, unsigned int nf)
   144 |  {
   146 |    if (!(0u < nf)) goto lab_3;
            $$CIV15 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 24 */
              /* bump-normalized */
   147 |      __124 = 32u;
     4 |      s = 0u;
     5 |      m = 0u;
     6 |      if (!1) goto lab_6;
              $$CIV14 = 0ll;
              do {   /* id=2 guarded */ /* ~4 */ 
                /* region = 23 */
                /* bump-normalized */
     7 |        if (!(__124 > 16u)) goto lab_7;
     3 |        $$RET2B = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |        s = s + ($$RET2B << m);
     9 |        m = m + 16u;
    10 |        __124 = __124 - 16u;
    11 |      lab_7:
     6 |        $$CIV14 = $$CIV14 + 1ll;
              } while ((unsigned long long) $$CIV14 < 1ull);    /* ~4 */
            lab_6:
    12 |      $$RET2C = RCdecoder::decode_shift(unsigned int)(rd,__124);
   148 |      if (!(prec != NULL)) goto lab_9;
   149 |      prec[(long long) ((unsigned int) ((unsigned long long) $$CIV15))] = (int) (($$RET2C << m) + s);
            lab_9:
   150 |      switchxjp((int) (($$RET2C << m) + s)) {
                case 16: label=lab_18
                case 32: label=lab_17
                case 48: label=lab_16
                case 64: label=lab_15
                default: label=lab_14
              }  /* switchxjp */ 
   151 |    lab_18:
   152 |      void decompress3d<double, 16u>(RCdecoder*, double*, unsigned int, unsigned int, unsigned int)(rd,((char *)data  + 8ll * ($$CIV15 * (long long) (nx * (ny * nz)))),nx,ny,nz)
   167 |      goto lab_22;
   154 |    lab_17:
   155 |      void decompress3d<double, 32u>(RCdecoder*, double*, unsigned int, unsigned int, unsigned int)(rd,((char *)data  + 8ll * ($$CIV15 * (long long) (nx * (ny * nz)))),nx,ny,nz)
   156 |      goto lab_19;
   157 |    lab_16:
   158 |      void decompress3d<double, 48u>(RCdecoder*, double*, unsigned int, unsigned int, unsigned int)(rd,((char *)data  + 8ll * ($$CIV15 * (long long) (nx * (ny * nz)))),nx,ny,nz)
   159 |      goto lab_19;
   160 |    lab_15:
   161 |      void decompress3d<double, 64u>(RCdecoder*, double*, unsigned int, unsigned int, unsigned int)(rd,((char *)data  + 8ll * ($$CIV15 * (long long) (nx * (ny * nz)))),nx,ny,nz)
   167 |    lab_22:
            lab_19:
   146 |      $$CIV15 = $$CIV15 + 1ll;
            } while ((unsigned long long) $$CIV15 < (unsigned long long) nf);    /* ~1 */
          lab_3:
   165 |    goto lab_23;
   163 |  lab_14:
   164 |    fprintf(stderr,"fpzip: invalid precision %d in file/n",(int) (($$RET2C << m) + s));
   165 |    abort()
            return;
          lab_23:
            return;
   170 |  } /* function */ 


   135 |  void void decompress4d<float>(RCdecoder*, float*, int*, unsigned int, unsigned int, unsigned int, unsigned int)(char * rd, char * data, int *prec, unsigned int nx, unsigned int ny, unsigned int nz, unsigned int nf)
   144 |  {
   146 |    if (!(0u < nf)) goto lab_3;
            $$CIV17 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 24 */
              /* bump-normalized */
   147 |      __130 = 32u;
     4 |      s = 0u;
     5 |      m = 0u;
     6 |      if (!1) goto lab_6;
              $$CIV16 = 0ll;
              do {   /* id=2 guarded */ /* ~4 */ 
                /* region = 23 */
                /* bump-normalized */
     7 |        if (!(__130 > 16u)) goto lab_7;
     3 |        $$RET2D = RCdecoder::decode_shift(unsigned int)(rd,16u);
     8 |        s = s + ($$RET2D << m);
     9 |        m = m + 16u;
    10 |        __130 = __130 - 16u;
    11 |      lab_7:
     6 |        $$CIV16 = $$CIV16 + 1ll;
              } while ((unsigned long long) $$CIV16 < 1ull);    /* ~4 */
            lab_6:
    12 |      $$RET2E = RCdecoder::decode_shift(unsigned int)(rd,__130);
   148 |      if (!(prec != NULL)) goto lab_9;
   149 |      prec[(long long) ((unsigned int) ((unsigned long long) $$CIV17))] = (int) (($$RET2E << m) + s);
            lab_9:
   150 |      switchxjp((int) (($$RET2E << m) + s)) {
                case 8: label=lab_18
                case 16: label=lab_17
                case 24: label=lab_16
                case 32: label=lab_15
                default: label=lab_14
              }  /* switchxjp */ 
   151 |    lab_18:
   152 |      void decompress3d<float, 8u>(RCdecoder*, float*, unsigned int, unsigned int, unsigned int)(rd,((char *)data  + 4ll * ($$CIV17 * (long long) (nx * (ny * nz)))),nx,ny,nz)
   167 |      goto lab_22;
   154 |    lab_17:
   155 |      void decompress3d<float, 16u>(RCdecoder*, float*, unsigned int, unsigned int, unsigned int)(rd,((char *)data  + 4ll * ($$CIV17 * (long long) (nx * (ny * nz)))),nx,ny,nz)
   156 |      goto lab_19;
   157 |    lab_16:
   158 |      void decompress3d<float, 24u>(RCdecoder*, float*, unsigned int, unsigned int, unsigned int)(rd,((char *)data  + 4ll * ($$CIV17 * (long long) (nx * (ny * nz)))),nx,ny,nz)
   159 |      goto lab_19;
   160 |    lab_15:
   161 |      void decompress3d<float, 32u>(RCdecoder*, float*, unsigned int, unsigned int, unsigned int)(rd,((char *)data  + 4ll * ($$CIV17 * (long long) (nx * (ny * nz)))),nx,ny,nz)
   167 |    lab_22:
            lab_19:
   146 |      $$CIV17 = $$CIV17 + 1ll;
            } while ((unsigned long long) $$CIV17 < (unsigned long long) nf);    /* ~1 */
          lab_3:
   165 |    goto lab_23;
   163 |  lab_14:
   164 |    fprintf(stderr,"fpzip: invalid precision %d in file/n",(int) (($$RET2E << m) + s));
   165 |    abort()
            return;
          lab_23:
            return;
   170 |  } /* function */ 


    14 |  void void decompress3d<double, 16u>(RCdecoder*, double*, unsigned int, unsigned int, unsigned int)(char * rd, long long *data, unsigned int nx, unsigned int ny, unsigned int nz)
    21 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
    24 |    __144 = operator new(unsigned long)(72ull);
            if (!(__144 != NULL)) goto lab_2;
            __es.__c4@3 = 1u;
            RCqsmodel::RCqsmodel(bool, unsigned int, unsigned int, unsigned int)(__144,0u,33u,16u,1024u);
            __es.__c4@3 = 0u;
          lab_2:
            $$rm.nat.0 = __144;
    25 |    __145 = operator new(unsigned long)(24ull);
            rm = $$rm.nat.0;
            if (!(__145 != NULL)) goto lab_5;
    34 |    *((char * *)((char *)__145 + 8)) = rd;
            rm = $$rm.nat.0;
            *((char * *)((char *)__145 + 16)) = &rm;
          lab_5:
    26 |    f.zero@0 =  0.0000000000000000E+000;
     9 |    f.dx@8 = 1u;
            f.dy@c = nx + 1u;
            f.dz@10 = (ny + 1u) * (nx + 1u);
    45 |    __178.rnn35 = (2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u;
            if (!(0u != (((2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u) + 1u & (2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u))) goto lab_9;
            do {   /* id=8 guarded */ /* ~7 */ 
              /* region = 135 */
     9 |      __178.rnn35 = __178.rnn35 | __178.rnn35 + 1u;
    45 |    } while (0u != (__178.rnn35 + 1u & __178.rnn35));    /* ~7 */
          lab_9:
    47 |    f.m@14 = __178.rnn35;
    10 |    f.i@18 = 0u;
            f.a@20 = operator new[](unsigned long)((unsigned long long) (__178.rnn35 + 1u) * 8ull);
            __es.__c4@3 = 2u;
    23 |    f.a@20[(long long) (f.i@18 & f.m@14)] = f.zero@0;
            f.i@18 = f.i@18 + 1u;
    24 |    if (!(1u != f.dz@10)) goto lab_43;
            $$CIV18 = 0ll;
    22 |    do {   /* id=7 guarded */ /* ~13 */ 
              /* region = 136 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV18))] = f.zero@0;
    24 |      $$CIV18 = $$CIV18 + 1ll;
            } while ((unsigned long long) $$CIV18 < (unsigned long long) (f.dz@10 - 1u));    /* ~13 */
            f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dz@10 - 1u))) + f.i@18;
          lab_43:
    31 |    if (!(0u < nz)) goto lab_12;
            if (!(0u < ny)) goto lab_70;
            if (!(0u < nx)) goto lab_58;
            if (!1) goto lab_57;
            $$CIV1E = 0ll;
            do {   /* id=1 guarded */ /* ~10 */ 
              /* region = 141 */
              /* bump-normalized */
    30 |      __157 = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    24 |      if (!(1u != f.dy@c)) goto lab_44;
              $$CIV19 = 0ll;
    22 |      do {   /* id=6 guarded */ /* ~19 */ 
                /* region = 137 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV19))] = __157;
    24 |        $$CIV19 = $$CIV19 + 1ll;
              } while ((unsigned long long) $$CIV19 < (unsigned long long) (f.dy@c - 1u));    /* ~19 */
              f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u))) + f.i@18;
            lab_44:
    31 |      if (!1) goto lab_18;
              $$CIV1D = 0ll;
              do {   /* id=2 guarded */ /* ~16 */ 
                /* region = 140 */
                /* bump-normalized */
    30 |        __161 = f.zero@0;
    23 |        f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
                f.i@18 = f.i@18 + 1u;
    24 |        if (!(1u != f.dx@8)) goto lab_45;
                $$CIV1A = 0ll;
    22 |        do {   /* id=5 guarded */ /* ~25 */ 
                  /* region = 138 */
                  /* bump-normalized */
    23 |          f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV1A))] = __161;
    24 |          $$CIV1A = $$CIV1A + 1ll;
                } while ((unsigned long long) $$CIV1A < (unsigned long long) (f.dx@8 - 1u));    /* ~25 */
                f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dx@8 - 1u))) + f.i@18;
              lab_45:
    31 |        if (!1) goto lab_24;
                $$CIV1C = 0ll;
                do {   /* id=3 guarded */ /* ~22 */ 
                  /* region = 139 */
                  /* bump-normalized */
    47 |          $$csx0 = f.i@18;
                  $$TVX.$$.a00 = PCdecoder<double, PCmap<double, 16u, void>, true>::decode(double, unsigned int)(__145,(((((f.a@20[(long long) ($$csx0 - f.dx@8 & f.m@14)] - f.a@20[(long long) (($$csx0 - f.dy@c) - f.dz@10 & f.m@14)]) + f.a@20[(long long) ($$csx0 - f.dy@c & f.m@14)]) - f.a@20[(long long) (($$csx0 - f.dx@8) - f.dz@10 & f.m@14)]) + f.a@20[(long long) ($$csx0 - f.dz@10 & f.m@14)]) - f.a@20[(long long) (($$csx0 - f.dx@8) - f.dy@c & f.m@14)]) + f.a@20[(long long) ((($$csx0 - f.dx@8) - f.dy@c) - f.dz@10 & f.m@14)],0u);
    48 |          data[$$CIV1C] = $$TVX.$$.a00;
    23 |          f.a@20[(long long) (f.m@14 & f.i@18)] = $$TVX.$$.a00;
                  f.i@18 = f.i@18 + 1u;
    32 |          $$CIV1C = $$CIV1C + 1ll;
                } while ((unsigned long long) $$CIV1C < (unsigned long long) nx);    /* ~22 */
                data = ((char *)data  + (long long) ((unsigned long long) nx * 8ull));
              lab_24:
    31 |        $$CIV1D = $$CIV1D + 1ll;
              } while ((unsigned long long) $$CIV1D < (unsigned long long) ny);    /* ~16 */
            lab_18:
    30 |      $$CIV1E = $$CIV1E + 1ll;
            } while ((unsigned long long) $$CIV1E < (unsigned long long) nz);    /* ~10 */
          lab_57:
            goto lab_71;
          lab_58:
    31 |    if (!1) goto lab_71;
            if (!(1u != f.dy@c)) goto lab_109;
            if (!(1u != f.dx@8)) goto lab_99;
            if (!1) goto lab_98;
            $$CIV1E = 0ll;
            do {   /* id=4 guarded */ /* ~60 */ 
              /* region = 145 */
              /* bump-normalized */
    30 |      __157 = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    24 |      if (!1) goto lab_62;
              $$CIV19 = 0ll;
    22 |      do {   /* id=9 guarded */ /* ~61 */ 
                /* region = 144 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV19))] = __157;
    24 |        $$CIV19 = $$CIV19 + 1ll;
              } while ((unsigned long long) $$CIV19 < (unsigned long long) (f.dy@c - 1u));    /* ~61 */
              f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u))) + f.i@18;
            lab_62:
    31 |      if (!1) goto lab_68;
              $$CIV1D = 0ll;
              do {   /* id=10 guarded */ /* ~63 */ 
                /* region = 143 */
                /* bump-normalized */
    30 |        $$TVX.$$.__16111 = f.zero@0;
    23 |        f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
                f.i@18 = f.i@18 + 1u;
    24 |        if (!1) goto lab_65;
                $$CIV1A = 0ll;
    22 |        do {   /* id=11 guarded */ /* ~64 */ 
                  /* region = 142 */
                  /* bump-normalized */
    23 |          f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV1A))] = $$TVX.$$.__16111;
    24 |          $$CIV1A = $$CIV1A + 1ll;
                } while ((unsigned long long) $$CIV1A < (unsigned long long) (f.dx@8 - 1u));    /* ~64 */
                f.i@18 = f.i@18 + (unsigned int) ((int) ((unsigned long long) (f.dx@8 - 1u)));
              lab_65:
    31 |        $$CIV1D = $$CIV1D + 1ll;
              } while ((unsigned long long) $$CIV1D < (unsigned long long) ny);    /* ~63 */
            lab_68:
    30 |      $$CIV1E = $$CIV1E + 1ll;
            } while ((unsigned long long) $$CIV1E < (unsigned long long) nz);    /* ~60 */
          lab_98:
            goto lab_71;
          lab_99:
    31 |    if (!1) goto lab_108;
            $$CIV1E = 0ll;
            do {   /* id=22 guarded */ /* ~101 */ 
              /* region = 148 */
              /* bump-normalized */
    30 |      __157 = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    24 |      if (!1) goto lab_103;
              $$CIV19 = 0ll;
    22 |      do {   /* id=21 guarded */ /* ~102 */ 
                /* region = 147 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV19))] = __157;
    24 |        $$CIV19 = $$CIV19 + 1ll;
              } while ((unsigned long long) $$CIV19 < (unsigned long long) (f.dy@c - 1u));    /* ~102 */
              f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u))) + f.i@18;
            lab_103:
    31 |      if (!1) goto lab_107;
              $$CIV1D = 0ll;
              $$SCREP3 = f.i@18;
              do {   /* id=20 guarded */ /* ~104 */ 
                /* region = 146 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & $$SCREP3)] = f.zero@0;
                $$SCREP3 = $$SCREP3 + 1u;
    31 |        $$CIV1D = $$CIV1D + 1ll;
              } while ((unsigned long long) $$CIV1D < (unsigned long long) ny);    /* ~104 */
              f.i@18 = $$SCREP3;
            lab_107:
    30 |      $$CIV1E = $$CIV1E + 1ll;
            } while ((unsigned long long) $$CIV1E < (unsigned long long) nz);    /* ~101 */
          lab_108:
            goto lab_71;
          lab_109:
    31 |    if (!(1u != f.dx@8)) goto lab_119;
            if (!1) goto lab_118;
            $$CIV1E = 0ll;
            do {   /* id=16 guarded */ /* ~111 */ 
              /* region = 151 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    31 |      if (!1) goto lab_117;
              $$CIV1D = 0ll;
              do {   /* id=12 guarded */ /* ~114 */ 
                /* region = 150 */
                /* bump-normalized */
    30 |        $$TVX.$$.__16123 = f.zero@0;
    23 |        f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
                f.i@18 = f.i@18 + 1u;
    24 |        if (!1) goto lab_116;
                $$CIV1A = 0ll;
    22 |        do {   /* id=23 guarded */ /* ~115 */ 
                  /* region = 149 */
                  /* bump-normalized */
    23 |          f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV1A))] = $$TVX.$$.__16123;
    24 |          $$CIV1A = $$CIV1A + 1ll;
                } while ((unsigned long long) $$CIV1A < (unsigned long long) (f.dx@8 - 1u));    /* ~115 */
                f.i@18 = f.i@18 + (unsigned int) ((int) ((unsigned long long) (f.dx@8 - 1u)));
              lab_116:
    31 |        $$CIV1D = $$CIV1D + 1ll;
              } while ((unsigned long long) $$CIV1D < (unsigned long long) ny);    /* ~114 */
            lab_117:
    30 |      $$CIV1E = $$CIV1E + 1ll;
            } while ((unsigned long long) $$CIV1E < (unsigned long long) nz);    /* ~111 */
          lab_118:
            goto lab_71;
          lab_119:
    31 |    if (!1) goto lab_127;
            $$CIV1E = 0ll;
    23 |    $$ICM.f.i@180 = f.i@18;
    31 |    do {   /* id=24 guarded */ /* ~120 */ 
              /* region = 153 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & $$ICM.f.i@180)] = f.zero@0;
              $$ICM.f.i@180 = $$ICM.f.i@180 + 1u;
    31 |      if (!1) goto lab_126;
              $$CIV1D = 0ll;
              $$SCREP2 = $$ICM.f.i@180;
              do {   /* id=26 guarded */ /* ~123 */ 
                /* region = 152 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & $$SCREP2)] = f.zero@0;
                $$SCREP2 = $$SCREP2 + 1u;
    31 |        $$CIV1D = $$CIV1D + 1ll;
              } while ((unsigned long long) $$CIV1D < (unsigned long long) ny);    /* ~123 */
              $$ICM.f.i@180 = $$SCREP2;
            lab_126:
    30 |      $$CIV1E = $$CIV1E + 1ll;
            } while ((unsigned long long) $$CIV1E < (unsigned long long) nz);    /* ~120 */
            f.i@18 = $$ICM.f.i@180;
          lab_127:
            goto lab_71;
          lab_70:
    31 |    if (!(0u < nx)) goto lab_82;
            if (!1) goto lab_93;
            if (!(1u != f.dy@c)) goto lab_130;
            if (!1) goto lab_129;
            $$CIV1E = 0ll;
    23 |    $$ICM.f.i@180 = f.i@18;
    31 |    do {   /* id=13 guarded */ /* ~72 */ 
              /* region = 155 */
              /* bump-normalized */
    30 |      $$TVX.$$.__15735 = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & $$ICM.f.i@180)] = f.zero@0;
              $$ICM.f.i@180 = $$ICM.f.i@180 + 1u;
    24 |      if (!1) goto lab_74;
              $$CIV19 = 0ll;
    22 |      do {   /* id=14 guarded */ /* ~73 */ 
                /* region = 154 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & $$ICM.f.i@180 + (unsigned int) ((int) $$CIV19))] = $$TVX.$$.__15735;
    24 |        $$CIV19 = $$CIV19 + 1ll;
              } while ((unsigned long long) $$CIV19 < (unsigned long long) (f.dy@c - 1u));    /* ~73 */
              $$ICM.f.i@180 = $$ICM.f.i@180 + (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u)));
            lab_74:
    30 |      $$CIV1E = $$CIV1E + 1ll;
            } while ((unsigned long long) $$CIV1E < (unsigned long long) nz);    /* ~72 */
            f.i@18 = $$ICM.f.i@180;
          lab_129:
            goto lab_93;
          lab_130:
    31 |    if (!1) goto lab_135;
            $$CIV1E = 0ll;
            $$SCREP1 = f.i@18;
            do {   /* id=28 guarded */ /* ~132 */ 
              /* region = 156 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & $$SCREP1)] = f.zero@0;
              $$SCREP1 = $$SCREP1 + 1u;
    30 |      $$CIV1E = $$CIV1E + 1ll;
            } while ((unsigned long long) $$CIV1E < (unsigned long long) nz);    /* ~132 */
            f.i@18 = $$SCREP1;
          lab_135:
            goto lab_93;
          lab_82:
    31 |    if (!1) goto lab_92;
            if (!(1u != f.dy@c)) goto lab_137;
            if (!1) goto lab_136;
            $$CIV1E = 0ll;
    23 |    $$ICM.f.i@180 = f.i@18;
    31 |    do {   /* id=18 guarded */ /* ~83 */ 
              /* region = 158 */
              /* bump-normalized */
    30 |      $$TVX.$$.__15747 = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & $$ICM.f.i@180)] = f.zero@0;
              $$ICM.f.i@180 = $$ICM.f.i@180 + 1u;
    24 |      if (!1) goto lab_85;
              $$CIV19 = 0ll;
    22 |      do {   /* id=19 guarded */ /* ~84 */ 
                /* region = 157 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & $$ICM.f.i@180 + (unsigned int) ((int) $$CIV19))] = $$TVX.$$.__15747;
    24 |        $$CIV19 = $$CIV19 + 1ll;
              } while ((unsigned long long) $$CIV19 < (unsigned long long) (f.dy@c - 1u));    /* ~84 */
              $$ICM.f.i@180 = $$ICM.f.i@180 + (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u)));
            lab_85:
    30 |      $$CIV1E = $$CIV1E + 1ll;
            } while ((unsigned long long) $$CIV1E < (unsigned long long) nz);    /* ~83 */
            f.i@18 = $$ICM.f.i@180;
          lab_136:
            goto lab_138;
          lab_137:
    31 |    if (!1) goto lab_142;
            $$CIV1E = 0ll;
            $$SCREP0 = f.i@18;
            do {   /* id=30 guarded */ /* ~139 */ 
              /* region = 159 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & $$SCREP0)] = f.zero@0;
              $$SCREP0 = $$SCREP0 + 1u;
    30 |      $$CIV1E = $$CIV1E + 1ll;
            } while ((unsigned long long) $$CIV1E < (unsigned long long) nz);    /* ~139 */
            f.i@18 = $$SCREP0;
          lab_142:
          lab_138:
          lab_92:
          lab_93:
          lab_71:
          lab_12:
    52 |    if (!(__145 != NULL)) goto lab_32;
    35 |    operator delete(void*)(__145)
          lab_32:
    53 |    if (!(rm != NULL)) goto lab_35;
            ((funcaddr *)(*((char * *)rm)))[8ll / 8]->(()vf).rns107.(rm);
          lab_35:
    11 |    operator delete[](void*)(f.a@20)
    54 |    return;
          } /* function */ 


    14 |  void void decompress3d<double, 32u>(RCdecoder*, double*, unsigned int, unsigned int, unsigned int)(char * rd, long long *data, unsigned int nx, unsigned int ny, unsigned int nz)
    21 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
    24 |    __199 = operator new(unsigned long)(72ull);
            if (!(__199 != NULL)) goto lab_2;
            __es.__c4@3 = 1u;
            RCqsmodel::RCqsmodel(bool, unsigned int, unsigned int, unsigned int)(__199,0u,65u,16u,1024u);
            __es.__c4@3 = 0u;
          lab_2:
            $$rm.nat.6 = __199;
    25 |    __200 = operator new(unsigned long)(24ull);
            rm = $$rm.nat.6;
            if (!(__200 != NULL)) goto lab_5;
    34 |    *((char * *)((char *)__200 + 8)) = rd;
            rm = $$rm.nat.6;
            *((char * *)((char *)__200 + 16)) = &rm;
          lab_5:
    26 |    f.zero@0 =  0.0000000000000000E+000;
     9 |    f.dx@8 = 1u;
            f.dy@c = nx + 1u;
            f.dz@10 = (ny + 1u) * (nx + 1u);
    45 |    __233.rnn41 = (2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u;
            if (!(0u != (((2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u) + 1u & (2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u))) goto lab_9;
            do {   /* id=8 guarded */ /* ~7 */ 
              /* region = 135 */
     9 |      __233.rnn41 = __233.rnn41 | __233.rnn41 + 1u;
    45 |    } while (0u != (__233.rnn41 + 1u & __233.rnn41));    /* ~7 */
          lab_9:
    47 |    f.m@14 = __233.rnn41;
    10 |    f.i@18 = 0u;
            f.a@20 = operator new[](unsigned long)((unsigned long long) (__233.rnn41 + 1u) * 8ull);
            __es.__c4@3 = 2u;
    23 |    f.a@20[(long long) (f.i@18 & f.m@14)] = f.zero@0;
            f.i@18 = f.i@18 + 1u;
    24 |    if (!(1u != f.dz@10)) goto lab_43;
            $$CIV1F = 0ll;
    22 |    do {   /* id=7 guarded */ /* ~13 */ 
              /* region = 136 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV1F))] = f.zero@0;
    24 |      $$CIV1F = $$CIV1F + 1ll;
            } while ((unsigned long long) $$CIV1F < (unsigned long long) (f.dz@10 - 1u));    /* ~13 */
            f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dz@10 - 1u))) + f.i@18;
          lab_43:
    31 |    if (!(0u < nz)) goto lab_12;
            if (!(0u < ny)) goto lab_70;
            if (!(0u < nx)) goto lab_58;
            if (!1) goto lab_57;
            $$CIV25 = 0ll;
            do {   /* id=1 guarded */ /* ~10 */ 
              /* region = 141 */
              /* bump-normalized */
    30 |      __212 = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    24 |      if (!(1u != f.dy@c)) goto lab_44;
              $$CIV20 = 0ll;
    22 |      do {   /* id=6 guarded */ /* ~19 */ 
                /* region = 137 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV20))] = __212;
    24 |        $$CIV20 = $$CIV20 + 1ll;
              } while ((unsigned long long) $$CIV20 < (unsigned long long) (f.dy@c - 1u));    /* ~19 */
              f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u))) + f.i@18;
            lab_44:
    31 |      if (!1) goto lab_18;
              $$CIV24 = 0ll;
              do {   /* id=2 guarded */ /* ~16 */ 
                /* region = 140 */
                /* bump-normalized */
    30 |        __216 = f.zero@0;
    23 |        f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
                f.i@18 = f.i@18 + 1u;
    24 |        if (!(1u != f.dx@8)) goto lab_45;
                $$CIV21 = 0ll;
    22 |        do {   /* id=5 guarded */ /* ~25 */ 
                  /* region = 138 */
                  /* bump-normalized */
    23 |          f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV21))] = __216;
    24 |          $$CIV21 = $$CIV21 + 1ll;
                } while ((unsigned long long) $$CIV21 < (unsigned long long) (f.dx@8 - 1u));    /* ~25 */
                f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dx@8 - 1u))) + f.i@18;
              lab_45:
    31 |        if (!1) goto lab_24;
                $$CIV23 = 0ll;
                do {   /* id=3 guarded */ /* ~22 */ 
                  /* region = 139 */
                  /* bump-normalized */
    47 |          $$csx1 = f.i@18;
                  $$TVX.$$.a99 = PCdecoder<double, PCmap<double, 32u, void>, true>::decode(double, unsigned int)(__200,(((((f.a@20[(long long) ($$csx1 - f.dx@8 & f.m@14)] - f.a@20[(long long) (($$csx1 - f.dy@c) - f.dz@10 & f.m@14)]) + f.a@20[(long long) ($$csx1 - f.dy@c & f.m@14)]) - f.a@20[(long long) (($$csx1 - f.dx@8) - f.dz@10 & f.m@14)]) + f.a@20[(long long) ($$csx1 - f.dz@10 & f.m@14)]) - f.a@20[(long long) (($$csx1 - f.dx@8) - f.dy@c & f.m@14)]) + f.a@20[(long long) ((($$csx1 - f.dx@8) - f.dy@c) - f.dz@10 & f.m@14)],0u);
    48 |          data[$$CIV23] = $$TVX.$$.a99;
    23 |          f.a@20[(long long) (f.m@14 & f.i@18)] = $$TVX.$$.a99;
                  f.i@18 = f.i@18 + 1u;
    32 |          $$CIV23 = $$CIV23 + 1ll;
                } while ((unsigned long long) $$CIV23 < (unsigned long long) nx);    /* ~22 */
                data = ((char *)data  + (long long) ((unsigned long long) nx * 8ull));
              lab_24:
    31 |        $$CIV24 = $$CIV24 + 1ll;
              } while ((unsigned long long) $$CIV24 < (unsigned long long) ny);    /* ~16 */
            lab_18:
    30 |      $$CIV25 = $$CIV25 + 1ll;
            } while ((unsigned long long) $$CIV25 < (unsigned long long) nz);    /* ~10 */
          lab_57:
            goto lab_71;
          lab_58:
    31 |    if (!1) goto lab_71;
            if (!(1u != f.dy@c)) goto lab_109;
            if (!(1u != f.dx@8)) goto lab_99;
            if (!1) goto lab_98;
            $$CIV25 = 0ll;
            do {   /* id=4 guarded */ /* ~60 */ 
              /* region = 145 */
              /* bump-normalized */
    30 |      __212 = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    24 |      if (!1) goto lab_62;
              $$CIV20 = 0ll;
    22 |      do {   /* id=9 guarded */ /* ~61 */ 
                /* region = 144 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV20))] = __212;
    24 |        $$CIV20 = $$CIV20 + 1ll;
              } while ((unsigned long long) $$CIV20 < (unsigned long long) (f.dy@c - 1u));    /* ~61 */
              f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u))) + f.i@18;
            lab_62:
    31 |      if (!1) goto lab_68;
              $$CIV24 = 0ll;
              do {   /* id=10 guarded */ /* ~63 */ 
                /* region = 143 */
                /* bump-normalized */
    30 |        $$TVX.$$.__216AA = f.zero@0;
    23 |        f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
                f.i@18 = f.i@18 + 1u;
    24 |        if (!1) goto lab_65;
                $$CIV21 = 0ll;
    22 |        do {   /* id=11 guarded */ /* ~64 */ 
                  /* region = 142 */
                  /* bump-normalized */
    23 |          f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV21))] = $$TVX.$$.__216AA;
    24 |          $$CIV21 = $$CIV21 + 1ll;
                } while ((unsigned long long) $$CIV21 < (unsigned long long) (f.dx@8 - 1u));    /* ~64 */
                f.i@18 = f.i@18 + (unsigned int) ((int) ((unsigned long long) (f.dx@8 - 1u)));
              lab_65:
    31 |        $$CIV24 = $$CIV24 + 1ll;
              } while ((unsigned long long) $$CIV24 < (unsigned long long) ny);    /* ~63 */
            lab_68:
    30 |      $$CIV25 = $$CIV25 + 1ll;
            } while ((unsigned long long) $$CIV25 < (unsigned long long) nz);    /* ~60 */
          lab_98:
            goto lab_71;
          lab_99:
    31 |    if (!1) goto lab_108;
            $$CIV25 = 0ll;
            do {   /* id=22 guarded */ /* ~101 */ 
              /* region = 148 */
              /* bump-normalized */
    30 |      __212 = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    24 |      if (!1) goto lab_103;
              $$CIV20 = 0ll;
    22 |      do {   /* id=21 guarded */ /* ~102 */ 
                /* region = 147 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV20))] = __212;
    24 |        $$CIV20 = $$CIV20 + 1ll;
              } while ((unsigned long long) $$CIV20 < (unsigned long long) (f.dy@c - 1u));    /* ~102 */
              f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u))) + f.i@18;
            lab_103:
    31 |      if (!1) goto lab_107;
              $$CIV24 = 0ll;
              $$SCREP7 = f.i@18;
              do {   /* id=20 guarded */ /* ~104 */ 
                /* region = 146 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & $$SCREP7)] = f.zero@0;
                $$SCREP7 = $$SCREP7 + 1u;
    31 |        $$CIV24 = $$CIV24 + 1ll;
              } while ((unsigned long long) $$CIV24 < (unsigned long long) ny);    /* ~104 */
              f.i@18 = $$SCREP7;
            lab_107:
    30 |      $$CIV25 = $$CIV25 + 1ll;
            } while ((unsigned long long) $$CIV25 < (unsigned long long) nz);    /* ~101 */
          lab_108:
            goto lab_71;
          lab_109:
    31 |    if (!(1u != f.dx@8)) goto lab_119;
            if (!1) goto lab_118;
            $$CIV25 = 0ll;
            do {   /* id=16 guarded */ /* ~111 */ 
              /* region = 151 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    31 |      if (!1) goto lab_117;
              $$CIV24 = 0ll;
              do {   /* id=12 guarded */ /* ~114 */ 
                /* region = 150 */
                /* bump-normalized */
    30 |        $$TVX.$$.__216BC = f.zero@0;
    23 |        f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
                f.i@18 = f.i@18 + 1u;
    24 |        if (!1) goto lab_116;
                $$CIV21 = 0ll;
    22 |        do {   /* id=23 guarded */ /* ~115 */ 
                  /* region = 149 */
                  /* bump-normalized */
    23 |          f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV21))] = $$TVX.$$.__216BC;
    24 |          $$CIV21 = $$CIV21 + 1ll;
                } while ((unsigned long long) $$CIV21 < (unsigned long long) (f.dx@8 - 1u));    /* ~115 */
                f.i@18 = f.i@18 + (unsigned int) ((int) ((unsigned long long) (f.dx@8 - 1u)));
              lab_116:
    31 |        $$CIV24 = $$CIV24 + 1ll;
              } while ((unsigned long long) $$CIV24 < (unsigned long long) ny);    /* ~114 */
            lab_117:
    30 |      $$CIV25 = $$CIV25 + 1ll;
            } while ((unsigned long long) $$CIV25 < (unsigned long long) nz);    /* ~111 */
          lab_118:
            goto lab_71;
          lab_119:
    31 |    if (!1) goto lab_127;
            $$CIV25 = 0ll;
    23 |    $$ICM.f.i@181 = f.i@18;
    31 |    do {   /* id=24 guarded */ /* ~120 */ 
              /* region = 153 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & $$ICM.f.i@181)] = f.zero@0;
              $$ICM.f.i@181 = $$ICM.f.i@181 + 1u;
    31 |      if (!1) goto lab_126;
              $$CIV24 = 0ll;
              $$SCREP6 = $$ICM.f.i@181;
              do {   /* id=26 guarded */ /* ~123 */ 
                /* region = 152 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & $$SCREP6)] = f.zero@0;
                $$SCREP6 = $$SCREP6 + 1u;
    31 |        $$CIV24 = $$CIV24 + 1ll;
              } while ((unsigned long long) $$CIV24 < (unsigned long long) ny);    /* ~123 */
              $$ICM.f.i@181 = $$SCREP6;
            lab_126:
    30 |      $$CIV25 = $$CIV25 + 1ll;
            } while ((unsigned long long) $$CIV25 < (unsigned long long) nz);    /* ~120 */
            f.i@18 = $$ICM.f.i@181;
          lab_127:
            goto lab_71;
          lab_70:
    31 |    if (!(0u < nx)) goto lab_82;
            if (!1) goto lab_93;
            if (!(1u != f.dy@c)) goto lab_130;
            if (!1) goto lab_129;
            $$CIV25 = 0ll;
    23 |    $$ICM.f.i@181 = f.i@18;
    31 |    do {   /* id=13 guarded */ /* ~72 */ 
              /* region = 155 */
              /* bump-normalized */
    30 |      $$TVX.$$.__212CE = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & $$ICM.f.i@181)] = f.zero@0;
              $$ICM.f.i@181 = $$ICM.f.i@181 + 1u;
    24 |      if (!1) goto lab_74;
              $$CIV20 = 0ll;
    22 |      do {   /* id=14 guarded */ /* ~73 */ 
                /* region = 154 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & $$ICM.f.i@181 + (unsigned int) ((int) $$CIV20))] = $$TVX.$$.__212CE;
    24 |        $$CIV20 = $$CIV20 + 1ll;
              } while ((unsigned long long) $$CIV20 < (unsigned long long) (f.dy@c - 1u));    /* ~73 */
              $$ICM.f.i@181 = $$ICM.f.i@181 + (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u)));
            lab_74:
    30 |      $$CIV25 = $$CIV25 + 1ll;
            } while ((unsigned long long) $$CIV25 < (unsigned long long) nz);    /* ~72 */
            f.i@18 = $$ICM.f.i@181;
          lab_129:
            goto lab_93;
          lab_130:
    31 |    if (!1) goto lab_135;
            $$CIV25 = 0ll;
            $$SCREP5 = f.i@18;
            do {   /* id=28 guarded */ /* ~132 */ 
              /* region = 156 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & $$SCREP5)] = f.zero@0;
              $$SCREP5 = $$SCREP5 + 1u;
    30 |      $$CIV25 = $$CIV25 + 1ll;
            } while ((unsigned long long) $$CIV25 < (unsigned long long) nz);    /* ~132 */
            f.i@18 = $$SCREP5;
          lab_135:
            goto lab_93;
          lab_82:
    31 |    if (!1) goto lab_92;
            if (!(1u != f.dy@c)) goto lab_137;
            if (!1) goto lab_136;
            $$CIV25 = 0ll;
    23 |    $$ICM.f.i@181 = f.i@18;
    31 |    do {   /* id=18 guarded */ /* ~83 */ 
              /* region = 158 */
              /* bump-normalized */
    30 |      $$TVX.$$.__212D10 = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & $$ICM.f.i@181)] = f.zero@0;
              $$ICM.f.i@181 = $$ICM.f.i@181 + 1u;
    24 |      if (!1) goto lab_85;
              $$CIV20 = 0ll;
    22 |      do {   /* id=19 guarded */ /* ~84 */ 
                /* region = 157 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & $$ICM.f.i@181 + (unsigned int) ((int) $$CIV20))] = $$TVX.$$.__212D10;
    24 |        $$CIV20 = $$CIV20 + 1ll;
              } while ((unsigned long long) $$CIV20 < (unsigned long long) (f.dy@c - 1u));    /* ~84 */
              $$ICM.f.i@181 = $$ICM.f.i@181 + (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u)));
            lab_85:
    30 |      $$CIV25 = $$CIV25 + 1ll;
            } while ((unsigned long long) $$CIV25 < (unsigned long long) nz);    /* ~83 */
            f.i@18 = $$ICM.f.i@181;
          lab_136:
            goto lab_138;
          lab_137:
    31 |    if (!1) goto lab_142;
            $$CIV25 = 0ll;
            $$SCREP4 = f.i@18;
            do {   /* id=30 guarded */ /* ~139 */ 
              /* region = 159 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & $$SCREP4)] = f.zero@0;
              $$SCREP4 = $$SCREP4 + 1u;
    30 |      $$CIV25 = $$CIV25 + 1ll;
            } while ((unsigned long long) $$CIV25 < (unsigned long long) nz);    /* ~139 */
            f.i@18 = $$SCREP4;
          lab_142:
          lab_138:
          lab_92:
          lab_93:
          lab_71:
          lab_12:
    52 |    if (!(__200 != NULL)) goto lab_32;
    35 |    operator delete(void*)(__200)
          lab_32:
    53 |    if (!(rm != NULL)) goto lab_35;
            ((funcaddr *)(*((char * *)rm)))[8ll / 8]->(()vf).rns123.(rm);
          lab_35:
    11 |    operator delete[](void*)(f.a@20)
    54 |    return;
          } /* function */ 


    14 |  void void decompress3d<double, 48u>(RCdecoder*, double*, unsigned int, unsigned int, unsigned int)(char * rd, long long *data, unsigned int nx, unsigned int ny, unsigned int nz)
    21 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
    24 |    __254 = operator new(unsigned long)(72ull);
            if (!(__254 != NULL)) goto lab_2;
            __es.__c4@3 = 1u;
            RCqsmodel::RCqsmodel(bool, unsigned int, unsigned int, unsigned int)(__254,0u,97u,16u,1024u);
            __es.__c4@3 = 0u;
          lab_2:
            $$rm.nat.C = __254;
    25 |    __255 = operator new(unsigned long)(24ull);
            rm = $$rm.nat.C;
            if (!(__255 != NULL)) goto lab_5;
    34 |    *((char * *)((char *)__255 + 8)) = rd;
            rm = $$rm.nat.C;
            *((char * *)((char *)__255 + 16)) = &rm;
          lab_5:
    26 |    f.zero@0 =  0.0000000000000000E+000;
     9 |    f.dx@8 = 1u;
            f.dy@c = nx + 1u;
            f.dz@10 = (ny + 1u) * (nx + 1u);
    45 |    __288.rnn4D = (2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u;
            if (!(0u != (((2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u) + 1u & (2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u))) goto lab_9;
            do {   /* id=8 guarded */ /* ~7 */ 
              /* region = 135 */
     9 |      __288.rnn4D = __288.rnn4D | __288.rnn4D + 1u;
    45 |    } while (0u != (__288.rnn4D + 1u & __288.rnn4D));    /* ~7 */
          lab_9:
    47 |    f.m@14 = __288.rnn4D;
    10 |    f.i@18 = 0u;
            f.a@20 = operator new[](unsigned long)((unsigned long long) (__288.rnn4D + 1u) * 8ull);
            __es.__c4@3 = 2u;
    23 |    f.a@20[(long long) (f.i@18 & f.m@14)] = f.zero@0;
            f.i@18 = f.i@18 + 1u;
    24 |    if (!(1u != f.dz@10)) goto lab_43;
            $$CIV26 = 0ll;
    22 |    do {   /* id=7 guarded */ /* ~13 */ 
              /* region = 136 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV26))] = f.zero@0;
    24 |      $$CIV26 = $$CIV26 + 1ll;
            } while ((unsigned long long) $$CIV26 < (unsigned long long) (f.dz@10 - 1u));    /* ~13 */
            f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dz@10 - 1u))) + f.i@18;
          lab_43:
    31 |    if (!(0u < nz)) goto lab_12;
            if (!(0u < ny)) goto lab_70;
            if (!(0u < nx)) goto lab_58;
            if (!1) goto lab_57;
            $$CIV2C = 0ll;
            do {   /* id=1 guarded */ /* ~10 */ 
              /* region = 141 */
              /* bump-normalized */
    30 |      __267 = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    24 |      if (!(1u != f.dy@c)) goto lab_44;
              $$CIV27 = 0ll;
    22 |      do {   /* id=6 guarded */ /* ~19 */ 
                /* region = 137 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV27))] = __267;
    24 |        $$CIV27 = $$CIV27 + 1ll;
              } while ((unsigned long long) $$CIV27 < (unsigned long long) (f.dy@c - 1u));    /* ~19 */
              f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u))) + f.i@18;
            lab_44:
    31 |      if (!1) goto lab_18;
              $$CIV2B = 0ll;
              do {   /* id=2 guarded */ /* ~16 */ 
                /* region = 140 */
                /* bump-normalized */
    30 |        __271 = f.zero@0;
    23 |        f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
                f.i@18 = f.i@18 + 1u;
    24 |        if (!(1u != f.dx@8)) goto lab_45;
                $$CIV28 = 0ll;
    22 |        do {   /* id=5 guarded */ /* ~25 */ 
                  /* region = 138 */
                  /* bump-normalized */
    23 |          f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV28))] = __271;
    24 |          $$CIV28 = $$CIV28 + 1ll;
                } while ((unsigned long long) $$CIV28 < (unsigned long long) (f.dx@8 - 1u));    /* ~25 */
                f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dx@8 - 1u))) + f.i@18;
              lab_45:
    31 |        if (!1) goto lab_24;
                $$CIV2A = 0ll;
                do {   /* id=3 guarded */ /* ~22 */ 
                  /* region = 139 */
                  /* bump-normalized */
    47 |          $$csx2 = f.i@18;
                  $$TVX.$$.a1212 = PCdecoder<double, PCmap<double, 48u, void>, true>::decode(double, unsigned int)(__255,(((((f.a@20[(long long) ($$csx2 - f.dx@8 & f.m@14)] - f.a@20[(long long) (($$csx2 - f.dy@c) - f.dz@10 & f.m@14)]) + f.a@20[(long long) ($$csx2 - f.dy@c & f.m@14)]) - f.a@20[(long long) (($$csx2 - f.dx@8) - f.dz@10 & f.m@14)]) + f.a@20[(long long) ($$csx2 - f.dz@10 & f.m@14)]) - f.a@20[(long long) (($$csx2 - f.dx@8) - f.dy@c & f.m@14)]) + f.a@20[(long long) ((($$csx2 - f.dx@8) - f.dy@c) - f.dz@10 & f.m@14)],0u);
    48 |          data[$$CIV2A] = $$TVX.$$.a1212;
    23 |          f.a@20[(long long) (f.m@14 & f.i@18)] = $$TVX.$$.a1212;
                  f.i@18 = f.i@18 + 1u;
    32 |          $$CIV2A = $$CIV2A + 1ll;
                } while ((unsigned long long) $$CIV2A < (unsigned long long) nx);    /* ~22 */
                data = ((char *)data  + (long long) ((unsigned long long) nx * 8ull));
              lab_24:
    31 |        $$CIV2B = $$CIV2B + 1ll;
              } while ((unsigned long long) $$CIV2B < (unsigned long long) ny);    /* ~16 */
            lab_18:
    30 |      $$CIV2C = $$CIV2C + 1ll;
            } while ((unsigned long long) $$CIV2C < (unsigned long long) nz);    /* ~10 */
          lab_57:
            goto lab_71;
          lab_58:
    31 |    if (!1) goto lab_71;
            if (!(1u != f.dy@c)) goto lab_109;
            if (!(1u != f.dx@8)) goto lab_99;
            if (!1) goto lab_98;
            $$CIV2C = 0ll;
            do {   /* id=4 guarded */ /* ~60 */ 
              /* region = 145 */
              /* bump-normalized */
    30 |      __267 = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    24 |      if (!1) goto lab_62;
              $$CIV27 = 0ll;
    22 |      do {   /* id=9 guarded */ /* ~61 */ 
                /* region = 144 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV27))] = __267;
    24 |        $$CIV27 = $$CIV27 + 1ll;
              } while ((unsigned long long) $$CIV27 < (unsigned long long) (f.dy@c - 1u));    /* ~61 */
              f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u))) + f.i@18;
            lab_62:
    31 |      if (!1) goto lab_68;
              $$CIV2B = 0ll;
              do {   /* id=10 guarded */ /* ~63 */ 
                /* region = 143 */
                /* bump-normalized */
    30 |        $$TVX.$$.__2711313 = f.zero@0;
    23 |        f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
                f.i@18 = f.i@18 + 1u;
    24 |        if (!1) goto lab_65;
                $$CIV28 = 0ll;
    22 |        do {   /* id=11 guarded */ /* ~64 */ 
                  /* region = 142 */
                  /* bump-normalized */
    23 |          f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV28))] = $$TVX.$$.__2711313;
    24 |          $$CIV28 = $$CIV28 + 1ll;
                } while ((unsigned long long) $$CIV28 < (unsigned long long) (f.dx@8 - 1u));    /* ~64 */
                f.i@18 = f.i@18 + (unsigned int) ((int) ((unsigned long long) (f.dx@8 - 1u)));
              lab_65:
    31 |        $$CIV2B = $$CIV2B + 1ll;
              } while ((unsigned long long) $$CIV2B < (unsigned long long) ny);    /* ~63 */
            lab_68:
    30 |      $$CIV2C = $$CIV2C + 1ll;
            } while ((unsigned long long) $$CIV2C < (unsigned long long) nz);    /* ~60 */
          lab_98:
            goto lab_71;
          lab_99:
    31 |    if (!1) goto lab_108;
            $$CIV2C = 0ll;
            do {   /* id=22 guarded */ /* ~101 */ 
              /* region = 148 */
              /* bump-normalized */
    30 |      __267 = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    24 |      if (!1) goto lab_103;
              $$CIV27 = 0ll;
    22 |      do {   /* id=21 guarded */ /* ~102 */ 
                /* region = 147 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV27))] = __267;
    24 |        $$CIV27 = $$CIV27 + 1ll;
              } while ((unsigned long long) $$CIV27 < (unsigned long long) (f.dy@c - 1u));    /* ~102 */
              f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u))) + f.i@18;
            lab_103:
    31 |      if (!1) goto lab_107;
              $$CIV2B = 0ll;
              $$SCREPB = f.i@18;
              do {   /* id=20 guarded */ /* ~104 */ 
                /* region = 146 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & $$SCREPB)] = f.zero@0;
                $$SCREPB = $$SCREPB + 1u;
    31 |        $$CIV2B = $$CIV2B + 1ll;
              } while ((unsigned long long) $$CIV2B < (unsigned long long) ny);    /* ~104 */
              f.i@18 = $$SCREPB;
            lab_107:
    30 |      $$CIV2C = $$CIV2C + 1ll;
            } while ((unsigned long long) $$CIV2C < (unsigned long long) nz);    /* ~101 */
          lab_108:
            goto lab_71;
          lab_109:
    31 |    if (!(1u != f.dx@8)) goto lab_119;
            if (!1) goto lab_118;
            $$CIV2C = 0ll;
            do {   /* id=16 guarded */ /* ~111 */ 
              /* region = 151 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    31 |      if (!1) goto lab_117;
              $$CIV2B = 0ll;
              do {   /* id=12 guarded */ /* ~114 */ 
                /* region = 150 */
                /* bump-normalized */
    30 |        $$TVX.$$.__2711415 = f.zero@0;
    23 |        f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
                f.i@18 = f.i@18 + 1u;
    24 |        if (!1) goto lab_116;
                $$CIV28 = 0ll;
    22 |        do {   /* id=23 guarded */ /* ~115 */ 
                  /* region = 149 */
                  /* bump-normalized */
    23 |          f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV28))] = $$TVX.$$.__2711415;
    24 |          $$CIV28 = $$CIV28 + 1ll;
                } while ((unsigned long long) $$CIV28 < (unsigned long long) (f.dx@8 - 1u));    /* ~115 */
                f.i@18 = f.i@18 + (unsigned int) ((int) ((unsigned long long) (f.dx@8 - 1u)));
              lab_116:
    31 |        $$CIV2B = $$CIV2B + 1ll;
              } while ((unsigned long long) $$CIV2B < (unsigned long long) ny);    /* ~114 */
            lab_117:
    30 |      $$CIV2C = $$CIV2C + 1ll;
            } while ((unsigned long long) $$CIV2C < (unsigned long long) nz);    /* ~111 */
          lab_118:
            goto lab_71;
          lab_119:
    31 |    if (!1) goto lab_127;
            $$CIV2C = 0ll;
    23 |    $$ICM.f.i@182 = f.i@18;
    31 |    do {   /* id=24 guarded */ /* ~120 */ 
              /* region = 153 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & $$ICM.f.i@182)] = f.zero@0;
              $$ICM.f.i@182 = $$ICM.f.i@182 + 1u;
    31 |      if (!1) goto lab_126;
              $$CIV2B = 0ll;
              $$SCREPA = $$ICM.f.i@182;
              do {   /* id=26 guarded */ /* ~123 */ 
                /* region = 152 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & $$SCREPA)] = f.zero@0;
                $$SCREPA = $$SCREPA + 1u;
    31 |        $$CIV2B = $$CIV2B + 1ll;
              } while ((unsigned long long) $$CIV2B < (unsigned long long) ny);    /* ~123 */
              $$ICM.f.i@182 = $$SCREPA;
            lab_126:
    30 |      $$CIV2C = $$CIV2C + 1ll;
            } while ((unsigned long long) $$CIV2C < (unsigned long long) nz);    /* ~120 */
            f.i@18 = $$ICM.f.i@182;
          lab_127:
            goto lab_71;
          lab_70:
    31 |    if (!(0u < nx)) goto lab_82;
            if (!1) goto lab_93;
            if (!(1u != f.dy@c)) goto lab_130;
            if (!1) goto lab_129;
            $$CIV2C = 0ll;
    23 |    $$ICM.f.i@182 = f.i@18;
    31 |    do {   /* id=13 guarded */ /* ~72 */ 
              /* region = 155 */
              /* bump-normalized */
    30 |      $$TVX.$$.__2671517 = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & $$ICM.f.i@182)] = f.zero@0;
              $$ICM.f.i@182 = $$ICM.f.i@182 + 1u;
    24 |      if (!1) goto lab_74;
              $$CIV27 = 0ll;
    22 |      do {   /* id=14 guarded */ /* ~73 */ 
                /* region = 154 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & $$ICM.f.i@182 + (unsigned int) ((int) $$CIV27))] = $$TVX.$$.__2671517;
    24 |        $$CIV27 = $$CIV27 + 1ll;
              } while ((unsigned long long) $$CIV27 < (unsigned long long) (f.dy@c - 1u));    /* ~73 */
              $$ICM.f.i@182 = $$ICM.f.i@182 + (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u)));
            lab_74:
    30 |      $$CIV2C = $$CIV2C + 1ll;
            } while ((unsigned long long) $$CIV2C < (unsigned long long) nz);    /* ~72 */
            f.i@18 = $$ICM.f.i@182;
          lab_129:
            goto lab_93;
          lab_130:
    31 |    if (!1) goto lab_135;
            $$CIV2C = 0ll;
            $$SCREP9 = f.i@18;
            do {   /* id=28 guarded */ /* ~132 */ 
              /* region = 156 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & $$SCREP9)] = f.zero@0;
              $$SCREP9 = $$SCREP9 + 1u;
    30 |      $$CIV2C = $$CIV2C + 1ll;
            } while ((unsigned long long) $$CIV2C < (unsigned long long) nz);    /* ~132 */
            f.i@18 = $$SCREP9;
          lab_135:
            goto lab_93;
          lab_82:
    31 |    if (!1) goto lab_92;
            if (!(1u != f.dy@c)) goto lab_137;
            if (!1) goto lab_136;
            $$CIV2C = 0ll;
    23 |    $$ICM.f.i@182 = f.i@18;
    31 |    do {   /* id=18 guarded */ /* ~83 */ 
              /* region = 158 */
              /* bump-normalized */
    30 |      $$TVX.$$.__2671619 = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & $$ICM.f.i@182)] = f.zero@0;
              $$ICM.f.i@182 = $$ICM.f.i@182 + 1u;
    24 |      if (!1) goto lab_85;
              $$CIV27 = 0ll;
    22 |      do {   /* id=19 guarded */ /* ~84 */ 
                /* region = 157 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & $$ICM.f.i@182 + (unsigned int) ((int) $$CIV27))] = $$TVX.$$.__2671619;
    24 |        $$CIV27 = $$CIV27 + 1ll;
              } while ((unsigned long long) $$CIV27 < (unsigned long long) (f.dy@c - 1u));    /* ~84 */
              $$ICM.f.i@182 = $$ICM.f.i@182 + (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u)));
            lab_85:
    30 |      $$CIV2C = $$CIV2C + 1ll;
            } while ((unsigned long long) $$CIV2C < (unsigned long long) nz);    /* ~83 */
            f.i@18 = $$ICM.f.i@182;
          lab_136:
            goto lab_138;
          lab_137:
    31 |    if (!1) goto lab_142;
            $$CIV2C = 0ll;
            $$SCREP8 = f.i@18;
            do {   /* id=30 guarded */ /* ~139 */ 
              /* region = 159 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & $$SCREP8)] = f.zero@0;
              $$SCREP8 = $$SCREP8 + 1u;
    30 |      $$CIV2C = $$CIV2C + 1ll;
            } while ((unsigned long long) $$CIV2C < (unsigned long long) nz);    /* ~139 */
            f.i@18 = $$SCREP8;
          lab_142:
          lab_138:
          lab_92:
          lab_93:
          lab_71:
          lab_12:
    52 |    if (!(__255 != NULL)) goto lab_32;
    35 |    operator delete(void*)(__255)
          lab_32:
    53 |    if (!(rm != NULL)) goto lab_35;
            ((funcaddr *)(*((char * *)rm)))[8ll / 8]->(()vf).rns139.(rm);
          lab_35:
    11 |    operator delete[](void*)(f.a@20)
    54 |    return;
          } /* function */ 


    14 |  void void decompress3d<double, 64u>(RCdecoder*, double*, unsigned int, unsigned int, unsigned int)(char * rd, long long *data, unsigned int nx, unsigned int ny, unsigned int nz)
    21 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
    24 |    __309 = operator new(unsigned long)(72ull);
            if (!(__309 != NULL)) goto lab_2;
            __es.__c4@3 = 1u;
            RCqsmodel::RCqsmodel(bool, unsigned int, unsigned int, unsigned int)(__309,0u,129u,16u,1024u);
            __es.__c4@3 = 0u;
          lab_2:
            $$rm.nat.12 = __309;
    25 |    __310 = operator new(unsigned long)(24ull);
            rm = $$rm.nat.12;
            if (!(__310 != NULL)) goto lab_5;
    34 |    *((char * *)((char *)__310 + 8)) = rd;
            rm = $$rm.nat.12;
            *((char * *)((char *)__310 + 16)) = &rm;
          lab_5:
    26 |    f.zero@0 =  0.0000000000000000E+000;
     9 |    f.dx@8 = 1u;
            f.dy@c = nx + 1u;
            f.dz@10 = (ny + 1u) * (nx + 1u);
    45 |    __343.rnn59 = (2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u;
            if (!(0u != (((2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u) + 1u & (2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u))) goto lab_9;
            do {   /* id=8 guarded */ /* ~7 */ 
              /* region = 135 */
     9 |      __343.rnn59 = __343.rnn59 | __343.rnn59 + 1u;
    45 |    } while (0u != (__343.rnn59 + 1u & __343.rnn59));    /* ~7 */
          lab_9:
    47 |    f.m@14 = __343.rnn59;
    10 |    f.i@18 = 0u;
            f.a@20 = operator new[](unsigned long)((unsigned long long) (__343.rnn59 + 1u) * 8ull);
            __es.__c4@3 = 2u;
    23 |    f.a@20[(long long) (f.i@18 & f.m@14)] = f.zero@0;
            f.i@18 = f.i@18 + 1u;
    24 |    if (!(1u != f.dz@10)) goto lab_43;
            $$CIV2D = 0ll;
    22 |    do {   /* id=7 guarded */ /* ~13 */ 
              /* region = 136 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV2D))] = f.zero@0;
    24 |      $$CIV2D = $$CIV2D + 1ll;
            } while ((unsigned long long) $$CIV2D < (unsigned long long) (f.dz@10 - 1u));    /* ~13 */
            f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dz@10 - 1u))) + f.i@18;
          lab_43:
    31 |    if (!(0u < nz)) goto lab_12;
            if (!(0u < ny)) goto lab_70;
            if (!(0u < nx)) goto lab_58;
            if (!1) goto lab_57;
            $$CIV33 = 0ll;
            do {   /* id=1 guarded */ /* ~10 */ 
              /* region = 141 */
              /* bump-normalized */
    30 |      __322 = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    24 |      if (!(1u != f.dy@c)) goto lab_44;
              $$CIV2E = 0ll;
    22 |      do {   /* id=6 guarded */ /* ~19 */ 
                /* region = 137 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV2E))] = __322;
    24 |        $$CIV2E = $$CIV2E + 1ll;
              } while ((unsigned long long) $$CIV2E < (unsigned long long) (f.dy@c - 1u));    /* ~19 */
              f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u))) + f.i@18;
            lab_44:
    31 |      if (!1) goto lab_18;
              $$CIV32 = 0ll;
              do {   /* id=2 guarded */ /* ~16 */ 
                /* region = 140 */
                /* bump-normalized */
    30 |        __326 = f.zero@0;
    23 |        f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
                f.i@18 = f.i@18 + 1u;
    24 |        if (!(1u != f.dx@8)) goto lab_45;
                $$CIV2F = 0ll;
    22 |        do {   /* id=5 guarded */ /* ~25 */ 
                  /* region = 138 */
                  /* bump-normalized */
    23 |          f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV2F))] = __326;
    24 |          $$CIV2F = $$CIV2F + 1ll;
                } while ((unsigned long long) $$CIV2F < (unsigned long long) (f.dx@8 - 1u));    /* ~25 */
                f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dx@8 - 1u))) + f.i@18;
              lab_45:
    31 |        if (!1) goto lab_24;
                $$CIV31 = 0ll;
                do {   /* id=3 guarded */ /* ~22 */ 
                  /* region = 139 */
                  /* bump-normalized */
    47 |          $$csx3 = f.i@18;
                  $$TVX.$$.a1B1B = PCdecoder<double, PCmap<double, 64u, void>, true>::decode(double, unsigned int)(__310,(((((f.a@20[(long long) ($$csx3 - f.dx@8 & f.m@14)] - f.a@20[(long long) (($$csx3 - f.dy@c) - f.dz@10 & f.m@14)]) + f.a@20[(long long) ($$csx3 - f.dy@c & f.m@14)]) - f.a@20[(long long) (($$csx3 - f.dx@8) - f.dz@10 & f.m@14)]) + f.a@20[(long long) ($$csx3 - f.dz@10 & f.m@14)]) - f.a@20[(long long) (($$csx3 - f.dx@8) - f.dy@c & f.m@14)]) + f.a@20[(long long) ((($$csx3 - f.dx@8) - f.dy@c) - f.dz@10 & f.m@14)],0u);
    48 |          data[$$CIV31] = $$TVX.$$.a1B1B;
    23 |          f.a@20[(long long) (f.m@14 & f.i@18)] = $$TVX.$$.a1B1B;
                  f.i@18 = f.i@18 + 1u;
    32 |          $$CIV31 = $$CIV31 + 1ll;
                } while ((unsigned long long) $$CIV31 < (unsigned long long) nx);    /* ~22 */
                data = ((char *)data  + (long long) ((unsigned long long) nx * 8ull));
              lab_24:
    31 |        $$CIV32 = $$CIV32 + 1ll;
              } while ((unsigned long long) $$CIV32 < (unsigned long long) ny);    /* ~16 */
            lab_18:
    30 |      $$CIV33 = $$CIV33 + 1ll;
            } while ((unsigned long long) $$CIV33 < (unsigned long long) nz);    /* ~10 */
          lab_57:
            goto lab_71;
          lab_58:
    31 |    if (!1) goto lab_71;
            if (!(1u != f.dy@c)) goto lab_109;
            if (!(1u != f.dx@8)) goto lab_99;
            if (!1) goto lab_98;
            $$CIV33 = 0ll;
            do {   /* id=4 guarded */ /* ~60 */ 
              /* region = 145 */
              /* bump-normalized */
    30 |      __322 = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    24 |      if (!1) goto lab_62;
              $$CIV2E = 0ll;
    22 |      do {   /* id=9 guarded */ /* ~61 */ 
                /* region = 144 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV2E))] = __322;
    24 |        $$CIV2E = $$CIV2E + 1ll;
              } while ((unsigned long long) $$CIV2E < (unsigned long long) (f.dy@c - 1u));    /* ~61 */
              f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u))) + f.i@18;
            lab_62:
    31 |      if (!1) goto lab_68;
              $$CIV32 = 0ll;
              do {   /* id=10 guarded */ /* ~63 */ 
                /* region = 143 */
                /* bump-normalized */
    30 |        $$TVX.$$.__3261C1C = f.zero@0;
    23 |        f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
                f.i@18 = f.i@18 + 1u;
    24 |        if (!1) goto lab_65;
                $$CIV2F = 0ll;
    22 |        do {   /* id=11 guarded */ /* ~64 */ 
                  /* region = 142 */
                  /* bump-normalized */
    23 |          f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV2F))] = $$TVX.$$.__3261C1C;
    24 |          $$CIV2F = $$CIV2F + 1ll;
                } while ((unsigned long long) $$CIV2F < (unsigned long long) (f.dx@8 - 1u));    /* ~64 */
                f.i@18 = f.i@18 + (unsigned int) ((int) ((unsigned long long) (f.dx@8 - 1u)));
              lab_65:
    31 |        $$CIV32 = $$CIV32 + 1ll;
              } while ((unsigned long long) $$CIV32 < (unsigned long long) ny);    /* ~63 */
            lab_68:
    30 |      $$CIV33 = $$CIV33 + 1ll;
            } while ((unsigned long long) $$CIV33 < (unsigned long long) nz);    /* ~60 */
          lab_98:
            goto lab_71;
          lab_99:
    31 |    if (!1) goto lab_108;
            $$CIV33 = 0ll;
            do {   /* id=22 guarded */ /* ~101 */ 
              /* region = 148 */
              /* bump-normalized */
    30 |      __322 = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    24 |      if (!1) goto lab_103;
              $$CIV2E = 0ll;
    22 |      do {   /* id=21 guarded */ /* ~102 */ 
                /* region = 147 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV2E))] = __322;
    24 |        $$CIV2E = $$CIV2E + 1ll;
              } while ((unsigned long long) $$CIV2E < (unsigned long long) (f.dy@c - 1u));    /* ~102 */
              f.i@18 = (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u))) + f.i@18;
            lab_103:
    31 |      if (!1) goto lab_107;
              $$CIV32 = 0ll;
              $$SCREPF = f.i@18;
              do {   /* id=20 guarded */ /* ~104 */ 
                /* region = 146 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & $$SCREPF)] = f.zero@0;
                $$SCREPF = $$SCREPF + 1u;
    31 |        $$CIV32 = $$CIV32 + 1ll;
              } while ((unsigned long long) $$CIV32 < (unsigned long long) ny);    /* ~104 */
              f.i@18 = $$SCREPF;
            lab_107:
    30 |      $$CIV33 = $$CIV33 + 1ll;
            } while ((unsigned long long) $$CIV33 < (unsigned long long) nz);    /* ~101 */
          lab_108:
            goto lab_71;
          lab_109:
    31 |    if (!(1u != f.dx@8)) goto lab_119;
            if (!1) goto lab_118;
            $$CIV33 = 0ll;
            do {   /* id=16 guarded */ /* ~111 */ 
              /* region = 151 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
              f.i@18 = f.i@18 + 1u;
    31 |      if (!1) goto lab_117;
              $$CIV32 = 0ll;
              do {   /* id=12 guarded */ /* ~114 */ 
                /* region = 150 */
                /* bump-normalized */
    30 |        $$TVX.$$.__3261D1E = f.zero@0;
    23 |        f.a@20[(long long) (f.m@14 & f.i@18)] = f.zero@0;
                f.i@18 = f.i@18 + 1u;
    24 |        if (!1) goto lab_116;
                $$CIV2F = 0ll;
    22 |        do {   /* id=23 guarded */ /* ~115 */ 
                  /* region = 149 */
                  /* bump-normalized */
    23 |          f.a@20[(long long) (f.m@14 & f.i@18 + (unsigned int) ((int) $$CIV2F))] = $$TVX.$$.__3261D1E;
    24 |          $$CIV2F = $$CIV2F + 1ll;
                } while ((unsigned long long) $$CIV2F < (unsigned long long) (f.dx@8 - 1u));    /* ~115 */
                f.i@18 = f.i@18 + (unsigned int) ((int) ((unsigned long long) (f.dx@8 - 1u)));
              lab_116:
    31 |        $$CIV32 = $$CIV32 + 1ll;
              } while ((unsigned long long) $$CIV32 < (unsigned long long) ny);    /* ~114 */
            lab_117:
    30 |      $$CIV33 = $$CIV33 + 1ll;
            } while ((unsigned long long) $$CIV33 < (unsigned long long) nz);    /* ~111 */
          lab_118:
            goto lab_71;
          lab_119:
    31 |    if (!1) goto lab_127;
            $$CIV33 = 0ll;
    23 |    $$ICM.f.i@183 = f.i@18;
    31 |    do {   /* id=24 guarded */ /* ~120 */ 
              /* region = 153 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & $$ICM.f.i@183)] = f.zero@0;
              $$ICM.f.i@183 = $$ICM.f.i@183 + 1u;
    31 |      if (!1) goto lab_126;
              $$CIV32 = 0ll;
              $$SCREPE = $$ICM.f.i@183;
              do {   /* id=26 guarded */ /* ~123 */ 
                /* region = 152 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & $$SCREPE)] = f.zero@0;
                $$SCREPE = $$SCREPE + 1u;
    31 |        $$CIV32 = $$CIV32 + 1ll;
              } while ((unsigned long long) $$CIV32 < (unsigned long long) ny);    /* ~123 */
              $$ICM.f.i@183 = $$SCREPE;
            lab_126:
    30 |      $$CIV33 = $$CIV33 + 1ll;
            } while ((unsigned long long) $$CIV33 < (unsigned long long) nz);    /* ~120 */
            f.i@18 = $$ICM.f.i@183;
          lab_127:
            goto lab_71;
          lab_70:
    31 |    if (!(0u < nx)) goto lab_82;
            if (!1) goto lab_93;
            if (!(1u != f.dy@c)) goto lab_130;
            if (!1) goto lab_129;
            $$CIV33 = 0ll;
    23 |    $$ICM.f.i@183 = f.i@18;
    31 |    do {   /* id=13 guarded */ /* ~72 */ 
              /* region = 155 */
              /* bump-normalized */
    30 |      $$TVX.$$.__3221E20 = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & $$ICM.f.i@183)] = f.zero@0;
              $$ICM.f.i@183 = $$ICM.f.i@183 + 1u;
    24 |      if (!1) goto lab_74;
              $$CIV2E = 0ll;
    22 |      do {   /* id=14 guarded */ /* ~73 */ 
                /* region = 154 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & $$ICM.f.i@183 + (unsigned int) ((int) $$CIV2E))] = $$TVX.$$.__3221E20;
    24 |        $$CIV2E = $$CIV2E + 1ll;
              } while ((unsigned long long) $$CIV2E < (unsigned long long) (f.dy@c - 1u));    /* ~73 */
              $$ICM.f.i@183 = $$ICM.f.i@183 + (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u)));
            lab_74:
    30 |      $$CIV33 = $$CIV33 + 1ll;
            } while ((unsigned long long) $$CIV33 < (unsigned long long) nz);    /* ~72 */
            f.i@18 = $$ICM.f.i@183;
          lab_129:
            goto lab_93;
          lab_130:
    31 |    if (!1) goto lab_135;
            $$CIV33 = 0ll;
            $$SCREPD = f.i@18;
            do {   /* id=28 guarded */ /* ~132 */ 
              /* region = 156 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & $$SCREPD)] = f.zero@0;
              $$SCREPD = $$SCREPD + 1u;
    30 |      $$CIV33 = $$CIV33 + 1ll;
            } while ((unsigned long long) $$CIV33 < (unsigned long long) nz);    /* ~132 */
            f.i@18 = $$SCREPD;
          lab_135:
            goto lab_93;
          lab_82:
    31 |    if (!1) goto lab_92;
            if (!(1u != f.dy@c)) goto lab_137;
            if (!1) goto lab_136;
            $$CIV33 = 0ll;
    23 |    $$ICM.f.i@183 = f.i@18;
    31 |    do {   /* id=18 guarded */ /* ~83 */ 
              /* region = 158 */
              /* bump-normalized */
    30 |      $$TVX.$$.__3221F22 = f.zero@0;
    23 |      f.a@20[(long long) (f.m@14 & $$ICM.f.i@183)] = f.zero@0;
              $$ICM.f.i@183 = $$ICM.f.i@183 + 1u;
    24 |      if (!1) goto lab_85;
              $$CIV2E = 0ll;
    22 |      do {   /* id=19 guarded */ /* ~84 */ 
                /* region = 157 */
                /* bump-normalized */
    23 |        f.a@20[(long long) (f.m@14 & $$ICM.f.i@183 + (unsigned int) ((int) $$CIV2E))] = $$TVX.$$.__3221F22;
    24 |        $$CIV2E = $$CIV2E + 1ll;
              } while ((unsigned long long) $$CIV2E < (unsigned long long) (f.dy@c - 1u));    /* ~84 */
              $$ICM.f.i@183 = $$ICM.f.i@183 + (unsigned int) ((int) ((unsigned long long) (f.dy@c - 1u)));
            lab_85:
    30 |      $$CIV33 = $$CIV33 + 1ll;
            } while ((unsigned long long) $$CIV33 < (unsigned long long) nz);    /* ~83 */
            f.i@18 = $$ICM.f.i@183;
          lab_136:
            goto lab_138;
          lab_137:
    31 |    if (!1) goto lab_142;
            $$CIV33 = 0ll;
            $$SCREPC = f.i@18;
            do {   /* id=30 guarded */ /* ~139 */ 
              /* region = 159 */
              /* bump-normalized */
    23 |      f.a@20[(long long) (f.m@14 & $$SCREPC)] = f.zero@0;
              $$SCREPC = $$SCREPC + 1u;
    30 |      $$CIV33 = $$CIV33 + 1ll;
            } while ((unsigned long long) $$CIV33 < (unsigned long long) nz);    /* ~139 */
            f.i@18 = $$SCREPC;
          lab_142:
          lab_138:
          lab_92:
          lab_93:
          lab_71:
          lab_12:
    52 |    if (!(__310 != NULL)) goto lab_32;
    35 |    operator delete(void*)(__310)
          lab_32:
    53 |    if (!(rm != NULL)) goto lab_35;
            ((funcaddr *)(*((char * *)rm)))[8ll / 8]->(()vf).rns155.(rm);
          lab_35:
    11 |    operator delete[](void*)(f.a@20)
    54 |    return;
          } /* function */ 


    14 |  void void decompress3d<float, 8u>(RCdecoder*, float*, unsigned int, unsigned int, unsigned int)(char * rd, float *data, unsigned int nx, unsigned int ny, unsigned int nz)
    21 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
    24 |    __364 = operator new(unsigned long)(72ull);
            if (!(__364 != NULL)) goto lab_2;
            __es.__c4@3 = 1u;
            RCqsmodel::RCqsmodel(bool, unsigned int, unsigned int, unsigned int)(__364,0u,511u,16u,1024u);
            __es.__c4@3 = 0u;
          lab_2:
            $$rm.nat.18 = __364;
    25 |    __365 = operator new(unsigned long)(24ull);
            rm = $$rm.nat.18;
            if (!(__365 != NULL)) goto lab_5;
     6 |    *((char * *)((char *)__365 + 8)) = rd;
            rm = $$rm.nat.18;
            *((char * *)((char *)__365 + 16)) = &rm;
          lab_5:
    26 |    f.zero@0 =  0.00000000E+00;
     9 |    f.dx@4 = 1u;
            f.dy@8 = nx + 1u;
            f.dz@c = (ny + 1u) * (nx + 1u);
    45 |    __398.rnn65 = (2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u;
            if (!(0u != (((2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u) + 1u & (2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u))) goto lab_9;
            do {   /* id=8 guarded */ /* ~7 */ 
              /* region = 135 */
     9 |      __398.rnn65 = __398.rnn65 | __398.rnn65 + 1u;
    45 |    } while (0u != (__398.rnn65 + 1u & __398.rnn65));    /* ~7 */
          lab_9:
    47 |    f.m@10 = __398.rnn65;
    10 |    f.i@14 = 0u;
            f.a@18 = operator new[](unsigned long)((unsigned long long) (__398.rnn65 + 1u) * 4ull);
            __es.__c4@3 = 2u;
    23 |    f.a@18[(long long) (f.i@14 & f.m@10)] = f.zero@0;
            f.i@14 = f.i@14 + 1u;
    24 |    if (!(1u != f.dz@c)) goto lab_43;
            $$CIV34 = 0ll;
    22 |    do {   /* id=7 guarded */ /* ~13 */ 
              /* region = 136 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV34))] = f.zero@0;
    24 |      $$CIV34 = $$CIV34 + 1ll;
            } while ((unsigned long long) $$CIV34 < (unsigned long long) (f.dz@c - 1u));    /* ~13 */
            f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dz@c - 1u))) + f.i@14;
          lab_43:
    31 |    if (!(0u < nz)) goto lab_12;
            if (!(0u < ny)) goto lab_75;
            if (!(0u < nx)) goto lab_63;
            if (!1) goto lab_62;
            $$CIV3A = 0ll;
            do {   /* id=1 guarded */ /* ~10 */ 
              /* region = 141 */
              /* bump-normalized */
    30 |      __377 = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    24 |      if (!(1u != f.dy@8)) goto lab_44;
              $$CIV35 = 0ll;
    22 |      do {   /* id=6 guarded */ /* ~19 */ 
                /* region = 137 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV35))] = __377;
    24 |        $$CIV35 = $$CIV35 + 1ll;
              } while ((unsigned long long) $$CIV35 < (unsigned long long) (f.dy@8 - 1u));    /* ~19 */
              f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u))) + f.i@14;
            lab_44:
    31 |      if (!1) goto lab_18;
              $$CIV39 = 0ll;
              do {   /* id=2 guarded */ /* ~16 */ 
                /* region = 140 */
                /* bump-normalized */
    30 |        __381 = f.zero@0;
    23 |        f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
                f.i@14 = f.i@14 + 1u;
    24 |        if (!(1u != f.dx@4)) goto lab_45;
                $$CIV36 = 0ll;
    22 |        do {   /* id=5 guarded */ /* ~25 */ 
                  /* region = 138 */
                  /* bump-normalized */
    23 |          f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV36))] = __381;
    24 |          $$CIV36 = $$CIV36 + 1ll;
                } while ((unsigned long long) $$CIV36 < (unsigned long long) (f.dx@4 - 1u));    /* ~25 */
                f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dx@4 - 1u))) + f.i@14;
              lab_45:
    31 |        if (!1) goto lab_24;
                $$CIV38 = 0ll;
                do {   /* id=3 guarded */ /* ~22 */ 
                  /* region = 139 */
                  /* bump-normalized */
     8 |          shared.d@0 = (((((f.a@18[(long long) (f.i@14 - f.dx@4 & f.m@10)] - f.a@18[(long long) ((f.i@14 - f.dy@8) - f.dz@c & f.m@10)]) + f.a@18[(long long) (f.i@14 - f.dy@8 & f.m@10)]) - f.a@18[(long long) ((f.i@14 - f.dx@4) - f.dz@c & f.m@10)]) + f.a@18[(long long) (f.i@14 - f.dz@c & f.m@10)]) - f.a@18[(long long) ((f.i@14 - f.dx@4) - f.dy@8 & f.m@10)]) + f.a@18[(long long) (((f.i@14 - f.dx@4) - f.dy@8) - f.dz@c & f.m@10)];
    23 |          $$RET4B = RCdecoder::decode(RCmodel*)(*((char * *)((char *)__365 + 8)),((char * *)(*((char * *)((char *)__365 + 16))))[0ll]);
    24 |          shared.r@0 = ~ ((($$RET4B + ((~ shared.r@0 >> 31) * 4294967295u >> 25u ^ ~ shared.r@0 >> 24u)) - 255u >> 7u) * 4294967295u >> 25u ^ ($$RET4B + ((~ shared.r@0 >> 31) * 4294967295u >> 25u ^ ~ shared.r@0 >> 24u)) - 255u) << 24u;
    48 |          data[$$CIV38] = shared.d@0;
    23 |          f.a@18[(long long) (f.i@14 & f.m@10)] = shared.d@0;
                  f.i@14 = f.i@14 + 1u;
    32 |          $$CIV38 = $$CIV38 + 1ll;
                } while ((unsigned long long) $$CIV38 < (unsigned long long) nx);    /* ~22 */
                data = ((char *)data  + (long long) ((unsigned long long) nx * 4ull));
              lab_24:
    31 |        $$CIV39 = $$CIV39 + 1ll;
              } while ((unsigned long long) $$CIV39 < (unsigned long long) ny);    /* ~16 */
            lab_18:
    30 |      $$CIV3A = $$CIV3A + 1ll;
            } while ((unsigned long long) $$CIV3A < (unsigned long long) nz);    /* ~10 */
          lab_62:
            goto lab_76;
          lab_63:
    31 |    if (!1) goto lab_76;
            if (!(1u != f.dy@8)) goto lab_114;
            if (!(1u != f.dx@4)) goto lab_104;
            if (!1) goto lab_103;
            $$CIV3A = 0ll;
            do {   /* id=4 guarded */ /* ~65 */ 
              /* region = 145 */
              /* bump-normalized */
    30 |      __377 = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    24 |      if (!1) goto lab_67;
              $$CIV35 = 0ll;
    22 |      do {   /* id=9 guarded */ /* ~66 */ 
                /* region = 144 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV35))] = __377;
    24 |        $$CIV35 = $$CIV35 + 1ll;
              } while ((unsigned long long) $$CIV35 < (unsigned long long) (f.dy@8 - 1u));    /* ~66 */
              f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u))) + f.i@14;
            lab_67:
    31 |      if (!1) goto lab_73;
              $$CIV39 = 0ll;
              do {   /* id=10 guarded */ /* ~68 */ 
                /* region = 143 */
                /* bump-normalized */
    30 |        $$TVX.$$.__3812D2D = f.zero@0;
    23 |        f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
                f.i@14 = f.i@14 + 1u;
    24 |        if (!1) goto lab_70;
                $$CIV36 = 0ll;
    22 |        do {   /* id=11 guarded */ /* ~69 */ 
                  /* region = 142 */
                  /* bump-normalized */
    23 |          f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV36))] = $$TVX.$$.__3812D2D;
    24 |          $$CIV36 = $$CIV36 + 1ll;
                } while ((unsigned long long) $$CIV36 < (unsigned long long) (f.dx@4 - 1u));    /* ~69 */
                f.i@14 = f.i@14 + (unsigned int) ((int) ((unsigned long long) (f.dx@4 - 1u)));
              lab_70:
    31 |        $$CIV39 = $$CIV39 + 1ll;
              } while ((unsigned long long) $$CIV39 < (unsigned long long) ny);    /* ~68 */
            lab_73:
    30 |      $$CIV3A = $$CIV3A + 1ll;
            } while ((unsigned long long) $$CIV3A < (unsigned long long) nz);    /* ~65 */
          lab_103:
            goto lab_76;
          lab_104:
    31 |    if (!1) goto lab_113;
            $$CIV3A = 0ll;
            do {   /* id=22 guarded */ /* ~106 */ 
              /* region = 148 */
              /* bump-normalized */
    30 |      __377 = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    24 |      if (!1) goto lab_108;
              $$CIV35 = 0ll;
    22 |      do {   /* id=21 guarded */ /* ~107 */ 
                /* region = 147 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV35))] = __377;
    24 |        $$CIV35 = $$CIV35 + 1ll;
              } while ((unsigned long long) $$CIV35 < (unsigned long long) (f.dy@8 - 1u));    /* ~107 */
              f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u))) + f.i@14;
            lab_108:
    31 |      if (!1) goto lab_112;
              $$CIV39 = 0ll;
              $$SCREP13 = f.i@14;
              do {   /* id=20 guarded */ /* ~109 */ 
                /* region = 146 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & $$SCREP13)] = f.zero@0;
                $$SCREP13 = $$SCREP13 + 1u;
    31 |        $$CIV39 = $$CIV39 + 1ll;
              } while ((unsigned long long) $$CIV39 < (unsigned long long) ny);    /* ~109 */
              f.i@14 = $$SCREP13;
            lab_112:
    30 |      $$CIV3A = $$CIV3A + 1ll;
            } while ((unsigned long long) $$CIV3A < (unsigned long long) nz);    /* ~106 */
          lab_113:
            goto lab_76;
          lab_114:
    31 |    if (!(1u != f.dx@4)) goto lab_124;
            if (!1) goto lab_123;
            $$CIV3A = 0ll;
            do {   /* id=16 guarded */ /* ~116 */ 
              /* region = 151 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    31 |      if (!1) goto lab_122;
              $$CIV39 = 0ll;
              do {   /* id=12 guarded */ /* ~119 */ 
                /* region = 150 */
                /* bump-normalized */
    30 |        $$TVX.$$.__3812E2F = f.zero@0;
    23 |        f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
                f.i@14 = f.i@14 + 1u;
    24 |        if (!1) goto lab_121;
                $$CIV36 = 0ll;
    22 |        do {   /* id=23 guarded */ /* ~120 */ 
                  /* region = 149 */
                  /* bump-normalized */
    23 |          f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV36))] = $$TVX.$$.__3812E2F;
    24 |          $$CIV36 = $$CIV36 + 1ll;
                } while ((unsigned long long) $$CIV36 < (unsigned long long) (f.dx@4 - 1u));    /* ~120 */
                f.i@14 = f.i@14 + (unsigned int) ((int) ((unsigned long long) (f.dx@4 - 1u)));
              lab_121:
    31 |        $$CIV39 = $$CIV39 + 1ll;
              } while ((unsigned long long) $$CIV39 < (unsigned long long) ny);    /* ~119 */
            lab_122:
    30 |      $$CIV3A = $$CIV3A + 1ll;
            } while ((unsigned long long) $$CIV3A < (unsigned long long) nz);    /* ~116 */
          lab_123:
            goto lab_76;
          lab_124:
    31 |    if (!1) goto lab_132;
            $$CIV3A = 0ll;
    23 |    $$ICM.f.i@144 = f.i@14;
    31 |    do {   /* id=24 guarded */ /* ~125 */ 
              /* region = 153 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & $$ICM.f.i@144)] = f.zero@0;
              $$ICM.f.i@144 = $$ICM.f.i@144 + 1u;
    31 |      if (!1) goto lab_131;
              $$CIV39 = 0ll;
              $$SCREP12 = $$ICM.f.i@144;
              do {   /* id=26 guarded */ /* ~128 */ 
                /* region = 152 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & $$SCREP12)] = f.zero@0;
                $$SCREP12 = $$SCREP12 + 1u;
    31 |        $$CIV39 = $$CIV39 + 1ll;
              } while ((unsigned long long) $$CIV39 < (unsigned long long) ny);    /* ~128 */
              $$ICM.f.i@144 = $$SCREP12;
            lab_131:
    30 |      $$CIV3A = $$CIV3A + 1ll;
            } while ((unsigned long long) $$CIV3A < (unsigned long long) nz);    /* ~125 */
            f.i@14 = $$ICM.f.i@144;
          lab_132:
            goto lab_76;
          lab_75:
    31 |    if (!(0u < nx)) goto lab_87;
            if (!1) goto lab_98;
            if (!(1u != f.dy@8)) goto lab_135;
            if (!1) goto lab_134;
            $$CIV3A = 0ll;
    23 |    $$ICM.f.i@144 = f.i@14;
    31 |    do {   /* id=13 guarded */ /* ~77 */ 
              /* region = 155 */
              /* bump-normalized */
    30 |      $$TVX.$$.__3772F31 = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & $$ICM.f.i@144)] = f.zero@0;
              $$ICM.f.i@144 = $$ICM.f.i@144 + 1u;
    24 |      if (!1) goto lab_79;
              $$CIV35 = 0ll;
    22 |      do {   /* id=14 guarded */ /* ~78 */ 
                /* region = 154 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & $$ICM.f.i@144 + (unsigned int) ((int) $$CIV35))] = $$TVX.$$.__3772F31;
    24 |        $$CIV35 = $$CIV35 + 1ll;
              } while ((unsigned long long) $$CIV35 < (unsigned long long) (f.dy@8 - 1u));    /* ~78 */
              $$ICM.f.i@144 = $$ICM.f.i@144 + (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u)));
            lab_79:
    30 |      $$CIV3A = $$CIV3A + 1ll;
            } while ((unsigned long long) $$CIV3A < (unsigned long long) nz);    /* ~77 */
            f.i@14 = $$ICM.f.i@144;
          lab_134:
            goto lab_98;
          lab_135:
    31 |    if (!1) goto lab_140;
            $$CIV3A = 0ll;
            $$SCREP11 = f.i@14;
            do {   /* id=28 guarded */ /* ~137 */ 
              /* region = 156 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & $$SCREP11)] = f.zero@0;
              $$SCREP11 = $$SCREP11 + 1u;
    30 |      $$CIV3A = $$CIV3A + 1ll;
            } while ((unsigned long long) $$CIV3A < (unsigned long long) nz);    /* ~137 */
            f.i@14 = $$SCREP11;
          lab_140:
            goto lab_98;
          lab_87:
    31 |    if (!1) goto lab_97;
            if (!(1u != f.dy@8)) goto lab_142;
            if (!1) goto lab_141;
            $$CIV3A = 0ll;
    23 |    $$ICM.f.i@144 = f.i@14;
    31 |    do {   /* id=18 guarded */ /* ~88 */ 
              /* region = 158 */
              /* bump-normalized */
    30 |      $$TVX.$$.__3773033 = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & $$ICM.f.i@144)] = f.zero@0;
              $$ICM.f.i@144 = $$ICM.f.i@144 + 1u;
    24 |      if (!1) goto lab_90;
              $$CIV35 = 0ll;
    22 |      do {   /* id=19 guarded */ /* ~89 */ 
                /* region = 157 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & $$ICM.f.i@144 + (unsigned int) ((int) $$CIV35))] = $$TVX.$$.__3773033;
    24 |        $$CIV35 = $$CIV35 + 1ll;
              } while ((unsigned long long) $$CIV35 < (unsigned long long) (f.dy@8 - 1u));    /* ~89 */
              $$ICM.f.i@144 = $$ICM.f.i@144 + (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u)));
            lab_90:
    30 |      $$CIV3A = $$CIV3A + 1ll;
            } while ((unsigned long long) $$CIV3A < (unsigned long long) nz);    /* ~88 */
            f.i@14 = $$ICM.f.i@144;
          lab_141:
            goto lab_143;
          lab_142:
    31 |    if (!1) goto lab_147;
            $$CIV3A = 0ll;
            $$SCREP10 = f.i@14;
            do {   /* id=30 guarded */ /* ~144 */ 
              /* region = 159 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & $$SCREP10)] = f.zero@0;
              $$SCREP10 = $$SCREP10 + 1u;
    30 |      $$CIV3A = $$CIV3A + 1ll;
            } while ((unsigned long long) $$CIV3A < (unsigned long long) nz);    /* ~144 */
            f.i@14 = $$SCREP10;
          lab_147:
          lab_143:
          lab_97:
          lab_98:
          lab_76:
          lab_12:
    52 |    if (!(__365 != NULL)) goto lab_32;
     7 |    operator delete(void*)(__365)
          lab_32:
    53 |    if (!(rm != NULL)) goto lab_35;
            ((funcaddr *)(*((char * *)rm)))[8ll / 8]->(()vf).rns171.(rm);
          lab_35:
    11 |    operator delete[](void*)(f.a@18)
    54 |    return;
          } /* function */ 


    14 |  void void decompress3d<float, 16u>(RCdecoder*, float*, unsigned int, unsigned int, unsigned int)(char * rd, float *data, unsigned int nx, unsigned int ny, unsigned int nz)
    21 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
    24 |    __419 = operator new(unsigned long)(72ull);
            if (!(__419 != NULL)) goto lab_2;
            __es.__c4@3 = 1u;
            RCqsmodel::RCqsmodel(bool, unsigned int, unsigned int, unsigned int)(__419,0u,33u,16u,1024u);
            __es.__c4@3 = 0u;
          lab_2:
            $$rm.nat.1E = __419;
    25 |    __420 = operator new(unsigned long)(24ull);
            rm = $$rm.nat.1E;
            if (!(__420 != NULL)) goto lab_5;
    34 |    *((char * *)((char *)__420 + 8)) = rd;
            rm = $$rm.nat.1E;
            *((char * *)((char *)__420 + 16)) = &rm;
          lab_5:
    26 |    f.zero@0 =  0.00000000E+00;
     9 |    f.dx@4 = 1u;
            f.dy@8 = nx + 1u;
            f.dz@c = (ny + 1u) * (nx + 1u);
    45 |    __453.rnn71 = (2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u;
            if (!(0u != (((2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u) + 1u & (2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u))) goto lab_9;
            do {   /* id=8 guarded */ /* ~7 */ 
              /* region = 135 */
     9 |      __453.rnn71 = __453.rnn71 | __453.rnn71 + 1u;
    45 |    } while (0u != (__453.rnn71 + 1u & __453.rnn71));    /* ~7 */
          lab_9:
    47 |    f.m@10 = __453.rnn71;
    10 |    f.i@14 = 0u;
            f.a@18 = operator new[](unsigned long)((unsigned long long) (__453.rnn71 + 1u) * 4ull);
            __es.__c4@3 = 2u;
    23 |    f.a@18[(long long) (f.i@14 & f.m@10)] = f.zero@0;
            f.i@14 = f.i@14 + 1u;
    24 |    if (!(1u != f.dz@c)) goto lab_43;
            $$CIV3B = 0ll;
    22 |    do {   /* id=7 guarded */ /* ~13 */ 
              /* region = 136 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV3B))] = f.zero@0;
    24 |      $$CIV3B = $$CIV3B + 1ll;
            } while ((unsigned long long) $$CIV3B < (unsigned long long) (f.dz@c - 1u));    /* ~13 */
            f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dz@c - 1u))) + f.i@14;
          lab_43:
    31 |    if (!(0u < nz)) goto lab_12;
            if (!(0u < ny)) goto lab_70;
            if (!(0u < nx)) goto lab_58;
            if (!1) goto lab_57;
            $$CIV41 = 0ll;
            do {   /* id=1 guarded */ /* ~10 */ 
              /* region = 141 */
              /* bump-normalized */
    30 |      __432 = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    24 |      if (!(1u != f.dy@8)) goto lab_44;
              $$CIV3C = 0ll;
    22 |      do {   /* id=6 guarded */ /* ~19 */ 
                /* region = 137 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV3C))] = __432;
    24 |        $$CIV3C = $$CIV3C + 1ll;
              } while ((unsigned long long) $$CIV3C < (unsigned long long) (f.dy@8 - 1u));    /* ~19 */
              f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u))) + f.i@14;
            lab_44:
    31 |      if (!1) goto lab_18;
              $$CIV40 = 0ll;
              do {   /* id=2 guarded */ /* ~16 */ 
                /* region = 140 */
                /* bump-normalized */
    30 |        __436 = f.zero@0;
    23 |        f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
                f.i@14 = f.i@14 + 1u;
    24 |        if (!(1u != f.dx@4)) goto lab_45;
                $$CIV3D = 0ll;
    22 |        do {   /* id=5 guarded */ /* ~25 */ 
                  /* region = 138 */
                  /* bump-normalized */
    23 |          f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV3D))] = __436;
    24 |          $$CIV3D = $$CIV3D + 1ll;
                } while ((unsigned long long) $$CIV3D < (unsigned long long) (f.dx@4 - 1u));    /* ~25 */
                f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dx@4 - 1u))) + f.i@14;
              lab_45:
    31 |        if (!1) goto lab_24;
                $$CIV3F = 0ll;
                do {   /* id=3 guarded */ /* ~22 */ 
                  /* region = 139 */
                  /* bump-normalized */
    47 |          $$csx4 = f.i@14;
                  $$TVX.$$.a3535 = PCdecoder<float, PCmap<float, 16u, void>, true>::decode(float, unsigned int)(__420,(((((f.a@18[(long long) ($$csx4 - f.dx@4 & f.m@10)] - f.a@18[(long long) (($$csx4 - f.dy@8) - f.dz@c & f.m@10)]) + f.a@18[(long long) ($$csx4 - f.dy@8 & f.m@10)]) - f.a@18[(long long) (($$csx4 - f.dx@4) - f.dz@c & f.m@10)]) + f.a@18[(long long) ($$csx4 - f.dz@c & f.m@10)]) - f.a@18[(long long) (($$csx4 - f.dx@4) - f.dy@8 & f.m@10)]) + f.a@18[(long long) ((($$csx4 - f.dx@4) - f.dy@8) - f.dz@c & f.m@10)],0u);
    48 |          data[$$CIV3F] = $$TVX.$$.a3535;
    23 |          f.a@18[(long long) (f.m@10 & f.i@14)] = $$TVX.$$.a3535;
                  f.i@14 = f.i@14 + 1u;
    32 |          $$CIV3F = $$CIV3F + 1ll;
                } while ((unsigned long long) $$CIV3F < (unsigned long long) nx);    /* ~22 */
                data = ((char *)data  + (long long) ((unsigned long long) nx * 4ull));
              lab_24:
    31 |        $$CIV40 = $$CIV40 + 1ll;
              } while ((unsigned long long) $$CIV40 < (unsigned long long) ny);    /* ~16 */
            lab_18:
    30 |      $$CIV41 = $$CIV41 + 1ll;
            } while ((unsigned long long) $$CIV41 < (unsigned long long) nz);    /* ~10 */
          lab_57:
            goto lab_71;
          lab_58:
    31 |    if (!1) goto lab_71;
            if (!(1u != f.dy@8)) goto lab_109;
            if (!(1u != f.dx@4)) goto lab_99;
            if (!1) goto lab_98;
            $$CIV41 = 0ll;
            do {   /* id=4 guarded */ /* ~60 */ 
              /* region = 145 */
              /* bump-normalized */
    30 |      __432 = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    24 |      if (!1) goto lab_62;
              $$CIV3C = 0ll;
    22 |      do {   /* id=9 guarded */ /* ~61 */ 
                /* region = 144 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV3C))] = __432;
    24 |        $$CIV3C = $$CIV3C + 1ll;
              } while ((unsigned long long) $$CIV3C < (unsigned long long) (f.dy@8 - 1u));    /* ~61 */
              f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u))) + f.i@14;
            lab_62:
    31 |      if (!1) goto lab_68;
              $$CIV40 = 0ll;
              do {   /* id=10 guarded */ /* ~63 */ 
                /* region = 143 */
                /* bump-normalized */
    30 |        $$TVX.$$.__4363636 = f.zero@0;
    23 |        f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
                f.i@14 = f.i@14 + 1u;
    24 |        if (!1) goto lab_65;
                $$CIV3D = 0ll;
    22 |        do {   /* id=11 guarded */ /* ~64 */ 
                  /* region = 142 */
                  /* bump-normalized */
    23 |          f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV3D))] = $$TVX.$$.__4363636;
    24 |          $$CIV3D = $$CIV3D + 1ll;
                } while ((unsigned long long) $$CIV3D < (unsigned long long) (f.dx@4 - 1u));    /* ~64 */
                f.i@14 = f.i@14 + (unsigned int) ((int) ((unsigned long long) (f.dx@4 - 1u)));
              lab_65:
    31 |        $$CIV40 = $$CIV40 + 1ll;
              } while ((unsigned long long) $$CIV40 < (unsigned long long) ny);    /* ~63 */
            lab_68:
    30 |      $$CIV41 = $$CIV41 + 1ll;
            } while ((unsigned long long) $$CIV41 < (unsigned long long) nz);    /* ~60 */
          lab_98:
            goto lab_71;
          lab_99:
    31 |    if (!1) goto lab_108;
            $$CIV41 = 0ll;
            do {   /* id=22 guarded */ /* ~101 */ 
              /* region = 148 */
              /* bump-normalized */
    30 |      __432 = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    24 |      if (!1) goto lab_103;
              $$CIV3C = 0ll;
    22 |      do {   /* id=21 guarded */ /* ~102 */ 
                /* region = 147 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV3C))] = __432;
    24 |        $$CIV3C = $$CIV3C + 1ll;
              } while ((unsigned long long) $$CIV3C < (unsigned long long) (f.dy@8 - 1u));    /* ~102 */
              f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u))) + f.i@14;
            lab_103:
    31 |      if (!1) goto lab_107;
              $$CIV40 = 0ll;
              $$SCREP17 = f.i@14;
              do {   /* id=20 guarded */ /* ~104 */ 
                /* region = 146 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & $$SCREP17)] = f.zero@0;
                $$SCREP17 = $$SCREP17 + 1u;
    31 |        $$CIV40 = $$CIV40 + 1ll;
              } while ((unsigned long long) $$CIV40 < (unsigned long long) ny);    /* ~104 */
              f.i@14 = $$SCREP17;
            lab_107:
    30 |      $$CIV41 = $$CIV41 + 1ll;
            } while ((unsigned long long) $$CIV41 < (unsigned long long) nz);    /* ~101 */
          lab_108:
            goto lab_71;
          lab_109:
    31 |    if (!(1u != f.dx@4)) goto lab_119;
            if (!1) goto lab_118;
            $$CIV41 = 0ll;
            do {   /* id=16 guarded */ /* ~111 */ 
              /* region = 151 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    31 |      if (!1) goto lab_117;
              $$CIV40 = 0ll;
              do {   /* id=12 guarded */ /* ~114 */ 
                /* region = 150 */
                /* bump-normalized */
    30 |        $$TVX.$$.__4363738 = f.zero@0;
    23 |        f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
                f.i@14 = f.i@14 + 1u;
    24 |        if (!1) goto lab_116;
                $$CIV3D = 0ll;
    22 |        do {   /* id=23 guarded */ /* ~115 */ 
                  /* region = 149 */
                  /* bump-normalized */
    23 |          f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV3D))] = $$TVX.$$.__4363738;
    24 |          $$CIV3D = $$CIV3D + 1ll;
                } while ((unsigned long long) $$CIV3D < (unsigned long long) (f.dx@4 - 1u));    /* ~115 */
                f.i@14 = f.i@14 + (unsigned int) ((int) ((unsigned long long) (f.dx@4 - 1u)));
              lab_116:
    31 |        $$CIV40 = $$CIV40 + 1ll;
              } while ((unsigned long long) $$CIV40 < (unsigned long long) ny);    /* ~114 */
            lab_117:
    30 |      $$CIV41 = $$CIV41 + 1ll;
            } while ((unsigned long long) $$CIV41 < (unsigned long long) nz);    /* ~111 */
          lab_118:
            goto lab_71;
          lab_119:
    31 |    if (!1) goto lab_127;
            $$CIV41 = 0ll;
    23 |    $$ICM.f.i@145 = f.i@14;
    31 |    do {   /* id=24 guarded */ /* ~120 */ 
              /* region = 153 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & $$ICM.f.i@145)] = f.zero@0;
              $$ICM.f.i@145 = $$ICM.f.i@145 + 1u;
    31 |      if (!1) goto lab_126;
              $$CIV40 = 0ll;
              $$SCREP16 = $$ICM.f.i@145;
              do {   /* id=26 guarded */ /* ~123 */ 
                /* region = 152 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & $$SCREP16)] = f.zero@0;
                $$SCREP16 = $$SCREP16 + 1u;
    31 |        $$CIV40 = $$CIV40 + 1ll;
              } while ((unsigned long long) $$CIV40 < (unsigned long long) ny);    /* ~123 */
              $$ICM.f.i@145 = $$SCREP16;
            lab_126:
    30 |      $$CIV41 = $$CIV41 + 1ll;
            } while ((unsigned long long) $$CIV41 < (unsigned long long) nz);    /* ~120 */
            f.i@14 = $$ICM.f.i@145;
          lab_127:
            goto lab_71;
          lab_70:
    31 |    if (!(0u < nx)) goto lab_82;
            if (!1) goto lab_93;
            if (!(1u != f.dy@8)) goto lab_130;
            if (!1) goto lab_129;
            $$CIV41 = 0ll;
    23 |    $$ICM.f.i@145 = f.i@14;
    31 |    do {   /* id=13 guarded */ /* ~72 */ 
              /* region = 155 */
              /* bump-normalized */
    30 |      $$TVX.$$.__432383A = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & $$ICM.f.i@145)] = f.zero@0;
              $$ICM.f.i@145 = $$ICM.f.i@145 + 1u;
    24 |      if (!1) goto lab_74;
              $$CIV3C = 0ll;
    22 |      do {   /* id=14 guarded */ /* ~73 */ 
                /* region = 154 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & $$ICM.f.i@145 + (unsigned int) ((int) $$CIV3C))] = $$TVX.$$.__432383A;
    24 |        $$CIV3C = $$CIV3C + 1ll;
              } while ((unsigned long long) $$CIV3C < (unsigned long long) (f.dy@8 - 1u));    /* ~73 */
              $$ICM.f.i@145 = $$ICM.f.i@145 + (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u)));
            lab_74:
    30 |      $$CIV41 = $$CIV41 + 1ll;
            } while ((unsigned long long) $$CIV41 < (unsigned long long) nz);    /* ~72 */
            f.i@14 = $$ICM.f.i@145;
          lab_129:
            goto lab_93;
          lab_130:
    31 |    if (!1) goto lab_135;
            $$CIV41 = 0ll;
            $$SCREP15 = f.i@14;
            do {   /* id=28 guarded */ /* ~132 */ 
              /* region = 156 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & $$SCREP15)] = f.zero@0;
              $$SCREP15 = $$SCREP15 + 1u;
    30 |      $$CIV41 = $$CIV41 + 1ll;
            } while ((unsigned long long) $$CIV41 < (unsigned long long) nz);    /* ~132 */
            f.i@14 = $$SCREP15;
          lab_135:
            goto lab_93;
          lab_82:
    31 |    if (!1) goto lab_92;
            if (!(1u != f.dy@8)) goto lab_137;
            if (!1) goto lab_136;
            $$CIV41 = 0ll;
    23 |    $$ICM.f.i@145 = f.i@14;
    31 |    do {   /* id=18 guarded */ /* ~83 */ 
              /* region = 158 */
              /* bump-normalized */
    30 |      $$TVX.$$.__432393C = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & $$ICM.f.i@145)] = f.zero@0;
              $$ICM.f.i@145 = $$ICM.f.i@145 + 1u;
    24 |      if (!1) goto lab_85;
              $$CIV3C = 0ll;
    22 |      do {   /* id=19 guarded */ /* ~84 */ 
                /* region = 157 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & $$ICM.f.i@145 + (unsigned int) ((int) $$CIV3C))] = $$TVX.$$.__432393C;
    24 |        $$CIV3C = $$CIV3C + 1ll;
              } while ((unsigned long long) $$CIV3C < (unsigned long long) (f.dy@8 - 1u));    /* ~84 */
              $$ICM.f.i@145 = $$ICM.f.i@145 + (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u)));
            lab_85:
    30 |      $$CIV41 = $$CIV41 + 1ll;
            } while ((unsigned long long) $$CIV41 < (unsigned long long) nz);    /* ~83 */
            f.i@14 = $$ICM.f.i@145;
          lab_136:
            goto lab_138;
          lab_137:
    31 |    if (!1) goto lab_142;
            $$CIV41 = 0ll;
            $$SCREP14 = f.i@14;
            do {   /* id=30 guarded */ /* ~139 */ 
              /* region = 159 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & $$SCREP14)] = f.zero@0;
              $$SCREP14 = $$SCREP14 + 1u;
    30 |      $$CIV41 = $$CIV41 + 1ll;
            } while ((unsigned long long) $$CIV41 < (unsigned long long) nz);    /* ~139 */
            f.i@14 = $$SCREP14;
          lab_142:
          lab_138:
          lab_92:
          lab_93:
          lab_71:
          lab_12:
    52 |    if (!(__420 != NULL)) goto lab_32;
    35 |    operator delete(void*)(__420)
          lab_32:
    53 |    if (!(rm != NULL)) goto lab_35;
            ((funcaddr *)(*((char * *)rm)))[8ll / 8]->(()vf).rns187.(rm);
          lab_35:
    11 |    operator delete[](void*)(f.a@18)
    54 |    return;
          } /* function */ 


    14 |  void void decompress3d<float, 24u>(RCdecoder*, float*, unsigned int, unsigned int, unsigned int)(char * rd, float *data, unsigned int nx, unsigned int ny, unsigned int nz)
    21 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
    24 |    __474 = operator new(unsigned long)(72ull);
            if (!(__474 != NULL)) goto lab_2;
            __es.__c4@3 = 1u;
            RCqsmodel::RCqsmodel(bool, unsigned int, unsigned int, unsigned int)(__474,0u,49u,16u,1024u);
            __es.__c4@3 = 0u;
          lab_2:
            $$rm.nat.24 = __474;
    25 |    __475 = operator new(unsigned long)(24ull);
            rm = $$rm.nat.24;
            if (!(__475 != NULL)) goto lab_5;
    34 |    *((char * *)((char *)__475 + 8)) = rd;
            rm = $$rm.nat.24;
            *((char * *)((char *)__475 + 16)) = &rm;
          lab_5:
    26 |    f.zero@0 =  0.00000000E+00;
     9 |    f.dx@4 = 1u;
            f.dy@8 = nx + 1u;
            f.dz@c = (ny + 1u) * (nx + 1u);
    45 |    __508.rnn7D = (2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u;
            if (!(0u != (((2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u) + 1u & (2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u))) goto lab_9;
            do {   /* id=8 guarded */ /* ~7 */ 
              /* region = 135 */
     9 |      __508.rnn7D = __508.rnn7D | __508.rnn7D + 1u;
    45 |    } while (0u != (__508.rnn7D + 1u & __508.rnn7D));    /* ~7 */
          lab_9:
    47 |    f.m@10 = __508.rnn7D;
    10 |    f.i@14 = 0u;
            f.a@18 = operator new[](unsigned long)((unsigned long long) (__508.rnn7D + 1u) * 4ull);
            __es.__c4@3 = 2u;
    23 |    f.a@18[(long long) (f.i@14 & f.m@10)] = f.zero@0;
            f.i@14 = f.i@14 + 1u;
    24 |    if (!(1u != f.dz@c)) goto lab_43;
            $$CIV42 = 0ll;
    22 |    do {   /* id=7 guarded */ /* ~13 */ 
              /* region = 136 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV42))] = f.zero@0;
    24 |      $$CIV42 = $$CIV42 + 1ll;
            } while ((unsigned long long) $$CIV42 < (unsigned long long) (f.dz@c - 1u));    /* ~13 */
            f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dz@c - 1u))) + f.i@14;
          lab_43:
    31 |    if (!(0u < nz)) goto lab_12;
            if (!(0u < ny)) goto lab_70;
            if (!(0u < nx)) goto lab_58;
            if (!1) goto lab_57;
            $$CIV48 = 0ll;
            do {   /* id=1 guarded */ /* ~10 */ 
              /* region = 141 */
              /* bump-normalized */
    30 |      __487 = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    24 |      if (!(1u != f.dy@8)) goto lab_44;
              $$CIV43 = 0ll;
    22 |      do {   /* id=6 guarded */ /* ~19 */ 
                /* region = 137 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV43))] = __487;
    24 |        $$CIV43 = $$CIV43 + 1ll;
              } while ((unsigned long long) $$CIV43 < (unsigned long long) (f.dy@8 - 1u));    /* ~19 */
              f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u))) + f.i@14;
            lab_44:
    31 |      if (!1) goto lab_18;
              $$CIV47 = 0ll;
              do {   /* id=2 guarded */ /* ~16 */ 
                /* region = 140 */
                /* bump-normalized */
    30 |        __491 = f.zero@0;
    23 |        f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
                f.i@14 = f.i@14 + 1u;
    24 |        if (!(1u != f.dx@4)) goto lab_45;
                $$CIV44 = 0ll;
    22 |        do {   /* id=5 guarded */ /* ~25 */ 
                  /* region = 138 */
                  /* bump-normalized */
    23 |          f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV44))] = __491;
    24 |          $$CIV44 = $$CIV44 + 1ll;
                } while ((unsigned long long) $$CIV44 < (unsigned long long) (f.dx@4 - 1u));    /* ~25 */
                f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dx@4 - 1u))) + f.i@14;
              lab_45:
    31 |        if (!1) goto lab_24;
                $$CIV46 = 0ll;
                do {   /* id=3 guarded */ /* ~22 */ 
                  /* region = 139 */
                  /* bump-normalized */
    47 |          $$csx5 = f.i@14;
                  $$TVX.$$.a3E3E = PCdecoder<float, PCmap<float, 24u, void>, true>::decode(float, unsigned int)(__475,(((((f.a@18[(long long) ($$csx5 - f.dx@4 & f.m@10)] - f.a@18[(long long) (($$csx5 - f.dy@8) - f.dz@c & f.m@10)]) + f.a@18[(long long) ($$csx5 - f.dy@8 & f.m@10)]) - f.a@18[(long long) (($$csx5 - f.dx@4) - f.dz@c & f.m@10)]) + f.a@18[(long long) ($$csx5 - f.dz@c & f.m@10)]) - f.a@18[(long long) (($$csx5 - f.dx@4) - f.dy@8 & f.m@10)]) + f.a@18[(long long) ((($$csx5 - f.dx@4) - f.dy@8) - f.dz@c & f.m@10)],0u);
    48 |          data[$$CIV46] = $$TVX.$$.a3E3E;
    23 |          f.a@18[(long long) (f.m@10 & f.i@14)] = $$TVX.$$.a3E3E;
                  f.i@14 = f.i@14 + 1u;
    32 |          $$CIV46 = $$CIV46 + 1ll;
                } while ((unsigned long long) $$CIV46 < (unsigned long long) nx);    /* ~22 */
                data = ((char *)data  + (long long) ((unsigned long long) nx * 4ull));
              lab_24:
    31 |        $$CIV47 = $$CIV47 + 1ll;
              } while ((unsigned long long) $$CIV47 < (unsigned long long) ny);    /* ~16 */
            lab_18:
    30 |      $$CIV48 = $$CIV48 + 1ll;
            } while ((unsigned long long) $$CIV48 < (unsigned long long) nz);    /* ~10 */
          lab_57:
            goto lab_71;
          lab_58:
    31 |    if (!1) goto lab_71;
            if (!(1u != f.dy@8)) goto lab_109;
            if (!(1u != f.dx@4)) goto lab_99;
            if (!1) goto lab_98;
            $$CIV48 = 0ll;
            do {   /* id=4 guarded */ /* ~60 */ 
              /* region = 145 */
              /* bump-normalized */
    30 |      __487 = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    24 |      if (!1) goto lab_62;
              $$CIV43 = 0ll;
    22 |      do {   /* id=9 guarded */ /* ~61 */ 
                /* region = 144 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV43))] = __487;
    24 |        $$CIV43 = $$CIV43 + 1ll;
              } while ((unsigned long long) $$CIV43 < (unsigned long long) (f.dy@8 - 1u));    /* ~61 */
              f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u))) + f.i@14;
            lab_62:
    31 |      if (!1) goto lab_68;
              $$CIV47 = 0ll;
              do {   /* id=10 guarded */ /* ~63 */ 
                /* region = 143 */
                /* bump-normalized */
    30 |        $$TVX.$$.__4913F3F = f.zero@0;
    23 |        f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
                f.i@14 = f.i@14 + 1u;
    24 |        if (!1) goto lab_65;
                $$CIV44 = 0ll;
    22 |        do {   /* id=11 guarded */ /* ~64 */ 
                  /* region = 142 */
                  /* bump-normalized */
    23 |          f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV44))] = $$TVX.$$.__4913F3F;
    24 |          $$CIV44 = $$CIV44 + 1ll;
                } while ((unsigned long long) $$CIV44 < (unsigned long long) (f.dx@4 - 1u));    /* ~64 */
                f.i@14 = f.i@14 + (unsigned int) ((int) ((unsigned long long) (f.dx@4 - 1u)));
              lab_65:
    31 |        $$CIV47 = $$CIV47 + 1ll;
              } while ((unsigned long long) $$CIV47 < (unsigned long long) ny);    /* ~63 */
            lab_68:
    30 |      $$CIV48 = $$CIV48 + 1ll;
            } while ((unsigned long long) $$CIV48 < (unsigned long long) nz);    /* ~60 */
          lab_98:
            goto lab_71;
          lab_99:
    31 |    if (!1) goto lab_108;
            $$CIV48 = 0ll;
            do {   /* id=22 guarded */ /* ~101 */ 
              /* region = 148 */
              /* bump-normalized */
    30 |      __487 = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    24 |      if (!1) goto lab_103;
              $$CIV43 = 0ll;
    22 |      do {   /* id=21 guarded */ /* ~102 */ 
                /* region = 147 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV43))] = __487;
    24 |        $$CIV43 = $$CIV43 + 1ll;
              } while ((unsigned long long) $$CIV43 < (unsigned long long) (f.dy@8 - 1u));    /* ~102 */
              f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u))) + f.i@14;
            lab_103:
    31 |      if (!1) goto lab_107;
              $$CIV47 = 0ll;
              $$SCREP1B = f.i@14;
              do {   /* id=20 guarded */ /* ~104 */ 
                /* region = 146 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & $$SCREP1B)] = f.zero@0;
                $$SCREP1B = $$SCREP1B + 1u;
    31 |        $$CIV47 = $$CIV47 + 1ll;
              } while ((unsigned long long) $$CIV47 < (unsigned long long) ny);    /* ~104 */
              f.i@14 = $$SCREP1B;
            lab_107:
    30 |      $$CIV48 = $$CIV48 + 1ll;
            } while ((unsigned long long) $$CIV48 < (unsigned long long) nz);    /* ~101 */
          lab_108:
            goto lab_71;
          lab_109:
    31 |    if (!(1u != f.dx@4)) goto lab_119;
            if (!1) goto lab_118;
            $$CIV48 = 0ll;
            do {   /* id=16 guarded */ /* ~111 */ 
              /* region = 151 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    31 |      if (!1) goto lab_117;
              $$CIV47 = 0ll;
              do {   /* id=12 guarded */ /* ~114 */ 
                /* region = 150 */
                /* bump-normalized */
    30 |        $$TVX.$$.__4914041 = f.zero@0;
    23 |        f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
                f.i@14 = f.i@14 + 1u;
    24 |        if (!1) goto lab_116;
                $$CIV44 = 0ll;
    22 |        do {   /* id=23 guarded */ /* ~115 */ 
                  /* region = 149 */
                  /* bump-normalized */
    23 |          f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV44))] = $$TVX.$$.__4914041;
    24 |          $$CIV44 = $$CIV44 + 1ll;
                } while ((unsigned long long) $$CIV44 < (unsigned long long) (f.dx@4 - 1u));    /* ~115 */
                f.i@14 = f.i@14 + (unsigned int) ((int) ((unsigned long long) (f.dx@4 - 1u)));
              lab_116:
    31 |        $$CIV47 = $$CIV47 + 1ll;
              } while ((unsigned long long) $$CIV47 < (unsigned long long) ny);    /* ~114 */
            lab_117:
    30 |      $$CIV48 = $$CIV48 + 1ll;
            } while ((unsigned long long) $$CIV48 < (unsigned long long) nz);    /* ~111 */
          lab_118:
            goto lab_71;
          lab_119:
    31 |    if (!1) goto lab_127;
            $$CIV48 = 0ll;
    23 |    $$ICM.f.i@146 = f.i@14;
    31 |    do {   /* id=24 guarded */ /* ~120 */ 
              /* region = 153 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & $$ICM.f.i@146)] = f.zero@0;
              $$ICM.f.i@146 = $$ICM.f.i@146 + 1u;
    31 |      if (!1) goto lab_126;
              $$CIV47 = 0ll;
              $$SCREP1A = $$ICM.f.i@146;
              do {   /* id=26 guarded */ /* ~123 */ 
                /* region = 152 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & $$SCREP1A)] = f.zero@0;
                $$SCREP1A = $$SCREP1A + 1u;
    31 |        $$CIV47 = $$CIV47 + 1ll;
              } while ((unsigned long long) $$CIV47 < (unsigned long long) ny);    /* ~123 */
              $$ICM.f.i@146 = $$SCREP1A;
            lab_126:
    30 |      $$CIV48 = $$CIV48 + 1ll;
            } while ((unsigned long long) $$CIV48 < (unsigned long long) nz);    /* ~120 */
            f.i@14 = $$ICM.f.i@146;
          lab_127:
            goto lab_71;
          lab_70:
    31 |    if (!(0u < nx)) goto lab_82;
            if (!1) goto lab_93;
            if (!(1u != f.dy@8)) goto lab_130;
            if (!1) goto lab_129;
            $$CIV48 = 0ll;
    23 |    $$ICM.f.i@146 = f.i@14;
    31 |    do {   /* id=13 guarded */ /* ~72 */ 
              /* region = 155 */
              /* bump-normalized */
    30 |      $$TVX.$$.__4874143 = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & $$ICM.f.i@146)] = f.zero@0;
              $$ICM.f.i@146 = $$ICM.f.i@146 + 1u;
    24 |      if (!1) goto lab_74;
              $$CIV43 = 0ll;
    22 |      do {   /* id=14 guarded */ /* ~73 */ 
                /* region = 154 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & $$ICM.f.i@146 + (unsigned int) ((int) $$CIV43))] = $$TVX.$$.__4874143;
    24 |        $$CIV43 = $$CIV43 + 1ll;
              } while ((unsigned long long) $$CIV43 < (unsigned long long) (f.dy@8 - 1u));    /* ~73 */
              $$ICM.f.i@146 = $$ICM.f.i@146 + (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u)));
            lab_74:
    30 |      $$CIV48 = $$CIV48 + 1ll;
            } while ((unsigned long long) $$CIV48 < (unsigned long long) nz);    /* ~72 */
            f.i@14 = $$ICM.f.i@146;
          lab_129:
            goto lab_93;
          lab_130:
    31 |    if (!1) goto lab_135;
            $$CIV48 = 0ll;
            $$SCREP19 = f.i@14;
            do {   /* id=28 guarded */ /* ~132 */ 
              /* region = 156 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & $$SCREP19)] = f.zero@0;
              $$SCREP19 = $$SCREP19 + 1u;
    30 |      $$CIV48 = $$CIV48 + 1ll;
            } while ((unsigned long long) $$CIV48 < (unsigned long long) nz);    /* ~132 */
            f.i@14 = $$SCREP19;
          lab_135:
            goto lab_93;
          lab_82:
    31 |    if (!1) goto lab_92;
            if (!(1u != f.dy@8)) goto lab_137;
            if (!1) goto lab_136;
            $$CIV48 = 0ll;
    23 |    $$ICM.f.i@146 = f.i@14;
    31 |    do {   /* id=18 guarded */ /* ~83 */ 
              /* region = 158 */
              /* bump-normalized */
    30 |      $$TVX.$$.__4874245 = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & $$ICM.f.i@146)] = f.zero@0;
              $$ICM.f.i@146 = $$ICM.f.i@146 + 1u;
    24 |      if (!1) goto lab_85;
              $$CIV43 = 0ll;
    22 |      do {   /* id=19 guarded */ /* ~84 */ 
                /* region = 157 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & $$ICM.f.i@146 + (unsigned int) ((int) $$CIV43))] = $$TVX.$$.__4874245;
    24 |        $$CIV43 = $$CIV43 + 1ll;
              } while ((unsigned long long) $$CIV43 < (unsigned long long) (f.dy@8 - 1u));    /* ~84 */
              $$ICM.f.i@146 = $$ICM.f.i@146 + (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u)));
            lab_85:
    30 |      $$CIV48 = $$CIV48 + 1ll;
            } while ((unsigned long long) $$CIV48 < (unsigned long long) nz);    /* ~83 */
            f.i@14 = $$ICM.f.i@146;
          lab_136:
            goto lab_138;
          lab_137:
    31 |    if (!1) goto lab_142;
            $$CIV48 = 0ll;
            $$SCREP18 = f.i@14;
            do {   /* id=30 guarded */ /* ~139 */ 
              /* region = 159 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & $$SCREP18)] = f.zero@0;
              $$SCREP18 = $$SCREP18 + 1u;
    30 |      $$CIV48 = $$CIV48 + 1ll;
            } while ((unsigned long long) $$CIV48 < (unsigned long long) nz);    /* ~139 */
            f.i@14 = $$SCREP18;
          lab_142:
          lab_138:
          lab_92:
          lab_93:
          lab_71:
          lab_12:
    52 |    if (!(__475 != NULL)) goto lab_32;
    35 |    operator delete(void*)(__475)
          lab_32:
    53 |    if (!(rm != NULL)) goto lab_35;
            ((funcaddr *)(*((char * *)rm)))[8ll / 8]->(()vf).rns203.(rm);
          lab_35:
    11 |    operator delete[](void*)(f.a@18)
    54 |    return;
          } /* function */ 


    14 |  void void decompress3d<float, 32u>(RCdecoder*, float*, unsigned int, unsigned int, unsigned int)(char * rd, float *data, unsigned int nx, unsigned int ny, unsigned int nz)
    21 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
    24 |    __529 = operator new(unsigned long)(72ull);
            if (!(__529 != NULL)) goto lab_2;
            __es.__c4@3 = 1u;
            RCqsmodel::RCqsmodel(bool, unsigned int, unsigned int, unsigned int)(__529,0u,65u,16u,1024u);
            __es.__c4@3 = 0u;
          lab_2:
            $$rm.nat.2A = __529;
    25 |    __530 = operator new(unsigned long)(24ull);
            rm = $$rm.nat.2A;
            if (!(__530 != NULL)) goto lab_5;
    34 |    *((char * *)((char *)__530 + 8)) = rd;
            rm = $$rm.nat.2A;
            *((char * *)((char *)__530 + 16)) = &rm;
          lab_5:
    26 |    f.zero@0 =  0.00000000E+00;
     9 |    f.dx@4 = 1u;
            f.dy@8 = nx + 1u;
            f.dz@c = (ny + 1u) * (nx + 1u);
    45 |    __563.rnn89 = (2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u;
            if (!(0u != (((2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u) + 1u & (2u + ((ny + 1u) * (nx + 1u) + nx)) - 1u))) goto lab_9;
            do {   /* id=8 guarded */ /* ~7 */ 
              /* region = 135 */
     9 |      __563.rnn89 = __563.rnn89 | __563.rnn89 + 1u;
    45 |    } while (0u != (__563.rnn89 + 1u & __563.rnn89));    /* ~7 */
          lab_9:
    47 |    f.m@10 = __563.rnn89;
    10 |    f.i@14 = 0u;
            f.a@18 = operator new[](unsigned long)((unsigned long long) (__563.rnn89 + 1u) * 4ull);
            __es.__c4@3 = 2u;
    23 |    f.a@18[(long long) (f.i@14 & f.m@10)] = f.zero@0;
            f.i@14 = f.i@14 + 1u;
    24 |    if (!(1u != f.dz@c)) goto lab_43;
            $$CIV49 = 0ll;
    22 |    do {   /* id=7 guarded */ /* ~13 */ 
              /* region = 136 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV49))] = f.zero@0;
    24 |      $$CIV49 = $$CIV49 + 1ll;
            } while ((unsigned long long) $$CIV49 < (unsigned long long) (f.dz@c - 1u));    /* ~13 */
            f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dz@c - 1u))) + f.i@14;
          lab_43:
    31 |    if (!(0u < nz)) goto lab_12;
            if (!(0u < ny)) goto lab_70;
            if (!(0u < nx)) goto lab_58;
            if (!1) goto lab_57;
            $$CIV4F = 0ll;
            do {   /* id=1 guarded */ /* ~10 */ 
              /* region = 141 */
              /* bump-normalized */
    30 |      __542 = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    24 |      if (!(1u != f.dy@8)) goto lab_44;
              $$CIV4A = 0ll;
    22 |      do {   /* id=6 guarded */ /* ~19 */ 
                /* region = 137 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV4A))] = __542;
    24 |        $$CIV4A = $$CIV4A + 1ll;
              } while ((unsigned long long) $$CIV4A < (unsigned long long) (f.dy@8 - 1u));    /* ~19 */
              f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u))) + f.i@14;
            lab_44:
    31 |      if (!1) goto lab_18;
              $$CIV4E = 0ll;
              do {   /* id=2 guarded */ /* ~16 */ 
                /* region = 140 */
                /* bump-normalized */
    30 |        __546 = f.zero@0;
    23 |        f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
                f.i@14 = f.i@14 + 1u;
    24 |        if (!(1u != f.dx@4)) goto lab_45;
                $$CIV4B = 0ll;
    22 |        do {   /* id=5 guarded */ /* ~25 */ 
                  /* region = 138 */
                  /* bump-normalized */
    23 |          f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV4B))] = __546;
    24 |          $$CIV4B = $$CIV4B + 1ll;
                } while ((unsigned long long) $$CIV4B < (unsigned long long) (f.dx@4 - 1u));    /* ~25 */
                f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dx@4 - 1u))) + f.i@14;
              lab_45:
    31 |        if (!1) goto lab_24;
                $$CIV4D = 0ll;
                do {   /* id=3 guarded */ /* ~22 */ 
                  /* region = 139 */
                  /* bump-normalized */
    47 |          $$csx6 = f.i@14;
                  $$TVX.$$.a4747 = PCdecoder<float, PCmap<float, 32u, void>, true>::decode(float, unsigned int)(__530,(((((f.a@18[(long long) ($$csx6 - f.dx@4 & f.m@10)] - f.a@18[(long long) (($$csx6 - f.dy@8) - f.dz@c & f.m@10)]) + f.a@18[(long long) ($$csx6 - f.dy@8 & f.m@10)]) - f.a@18[(long long) (($$csx6 - f.dx@4) - f.dz@c & f.m@10)]) + f.a@18[(long long) ($$csx6 - f.dz@c & f.m@10)]) - f.a@18[(long long) (($$csx6 - f.dx@4) - f.dy@8 & f.m@10)]) + f.a@18[(long long) ((($$csx6 - f.dx@4) - f.dy@8) - f.dz@c & f.m@10)],0u);
    48 |          data[$$CIV4D] = $$TVX.$$.a4747;
    23 |          f.a@18[(long long) (f.m@10 & f.i@14)] = $$TVX.$$.a4747;
                  f.i@14 = f.i@14 + 1u;
    32 |          $$CIV4D = $$CIV4D + 1ll;
                } while ((unsigned long long) $$CIV4D < (unsigned long long) nx);    /* ~22 */
                data = ((char *)data  + (long long) ((unsigned long long) nx * 4ull));
              lab_24:
    31 |        $$CIV4E = $$CIV4E + 1ll;
              } while ((unsigned long long) $$CIV4E < (unsigned long long) ny);    /* ~16 */
            lab_18:
    30 |      $$CIV4F = $$CIV4F + 1ll;
            } while ((unsigned long long) $$CIV4F < (unsigned long long) nz);    /* ~10 */
          lab_57:
            goto lab_71;
          lab_58:
    31 |    if (!1) goto lab_71;
            if (!(1u != f.dy@8)) goto lab_109;
            if (!(1u != f.dx@4)) goto lab_99;
            if (!1) goto lab_98;
            $$CIV4F = 0ll;
            do {   /* id=4 guarded */ /* ~60 */ 
              /* region = 145 */
              /* bump-normalized */
    30 |      __542 = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    24 |      if (!1) goto lab_62;
              $$CIV4A = 0ll;
    22 |      do {   /* id=9 guarded */ /* ~61 */ 
                /* region = 144 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV4A))] = __542;
    24 |        $$CIV4A = $$CIV4A + 1ll;
              } while ((unsigned long long) $$CIV4A < (unsigned long long) (f.dy@8 - 1u));    /* ~61 */
              f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u))) + f.i@14;
            lab_62:
    31 |      if (!1) goto lab_68;
              $$CIV4E = 0ll;
              do {   /* id=10 guarded */ /* ~63 */ 
                /* region = 143 */
                /* bump-normalized */
    30 |        $$TVX.$$.__5464848 = f.zero@0;
    23 |        f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
                f.i@14 = f.i@14 + 1u;
    24 |        if (!1) goto lab_65;
                $$CIV4B = 0ll;
    22 |        do {   /* id=11 guarded */ /* ~64 */ 
                  /* region = 142 */
                  /* bump-normalized */
    23 |          f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV4B))] = $$TVX.$$.__5464848;
    24 |          $$CIV4B = $$CIV4B + 1ll;
                } while ((unsigned long long) $$CIV4B < (unsigned long long) (f.dx@4 - 1u));    /* ~64 */
                f.i@14 = f.i@14 + (unsigned int) ((int) ((unsigned long long) (f.dx@4 - 1u)));
              lab_65:
    31 |        $$CIV4E = $$CIV4E + 1ll;
              } while ((unsigned long long) $$CIV4E < (unsigned long long) ny);    /* ~63 */
            lab_68:
    30 |      $$CIV4F = $$CIV4F + 1ll;
            } while ((unsigned long long) $$CIV4F < (unsigned long long) nz);    /* ~60 */
          lab_98:
            goto lab_71;
          lab_99:
    31 |    if (!1) goto lab_108;
            $$CIV4F = 0ll;
            do {   /* id=22 guarded */ /* ~101 */ 
              /* region = 148 */
              /* bump-normalized */
    30 |      __542 = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    24 |      if (!1) goto lab_103;
              $$CIV4A = 0ll;
    22 |      do {   /* id=21 guarded */ /* ~102 */ 
                /* region = 147 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV4A))] = __542;
    24 |        $$CIV4A = $$CIV4A + 1ll;
              } while ((unsigned long long) $$CIV4A < (unsigned long long) (f.dy@8 - 1u));    /* ~102 */
              f.i@14 = (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u))) + f.i@14;
            lab_103:
    31 |      if (!1) goto lab_107;
              $$CIV4E = 0ll;
              $$SCREP1F = f.i@14;
              do {   /* id=20 guarded */ /* ~104 */ 
                /* region = 146 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & $$SCREP1F)] = f.zero@0;
                $$SCREP1F = $$SCREP1F + 1u;
    31 |        $$CIV4E = $$CIV4E + 1ll;
              } while ((unsigned long long) $$CIV4E < (unsigned long long) ny);    /* ~104 */
              f.i@14 = $$SCREP1F;
            lab_107:
    30 |      $$CIV4F = $$CIV4F + 1ll;
            } while ((unsigned long long) $$CIV4F < (unsigned long long) nz);    /* ~101 */
          lab_108:
            goto lab_71;
          lab_109:
    31 |    if (!(1u != f.dx@4)) goto lab_119;
            if (!1) goto lab_118;
            $$CIV4F = 0ll;
            do {   /* id=16 guarded */ /* ~111 */ 
              /* region = 151 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
              f.i@14 = f.i@14 + 1u;
    31 |      if (!1) goto lab_117;
              $$CIV4E = 0ll;
              do {   /* id=12 guarded */ /* ~114 */ 
                /* region = 150 */
                /* bump-normalized */
    30 |        $$TVX.$$.__546494A = f.zero@0;
    23 |        f.a@18[(long long) (f.m@10 & f.i@14)] = f.zero@0;
                f.i@14 = f.i@14 + 1u;
    24 |        if (!1) goto lab_116;
                $$CIV4B = 0ll;
    22 |        do {   /* id=23 guarded */ /* ~115 */ 
                  /* region = 149 */
                  /* bump-normalized */
    23 |          f.a@18[(long long) (f.m@10 & f.i@14 + (unsigned int) ((int) $$CIV4B))] = $$TVX.$$.__546494A;
    24 |          $$CIV4B = $$CIV4B + 1ll;
                } while ((unsigned long long) $$CIV4B < (unsigned long long) (f.dx@4 - 1u));    /* ~115 */
                f.i@14 = f.i@14 + (unsigned int) ((int) ((unsigned long long) (f.dx@4 - 1u)));
              lab_116:
    31 |        $$CIV4E = $$CIV4E + 1ll;
              } while ((unsigned long long) $$CIV4E < (unsigned long long) ny);    /* ~114 */
            lab_117:
    30 |      $$CIV4F = $$CIV4F + 1ll;
            } while ((unsigned long long) $$CIV4F < (unsigned long long) nz);    /* ~111 */
          lab_118:
            goto lab_71;
          lab_119:
    31 |    if (!1) goto lab_127;
            $$CIV4F = 0ll;
    23 |    $$ICM.f.i@147 = f.i@14;
    31 |    do {   /* id=24 guarded */ /* ~120 */ 
              /* region = 153 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & $$ICM.f.i@147)] = f.zero@0;
              $$ICM.f.i@147 = $$ICM.f.i@147 + 1u;
    31 |      if (!1) goto lab_126;
              $$CIV4E = 0ll;
              $$SCREP1E = $$ICM.f.i@147;
              do {   /* id=26 guarded */ /* ~123 */ 
                /* region = 152 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & $$SCREP1E)] = f.zero@0;
                $$SCREP1E = $$SCREP1E + 1u;
    31 |        $$CIV4E = $$CIV4E + 1ll;
              } while ((unsigned long long) $$CIV4E < (unsigned long long) ny);    /* ~123 */
              $$ICM.f.i@147 = $$SCREP1E;
            lab_126:
    30 |      $$CIV4F = $$CIV4F + 1ll;
            } while ((unsigned long long) $$CIV4F < (unsigned long long) nz);    /* ~120 */
            f.i@14 = $$ICM.f.i@147;
          lab_127:
            goto lab_71;
          lab_70:
    31 |    if (!(0u < nx)) goto lab_82;
            if (!1) goto lab_93;
            if (!(1u != f.dy@8)) goto lab_130;
            if (!1) goto lab_129;
            $$CIV4F = 0ll;
    23 |    $$ICM.f.i@147 = f.i@14;
    31 |    do {   /* id=13 guarded */ /* ~72 */ 
              /* region = 155 */
              /* bump-normalized */
    30 |      $$TVX.$$.__5424A4C = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & $$ICM.f.i@147)] = f.zero@0;
              $$ICM.f.i@147 = $$ICM.f.i@147 + 1u;
    24 |      if (!1) goto lab_74;
              $$CIV4A = 0ll;
    22 |      do {   /* id=14 guarded */ /* ~73 */ 
                /* region = 154 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & $$ICM.f.i@147 + (unsigned int) ((int) $$CIV4A))] = $$TVX.$$.__5424A4C;
    24 |        $$CIV4A = $$CIV4A + 1ll;
              } while ((unsigned long long) $$CIV4A < (unsigned long long) (f.dy@8 - 1u));    /* ~73 */
              $$ICM.f.i@147 = $$ICM.f.i@147 + (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u)));
            lab_74:
    30 |      $$CIV4F = $$CIV4F + 1ll;
            } while ((unsigned long long) $$CIV4F < (unsigned long long) nz);    /* ~72 */
            f.i@14 = $$ICM.f.i@147;
          lab_129:
            goto lab_93;
          lab_130:
    31 |    if (!1) goto lab_135;
            $$CIV4F = 0ll;
            $$SCREP1D = f.i@14;
            do {   /* id=28 guarded */ /* ~132 */ 
              /* region = 156 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & $$SCREP1D)] = f.zero@0;
              $$SCREP1D = $$SCREP1D + 1u;
    30 |      $$CIV4F = $$CIV4F + 1ll;
            } while ((unsigned long long) $$CIV4F < (unsigned long long) nz);    /* ~132 */
            f.i@14 = $$SCREP1D;
          lab_135:
            goto lab_93;
          lab_82:
    31 |    if (!1) goto lab_92;
            if (!(1u != f.dy@8)) goto lab_137;
            if (!1) goto lab_136;
            $$CIV4F = 0ll;
    23 |    $$ICM.f.i@147 = f.i@14;
    31 |    do {   /* id=18 guarded */ /* ~83 */ 
              /* region = 158 */
              /* bump-normalized */
    30 |      $$TVX.$$.__5424B4E = f.zero@0;
    23 |      f.a@18[(long long) (f.m@10 & $$ICM.f.i@147)] = f.zero@0;
              $$ICM.f.i@147 = $$ICM.f.i@147 + 1u;
    24 |      if (!1) goto lab_85;
              $$CIV4A = 0ll;
    22 |      do {   /* id=19 guarded */ /* ~84 */ 
                /* region = 157 */
                /* bump-normalized */
    23 |        f.a@18[(long long) (f.m@10 & $$ICM.f.i@147 + (unsigned int) ((int) $$CIV4A))] = $$TVX.$$.__5424B4E;
    24 |        $$CIV4A = $$CIV4A + 1ll;
              } while ((unsigned long long) $$CIV4A < (unsigned long long) (f.dy@8 - 1u));    /* ~84 */
              $$ICM.f.i@147 = $$ICM.f.i@147 + (unsigned int) ((int) ((unsigned long long) (f.dy@8 - 1u)));
            lab_85:
    30 |      $$CIV4F = $$CIV4F + 1ll;
            } while ((unsigned long long) $$CIV4F < (unsigned long long) nz);    /* ~83 */
            f.i@14 = $$ICM.f.i@147;
          lab_136:
            goto lab_138;
          lab_137:
    31 |    if (!1) goto lab_142;
            $$CIV4F = 0ll;
            $$SCREP1C = f.i@14;
            do {   /* id=30 guarded */ /* ~139 */ 
              /* region = 159 */
              /* bump-normalized */
    23 |      f.a@18[(long long) (f.m@10 & $$SCREP1C)] = f.zero@0;
              $$SCREP1C = $$SCREP1C + 1u;
    30 |      $$CIV4F = $$CIV4F + 1ll;
            } while ((unsigned long long) $$CIV4F < (unsigned long long) nz);    /* ~139 */
            f.i@14 = $$SCREP1C;
          lab_142:
          lab_138:
          lab_92:
          lab_93:
          lab_71:
          lab_12:
    52 |    if (!(__530 != NULL)) goto lab_32;
    35 |    operator delete(void*)(__530)
          lab_32:
    53 |    if (!(rm != NULL)) goto lab_35;
            ((funcaddr *)(*((char * *)rm)))[8ll / 8]->(()vf).rns219.(rm);
          lab_35:
    11 |    operator delete[](void*)(f.a@18)
    54 |    return;
          } /* function */ 


    47 |  double PCdecoder<double, PCmap<double, 16u, void>, true>::decode(double, unsigned int)(PCdecoder<double,PCmap<double,16,void>,1> *this, double pred, unsigned int context)
    48 |  {
    50 |    s = RCdecoder::decode(RCmodel*)(*((char * *)((char *)this + 8)),((char * *)(*((char * *)((char *)this + 16))))[(long long) context]);
    51 |    if (!(s > 16u)) goto lab_1;
    53 |    __577 = *((char * *)((char *)this + 8));
            __576 = (s - 16u) - 1u;
     4 |    s = 0ull;
     5 |    m = 0u;
     6 |    if (!1) goto lab_5;
            $$CIV50 = 0ll;
            do {   /* id=2 guarded */ /* ~3 */ 
              /* region = 20 */
              /* bump-normalized */
     7 |      if (!(__576 > 16u)) goto lab_6;
     3 |      $$RET2F = (unsigned long long) RCdecoder::decode_shift(unsigned int)(__577,16u);
     8 |      s = s + ($$RET2F << m);
     9 |      m = m + 16u;
    10 |      __576 = __576 - 16u;
    11 |    lab_6:
     6 |      $$CIV50 = $$CIV50 + 1ll;
            } while ((unsigned long long) $$CIV50 < 3ull);    /* ~3 */
          lab_5:
    12 |    $$RET30 = (unsigned long long) RCdecoder::decode_shift(unsigned int)(__577,__576);
    54 |    $$PARM.this42 = this;
            $$PARM.d43 = pred;
   100 |    $$PARM.this3E = this;
            $$PARM.d3F = pred;
    71 |    shared.d@0 = pred;
    72 |    $$IRET1F = shared.r@0;
   100 |    r = shared.r@0;
   104 |    $$IRET21 = (~ shared.r@0 >> 63) * 18446744073709551615ull >> 49u ^ ~ shared.r@0 >> 48u;
    54 |    p = (~ shared.r@0 >> 63) * 18446744073709551615ull >> 49u ^ ~ shared.r@0 >> 48u;
    55 |    $$PARM.this3A = this;
            $$PARM.r3B = (s + (1ull << (s - 16u) - 1u)) + (($$RET30 << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 49u ^ ~ shared.r@0 >> 48u));
   111 |    $$PARM.r3B = ((s + (1ull << (s - 16u) - 1u)) + (($$RET30 << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 49u ^ ~ shared.r@0 >> 48u)) >> 15u) * 18446744073709551615ull >> 49u ^ (s + (1ull << (s - 16u) - 1u)) + (($$RET30 << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 49u ^ ~ shared.r@0 >> 48u));
   113 |    $$PARM.this36 = this;
            $$PARM.r37 = ~ (((s + (1ull << (s - 16u) - 1u)) + (($$RET30 << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 49u ^ ~ shared.r@0 >> 48u)) >> 15u) * 18446744073709551615ull >> 49u ^ (s + (1ull << (s - 16u) - 1u)) + (($$RET30 << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 49u ^ ~ shared.r@0 >> 48u))) << 48u;
    87 |    shared.r@0 = ~ (((s + (1ull << (s - 16u) - 1u)) + (($$RET30 << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 49u ^ ~ shared.r@0 >> 48u)) >> 15u) * 18446744073709551615ull >> 49u ^ (s + (1ull << (s - 16u) - 1u)) + (($$RET30 << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 49u ^ ~ shared.r@0 >> 48u))) << 48u;
    88 |    $$IRET1B = shared.d@0;
   113 |    $$RET62 = shared.d@0;
   114 |    $$IRET1D = shared.d@0;
    55 |    $$RET31 = shared.d@0;
    56 |    rstr = shared.d@0;
            return rstr;
    57 |  lab_1:
    58 |    if (!(s < 16u)) goto lab_9;
    60 |    __581 = *((char * *)((char *)this + 8));
            __580 = 15u - s;
     4 |    s = 0ull;
     5 |    m = 0u;
     6 |    if (!1) goto lab_13;
            $$CIV51 = 0ll;
            do {   /* id=1 guarded */ /* ~11 */ 
              /* region = 21 */
              /* bump-normalized */
     7 |      if (!(__580 > 16u)) goto lab_14;
     3 |      $$RET32 = (unsigned long long) RCdecoder::decode_shift(unsigned int)(__581,16u);
     8 |      s = s + ($$RET32 << m);
     9 |      m = m + 16u;
    10 |      __580 = __580 - 16u;
    11 |    lab_14:
     6 |      $$CIV51 = $$CIV51 + 1ll;
            } while ((unsigned long long) $$CIV51 < 3ull);    /* ~11 */
          lab_13:
    12 |    $$RET33 = (unsigned long long) RCdecoder::decode_shift(unsigned int)(__581,__580);
    61 |    $$PARM.this44 = this;
            $$PARM.d45 = pred;
   100 |    $$PARM.this3E = this;
            $$PARM.d3F = pred;
    71 |    shared.d@0 = pred;
    72 |    $$IRET1F = shared.r@0;
   100 |    r = shared.r@0;
   104 |    $$IRET22 = (~ shared.r@0 >> 63) * 18446744073709551615ull >> 49u ^ ~ shared.r@0 >> 48u;
    61 |    p = (~ shared.r@0 >> 63) * 18446744073709551615ull >> 49u ^ ~ shared.r@0 >> 48u;
    62 |    $$PARM.this3C = this;
            $$PARM.r3D = ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 49u ^ ~ shared.r@0 >> 48u) - (($$RET33 << m) + ((1ull << 15u - s) + s));
   111 |    $$PARM.r3D = (((~ shared.r@0 >> 63) * 18446744073709551615ull >> 49u ^ ~ shared.r@0 >> 48u) - (($$RET33 << m) + ((1ull << 15u - s) + s)) >> 15u) * 18446744073709551615ull >> 49u ^ ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 49u ^ ~ shared.r@0 >> 48u) - (($$RET33 << m) + ((1ull << 15u - s) + s));
   113 |    $$PARM.this36 = this;
            $$PARM.r37 = ~ ((((~ shared.r@0 >> 63) * 18446744073709551615ull >> 49u ^ ~ shared.r@0 >> 48u) - (($$RET33 << m) + ((1ull << 15u - s) + s)) >> 15u) * 18446744073709551615ull >> 49u ^ ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 49u ^ ~ shared.r@0 >> 48u) - (($$RET33 << m) + ((1ull << 15u - s) + s))) << 48u;
    87 |    shared.r@0 = ~ ((((~ shared.r@0 >> 63) * 18446744073709551615ull >> 49u ^ ~ shared.r@0 >> 48u) - (($$RET33 << m) + ((1ull << 15u - s) + s)) >> 15u) * 18446744073709551615ull >> 49u ^ ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 49u ^ ~ shared.r@0 >> 48u) - (($$RET33 << m) + ((1ull << 15u - s) + s))) << 48u;
    88 |    $$IRET1B = shared.d@0;
   113 |    $$RET62 = shared.d@0;
   114 |    $$IRET1E = shared.d@0;
    62 |    $$RET34 = shared.d@0;
    63 |    rstr = shared.d@0;
            return rstr;
    64 |  lab_9:
    66 |    $$PARM.this46 = this;
            $$PARM.d47 = pred;
   121 |    $$PARM.this40 = this;
            $$PARM.d41 = pred;
    71 |    shared.d@0 = pred;
    72 |    $$IRET20 = shared.r@0;
   121 |    r = shared.r@0;
   123 |    $$PARM.this38 = this;
            $$PARM.r39 = (shared.r@0 >> 48u) << 48u;
    87 |    shared.r@0 = (shared.r@0 >> 48u) << 48u;
    88 |    $$IRET1C = shared.d@0;
   123 |    $$RET63 = shared.d@0;
   124 |    $$IRET23 = shared.d@0;
    66 |    $$RET35 = shared.d@0;
            rstr = shared.d@0;
            return rstr;
    67 |  } /* function */ 


    11 |  char * FRONT<double>::~FRONT()(FRONT<double> *this)
          {
            operator delete[](void*)(*((char * *)((char *)this + 32)))
            rstr = this;
            return rstr;
          } /* function */ 


    47 |  double PCdecoder<double, PCmap<double, 32u, void>, true>::decode(double, unsigned int)(PCdecoder<double,PCmap<double,32,void>,1> *this, double pred, unsigned int context)
    48 |  {
    50 |    s = RCdecoder::decode(RCmodel*)(*((char * *)((char *)this + 8)),((char * *)(*((char * *)((char *)this + 16))))[(long long) context]);
    51 |    if (!(s > 32u)) goto lab_1;
    53 |    __587 = *((char * *)((char *)this + 8));
            __586 = (s - 32u) - 1u;
     4 |    s = 0ull;
     5 |    m = 0u;
     6 |    if (!1) goto lab_5;
            $$CIV52 = 0ll;
            do {   /* id=2 guarded */ /* ~3 */ 
              /* region = 20 */
              /* bump-normalized */
     7 |      if (!(__586 > 16u)) goto lab_6;
     3 |      $$RET36 = (unsigned long long) RCdecoder::decode_shift(unsigned int)(__587,16u);
     8 |      s = s + ($$RET36 << m);
     9 |      m = m + 16u;
    10 |      __586 = __586 - 16u;
    11 |    lab_6:
     6 |      $$CIV52 = $$CIV52 + 1ll;
            } while ((unsigned long long) $$CIV52 < 3ull);    /* ~3 */
          lab_5:
    12 |    $$RET37 = (unsigned long long) RCdecoder::decode_shift(unsigned int)(__587,__586);
    54 |    $$PARM.this30 = this;
            $$PARM.d31 = pred;
   100 |    $$PARM.this2C = this;
            $$PARM.d2D = pred;
    71 |    shared.d@0 = pred;
    72 |    $$IRET16 = shared.r@0;
   100 |    r = shared.r@0;
   104 |    $$IRET18 = (~ shared.r@0 >> 63) * 18446744073709551615ull >> 33u ^ ~ shared.r@0 >> 32u;
    54 |    p = (~ shared.r@0 >> 63) * 18446744073709551615ull >> 33u ^ ~ shared.r@0 >> 32u;
    55 |    $$PARM.this28 = this;
            $$PARM.r29 = (s + (1ull << (s - 32u) - 1u)) + (($$RET37 << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 33u ^ ~ shared.r@0 >> 32u));
   111 |    $$PARM.r29 = ((s + (1ull << (s - 32u) - 1u)) + (($$RET37 << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 33u ^ ~ shared.r@0 >> 32u)) >> 31u) * 18446744073709551615ull >> 33u ^ (s + (1ull << (s - 32u) - 1u)) + (($$RET37 << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 33u ^ ~ shared.r@0 >> 32u));
   113 |    $$PARM.this24 = this;
            $$PARM.r25 = ~ (((s + (1ull << (s - 32u) - 1u)) + (($$RET37 << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 33u ^ ~ shared.r@0 >> 32u)) >> 31u) * 18446744073709551615ull >> 33u ^ (s + (1ull << (s - 32u) - 1u)) + (($$RET37 << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 33u ^ ~ shared.r@0 >> 32u))) << 32u;
    87 |    shared.r@0 = ~ (((s + (1ull << (s - 32u) - 1u)) + (($$RET37 << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 33u ^ ~ shared.r@0 >> 32u)) >> 31u) * 18446744073709551615ull >> 33u ^ (s + (1ull << (s - 32u) - 1u)) + (($$RET37 << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 33u ^ ~ shared.r@0 >> 32u))) << 32u;
    88 |    $$IRET12 = shared.d@0;
   113 |    $$RET64 = shared.d@0;
   114 |    $$IRET14 = shared.d@0;
    55 |    $$RET38 = shared.d@0;
    56 |    rstr = shared.d@0;
            return rstr;
    57 |  lab_1:
    58 |    if (!(s < 32u)) goto lab_9;
    60 |    __591 = *((char * *)((char *)this + 8));
            __590 = 31u - s;
     4 |    s = 0ull;
     5 |    m = 0u;
     6 |    if (!1) goto lab_13;
            $$CIV53 = 0ll;
            do {   /* id=1 guarded */ /* ~11 */ 
              /* region = 21 */
              /* bump-normalized */
     7 |      if (!(__590 > 16u)) goto lab_14;
     3 |      $$RET39 = (unsigned long long) RCdecoder::decode_shift(unsigned int)(__591,16u);
     8 |      s = s + ($$RET39 << m);
     9 |      m = m + 16u;
    10 |      __590 = __590 - 16u;
    11 |    lab_14:
     6 |      $$CIV53 = $$CIV53 + 1ll;
            } while ((unsigned long long) $$CIV53 < 3ull);    /* ~11 */
          lab_13:
    12 |    $$RET3A = (unsigned long long) RCdecoder::decode_shift(unsigned int)(__591,__590);
    61 |    $$PARM.this32 = this;
            $$PARM.d33 = pred;
   100 |    $$PARM.this2C = this;
            $$PARM.d2D = pred;
    71 |    shared.d@0 = pred;
    72 |    $$IRET16 = shared.r@0;
   100 |    r = shared.r@0;
   104 |    $$IRET19 = (~ shared.r@0 >> 63) * 18446744073709551615ull >> 33u ^ ~ shared.r@0 >> 32u;
    61 |    p = (~ shared.r@0 >> 63) * 18446744073709551615ull >> 33u ^ ~ shared.r@0 >> 32u;
    62 |    $$PARM.this2A = this;
            $$PARM.r2B = ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 33u ^ ~ shared.r@0 >> 32u) - (($$RET3A << m) + ((1ull << 31u - s) + s));
   111 |    $$PARM.r2B = (((~ shared.r@0 >> 63) * 18446744073709551615ull >> 33u ^ ~ shared.r@0 >> 32u) - (($$RET3A << m) + ((1ull << 31u - s) + s)) >> 31u) * 18446744073709551615ull >> 33u ^ ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 33u ^ ~ shared.r@0 >> 32u) - (($$RET3A << m) + ((1ull << 31u - s) + s));
   113 |    $$PARM.this24 = this;
            $$PARM.r25 = ~ ((((~ shared.r@0 >> 63) * 18446744073709551615ull >> 33u ^ ~ shared.r@0 >> 32u) - (($$RET3A << m) + ((1ull << 31u - s) + s)) >> 31u) * 18446744073709551615ull >> 33u ^ ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 33u ^ ~ shared.r@0 >> 32u) - (($$RET3A << m) + ((1ull << 31u - s) + s))) << 32u;
    87 |    shared.r@0 = ~ ((((~ shared.r@0 >> 63) * 18446744073709551615ull >> 33u ^ ~ shared.r@0 >> 32u) - (($$RET3A << m) + ((1ull << 31u - s) + s)) >> 31u) * 18446744073709551615ull >> 33u ^ ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 33u ^ ~ shared.r@0 >> 32u) - (($$RET3A << m) + ((1ull << 31u - s) + s))) << 32u;
    88 |    $$IRET12 = shared.d@0;
   113 |    $$RET64 = shared.d@0;
   114 |    $$IRET15 = shared.d@0;
    62 |    $$RET3B = shared.d@0;
    63 |    rstr = shared.d@0;
            return rstr;
    64 |  lab_9:
    66 |    $$PARM.this34 = this;
            $$PARM.d35 = pred;
   121 |    $$PARM.this2E = this;
            $$PARM.d2F = pred;
    71 |    shared.d@0 = pred;
    72 |    $$IRET17 = shared.r@0;
   121 |    r = shared.r@0;
   123 |    $$PARM.this26 = this;
            $$PARM.r27 = (shared.r@0 >> 32u) << 32u;
    87 |    shared.r@0 = (shared.r@0 >> 32u) << 32u;
    88 |    $$IRET13 = shared.d@0;
   123 |    $$RET65 = shared.d@0;
   124 |    $$IRET1A = shared.d@0;
    66 |    $$RET3C = shared.d@0;
            rstr = shared.d@0;
            return rstr;
    67 |  } /* function */ 


    47 |  double PCdecoder<double, PCmap<double, 48u, void>, true>::decode(double, unsigned int)(PCdecoder<double,PCmap<double,48,void>,1> *this, double pred, unsigned int context)
    48 |  {
    50 |    s = RCdecoder::decode(RCmodel*)(*((char * *)((char *)this + 8)),((char * *)(*((char * *)((char *)this + 16))))[(long long) context]);
    51 |    if (!(s > 48u)) goto lab_1;
    53 |    __597 = *((char * *)((char *)this + 8));
            __596 = (s - 48u) - 1u;
     4 |    s = 0ull;
     5 |    m = 0u;
     6 |    if (!1) goto lab_5;
            $$CIV54 = 0ll;
            do {   /* id=2 guarded */ /* ~3 */ 
              /* region = 20 */
              /* bump-normalized */
     7 |      if (!(__596 > 16u)) goto lab_6;
     3 |      $$RET3D = (unsigned long long) RCdecoder::decode_shift(unsigned int)(__597,16u);
     8 |      s = s + ($$RET3D << m);
     9 |      m = m + 16u;
    10 |      __596 = __596 - 16u;
    11 |    lab_6:
     6 |      $$CIV54 = $$CIV54 + 1ll;
            } while ((unsigned long long) $$CIV54 < 3ull);    /* ~3 */
          lab_5:
    12 |    $$RET3E = (unsigned long long) RCdecoder::decode_shift(unsigned int)(__597,__596);
    54 |    $$PARM.this1E = this;
            $$PARM.d1F = pred;
   100 |    $$PARM.this1A = this;
            $$PARM.d1B = pred;
    71 |    shared.d@0 = pred;
    72 |    $$IRETD = shared.r@0;
   100 |    r = shared.r@0;
   104 |    $$IRETF = (~ shared.r@0 >> 63) * 18446744073709551615ull >> 17u ^ ~ shared.r@0 >> 16u;
    54 |    p = (~ shared.r@0 >> 63) * 18446744073709551615ull >> 17u ^ ~ shared.r@0 >> 16u;
    55 |    $$PARM.this16 = this;
            $$PARM.r17 = (s + (1ull << (s - 48u) - 1u)) + (($$RET3E << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 17u ^ ~ shared.r@0 >> 16u));
   111 |    $$PARM.r17 = ((s + (1ull << (s - 48u) - 1u)) + (($$RET3E << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 17u ^ ~ shared.r@0 >> 16u)) >> 47u) * 18446744073709551615ull >> 17u ^ (s + (1ull << (s - 48u) - 1u)) + (($$RET3E << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 17u ^ ~ shared.r@0 >> 16u));
   113 |    $$PARM.this12 = this;
            $$PARM.r13 = ~ (((s + (1ull << (s - 48u) - 1u)) + (($$RET3E << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 17u ^ ~ shared.r@0 >> 16u)) >> 47u) * 18446744073709551615ull >> 17u ^ (s + (1ull << (s - 48u) - 1u)) + (($$RET3E << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 17u ^ ~ shared.r@0 >> 16u))) << 16u;
    87 |    shared.r@0 = ~ (((s + (1ull << (s - 48u) - 1u)) + (($$RET3E << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 17u ^ ~ shared.r@0 >> 16u)) >> 47u) * 18446744073709551615ull >> 17u ^ (s + (1ull << (s - 48u) - 1u)) + (($$RET3E << m) + ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 17u ^ ~ shared.r@0 >> 16u))) << 16u;
    88 |    $$IRET9 = shared.d@0;
   113 |    $$RET66 = shared.d@0;
   114 |    $$IRETB = shared.d@0;
    55 |    $$RET3F = shared.d@0;
    56 |    rstr = shared.d@0;
            return rstr;
    57 |  lab_1:
    58 |    if (!(s < 48u)) goto lab_9;
    60 |    __601 = *((char * *)((char *)this + 8));
            __600 = 47u - s;
     4 |    s = 0ull;
     5 |    m = 0u;
     6 |    if (!1) goto lab_13;
            $$CIV55 = 0ll;
            do {   /* id=1 guarded */ /* ~11 */ 
              /* region = 21 */
              /* bump-normalized */
     7 |      if (!(__600 > 16u)) goto lab_14;
     3 |      $$RET40 = (unsigned long long) RCdecoder::decode_shift(unsigned int)(__601,16u);
     8 |      s = s + ($$RET40 << m);
     9 |      m = m + 16u;
    10 |      __600 = __600 - 16u;
    11 |    lab_14:
     6 |      $$CIV55 = $$CIV55 + 1ll;
            } while ((unsigned long long) $$CIV55 < 3ull);    /* ~11 */
          lab_13:
    12 |    $$RET41 = (unsigned long long) RCdecoder::decode_shift(unsigned int)(__601,__600);
    61 |    $$PARM.this20 = this;
            $$PARM.d21 = pred;
   100 |    $$PARM.this1A = this;
            $$PARM.d1B = pred;
    71 |    shared.d@0 = pred;
    72 |    $$IRETD = shared.r@0;
   100 |    r = shared.r@0;
   104 |    $$IRET10 = (~ shared.r@0 >> 63) * 18446744073709551615ull >> 17u ^ ~ shared.r@0 >> 16u;
    61 |    p = (~ shared.r@0 >> 63) * 18446744073709551615ull >> 17u ^ ~ shared.r@0 >> 16u;
    62 |    $$PARM.this18 = this;
            $$PARM.r19 = ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 17u ^ ~ shared.r@0 >> 16u) - (($$RET41 << m) + ((1ull << 47u - s) + s));
   111 |    $$PARM.r19 = (((~ shared.r@0 >> 63) * 18446744073709551615ull >> 17u ^ ~ shared.r@0 >> 16u) - (($$RET41 << m) + ((1ull << 47u - s) + s)) >> 47u) * 18446744073709551615ull >> 17u ^ ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 17u ^ ~ shared.r@0 >> 16u) - (($$RET41 << m) + ((1ull << 47u - s) + s));
   113 |    $$PARM.this12 = this;
            $$PARM.r13 = ~ ((((~ shared.r@0 >> 63) * 18446744073709551615ull >> 17u ^ ~ shared.r@0 >> 16u) - (($$RET41 << m) + ((1ull << 47u - s) + s)) >> 47u) * 18446744073709551615ull >> 17u ^ ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 17u ^ ~ shared.r@0 >> 16u) - (($$RET41 << m) + ((1ull << 47u - s) + s))) << 16u;
    87 |    shared.r@0 = ~ ((((~ shared.r@0 >> 63) * 18446744073709551615ull >> 17u ^ ~ shared.r@0 >> 16u) - (($$RET41 << m) + ((1ull << 47u - s) + s)) >> 47u) * 18446744073709551615ull >> 17u ^ ((~ shared.r@0 >> 63) * 18446744073709551615ull >> 17u ^ ~ shared.r@0 >> 16u) - (($$RET41 << m) + ((1ull << 47u - s) + s))) << 16u;
    88 |    $$IRET9 = shared.d@0;
   113 |    $$RET66 = shared.d@0;
   114 |    $$IRETC = shared.d@0;
    62 |    $$RET42 = shared.d@0;
    63 |    rstr = shared.d@0;
            return rstr;
    64 |  lab_9:
    66 |    $$PARM.this22 = this;
            $$PARM.d23 = pred;
   121 |    $$PARM.this1C = this;
            $$PARM.d1D = pred;
    71 |    shared.d@0 = pred;
    72 |    $$IRETE = shared.r@0;
   121 |    r = shared.r@0;
   123 |    $$PARM.this14 = this;
            $$PARM.r15 = (shared.r@0 >> 16u) << 16u;
    87 |    shared.r@0 = (shared.r@0 >> 16u) << 16u;
    88 |    $$IRETA = shared.d@0;
   123 |    $$RET67 = shared.d@0;
   124 |    $$IRET11 = shared.d@0;
    66 |    $$RET43 = shared.d@0;
            rstr = shared.d@0;
            return rstr;
    67 |  } /* function */ 


    47 |  double PCdecoder<double, PCmap<double, 64u, void>, true>::decode(double, unsigned int)(PCdecoder<double,PCmap<double,64,void>,1> *this, double pred, unsigned int context)
    48 |  {
    50 |    s = RCdecoder::decode(RCmodel*)(*((char * *)((char *)this + 8)),((char * *)(*((char * *)((char *)this + 16))))[(long long) context]);
    51 |    if (!(s > 64u)) goto lab_1;
    53 |    __607 = *((char * *)((char *)this + 8));
            __606 = (s - 64u) - 1u;
     4 |    s = 0ull;
     5 |    m = 0u;
     6 |    if (!1) goto lab_5;
            $$CIV56 = 0ll;
            do {   /* id=2 guarded */ /* ~3 */ 
              /* region = 20 */
              /* bump-normalized */
     7 |      if (!(__606 > 16u)) goto lab_6;
     3 |      $$RET44 = (unsigned long long) RCdecoder::decode_shift(unsigned int)(__607,16u);
     8 |      s = s + ($$RET44 << m);
     9 |      m = m + 16u;
    10 |      __606 = __606 - 16u;
    11 |    lab_6:
     6 |      $$CIV56 = $$CIV56 + 1ll;
            } while ((unsigned long long) $$CIV56 < 3ull);    /* ~3 */
          lab_5:
    12 |    $$RET45 = (unsigned long long) RCdecoder::decode_shift(unsigned int)(__607,__606);
    54 |    $$PARM.thisC = this;
            $$PARM.dD = pred;
   100 |    $$PARM.this8 = this;
            $$PARM.d9 = pred;
    71 |    shared.d@0 = pred;
    72 |    $$IRET4 = shared.r@0;
   100 |    r = shared.r@0;
   104 |    $$IRET6 = (~ shared.r@0 >> 63u) * 18446744073709551615ull >> 1u ^ ~ shared.r@0;
    54 |    p = (~ shared.r@0 >> 63u) * 18446744073709551615ull >> 1u ^ ~ shared.r@0;
    55 |    $$PARM.this4 = this;
            $$PARM.r5 = (s + (1ull << (s - 64u) - 1u)) + (($$RET45 << m) + ((~ shared.r@0 >> 63u) * 18446744073709551615ull >> 1u ^ ~ shared.r@0));
   111 |    $$PARM.r5 = ((s + (1ull << (s - 64u) - 1u)) + (($$RET45 << m) + ((~ shared.r@0 >> 63u) * 18446744073709551615ull >> 1u ^ ~ shared.r@0)) >> 63u) * 18446744073709551615ull >> 1u ^ (s + (1ull << (s - 64u) - 1u)) + (($$RET45 << m) + ((~ shared.r@0 >> 63u) * 18446744073709551615ull >> 1u ^ ~ shared.r@0));
   113 |    $$PARM.this0 = this;
            $$PARM.r1 = ~ (((s + (1ull << (s - 64u) - 1u)) + (($$RET45 << m) + ((~ shared.r@0 >> 63u) * 18446744073709551615ull >> 1u ^ ~ shared.r@0)) >> 63u) * 18446744073709551615ull >> 1u ^ (s + (1ull << (s - 64u) - 1u)) + (($$RET45 << m) + ((~ shared.r@0 >> 63u) * 18446744073709551615ull >> 1u ^ ~ shared.r@0)));
    87 |    shared.r@0 = ~ (((s + (1ull << (s - 64u) - 1u)) + (($$RET45 << m) + ((~ shared.r@0 >> 63u) * 18446744073709551615ull >> 1u ^ ~ shared.r@0)) >> 63u) * 18446744073709551615ull >> 1u ^ (s + (1ull << (s - 64u) - 1u)) + (($$RET45 << m) + ((~ shared.r@0 >> 63u) * 18446744073709551615ull >> 1u ^ ~ shared.r@0)));
    88 |    $$IRET0 = shared.d@0;
   113 |    $$RET68 = shared.d@0;
   114 |    $$IRET2 = shared.d@0;
    55 |    $$RET46 = shared.d@0;
    56 |    rstr = shared.d@0;
            return rstr;
    57 |  lab_1:
    58 |    if (!(s < 64u)) goto lab_9;
    60 |    __611 = *((char * *)((char *)this + 8));
            __610 = 63u - s;
     4 |    s = 0ull;
     5 |    m = 0u;
     6 |    if (!1) goto lab_13;
            $$CIV57 = 0ll;
            do {   /* id=1 guarded */ /* ~11 */ 
              /* region = 21 */
              /* bump-normalized */
     7 |      if (!(__610 > 16u)) goto lab_14;
     3 |      $$RET47 = (unsigned long long) RCdecoder::decode_shift(unsigned int)(__611,16u);
     8 |      s = s + ($$RET47 << m);
     9 |      m = m + 16u;
    10 |      __610 = __610 - 16u;
    11 |    lab_14:
     6 |      $$CIV57 = $$CIV57 + 1ll;
            } while ((unsigned long long) $$CIV57 < 3ull);    /* ~11 */
          lab_13:
    12 |    $$RET48 = (unsigned long long) RCdecoder::decode_shift(unsigned int)(__611,__610);
    61 |    $$PARM.thisE = this;
            $$PARM.dF = pred;
   100 |    $$PARM.this8 = this;
            $$PARM.d9 = pred;
    71 |    shared.d@0 = pred;
    72 |    $$IRET4 = shared.r@0;
   100 |    r = shared.r@0;
   104 |    $$IRET7 = (~ shared.r@0 >> 63u) * 18446744073709551615ull >> 1u ^ ~ shared.r@0;
    61 |    p = (~ shared.r@0 >> 63u) * 18446744073709551615ull >> 1u ^ ~ shared.r@0;
    62 |    $$PARM.this6 = this;
            $$PARM.r7 = ((~ shared.r@0 >> 63u) * 18446744073709551615ull >> 1u ^ ~ shared.r@0) - (($$RET48 << m) + ((1ull << 63u - s) + s));
   111 |    $$PARM.r7 = (((~ shared.r@0 >> 63u) * 18446744073709551615ull >> 1u ^ ~ shared.r@0) - (($$RET48 << m) + ((1ull << 63u - s) + s)) >> 63u) * 18446744073709551615ull >> 1u ^ ((~ shared.r@0 >> 63u) * 18446744073709551615ull >> 1u ^ ~ shared.r@0) - (($$RET48 << m) + ((1ull << 63u - s) + s));
   113 |    $$PARM.this0 = this;
            $$PARM.r1 = ~ ((((~ shared.r@0 >> 63u) * 18446744073709551615ull >> 1u ^ ~ shared.r@0) - (($$RET48 << m) + ((1ull << 63u - s) + s)) >> 63u) * 18446744073709551615ull >> 1u ^ ((~ shared.r@0 >> 63u) * 18446744073709551615ull >> 1u ^ ~ shared.r@0) - (($$RET48 << m) + ((1ull << 63u - s) + s)));
    87 |    shared.r@0 = ~ ((((~ shared.r@0 >> 63u) * 18446744073709551615ull >> 1u ^ ~ shared.r@0) - (($$RET48 << m) + ((1ull << 63u - s) + s)) >> 63u) * 18446744073709551615ull >> 1u ^ ((~ shared.r@0 >> 63u) * 18446744073709551615ull >> 1u ^ ~ shared.r@0) - (($$RET48 << m) + ((1ull << 63u - s) + s)));
    88 |    $$IRET0 = shared.d@0;
   113 |    $$RET68 = shared.d@0;
   114 |    $$IRET3 = shared.d@0;
    62 |    $$RET49 = shared.d@0;
    63 |    rstr = shared.d@0;
            return rstr;
    64 |  lab_9:
    66 |    $$PARM.this10 = this;
            $$PARM.d11 = pred;
   121 |    $$PARM.thisA = this;
            $$PARM.dB = pred;
    71 |    shared.d@0 = pred;
    72 |    $$IRET5 = shared.r@0;
   121 |    r = shared.r@0;
   123 |    $$PARM.this2 = this;
            $$PARM.r3 = shared.r@0;
    87 |    shared.r@0 = shared.r@0;
    88 |    $$IRET1 = shared.d@0;
   123 |    $$RET69 = shared.d@0;
   124 |    $$IRET8 = shared.d@0;
    66 |    $$RET4A = shared.d@0;
            rstr = shared.d@0;
            return rstr;
    67 |  } /* function */ 


    19 |  float PCdecoder<float, PCmap<float, 8u, void>, false>::decode(float, unsigned int)(PCdecoder<float,PCmap<float,8,void>,0> *this, float pred, unsigned int context)
    20 |  {
    23 |    $$PARM.this84 = this;
            $$PARM.d85 = pred;
    37 |    $$PARM.this82 = $$PARM.this84;
            $$PARM.d83 = $$PARM.d85;
     8 |    shared.d@0 = $$PARM.d83;
     9 |    $$IRET41 = shared.r@0;
    37 |    r = $$IRET41;
    41 |    $$IRET42 = (~ r >> 31) * 4294967295u >> 25u ^ ~ r >> 24u;
    23 |    p = $$IRET42;
            $$RET4B = RCdecoder::decode(RCmodel*)(*((char * *)((char *)this + 8)),((char * *)(*((char * *)((char *)this + 16))))[(long long) context]);
    25 |    $$PARM.this80 = this;
            $$PARM.r81 = ($$RET4B + p) - 255u;
    48 |    $$PARM.r81 = ($$PARM.r81 >> 7u) * 4294967295u >> 25u ^ $$PARM.r81;
    50 |    $$PARM.this7E = $$PARM.this80;
            $$PARM.r7F = ~ $$PARM.r81 << 24u;
    24 |    shared.r@0 = $$PARM.r7F;
    25 |    $$IRET3F = shared.d@0;
    50 |    $$RET6A = $$IRET3F;
    51 |    $$IRET40 = $$RET6A;
    25 |    $$RET4C = $$IRET40;
    26 |    rstr = $$RET4C;
            return rstr;
    27 |  } /* function */ 


    11 |  char * FRONT<float>::~FRONT()(FRONT<float> *this)
          {
            operator delete[](void*)(*((char * *)((char *)this + 24)))
            rstr = this;
            return rstr;
          } /* function */ 


    47 |  float PCdecoder<float, PCmap<float, 16u, void>, true>::decode(float, unsigned int)(PCdecoder<float,PCmap<float,16,void>,1> *this, float pred, unsigned int context)
    48 |  {
    50 |    s = RCdecoder::decode(RCmodel*)(*((char * *)((char *)this + 8)),((char * *)(*((char * *)((char *)this + 16))))[(long long) context]);
    51 |    if (!(s > 16u)) goto lab_1;
    53 |    __617 = *((char * *)((char *)this + 8));
            __616 = (s - 16u) - 1u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_5;
            $$CIV58 = 0ll;
            do {   /* id=2 guarded */ /* ~3 */ 
              /* region = 20 */
              /* bump-normalized */
     7 |      if (!(__616 > 16u)) goto lab_6;
     3 |      $$RET4D = RCdecoder::decode_shift(unsigned int)(__617,16u);
     8 |      s = s + ($$RET4D << m);
     9 |      m = m + 16u;
    10 |      __616 = __616 - 16u;
    11 |    lab_6:
     6 |      $$CIV58 = $$CIV58 + 1ll;
            } while ((unsigned long long) $$CIV58 < 1ull);    /* ~3 */
          lab_5:
    12 |    $$RET4E = RCdecoder::decode_shift(unsigned int)(__617,__616);
    54 |    $$PARM.this78 = this;
            $$PARM.d79 = pred;
    37 |    $$PARM.this74 = this;
            $$PARM.d75 = pred;
     8 |    shared.d@0 = pred;
     9 |    $$IRET3A = shared.r@0;
    37 |    r = shared.r@0;
    41 |    $$IRET3C = (~ shared.r@0 >> 31) * 4294967295u >> 17u ^ ~ shared.r@0 >> 16u;
    54 |    p = (~ shared.r@0 >> 31) * 4294967295u >> 17u ^ ~ shared.r@0 >> 16u;
    55 |    $$PARM.this70 = this;
            $$PARM.r71 = (s + (1u << (s - 16u) - 1u)) + (($$RET4E << m) + ((~ shared.r@0 >> 31) * 4294967295u >> 17u ^ ~ shared.r@0 >> 16u));
    48 |    $$PARM.r71 = ((s + (1u << (s - 16u) - 1u)) + (($$RET4E << m) + ((~ shared.r@0 >> 31) * 4294967295u >> 17u ^ ~ shared.r@0 >> 16u)) >> 15u) * 4294967295u >> 17u ^ (s + (1u << (s - 16u) - 1u)) + (($$RET4E << m) + ((~ shared.r@0 >> 31) * 4294967295u >> 17u ^ ~ shared.r@0 >> 16u));
    50 |    $$PARM.this6C = this;
            $$PARM.r6D = ~ (((s + (1u << (s - 16u) - 1u)) + (($$RET4E << m) + ((~ shared.r@0 >> 31) * 4294967295u >> 17u ^ ~ shared.r@0 >> 16u)) >> 15u) * 4294967295u >> 17u ^ (s + (1u << (s - 16u) - 1u)) + (($$RET4E << m) + ((~ shared.r@0 >> 31) * 4294967295u >> 17u ^ ~ shared.r@0 >> 16u))) << 16u;
    24 |    shared.r@0 = ~ (((s + (1u << (s - 16u) - 1u)) + (($$RET4E << m) + ((~ shared.r@0 >> 31) * 4294967295u >> 17u ^ ~ shared.r@0 >> 16u)) >> 15u) * 4294967295u >> 17u ^ (s + (1u << (s - 16u) - 1u)) + (($$RET4E << m) + ((~ shared.r@0 >> 31) * 4294967295u >> 17u ^ ~ shared.r@0 >> 16u))) << 16u;
    25 |    $$IRET36 = shared.d@0;
    50 |    $$RET6B = shared.d@0;
    51 |    $$IRET38 = shared.d@0;
    55 |    $$RET4F = shared.d@0;
    56 |    rstr = shared.d@0;
            return rstr;
    57 |  lab_1:
    58 |    if (!(s < 16u)) goto lab_9;
    60 |    __621 = *((char * *)((char *)this + 8));
            __620 = 15u - s;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_13;
            $$CIV59 = 0ll;
            do {   /* id=1 guarded */ /* ~11 */ 
              /* region = 21 */
              /* bump-normalized */
     7 |      if (!(__620 > 16u)) goto lab_14;
     3 |      $$RET50 = RCdecoder::decode_shift(unsigned int)(__621,16u);
     8 |      s = s + ($$RET50 << m);
     9 |      m = m + 16u;
    10 |      __620 = __620 - 16u;
    11 |    lab_14:
     6 |      $$CIV59 = $$CIV59 + 1ll;
            } while ((unsigned long long) $$CIV59 < 1ull);    /* ~11 */
          lab_13:
    12 |    $$RET51 = RCdecoder::decode_shift(unsigned int)(__621,__620);
    61 |    $$PARM.this7A = this;
            $$PARM.d7B = pred;
    37 |    $$PARM.this74 = this;
            $$PARM.d75 = pred;
     8 |    shared.d@0 = pred;
     9 |    $$IRET3A = shared.r@0;
    37 |    r = shared.r@0;
    41 |    $$IRET3D = (~ shared.r@0 >> 31) * 4294967295u >> 17u ^ ~ shared.r@0 >> 16u;
    61 |    p = (~ shared.r@0 >> 31) * 4294967295u >> 17u ^ ~ shared.r@0 >> 16u;
    62 |    $$PARM.this72 = this;
            $$PARM.r73 = ((~ shared.r@0 >> 31) * 4294967295u >> 17u ^ ~ shared.r@0 >> 16u) - (($$RET51 << m) + ((1u << 15u - s) + s));
    48 |    $$PARM.r73 = (((~ shared.r@0 >> 31) * 4294967295u >> 17u ^ ~ shared.r@0 >> 16u) - (($$RET51 << m) + ((1u << 15u - s) + s)) >> 15u) * 4294967295u >> 17u ^ ((~ shared.r@0 >> 31) * 4294967295u >> 17u ^ ~ shared.r@0 >> 16u) - (($$RET51 << m) + ((1u << 15u - s) + s));
    50 |    $$PARM.this6C = this;
            $$PARM.r6D = ~ ((((~ shared.r@0 >> 31) * 4294967295u >> 17u ^ ~ shared.r@0 >> 16u) - (($$RET51 << m) + ((1u << 15u - s) + s)) >> 15u) * 4294967295u >> 17u ^ ((~ shared.r@0 >> 31) * 4294967295u >> 17u ^ ~ shared.r@0 >> 16u) - (($$RET51 << m) + ((1u << 15u - s) + s))) << 16u;
    24 |    shared.r@0 = ~ ((((~ shared.r@0 >> 31) * 4294967295u >> 17u ^ ~ shared.r@0 >> 16u) - (($$RET51 << m) + ((1u << 15u - s) + s)) >> 15u) * 4294967295u >> 17u ^ ((~ shared.r@0 >> 31) * 4294967295u >> 17u ^ ~ shared.r@0 >> 16u) - (($$RET51 << m) + ((1u << 15u - s) + s))) << 16u;
    25 |    $$IRET36 = shared.d@0;
    50 |    $$RET6B = shared.d@0;
    51 |    $$IRET39 = shared.d@0;
    62 |    $$RET52 = shared.d@0;
    63 |    rstr = shared.d@0;
            return rstr;
    64 |  lab_9:
    66 |    $$PARM.this7C = this;
            $$PARM.d7D = pred;
    58 |    $$PARM.this76 = this;
            $$PARM.d77 = pred;
     8 |    shared.d@0 = pred;
     9 |    $$IRET3B = shared.r@0;
    58 |    r = shared.r@0;
    60 |    $$PARM.this6E = this;
            $$PARM.r6F = (shared.r@0 >> 16u) << 16u;
    24 |    shared.r@0 = (shared.r@0 >> 16u) << 16u;
    25 |    $$IRET37 = shared.d@0;
    60 |    $$RET6C = shared.d@0;
    61 |    $$IRET3E = shared.d@0;
    66 |    $$RET53 = shared.d@0;
            rstr = shared.d@0;
            return rstr;
    67 |  } /* function */ 


    47 |  float PCdecoder<float, PCmap<float, 24u, void>, true>::decode(float, unsigned int)(PCdecoder<float,PCmap<float,24,void>,1> *this, float pred, unsigned int context)
    48 |  {
    50 |    s = RCdecoder::decode(RCmodel*)(*((char * *)((char *)this + 8)),((char * *)(*((char * *)((char *)this + 16))))[(long long) context]);
    51 |    if (!(s > 24u)) goto lab_1;
    53 |    __627 = *((char * *)((char *)this + 8));
            __626 = (s - 24u) - 1u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_5;
            $$CIV5A = 0ll;
            do {   /* id=2 guarded */ /* ~3 */ 
              /* region = 20 */
              /* bump-normalized */
     7 |      if (!(__626 > 16u)) goto lab_6;
     3 |      $$RET54 = RCdecoder::decode_shift(unsigned int)(__627,16u);
     8 |      s = s + ($$RET54 << m);
     9 |      m = m + 16u;
    10 |      __626 = __626 - 16u;
    11 |    lab_6:
     6 |      $$CIV5A = $$CIV5A + 1ll;
            } while ((unsigned long long) $$CIV5A < 1ull);    /* ~3 */
          lab_5:
    12 |    $$RET55 = RCdecoder::decode_shift(unsigned int)(__627,__626);
    54 |    $$PARM.this66 = this;
            $$PARM.d67 = pred;
    37 |    $$PARM.this62 = this;
            $$PARM.d63 = pred;
     8 |    shared.d@0 = pred;
     9 |    $$IRET31 = shared.r@0;
    37 |    r = shared.r@0;
    41 |    $$IRET33 = (~ shared.r@0 >> 31) * 4294967295u >> 9u ^ ~ shared.r@0 >> 8u;
    54 |    p = (~ shared.r@0 >> 31) * 4294967295u >> 9u ^ ~ shared.r@0 >> 8u;
    55 |    $$PARM.this5E = this;
            $$PARM.r5F = (s + (1u << (s - 24u) - 1u)) + (($$RET55 << m) + ((~ shared.r@0 >> 31) * 4294967295u >> 9u ^ ~ shared.r@0 >> 8u));
    48 |    $$PARM.r5F = ((s + (1u << (s - 24u) - 1u)) + (($$RET55 << m) + ((~ shared.r@0 >> 31) * 4294967295u >> 9u ^ ~ shared.r@0 >> 8u)) >> 23u) * 4294967295u >> 9u ^ (s + (1u << (s - 24u) - 1u)) + (($$RET55 << m) + ((~ shared.r@0 >> 31) * 4294967295u >> 9u ^ ~ shared.r@0 >> 8u));
    50 |    $$PARM.this5A = this;
            $$PARM.r5B = ~ (((s + (1u << (s - 24u) - 1u)) + (($$RET55 << m) + ((~ shared.r@0 >> 31) * 4294967295u >> 9u ^ ~ shared.r@0 >> 8u)) >> 23u) * 4294967295u >> 9u ^ (s + (1u << (s - 24u) - 1u)) + (($$RET55 << m) + ((~ shared.r@0 >> 31) * 4294967295u >> 9u ^ ~ shared.r@0 >> 8u))) << 8u;
    24 |    shared.r@0 = ~ (((s + (1u << (s - 24u) - 1u)) + (($$RET55 << m) + ((~ shared.r@0 >> 31) * 4294967295u >> 9u ^ ~ shared.r@0 >> 8u)) >> 23u) * 4294967295u >> 9u ^ (s + (1u << (s - 24u) - 1u)) + (($$RET55 << m) + ((~ shared.r@0 >> 31) * 4294967295u >> 9u ^ ~ shared.r@0 >> 8u))) << 8u;
    25 |    $$IRET2D = shared.d@0;
    50 |    $$RET6D = shared.d@0;
    51 |    $$IRET2F = shared.d@0;
    55 |    $$RET56 = shared.d@0;
    56 |    rstr = shared.d@0;
            return rstr;
    57 |  lab_1:
    58 |    if (!(s < 24u)) goto lab_9;
    60 |    __631 = *((char * *)((char *)this + 8));
            __630 = 23u - s;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_13;
            $$CIV5B = 0ll;
            do {   /* id=1 guarded */ /* ~11 */ 
              /* region = 21 */
              /* bump-normalized */
     7 |      if (!(__630 > 16u)) goto lab_14;
     3 |      $$RET57 = RCdecoder::decode_shift(unsigned int)(__631,16u);
     8 |      s = s + ($$RET57 << m);
     9 |      m = m + 16u;
    10 |      __630 = __630 - 16u;
    11 |    lab_14:
     6 |      $$CIV5B = $$CIV5B + 1ll;
            } while ((unsigned long long) $$CIV5B < 1ull);    /* ~11 */
          lab_13:
    12 |    $$RET58 = RCdecoder::decode_shift(unsigned int)(__631,__630);
    61 |    $$PARM.this68 = this;
            $$PARM.d69 = pred;
    37 |    $$PARM.this62 = this;
            $$PARM.d63 = pred;
     8 |    shared.d@0 = pred;
     9 |    $$IRET31 = shared.r@0;
    37 |    r = shared.r@0;
    41 |    $$IRET34 = (~ shared.r@0 >> 31) * 4294967295u >> 9u ^ ~ shared.r@0 >> 8u;
    61 |    p = (~ shared.r@0 >> 31) * 4294967295u >> 9u ^ ~ shared.r@0 >> 8u;
    62 |    $$PARM.this60 = this;
            $$PARM.r61 = ((~ shared.r@0 >> 31) * 4294967295u >> 9u ^ ~ shared.r@0 >> 8u) - (($$RET58 << m) + ((1u << 23u - s) + s));
    48 |    $$PARM.r61 = (((~ shared.r@0 >> 31) * 4294967295u >> 9u ^ ~ shared.r@0 >> 8u) - (($$RET58 << m) + ((1u << 23u - s) + s)) >> 23u) * 4294967295u >> 9u ^ ((~ shared.r@0 >> 31) * 4294967295u >> 9u ^ ~ shared.r@0 >> 8u) - (($$RET58 << m) + ((1u << 23u - s) + s));
    50 |    $$PARM.this5A = this;
            $$PARM.r5B = ~ ((((~ shared.r@0 >> 31) * 4294967295u >> 9u ^ ~ shared.r@0 >> 8u) - (($$RET58 << m) + ((1u << 23u - s) + s)) >> 23u) * 4294967295u >> 9u ^ ((~ shared.r@0 >> 31) * 4294967295u >> 9u ^ ~ shared.r@0 >> 8u) - (($$RET58 << m) + ((1u << 23u - s) + s))) << 8u;
    24 |    shared.r@0 = ~ ((((~ shared.r@0 >> 31) * 4294967295u >> 9u ^ ~ shared.r@0 >> 8u) - (($$RET58 << m) + ((1u << 23u - s) + s)) >> 23u) * 4294967295u >> 9u ^ ((~ shared.r@0 >> 31) * 4294967295u >> 9u ^ ~ shared.r@0 >> 8u) - (($$RET58 << m) + ((1u << 23u - s) + s))) << 8u;
    25 |    $$IRET2D = shared.d@0;
    50 |    $$RET6D = shared.d@0;
    51 |    $$IRET30 = shared.d@0;
    62 |    $$RET59 = shared.d@0;
    63 |    rstr = shared.d@0;
            return rstr;
    64 |  lab_9:
    66 |    $$PARM.this6A = this;
            $$PARM.d6B = pred;
    58 |    $$PARM.this64 = this;
            $$PARM.d65 = pred;
     8 |    shared.d@0 = pred;
     9 |    $$IRET32 = shared.r@0;
    58 |    r = shared.r@0;
    60 |    $$PARM.this5C = this;
            $$PARM.r5D = (shared.r@0 >> 8u) << 8u;
    24 |    shared.r@0 = (shared.r@0 >> 8u) << 8u;
    25 |    $$IRET2E = shared.d@0;
    60 |    $$RET6E = shared.d@0;
    61 |    $$IRET35 = shared.d@0;
    66 |    $$RET5A = shared.d@0;
            rstr = shared.d@0;
            return rstr;
    67 |  } /* function */ 


    47 |  float PCdecoder<float, PCmap<float, 32u, void>, true>::decode(float, unsigned int)(PCdecoder<float,PCmap<float,32,void>,1> *this, float pred, unsigned int context)
    48 |  {
    50 |    s = RCdecoder::decode(RCmodel*)(*((char * *)((char *)this + 8)),((char * *)(*((char * *)((char *)this + 16))))[(long long) context]);
    51 |    if (!(s > 32u)) goto lab_1;
    53 |    __637 = *((char * *)((char *)this + 8));
            __636 = (s - 32u) - 1u;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_5;
            $$CIV5C = 0ll;
            do {   /* id=2 guarded */ /* ~3 */ 
              /* region = 20 */
              /* bump-normalized */
     7 |      if (!(__636 > 16u)) goto lab_6;
     3 |      $$RET5B = RCdecoder::decode_shift(unsigned int)(__637,16u);
     8 |      s = s + ($$RET5B << m);
     9 |      m = m + 16u;
    10 |      __636 = __636 - 16u;
    11 |    lab_6:
     6 |      $$CIV5C = $$CIV5C + 1ll;
            } while ((unsigned long long) $$CIV5C < 1ull);    /* ~3 */
          lab_5:
    12 |    $$RET5C = RCdecoder::decode_shift(unsigned int)(__637,__636);
    54 |    $$PARM.this54 = this;
            $$PARM.d55 = pred;
    37 |    $$PARM.this50 = this;
            $$PARM.d51 = pred;
     8 |    shared.d@0 = pred;
     9 |    $$IRET28 = shared.r@0;
    37 |    r = shared.r@0;
    41 |    $$IRET2A = (~ shared.r@0 >> 31u) * 4294967295u >> 1u ^ ~ shared.r@0;
    54 |    p = (~ shared.r@0 >> 31u) * 4294967295u >> 1u ^ ~ shared.r@0;
    55 |    $$PARM.this4C = this;
            $$PARM.r4D = (s + (1u << (s - 32u) - 1u)) + (($$RET5C << m) + ((~ shared.r@0 >> 31u) * 4294967295u >> 1u ^ ~ shared.r@0));
    48 |    $$PARM.r4D = ((s + (1u << (s - 32u) - 1u)) + (($$RET5C << m) + ((~ shared.r@0 >> 31u) * 4294967295u >> 1u ^ ~ shared.r@0)) >> 31u) * 4294967295u >> 1u ^ (s + (1u << (s - 32u) - 1u)) + (($$RET5C << m) + ((~ shared.r@0 >> 31u) * 4294967295u >> 1u ^ ~ shared.r@0));
    50 |    $$PARM.this48 = this;
            $$PARM.r49 = ~ (((s + (1u << (s - 32u) - 1u)) + (($$RET5C << m) + ((~ shared.r@0 >> 31u) * 4294967295u >> 1u ^ ~ shared.r@0)) >> 31u) * 4294967295u >> 1u ^ (s + (1u << (s - 32u) - 1u)) + (($$RET5C << m) + ((~ shared.r@0 >> 31u) * 4294967295u >> 1u ^ ~ shared.r@0)));
    24 |    shared.r@0 = ~ (((s + (1u << (s - 32u) - 1u)) + (($$RET5C << m) + ((~ shared.r@0 >> 31u) * 4294967295u >> 1u ^ ~ shared.r@0)) >> 31u) * 4294967295u >> 1u ^ (s + (1u << (s - 32u) - 1u)) + (($$RET5C << m) + ((~ shared.r@0 >> 31u) * 4294967295u >> 1u ^ ~ shared.r@0)));
    25 |    $$IRET24 = shared.d@0;
    50 |    $$RET6F = shared.d@0;
    51 |    $$IRET26 = shared.d@0;
    55 |    $$RET5D = shared.d@0;
    56 |    rstr = shared.d@0;
            return rstr;
    57 |  lab_1:
    58 |    if (!(s < 32u)) goto lab_9;
    60 |    __641 = *((char * *)((char *)this + 8));
            __640 = 31u - s;
     4 |    s = 0u;
     5 |    m = 0u;
     6 |    if (!1) goto lab_13;
            $$CIV5D = 0ll;
            do {   /* id=1 guarded */ /* ~11 */ 
              /* region = 21 */
              /* bump-normalized */
     7 |      if (!(__640 > 16u)) goto lab_14;
     3 |      $$RET5E = RCdecoder::decode_shift(unsigned int)(__641,16u);
     8 |      s = s + ($$RET5E << m);
     9 |      m = m + 16u;
    10 |      __640 = __640 - 16u;
    11 |    lab_14:
     6 |      $$CIV5D = $$CIV5D + 1ll;
            } while ((unsigned long long) $$CIV5D < 1ull);    /* ~11 */
          lab_13:
    12 |    $$RET5F = RCdecoder::decode_shift(unsigned int)(__641,__640);
    61 |    $$PARM.this56 = this;
            $$PARM.d57 = pred;
    37 |    $$PARM.this50 = this;
            $$PARM.d51 = pred;
     8 |    shared.d@0 = pred;
     9 |    $$IRET28 = shared.r@0;
    37 |    r = shared.r@0;
    41 |    $$IRET2B = (~ shared.r@0 >> 31u) * 4294967295u >> 1u ^ ~ shared.r@0;
    61 |    p = (~ shared.r@0 >> 31u) * 4294967295u >> 1u ^ ~ shared.r@0;
    62 |    $$PARM.this4E = this;
            $$PARM.r4F = ((~ shared.r@0 >> 31u) * 4294967295u >> 1u ^ ~ shared.r@0) - (($$RET5F << m) + ((1u << 31u - s) + s));
    48 |    $$PARM.r4F = (((~ shared.r@0 >> 31u) * 4294967295u >> 1u ^ ~ shared.r@0) - (($$RET5F << m) + ((1u << 31u - s) + s)) >> 31u) * 4294967295u >> 1u ^ ((~ shared.r@0 >> 31u) * 4294967295u >> 1u ^ ~ shared.r@0) - (($$RET5F << m) + ((1u << 31u - s) + s));
    50 |    $$PARM.this48 = this;
            $$PARM.r49 = ~ ((((~ shared.r@0 >> 31u) * 4294967295u >> 1u ^ ~ shared.r@0) - (($$RET5F << m) + ((1u << 31u - s) + s)) >> 31u) * 4294967295u >> 1u ^ ((~ shared.r@0 >> 31u) * 4294967295u >> 1u ^ ~ shared.r@0) - (($$RET5F << m) + ((1u << 31u - s) + s)));
    24 |    shared.r@0 = ~ ((((~ shared.r@0 >> 31u) * 4294967295u >> 1u ^ ~ shared.r@0) - (($$RET5F << m) + ((1u << 31u - s) + s)) >> 31u) * 4294967295u >> 1u ^ ((~ shared.r@0 >> 31u) * 4294967295u >> 1u ^ ~ shared.r@0) - (($$RET5F << m) + ((1u << 31u - s) + s)));
    25 |    $$IRET24 = shared.d@0;
    50 |    $$RET6F = shared.d@0;
    51 |    $$IRET27 = shared.d@0;
    62 |    $$RET60 = shared.d@0;
    63 |    rstr = shared.d@0;
            return rstr;
    64 |  lab_9:
    66 |    $$PARM.this58 = this;
            $$PARM.d59 = pred;
    58 |    $$PARM.this52 = this;
            $$PARM.d53 = pred;
     8 |    shared.d@0 = pred;
     9 |    $$IRET29 = shared.r@0;
    58 |    r = shared.r@0;
    60 |    $$PARM.this4A = this;
            $$PARM.r4B = shared.r@0;
    24 |    shared.r@0 = shared.r@0;
    25 |    $$IRET25 = shared.d@0;
    60 |    $$RET70 = shared.d@0;
    61 |    $$IRET2C = shared.d@0;
    66 |    $$RET61 = shared.d@0;
            rstr = shared.d@0;
            return rstr;
    67 |  } /* function */ 


    98 |  unsigned long long PCmap<double, 16u, void>::forward(double) const(char * this, double d)
    99 |  {
   100 |    $$PARM.this3E = this;
            $$PARM.d3F = d;
    71 |    shared.d@0 = $$PARM.d3F;
    72 |    $$IRET1F = shared.r@0;
   100 |    r = $$IRET1F;
   104 |    rstr = (~ r >> 63) * 18446744073709551615ull >> 49u ^ ~ r >> 48u;
            return rstr;
   105 |  } /* function */ 


   109 |  double PCmap<double, 16u, void>::inverse(unsigned long long) const(char * this, unsigned long long r)
   110 |  {
   111 |    r = (r >> 15u) * 18446744073709551615ull >> 49u ^ r;
   113 |    $$PARM.this36 = this;
            $$PARM.r37 = ~ r << 48u;
    87 |    shared.r@0 = $$PARM.r37;
    88 |    $$IRET1B = shared.d@0;
   113 |    $$RET62 = $$IRET1B;
   114 |    rstr = $$RET62;
            return rstr;
   115 |  } /* function */ 


   119 |  double PCmap<double, 16u, void>::identity(double) const(char * this, double d)
   120 |  {
   121 |    $$PARM.this40 = this;
            $$PARM.d41 = d;
    71 |    shared.d@0 = $$PARM.d41;
    72 |    $$IRET20 = shared.r@0;
   121 |    r = $$IRET20;
   123 |    $$PARM.this38 = this;
            $$PARM.r39 = (r >> 48u) << 48u;
    87 |    shared.r@0 = $$PARM.r39;
    88 |    $$IRET1C = shared.d@0;
   123 |    $$RET63 = $$IRET1C;
   124 |    rstr = $$RET63;
            return rstr;
   125 |  } /* function */ 


    98 |  unsigned long long PCmap<double, 32u, void>::forward(double) const(char * this, double d)
    99 |  {
   100 |    $$PARM.this2C = this;
            $$PARM.d2D = d;
    71 |    shared.d@0 = $$PARM.d2D;
    72 |    $$IRET16 = shared.r@0;
   100 |    r = $$IRET16;
   104 |    rstr = (~ r >> 63) * 18446744073709551615ull >> 33u ^ ~ r >> 32u;
            return rstr;
   105 |  } /* function */ 


   109 |  double PCmap<double, 32u, void>::inverse(unsigned long long) const(char * this, unsigned long long r)
   110 |  {
   111 |    r = (r >> 31u) * 18446744073709551615ull >> 33u ^ r;
   113 |    $$PARM.this24 = this;
            $$PARM.r25 = ~ r << 32u;
    87 |    shared.r@0 = $$PARM.r25;
    88 |    $$IRET12 = shared.d@0;
   113 |    $$RET64 = $$IRET12;
   114 |    rstr = $$RET64;
            return rstr;
   115 |  } /* function */ 


   119 |  double PCmap<double, 32u, void>::identity(double) const(char * this, double d)
   120 |  {
   121 |    $$PARM.this2E = this;
            $$PARM.d2F = d;
    71 |    shared.d@0 = $$PARM.d2F;
    72 |    $$IRET17 = shared.r@0;
   121 |    r = $$IRET17;
   123 |    $$PARM.this26 = this;
            $$PARM.r27 = (r >> 32u) << 32u;
    87 |    shared.r@0 = $$PARM.r27;
    88 |    $$IRET13 = shared.d@0;
   123 |    $$RET65 = $$IRET13;
   124 |    rstr = $$RET65;
            return rstr;
   125 |  } /* function */ 


    98 |  unsigned long long PCmap<double, 48u, void>::forward(double) const(char * this, double d)
    99 |  {
   100 |    $$PARM.this1A = this;
            $$PARM.d1B = d;
    71 |    shared.d@0 = $$PARM.d1B;
    72 |    $$IRETD = shared.r@0;
   100 |    r = $$IRETD;
   104 |    rstr = (~ r >> 63) * 18446744073709551615ull >> 17u ^ ~ r >> 16u;
            return rstr;
   105 |  } /* function */ 


   109 |  double PCmap<double, 48u, void>::inverse(unsigned long long) const(char * this, unsigned long long r)
   110 |  {
   111 |    r = (r >> 47u) * 18446744073709551615ull >> 17u ^ r;
   113 |    $$PARM.this12 = this;
            $$PARM.r13 = ~ r << 16u;
    87 |    shared.r@0 = $$PARM.r13;
    88 |    $$IRET9 = shared.d@0;
   113 |    $$RET66 = $$IRET9;
   114 |    rstr = $$RET66;
            return rstr;
   115 |  } /* function */ 


   119 |  double PCmap<double, 48u, void>::identity(double) const(char * this, double d)
   120 |  {
   121 |    $$PARM.this1C = this;
            $$PARM.d1D = d;
    71 |    shared.d@0 = $$PARM.d1D;
    72 |    $$IRETE = shared.r@0;
   121 |    r = $$IRETE;
   123 |    $$PARM.this14 = this;
            $$PARM.r15 = (r >> 16u) << 16u;
    87 |    shared.r@0 = $$PARM.r15;
    88 |    $$IRETA = shared.d@0;
   123 |    $$RET67 = $$IRETA;
   124 |    rstr = $$RET67;
            return rstr;
   125 |  } /* function */ 


    98 |  unsigned long long PCmap<double, 64u, void>::forward(double) const(char * this, double d)
    99 |  {
   100 |    $$PARM.this8 = this;
            $$PARM.d9 = d;
    71 |    shared.d@0 = $$PARM.d9;
    72 |    $$IRET4 = shared.r@0;
   100 |    r = $$IRET4;
   104 |    rstr = (~ r >> 63u) * 18446744073709551615ull >> 1u ^ ~ r;
            return rstr;
   105 |  } /* function */ 


   109 |  double PCmap<double, 64u, void>::inverse(unsigned long long) const(char * this, unsigned long long r)
   110 |  {
   111 |    r = (r >> 63u) * 18446744073709551615ull >> 1u ^ r;
   113 |    $$PARM.this0 = this;
            $$PARM.r1 = ~ r;
    87 |    shared.r@0 = $$PARM.r1;
    88 |    $$IRET0 = shared.d@0;
   113 |    $$RET68 = $$IRET0;
   114 |    rstr = $$RET68;
            return rstr;
   115 |  } /* function */ 


   119 |  double PCmap<double, 64u, void>::identity(double) const(char * this, double d)
   120 |  {
   121 |    $$PARM.thisA = this;
            $$PARM.dB = d;
    71 |    shared.d@0 = $$PARM.dB;
    72 |    $$IRET5 = shared.r@0;
   121 |    r = $$IRET5;
   123 |    $$PARM.this2 = this;
            $$PARM.r3 = r;
    87 |    shared.r@0 = $$PARM.r3;
    88 |    $$IRET1 = shared.d@0;
   123 |    $$RET69 = $$IRET1;
   124 |    rstr = $$RET69;
            return rstr;
   125 |  } /* function */ 


    35 |  unsigned int PCmap<float, 8u, void>::forward(float) const(char * this, float d)
    36 |  {
    37 |    $$PARM.this82 = this;
            $$PARM.d83 = d;
     8 |    shared.d@0 = $$PARM.d83;
     9 |    $$IRET41 = shared.r@0;
    37 |    r = $$IRET41;
    41 |    rstr = (~ r >> 31) * 4294967295u >> 25u ^ ~ r >> 24u;
            return rstr;
    42 |  } /* function */ 


    46 |  float PCmap<float, 8u, void>::inverse(unsigned int) const(char * this, unsigned int r)
    47 |  {
    48 |    r = (r >> 7u) * 4294967295u >> 25u ^ r;
    50 |    $$PARM.this7E = this;
            $$PARM.r7F = ~ r << 24u;
    24 |    shared.r@0 = $$PARM.r7F;
    25 |    $$IRET3F = shared.d@0;
    50 |    $$RET6A = $$IRET3F;
    51 |    rstr = $$RET6A;
            return rstr;
    52 |  } /* function */ 


    35 |  unsigned int PCmap<float, 16u, void>::forward(float) const(char * this, float d)
    36 |  {
    37 |    $$PARM.this74 = this;
            $$PARM.d75 = d;
     8 |    shared.d@0 = $$PARM.d75;
     9 |    $$IRET3A = shared.r@0;
    37 |    r = $$IRET3A;
    41 |    rstr = (~ r >> 31) * 4294967295u >> 17u ^ ~ r >> 16u;
            return rstr;
    42 |  } /* function */ 


    46 |  float PCmap<float, 16u, void>::inverse(unsigned int) const(char * this, unsigned int r)
    47 |  {
    48 |    r = (r >> 15u) * 4294967295u >> 17u ^ r;
    50 |    $$PARM.this6C = this;
            $$PARM.r6D = ~ r << 16u;
    24 |    shared.r@0 = $$PARM.r6D;
    25 |    $$IRET36 = shared.d@0;
    50 |    $$RET6B = $$IRET36;
    51 |    rstr = $$RET6B;
            return rstr;
    52 |  } /* function */ 


    56 |  float PCmap<float, 16u, void>::identity(float) const(char * this, float d)
    57 |  {
    58 |    $$PARM.this76 = this;
            $$PARM.d77 = d;
     8 |    shared.d@0 = $$PARM.d77;
     9 |    $$IRET3B = shared.r@0;
    58 |    r = $$IRET3B;
    60 |    $$PARM.this6E = this;
            $$PARM.r6F = (r >> 16u) << 16u;
    24 |    shared.r@0 = $$PARM.r6F;
    25 |    $$IRET37 = shared.d@0;
    60 |    $$RET6C = $$IRET37;
    61 |    rstr = $$RET6C;
            return rstr;
    62 |  } /* function */ 


    35 |  unsigned int PCmap<float, 24u, void>::forward(float) const(char * this, float d)
    36 |  {
    37 |    $$PARM.this62 = this;
            $$PARM.d63 = d;
     8 |    shared.d@0 = $$PARM.d63;
     9 |    $$IRET31 = shared.r@0;
    37 |    r = $$IRET31;
    41 |    rstr = (~ r >> 31) * 4294967295u >> 9u ^ ~ r >> 8u;
            return rstr;
    42 |  } /* function */ 


    46 |  float PCmap<float, 24u, void>::inverse(unsigned int) const(char * this, unsigned int r)
    47 |  {
    48 |    r = (r >> 23u) * 4294967295u >> 9u ^ r;
    50 |    $$PARM.this5A = this;
            $$PARM.r5B = ~ r << 8u;
    24 |    shared.r@0 = $$PARM.r5B;
    25 |    $$IRET2D = shared.d@0;
    50 |    $$RET6D = $$IRET2D;
    51 |    rstr = $$RET6D;
            return rstr;
    52 |  } /* function */ 


    56 |  float PCmap<float, 24u, void>::identity(float) const(char * this, float d)
    57 |  {
    58 |    $$PARM.this64 = this;
            $$PARM.d65 = d;
     8 |    shared.d@0 = $$PARM.d65;
     9 |    $$IRET32 = shared.r@0;
    58 |    r = $$IRET32;
    60 |    $$PARM.this5C = this;
            $$PARM.r5D = (r >> 8u) << 8u;
    24 |    shared.r@0 = $$PARM.r5D;
    25 |    $$IRET2E = shared.d@0;
    60 |    $$RET6E = $$IRET2E;
    61 |    rstr = $$RET6E;
            return rstr;
    62 |  } /* function */ 


    35 |  unsigned int PCmap<float, 32u, void>::forward(float) const(char * this, float d)
    36 |  {
    37 |    $$PARM.this50 = this;
            $$PARM.d51 = d;
     8 |    shared.d@0 = $$PARM.d51;
     9 |    $$IRET28 = shared.r@0;
    37 |    r = $$IRET28;
    41 |    rstr = (~ r >> 31u) * 4294967295u >> 1u ^ ~ r;
            return rstr;
    42 |  } /* function */ 


    46 |  float PCmap<float, 32u, void>::inverse(unsigned int) const(char * this, unsigned int r)
    47 |  {
    48 |    r = (r >> 31u) * 4294967295u >> 1u ^ r;
    50 |    $$PARM.this48 = this;
            $$PARM.r49 = ~ r;
    24 |    shared.r@0 = $$PARM.r49;
    25 |    $$IRET24 = shared.d@0;
    50 |    $$RET6F = $$IRET24;
    51 |    rstr = $$RET6F;
            return rstr;
    52 |  } /* function */ 


    56 |  float PCmap<float, 32u, void>::identity(float) const(char * this, float d)
    57 |  {
    58 |    $$PARM.this52 = this;
            $$PARM.d53 = d;
     8 |    shared.d@0 = $$PARM.d53;
     9 |    $$IRET29 = shared.r@0;
    58 |    r = $$IRET29;
    60 |    $$PARM.this4A = this;
            $$PARM.r4B = r;
    24 |    shared.r@0 = $$PARM.r4B;
    25 |    $$IRET25 = shared.d@0;
    60 |    $$RET70 = $$IRET25;
    61 |    rstr = $$RET70;
            return rstr;
    62 |  } /* function */ 


    66 |  unsigned long long PCmap<double, 16u, void>::fcast(double) const(char * this, double d)
    67 |  {
    71 |    shared.d@0 = d;
    72 |    rstr = shared.r@0;
            return rstr;
    78 |  } /* function */ 


    82 |  double PCmap<double, 16u, void>::icast(unsigned long long) const(char * this, unsigned long long r)
    83 |  {
    87 |    shared.r@0 = r;
    88 |    rstr = shared.d@0;
            return rstr;
    94 |  } /* function */ 


    66 |  unsigned long long PCmap<double, 32u, void>::fcast(double) const(char * this, double d)
    67 |  {
    71 |    shared.d@0 = d;
    72 |    rstr = shared.r@0;
            return rstr;
    78 |  } /* function */ 


    82 |  double PCmap<double, 32u, void>::icast(unsigned long long) const(char * this, unsigned long long r)
    83 |  {
    87 |    shared.r@0 = r;
    88 |    rstr = shared.d@0;
            return rstr;
    94 |  } /* function */ 


    66 |  unsigned long long PCmap<double, 48u, void>::fcast(double) const(char * this, double d)
    67 |  {
    71 |    shared.d@0 = d;
    72 |    rstr = shared.r@0;
            return rstr;
    78 |  } /* function */ 


    82 |  double PCmap<double, 48u, void>::icast(unsigned long long) const(char * this, unsigned long long r)
    83 |  {
    87 |    shared.r@0 = r;
    88 |    rstr = shared.d@0;
            return rstr;
    94 |  } /* function */ 


    66 |  unsigned long long PCmap<double, 64u, void>::fcast(double) const(char * this, double d)
    67 |  {
    71 |    shared.d@0 = d;
    72 |    rstr = shared.r@0;
            return rstr;
    78 |  } /* function */ 


    82 |  double PCmap<double, 64u, void>::icast(unsigned long long) const(char * this, unsigned long long r)
    83 |  {
    87 |    shared.r@0 = r;
    88 |    rstr = shared.d@0;
            return rstr;
    94 |  } /* function */ 


     3 |  unsigned int PCmap<float, 8u, void>::fcast(float) const(char * this, float d)
     4 |  {
     8 |    shared.d@0 = d;
     9 |    rstr = shared.r@0;
            return rstr;
    15 |  } /* function */ 


    19 |  float PCmap<float, 8u, void>::icast(unsigned int) const(char * this, unsigned int r)
    20 |  {
    24 |    shared.r@0 = r;
    25 |    rstr = shared.d@0;
            return rstr;
    31 |  } /* function */ 


     3 |  unsigned int PCmap<float, 16u, void>::fcast(float) const(char * this, float d)
     4 |  {
     8 |    shared.d@0 = d;
     9 |    rstr = shared.r@0;
            return rstr;
    15 |  } /* function */ 


    19 |  float PCmap<float, 16u, void>::icast(unsigned int) const(char * this, unsigned int r)
    20 |  {
    24 |    shared.r@0 = r;
    25 |    rstr = shared.d@0;
            return rstr;
    31 |  } /* function */ 


     3 |  unsigned int PCmap<float, 24u, void>::fcast(float) const(char * this, float d)
     4 |  {
     8 |    shared.d@0 = d;
     9 |    rstr = shared.r@0;
            return rstr;
    15 |  } /* function */ 


    19 |  float PCmap<float, 24u, void>::icast(unsigned int) const(char * this, unsigned int r)
    20 |  {
    24 |    shared.r@0 = r;
    25 |    rstr = shared.d@0;
            return rstr;
    31 |  } /* function */ 


     3 |  unsigned int PCmap<float, 32u, void>::fcast(float) const(char * this, float d)
     4 |  {
     8 |    shared.d@0 = d;
     9 |    rstr = shared.r@0;
            return rstr;
    15 |  } /* function */ 


    19 |  float PCmap<float, 32u, void>::icast(unsigned int) const(char * this, unsigned int r)
    20 |  {
    24 |    shared.r@0 = r;
    25 |    rstr = shared.d@0;
            return rstr;
    31 |  } /* function */ 


          char * RCmemdecoder::~RCmemdecoder()(RCdecoder *this)
          {
            *((char * *)this) = ((char *)&vtable for RCdecoder  + 16ll);
            rstr = this;
            return rstr;
          } /* function */ 


          char * RCfiledecoder::~RCfiledecoder()(RCdecoder *this)
          {
            *((char * *)this) = ((char *)&vtable for RCdecoder  + 16ll);
            rstr = this;
            return rstr;
          } /* function */ 


     9 |  char * RCdecoder::~RCdecoder()(RCdecoder *this)
          {
            *((char * *)this) = ((char *)&vtable for RCdecoder  + 16ll);
            operator delete(void*)(this)
            rstr = this;
            return rstr;
          } /* function */ 


          char * RCfiledecoder::~RCfiledecoder()(RCdecoder *this)
          {
            *((char * *)this) = ((char *)&vtable for RCdecoder  + 16ll);
            operator delete(void*)(this)
            rstr = this;
            return rstr;
          } /* function */ 


          char * RCmemdecoder::~RCmemdecoder()(RCdecoder *this)
          {
            *((char * *)this) = ((char *)&vtable for RCdecoder  + 16ll);
            operator delete(void*)(this)
            rstr = this;
            return rstr;
          } /* function */ 


     9 |  char * RCdecoder::~RCdecoder()(RCdecoder *this)
          {
            *((char * *)this) = ((char *)&vtable for RCdecoder  + 16ll);
            rstr = this;
            return rstr;
          } /* function */ 


    11 |  unsigned int RCfiledecoder::getbyte()(RCfiledecoder *this)
    12 |  {
    13 |    if (!(*((unsigned int *)((char *)this + 36)) == *((unsigned int *)((char *)this + 40)))) goto lab_1;
            $$RET71 = (unsigned int) fread((this + 44),1ull,4096ull,*((char * *)((char *)this + 24)));
    14 |    *((unsigned int *)((char *)this + 40)) = $$RET71;
    15 |    if ($$RET71 != 0u) goto lab_3;
    16 |    *((unsigned int *)((char *)this + 40)) = 1u;
    17 |    *((char *)((char *)this + 20)) = 1u;
    18 |    goto lab_5;
          lab_3:
    20 |    *((unsigned int *)((char *)this + 32)) = *((unsigned int *)((char *)this + 32)) + $$RET71;
          lab_5:
    21 |    *((unsigned int *)((char *)this + 36)) = 0u;
    22 |  lab_1:
    23 |    $$csx7 = *((unsigned int *)((char *)this + 36));
            $$SFX0 = (unsigned int) ((char *)((char *)this + 44))[(long long) $$csx7];
            *((unsigned int *)((char *)this + 36)) = $$csx7 + 1u;
            rstr = $$SFX0;
            return rstr;
    24 |  } /* function */ 


    58 |  unsigned int RCmemdecoder::getbyte()(RCmemdecoder *this)
          {
            $$SFX1 = (unsigned int) *((char * *)((char *)this + 24))->(unsigned char).rns329.;
            *((char * *)((char *)this + 24)) = ((char *)*((char * *)((char *)this + 24))  + 1ll);
            rstr = $$SFX1;
            return rstr;
          } /* function */ 


 GPR's set/used:   ssus ssss ssss s---  ---s ssss ssss ssss
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ----
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     read_header(RCdecoder *, unsigned int, unsigned int, unsigned int, unsigned int, int)
     | 000000                           AKA       _Z11read_headerP9RCdecoderjjjji
  173|                                  PROC      rd,nx,ny,nz,nf,dp,gr3-gr8
    0| 000000 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 000004 std      FBC1FFF0   1     ST8       #stack(gr1,-16)=gr30
    0| 000008 std      FBA1FFE8   1     ST8       #stack(gr1,-24)=gr29
    0| 00000C std      FB81FFE0   1     ST8       #stack(gr1,-32)=gr28
    0| 000010 std      FB61FFD8   1     ST8       #stack(gr1,-40)=gr27
    0| 000014 std      FB41FFD0   1     ST8       #stack(gr1,-48)=gr26
    0| 000018 std      FB21FFC8   1     ST8       #stack(gr1,-56)=gr25
    0| 00001C std      FB01FFC0   1     ST8       #stack(gr1,-64)=gr24
    0| 000020 std      FAE1FFB8   1     ST8       #stack(gr1,-72)=gr23
    0| 000024 std      FAC1FFB0   1     ST8       #stack(gr1,-80)=gr22
    0| 000028 std      FAA1FFA8   1     ST8       #stack(gr1,-88)=gr21
    0| 00002C std      FA81FFA0   1     ST8       #stack(gr1,-96)=gr20
    0| 000030 std      FA61FF98   1     ST8       #stack(gr1,-104)=gr19
    0| 000034 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 000038 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 00003C stdu     F821FF01   1     ST8U      gr1,#stack(gr1,-256)=gr1
    0| 000040 or       7C7F1B78   1     LR        gr31=gr3
    0| 000044 or       7C9E2378   1     LR        gr30=gr4
    0| 000048 or       7CBD2B78   1     LR        gr29=gr5
    0| 00004C or       7CDC3378   1     LR        gr28=gr6
    0| 000050 or       7CFB3B78   1     LR        gr27=gr7
    0| 000054 or       7D1A4378   1     LR        gr26=gr8
  183| 000058 addi     3B200008   1     LI        gr25=8
  183| 00005C addi     3AC00008   1     LI        gr22=8
    4| 000060 addi     3B000000   1     LI        gr24=0
    4| 000064 addi     3AA00000   1     LI        gr21=0
    5| 000068 addi     3A800000   1     LI        gr20=0
    6| 00006C addi     3AE00000   1     LI        gr23=0
    6| 000070 addi     3A600000   1     LI        gr19=0
    0| 000074 ori      60210000   1     XNOP      
    0| 000078 ori      60210000   1     XNOP      
    6|                              CL.6:
    7| 00007C cmplwi   28160010   1     CL4       cr0=gr22,16
    7| 000080 bc       4181053C   1     BT        CL.4385,cr0,0x10/lgt,taken=40%(40,60)
   11|                              CL.9:
    6| 000084 addi     3A730001   1     AI        gr19=gr19,1
    6| 000088 cmpldi   28330001   1     CL8       cr0=gr19,1
    6| 00008C bc       4180FFF0   1     BT        CL.6,cr0,0x8/llt,taken=80%(80,20)
   12| 000090 or       7FE3FB78   1     LR        gr3=gr31
   12| 000094 or       7EC4B378   1     LR        gr4=gr22
   12| 000098 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns0.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   12| 00009C ori      60000000   1
   13| 0000A0 slw      7C60A030   1     SLL4      gr0=gr3,gr20
    4| 0000A4 addi     3AC00000   1     LI        gr22=0
   13| 0000A8 add      7C00AA14   1     A         gr0=gr0,gr21
   13| 0000AC cmplwi   28000066   1     CL4       cr0=gr0,102
   13| 0000B0 bc       40820474   1     BF        CL.2,cr0,0x4/eq,taken=10%(10,90)
  184| 0000B4 addi     3AA00008   1     LI        gr21=8
    5| 0000B8 addi     3A800000   1     LI        gr20=0
    6| 0000BC addi     3A600000   1     LI        gr19=0
    0| 0000C0 ori      60210000   1     XNOP      
    0| 0000C4 ori      60210000   1     XNOP      
    0| 0000C8 ori      60210000   1     XNOP      
    6|                              CL.11:
    7| 0000CC cmplwi   28150010   1     CL4       cr0=gr21,16
    7| 0000D0 bc       418104C4   1     BT        CL.4386,cr0,0x10/lgt,taken=40%(40,60)
   11|                              CL.14:
    6| 0000D4 addi     3A730001   1     AI        gr19=gr19,1
    6| 0000D8 cmpldi   28330001   1     CL8       cr0=gr19,1
    6| 0000DC bc       4180FFF0   1     BT        CL.11,cr0,0x8/llt,taken=80%(80,20)
   12| 0000E0 or       7FE3FB78   1     LR        gr3=gr31
   12| 0000E4 or       7EA4AB78   1     LR        gr4=gr21
   12| 0000E8 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns0.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   12| 0000EC ori      60000000   1
   13| 0000F0 slw      7C60A030   1     SLL4      gr0=gr3,gr20
    4| 0000F4 addi     3A600000   1     LI        gr19=0
   13| 0000F8 add      7C00B214   1     A         gr0=gr0,gr22
   13| 0000FC cmplwi   28000070   1     CL4       cr0=gr0,112
   13| 000100 bc       40820424   1     BF        CL.2,cr0,0x4/eq,taken=10%(10,90)
  185| 000104 addi     3AC00008   1     LI        gr22=8
    5| 000108 addi     3AA00000   1     LI        gr21=0
    6| 00010C addi     3A800000   1     LI        gr20=0
    0| 000110 ori      60210000   1     XNOP      
    0| 000114 ori      60210000   1     XNOP      
    0| 000118 ori      60210000   1     XNOP      
    6|                              CL.16:
    7| 00011C cmplwi   28160010   1     CL4       cr0=gr22,16
    7| 000120 bc       4181044C   1     BT        CL.4387,cr0,0x10/lgt,taken=40%(40,60)
   11|                              CL.19:
    6| 000124 addi     3A940001   1     AI        gr20=gr20,1
    6| 000128 cmpldi   28340001   1     CL8       cr0=gr20,1
    6| 00012C bc       4180FFF0   1     BT        CL.16,cr0,0x8/llt,taken=80%(80,20)
   12| 000130 or       7FE3FB78   1     LR        gr3=gr31
   12| 000134 or       7EC4B378   1     LR        gr4=gr22
   12| 000138 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns0.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   12| 00013C ori      60000000   1
   13| 000140 slw      7C60A830   1     SLL4      gr0=gr3,gr21
    4| 000144 addi     3AC00000   1     LI        gr22=0
   13| 000148 add      7C009A14   1     A         gr0=gr0,gr19
   13| 00014C cmplwi   2800007A   1     CL4       cr0=gr0,122
   13| 000150 bc       408203D4   1     BF        CL.2,cr0,0x4/eq,taken=10%(10,90)
    5| 000154 addi     3AA00000   1     LI        gr21=0
    6| 000158 addi     3A800000   1     LI        gr20=0
    6|                              CL.21:
    7| 00015C cmplwi   28190010   1     CL4       cr0=gr25,16
    7| 000160 bc       418103E4   1     BT        CL.4388,cr0,0x10/lgt,taken=40%(40,60)
   11|                              CL.24:
    6| 000164 addi     3A940001   1     AI        gr20=gr20,1
    6| 000168 cmpldi   28340001   1     CL8       cr0=gr20,1
    6| 00016C bc       4180FFF0   1     BT        CL.21,cr0,0x8/llt,taken=80%(80,20)
   12| 000170 or       7FE3FB78   1     LR        gr3=gr31
   12| 000174 or       7F24CB78   1     LR        gr4=gr25
   12| 000178 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns0.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   12| 00017C ori      60000000   1
   13| 000180 slw      7C60A830   1     SLL4      gr0=gr3,gr21
    4| 000184 addi     3B200000   1     LI        gr25=0
   13| 000188 add      7C00B214   1     A         gr0=gr0,gr22
   13| 00018C cmpwi    2C000000   1     C4        cr0=gr0,0
   13| 000190 bc       40820394   1     BF        CL.2,cr0,0x4/eq,taken=10%(10,90)
  192| 000194 addi     3A600010   1     LI        gr19=16
  192| 000198 addi     3AC00010   1     LI        gr22=16
    5| 00019C addi     3AA00000   1     LI        gr21=0
    6| 0001A0 addi     3A800000   1     LI        gr20=0
    0| 0001A4 ori      60210000   1     XNOP      
    0| 0001A8 ori      60210000   1     XNOP      
    6|                              CL.29:
    7| 0001AC cmplwi   28160010   1     CL4       cr0=gr22,16
    7| 0001B0 bc       4181034C   1     BT        CL.4389,cr0,0x10/lgt,taken=40%(40,60)
   11|                              CL.32:
    6| 0001B4 addi     3A940001   1     AI        gr20=gr20,1
    6| 0001B8 cmpldi   28340001   1     CL8       cr0=gr20,1
    6| 0001BC bc       4180FFF0   1     BT        CL.29,cr0,0x8/llt,taken=80%(80,20)
   12| 0001C0 or       7FE3FB78   1     LR        gr3=gr31
   12| 0001C4 or       7EC4B378   1     LR        gr4=gr22
   12| 0001C8 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns0.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   12| 0001CC ori      60000000   1
   13| 0001D0 slw      7C60A830   1     SLL4      gr0=gr3,gr21
    4| 0001D4 addi     3AC00000   1     LI        gr22=0
   13| 0001D8 add      7C00CA14   1     A         gr0=gr0,gr25
   13| 0001DC cmplwi   28000101   1     CL4       cr0=gr0,257
   13| 0001E0 bc       408202D0   1     BF        CL.27,cr0,0x4/eq,taken=10%(10,90)
    5| 0001E4 addi     3B200000   1     LI        gr25=0
    6| 0001E8 addi     3AA00000   1     LI        gr21=0
    6|                              CL.34:
    7| 0001EC cmplwi   28130010   1     CL4       cr0=gr19,16
    7| 0001F0 bc       418102E4   1     BT        CL.4390,cr0,0x10/lgt,taken=40%(40,60)
   11|                              CL.37:
    6| 0001F4 addi     3AB50001   1     AI        gr21=gr21,1
    6| 0001F8 cmpldi   28350001   1     CL8       cr0=gr21,1
    6| 0001FC bc       4180FFF0   1     BT        CL.34,cr0,0x8/llt,taken=80%(80,20)
   12| 000200 or       7FE3FB78   1     LR        gr3=gr31
   12| 000204 or       7E649B78   1     LR        gr4=gr19
   12| 000208 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns0.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   12| 00020C ori      60000000   1
   13| 000210 slw      7C60C830   1     SLL4      gr0=gr3,gr25
    4| 000214 addi     3B200000   1     LI        gr25=0
   13| 000218 add      7C00B214   1     A         gr0=gr0,gr22
   13| 00021C cmplwi   28000001   1     CL4       cr0=gr0,1
   13| 000220 bc       40820290   1     BF        CL.27,cr0,0x4/eq,taken=10%(10,90)
  199| 000224 addi     3A600020   1     LI        gr19=32
  199| 000228 addi     3AC00020   1     LI        gr22=32
    5| 00022C addi     3AA00000   1     LI        gr21=0
    6| 000230 addi     3A800000   1     LI        gr20=0
    0| 000234 ori      60210000   1     XNOP      
    0| 000238 ori      60210000   1     XNOP      
    6|                              CL.44:
    7| 00023C cmplwi   28160010   1     CL4       cr0=gr22,16
    7| 000240 bc       41810248   1     BT        CL.4391,cr0,0x10/lgt,taken=40%(40,60)
   11|                              CL.47:
    6| 000244 addi     3A940001   1     AI        gr20=gr20,1
    6| 000248 cmpldi   28340001   1     CL8       cr0=gr20,1
    6| 00024C bc       4180FFF0   1     BT        CL.44,cr0,0x8/llt,taken=80%(80,20)
   12| 000250 or       7FE3FB78   1     LR        gr3=gr31
   12| 000254 or       7EC4B378   1     LR        gr4=gr22
   12| 000258 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns0.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   12| 00025C ori      60000000   1
   13| 000260 slw      7C60A830   1     SLL4      gr0=gr3,gr21
    4| 000264 addi     3AC00000   1     LI        gr22=0
   13| 000268 add      7C00CA14   1     A         gr0=gr0,gr25
   13| 00026C cmplw    7C1B0040   1     CL4       cr0=gr27,gr0
   13| 000270 bc       4082016C   1     BF        CL.40,cr0,0x4/eq,taken=10%(10,90)
  200| 000274 addi     3B600020   1     LI        gr27=32
    5| 000278 addi     3B200000   1     LI        gr25=0
    6| 00027C addi     3AA00000   1     LI        gr21=0
    0| 000280 ori      60210000   1     XNOP      
    0| 000284 ori      60210000   1     XNOP      
    0| 000288 ori      60210000   1     XNOP      
    6|                              CL.49:
    7| 00028C cmplwi   281B0010   1     CL4       cr0=gr27,16
    7| 000290 bc       418101D0   1     BT        CL.4392,cr0,0x10/lgt,taken=40%(40,60)
   11|                              CL.52:
    6| 000294 addi     3AB50001   1     AI        gr21=gr21,1
    6| 000298 cmpldi   28350001   1     CL8       cr0=gr21,1
    6| 00029C bc       4180FFF0   1     BT        CL.49,cr0,0x8/llt,taken=80%(80,20)
   12| 0002A0 or       7FE3FB78   1     LR        gr3=gr31
   12| 0002A4 or       7F64DB78   1     LR        gr4=gr27
   12| 0002A8 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns0.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   12| 0002AC ori      60000000   1
   13| 0002B0 slw      7C60C830   1     SLL4      gr0=gr3,gr25
    4| 0002B4 addi     3B600000   1     LI        gr27=0
   13| 0002B8 add      7C00B214   1     A         gr0=gr0,gr22
   13| 0002BC cmplw    7C1C0040   1     CL4       cr0=gr28,gr0
   13| 0002C0 bc       4082011C   1     BF        CL.40,cr0,0x4/eq,taken=10%(10,90)
  201| 0002C4 addi     3B800020   1     LI        gr28=32
    5| 0002C8 addi     3B200000   1     LI        gr25=0
    6| 0002CC addi     3AC00000   1     LI        gr22=0
    0| 0002D0 ori      60210000   1     XNOP      
    0| 0002D4 ori      60210000   1     XNOP      
    0| 0002D8 ori      60210000   1     XNOP      
    6|                              CL.54:
    7| 0002DC cmplwi   281C0010   1     CL4       cr0=gr28,16
    7| 0002E0 bc       41810158   1     BT        CL.4393,cr0,0x10/lgt,taken=40%(40,60)
   11|                              CL.57:
    6| 0002E4 addi     3AD60001   1     AI        gr22=gr22,1
    6| 0002E8 cmpldi   28360001   1     CL8       cr0=gr22,1
    6| 0002EC bc       4180FFF0   1     BT        CL.54,cr0,0x8/llt,taken=80%(80,20)
   12| 0002F0 or       7FE3FB78   1     LR        gr3=gr31
   12| 0002F4 or       7F84E378   1     LR        gr4=gr28
   12| 0002F8 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns0.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   12| 0002FC ori      60000000   1
   13| 000300 slw      7C60C830   1     SLL4      gr0=gr3,gr25
   13| 000304 add      7C00DA14   1     A         gr0=gr0,gr27
   13| 000308 cmplw    7C1D0040   1     CL4       cr0=gr29,gr0
   13| 00030C bc       408200D0   1     BF        CL.40,cr0,0x4/eq,taken=10%(10,90)
    5| 000310 addi     3BA00000   1     LI        gr29=0
    0| 000314 ori      60210000   1     XNOP      
    0| 000318 ori      60210000   1     XNOP      
    6|                              CL.59:
    7| 00031C cmplwi   28130010   1     CL4       cr0=gr19,16
    7| 000320 bc       418100F0   1     BT        CL.4394,cr0,0x10/lgt,taken=40%(40,60)
   11|                              CL.62:
    6| 000324 addi     3AF70001   1     AI        gr23=gr23,1
    6| 000328 cmpldi   28370001   1     CL8       cr0=gr23,1
    6| 00032C bc       4180FFF0   1     BT        CL.59,cr0,0x8/llt,taken=80%(80,20)
   12| 000330 or       7FE3FB78   1     LR        gr3=gr31
   12| 000334 or       7E649B78   1     LR        gr4=gr19
   12| 000338 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns0.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   12| 00033C ori      60000000   1
   13| 000340 slw      7C60E830   1     SLL4      gr0=gr3,gr29
   13| 000344 add      7C00C214   1     A         gr0=gr0,gr24
   13| 000348 cmplw    7C1E0040   1     CL4       cr0=gr30,gr0
   13| 00034C bc       40820090   1     BF        CL.40,cr0,0x4/eq,taken=10%(10,90)
  206| 000350 or       7FE3FB78   1     LR        gr3=gr31
  206| 000354 bl       48000001   1     CALL      gr3=_ZN9RCdecoder6decodeEv,1,(char).rns0.",gr3,#ProcAlias",_ZN9RCdecoder6decodeEv",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  206| 000358 ori      60000000   1
  209| 00035C cntlzw   7F440034   1     CNTLZ4    gr4=gr26
  206| 000360 rlwinm   5460063E   1     RN4       gr0=gr3,0,0xFF
  209| 000364 addi     3864FFE0   1     AI        gr3=gr4,-32
  209| 000368 rlwinm   54630FFE   1     SRL4      gr3=gr3,31
  209| 00036C cmpd     7C201800   1     C8        cr0=gr0,gr3
  209| 000370 bc       40820048   1     BF        CL.4395,cr0,0x4/eq,taken=10%(10,90)
  213|                              CL.1925:
  213| 000374 ld       E9810110   1     L8        gr12=#stack(gr1,272)
  213| 000378 addi     38210100   1     AI        gr1=gr1,256
  213| 00037C ld       EA61FF98   1     L8        gr19=#stack(gr1,-104)
  213| 000380 ld       EA81FFA0   1     L8        gr20=#stack(gr1,-96)
  213| 000384 ld       EAA1FFA8   1     L8        gr21=#stack(gr1,-88)
  213| 000388 mtspr    7D8803A6   1     LLR       lr=gr12
  213| 00038C ld       EAC1FFB0   1     L8        gr22=#stack(gr1,-80)
  213| 000390 ld       EAE1FFB8   1     L8        gr23=#stack(gr1,-72)
  213| 000394 ld       EB01FFC0   1     L8        gr24=#stack(gr1,-64)
  213| 000398 ld       EB21FFC8   1     L8        gr25=#stack(gr1,-56)
  213| 00039C ld       EB41FFD0   1     L8        gr26=#stack(gr1,-48)
  213| 0003A0 ld       EB61FFD8   1     L8        gr27=#stack(gr1,-40)
  213| 0003A4 ld       EB81FFE0   1     L8        gr28=#stack(gr1,-32)
  213| 0003A8 ld       EBA1FFE8   1     L8        gr29=#stack(gr1,-24)
  213| 0003AC ld       EBC1FFF0   1     L8        gr30=#stack(gr1,-16)
  213| 0003B0 ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
  213| 0003B4 bclr     4E800020   1     BA        lr
    0|                              CL.4395:
  210| 0003B8 ld       E8620000   1     L8        gr3=.stderr(gr2,0)
  210| 0003BC ld       E8820000   1     L8        gr4=.+CONSTANT_AREA(gr2,0)
  210| 0003C0 ld       E8630000   1     L8        gr3=<s52:d0:l8>(gr3,0)
  210| 0003C4 addi     3884006C   1     AI        gr4=gr4,108
  210| 0003C8 bl       48000001   1     CALL      gr3=fprintf,2,(_IO_FILE).rns2.",gr3,gr4,#ProcAlias",fprintf",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  210| 0003CC ori      60000000   1
  211| 0003D0 bl       48000001   1     CALL      abort,0,#ProcAlias",abort",fcr",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  211| 0003D4 ori      60000000   1
  211| 0003D8 tw       7C8E7008   1     TRAP      9
   13|                              CL.40:
  203| 0003DC ld       EBE20000   1     L8        gr31=.stderr(gr2,0)
  203| 0003E0 ld       EBC20000   1     L8        gr30=.+CONSTANT_AREA(gr2,0)
  203| 0003E4 ld       E87F0000   1     L8        gr3=<s52:d0:l8>(gr31,0)
  203| 0003E8 addi     389E0044   1     AI        gr4=gr30,68
  203| 0003EC bl       48000001   1     CALL      gr3=fprintf,2,(_IO_FILE).rns2.",gr3,gr4,#ProcAlias",fprintf",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  203| 0003F0 ori      60000000   1
  204| 0003F4 ld       E87F0000   1     L8        gr3=<s52:d0:l8>(gr31,0)
  204| 0003F8 addi     389E0044   1     AI        gr4=gr30,68
  204| 0003FC bl       48000001   1     CALL      gr3=fprintf,2,(_IO_FILE).rns2.",gr3,gr4,#ProcAlias",fprintf",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  204| 000400 ori      60000000   1
  205| 000404 bl       48000001   1     CALL      abort,0,#ProcAlias",abort",fcr",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  205| 000408 ori      60000000   1
  205| 00040C tw       7C8E7008   1     TRAP      9
    0|                              CL.4394:
    3| 000410 or       7FE3FB78   1     LR        gr3=gr31
    3| 000414 addi     38800010   1     LI        gr4=16
    3| 000418 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns0.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    3| 00041C ori      60000000   1
    8| 000420 slw      7C60E830   1     SLL4      gr0=gr3,gr29
   10| 000424 addi     3873FFF0   1     AI        gr3=gr19,-16
    8| 000428 add      7F180214   1     A         gr24=gr24,gr0
    9| 00042C addi     3BBD0010   1     AI        gr29=gr29,16
   10| 000430 rlwinm   5473003E   1     RN4       gr19=gr3,0,0xFFFFFFFF
    0| 000434 b        4BFFFEF0   1     B         CL.62,-1
    0|                              CL.4393:
    3| 000438 or       7FE3FB78   1     LR        gr3=gr31
    3| 00043C addi     38800010   1     LI        gr4=16
    3| 000440 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns0.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    3| 000444 ori      60000000   1
    8| 000448 slw      7C60C830   1     SLL4      gr0=gr3,gr25
   10| 00044C addi     387CFFF0   1     AI        gr3=gr28,-16
    8| 000450 add      7F7B0214   1     A         gr27=gr27,gr0
    9| 000454 addi     3B390010   1     AI        gr25=gr25,16
   10| 000458 rlwinm   547C003E   1     RN4       gr28=gr3,0,0xFFFFFFFF
    0| 00045C b        4BFFFE88   1     B         CL.57,-1
    0|                              CL.4392:
    3| 000460 or       7FE3FB78   1     LR        gr3=gr31
    3| 000464 addi     38800010   1     LI        gr4=16
    3| 000468 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns0.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    3| 00046C ori      60000000   1
    8| 000470 slw      7C60C830   1     SLL4      gr0=gr3,gr25
   10| 000474 addi     387BFFF0   1     AI        gr3=gr27,-16
    8| 000478 add      7ED60214   1     A         gr22=gr22,gr0
    9| 00047C addi     3B390010   1     AI        gr25=gr25,16
   10| 000480 rlwinm   547B003E   1     RN4       gr27=gr3,0,0xFFFFFFFF
    0| 000484 b        4BFFFE10   1     B         CL.52,-1
    0|                              CL.4391:
    3| 000488 or       7FE3FB78   1     LR        gr3=gr31
    3| 00048C addi     38800010   1     LI        gr4=16
    3| 000490 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns0.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    3| 000494 ori      60000000   1
    8| 000498 slw      7C60A830   1     SLL4      gr0=gr3,gr21
   10| 00049C addi     3876FFF0   1     AI        gr3=gr22,-16
    8| 0004A0 add      7F390214   1     A         gr25=gr25,gr0
    9| 0004A4 addi     3AB50010   1     AI        gr21=gr21,16
   10| 0004A8 rlwinm   5476003E   1     RN4       gr22=gr3,0,0xFFFFFFFF
    0| 0004AC b        4BFFFD98   1     B         CL.47,-1
   13|                              CL.27:
  194| 0004B0 ld       E8620000   1     L8        gr3=.stderr(gr2,0)
  194| 0004B4 ld       E8820000   1     L8        gr4=.+CONSTANT_AREA(gr2,0)
  194| 0004B8 ld       E8630000   1     L8        gr3=<s52:d0:l8>(gr3,0)
  194| 0004BC addi     3884001C   1     AI        gr4=gr4,28
  194| 0004C0 bl       48000001   1     CALL      gr3=fprintf,2,(_IO_FILE).rns2.",gr3,gr4,#ProcAlias",fprintf",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  194| 0004C4 ori      60000000   1
  195| 0004C8 bl       48000001   1     CALL      abort,0,#ProcAlias",abort",fcr",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  195| 0004CC ori      60000000   1
  195| 0004D0 tw       7C8E7008   1     TRAP      9
    0|                              CL.4390:
    3| 0004D4 or       7FE3FB78   1     LR        gr3=gr31
    3| 0004D8 addi     38800010   1     LI        gr4=16
    3| 0004DC bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns0.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    3| 0004E0 ori      60000000   1
    8| 0004E4 slw      7C60C830   1     SLL4      gr0=gr3,gr25
   10| 0004E8 addi     3873FFF0   1     AI        gr3=gr19,-16
    8| 0004EC add      7ED60214   1     A         gr22=gr22,gr0
    9| 0004F0 addi     3B390010   1     AI        gr25=gr25,16
   10| 0004F4 rlwinm   5473003E   1     RN4       gr19=gr3,0,0xFFFFFFFF
    0| 0004F8 b        4BFFFCFC   1     B         CL.37,-1
    0|                              CL.4389:
    3| 0004FC or       7FE3FB78   1     LR        gr3=gr31
    3| 000500 addi     38800010   1     LI        gr4=16
    3| 000504 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns0.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    3| 000508 ori      60000000   1
    8| 00050C slw      7C60A830   1     SLL4      gr0=gr3,gr21
   10| 000510 addi     3876FFF0   1     AI        gr3=gr22,-16
    8| 000514 add      7F390214   1     A         gr25=gr25,gr0
    9| 000518 addi     3AB50010   1     AI        gr21=gr21,16
   10| 00051C rlwinm   5476003E   1     RN4       gr22=gr3,0,0xFFFFFFFF
    0| 000520 b        4BFFFC94   1     B         CL.32,-1
   13|                              CL.2:
  187| 000524 ld       E8620000   1     L8        gr3=.stderr(gr2,0)
  187| 000528 ld       E8820000   1     L8        gr4=.+CONSTANT_AREA(gr2,0)
  187| 00052C ld       E8630000   1     L8        gr3=<s52:d0:l8>(gr3,0)
  187| 000530 bl       48000001   1     CALL      gr3=fprintf,2,(_IO_FILE).rns2.",gr3,gr4,#ProcAlias",fprintf",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  187| 000534 ori      60000000   1
  188| 000538 bl       48000001   1     CALL      abort,0,#ProcAlias",abort",fcr",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  188| 00053C ori      60000000   1
  188| 000540 tw       7C8E7008   1     TRAP      9
    0|                              CL.4388:
    3| 000544 or       7FE3FB78   1     LR        gr3=gr31
    3| 000548 addi     38800010   1     LI        gr4=16
    3| 00054C bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns0.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    3| 000550 ori      60000000   1
    8| 000554 slw      7C60A830   1     SLL4      gr0=gr3,gr21
   10| 000558 addi     3879FFF0   1     AI        gr3=gr25,-16
    8| 00055C add      7ED60214   1     A         gr22=gr22,gr0
    9| 000560 addi     3AB50010   1     AI        gr21=gr21,16
   10| 000564 rlwinm   5479003E   1     RN4       gr25=gr3,0,0xFFFFFFFF
    0| 000568 b        4BFFFBFC   1     B         CL.24,-1
    0|                              CL.4387:
    3| 00056C or       7FE3FB78   1     LR        gr3=gr31
    3| 000570 addi     38800010   1     LI        gr4=16
    3| 000574 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns0.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    3| 000578 ori      60000000   1
    8| 00057C slw      7C60A830   1     SLL4      gr0=gr3,gr21
   10| 000580 addi     3876FFF0   1     AI        gr3=gr22,-16
    8| 000584 add      7E730214   1     A         gr19=gr19,gr0
    9| 000588 addi     3AB50010   1     AI        gr21=gr21,16
   10| 00058C rlwinm   5476003E   1     RN4       gr22=gr3,0,0xFFFFFFFF
    0| 000590 b        4BFFFB94   1     B         CL.19,-1
    0|                              CL.4386:
    3| 000594 or       7FE3FB78   1     LR        gr3=gr31
    3| 000598 addi     38800010   1     LI        gr4=16
    3| 00059C bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns0.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    3| 0005A0 ori      60000000   1
    8| 0005A4 slw      7C60A030   1     SLL4      gr0=gr3,gr20
   10| 0005A8 addi     3875FFF0   1     AI        gr3=gr21,-16
    8| 0005AC add      7ED60214   1     A         gr22=gr22,gr0
    9| 0005B0 addi     3A940010   1     AI        gr20=gr20,16
   10| 0005B4 rlwinm   5475003E   1     RN4       gr21=gr3,0,0xFFFFFFFF
    0| 0005B8 b        4BFFFB1C   1     B         CL.14,-1
    0|                              CL.4385:
    3| 0005BC or       7FE3FB78   1     LR        gr3=gr31
    3| 0005C0 addi     38800010   1     LI        gr4=16
    3| 0005C4 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns0.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    3| 0005C8 ori      60000000   1
    8| 0005CC slw      7C60A030   1     SLL4      gr0=gr3,gr20
   10| 0005D0 addi     3876FFF0   1     AI        gr3=gr22,-16
    8| 0005D4 add      7EB50214   1     A         gr21=gr21,gr0
    9| 0005D8 addi     3A940010   1     AI        gr20=gr20,16
   10| 0005DC rlwinm   5476003E   1     RN4       gr22=gr3,0,0xFFFFFFFF
    0| 0005E0 b        4BFFFAA4   1     B         CL.9,-1
     |               Tag Table
     | 0005E4        00000000 00092041 800D0600 00000000 000005E4 001F5F5A
     | 0005FC        31317265 61645F68 65616465 72503952 43646563 6F646572
     | 000614        6A6A6A6A 69
     |               Instruction count          377
     |               Straight-line exec time    377
 GPR's set/used:   ssus ssss ssss s---  ---s ssss ssss ssss
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ----
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     get_header(RCdecoder *, unsigned int *, unsigned int *, unsigned int *, unsigned int *, int *)
     | 000000                           AKA       _Z10get_headerP9RCdecoderPjS1_S1_S1_Pi
  216|                                  PROC      rd,nx,ny,nz,nf,dp,gr3-gr8
    0| 000620 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 000624 std      FBC1FFF0   1     ST8       #stack(gr1,-16)=gr30
    0| 000628 std      FBA1FFE8   1     ST8       #stack(gr1,-24)=gr29
    0| 00062C std      FB81FFE0   1     ST8       #stack(gr1,-32)=gr28
    0| 000630 std      FB61FFD8   1     ST8       #stack(gr1,-40)=gr27
    0| 000634 std      FB41FFD0   1     ST8       #stack(gr1,-48)=gr26
    0| 000638 std      FB21FFC8   1     ST8       #stack(gr1,-56)=gr25
    0| 00063C std      FB01FFC0   1     ST8       #stack(gr1,-64)=gr24
    0| 000640 std      FAE1FFB8   1     ST8       #stack(gr1,-72)=gr23
    0| 000644 std      FAC1FFB0   1     ST8       #stack(gr1,-80)=gr22
    0| 000648 std      FAA1FFA8   1     ST8       #stack(gr1,-88)=gr21
    0| 00064C std      FA81FFA0   1     ST8       #stack(gr1,-96)=gr20
    0| 000650 std      FA61FF98   1     ST8       #stack(gr1,-104)=gr19
    0| 000654 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 000658 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 00065C stdu     F821FF01   1     ST8U      gr1,#stack(gr1,-256)=gr1
    0| 000660 or       7C7F1B78   1     LR        gr31=gr3
    0| 000664 or       7C9E2378   1     LR        gr30=gr4
    0| 000668 or       7CBD2B78   1     LR        gr29=gr5
    0| 00066C or       7CDC3378   1     LR        gr28=gr6
    0| 000670 or       7CFB3B78   1     LR        gr27=gr7
    0| 000674 or       7D1A4378   1     LR        gr26=gr8
  226| 000678 addi     3B200008   1     LI        gr25=8
  226| 00067C addi     3AC00008   1     LI        gr22=8
    4| 000680 addi     3B000000   1     LI        gr24=0
    4| 000684 addi     3AA00000   1     LI        gr21=0
    5| 000688 addi     3A800000   1     LI        gr20=0
    6| 00068C addi     3AE00000   1     LI        gr23=0
    6| 000690 addi     3A600000   1     LI        gr19=0
    0| 000694 ori      60210000   1     XNOP      
    0| 000698 ori      60210000   1     XNOP      
    6|                              CL.103:
    7| 00069C cmplwi   28160010   1     CL4       cr0=gr22,16
    7| 0006A0 bc       418104B0   1     BT        CL.5520,cr0,0x10/lgt,taken=40%(40,60)
   11|                              CL.106:
    6| 0006A4 addi     3A730001   1     AI        gr19=gr19,1
    6| 0006A8 cmpldi   28330001   1     CL8       cr0=gr19,1
    6| 0006AC bc       4180FFF0   1     BT        CL.103,cr0,0x8/llt,taken=80%(80,20)
   12| 0006B0 or       7FE3FB78   1     LR        gr3=gr31
   12| 0006B4 or       7EC4B378   1     LR        gr4=gr22
   12| 0006B8 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns7.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP2",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   12| 0006BC ori      60000000   1
   13| 0006C0 slw      7C60A030   1     SLL4      gr0=gr3,gr20
    4| 0006C4 addi     3AC00000   1     LI        gr22=0
   13| 0006C8 add      7C00AA14   1     A         gr0=gr0,gr21
   13| 0006CC cmplwi   28000066   1     CL4       cr0=gr0,102
   13| 0006D0 bc       408203E8   1     BF        CL.99,cr0,0x4/eq,taken=10%(10,90)
  227| 0006D4 addi     3AA00008   1     LI        gr21=8
    5| 0006D8 addi     3A800000   1     LI        gr20=0
    6| 0006DC addi     3A600000   1     LI        gr19=0
    0| 0006E0 ori      60210000   1     XNOP      
    0| 0006E4 ori      60210000   1     XNOP      
    0| 0006E8 ori      60210000   1     XNOP      
    6|                              CL.108:
    7| 0006EC cmplwi   28150010   1     CL4       cr0=gr21,16
    7| 0006F0 bc       41810438   1     BT        CL.5521,cr0,0x10/lgt,taken=40%(40,60)
   11|                              CL.111:
    6| 0006F4 addi     3A730001   1     AI        gr19=gr19,1
    6| 0006F8 cmpldi   28330001   1     CL8       cr0=gr19,1
    6| 0006FC bc       4180FFF0   1     BT        CL.108,cr0,0x8/llt,taken=80%(80,20)
   12| 000700 or       7FE3FB78   1     LR        gr3=gr31
   12| 000704 or       7EA4AB78   1     LR        gr4=gr21
   12| 000708 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns7.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP2",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   12| 00070C ori      60000000   1
   13| 000710 slw      7C60A030   1     SLL4      gr0=gr3,gr20
    4| 000714 addi     3A600000   1     LI        gr19=0
   13| 000718 add      7C00B214   1     A         gr0=gr0,gr22
   13| 00071C cmplwi   28000070   1     CL4       cr0=gr0,112
   13| 000720 bc       40820398   1     BF        CL.99,cr0,0x4/eq,taken=10%(10,90)
  228| 000724 addi     3AC00008   1     LI        gr22=8
    5| 000728 addi     3AA00000   1     LI        gr21=0
    6| 00072C addi     3A800000   1     LI        gr20=0
    0| 000730 ori      60210000   1     XNOP      
    0| 000734 ori      60210000   1     XNOP      
    0| 000738 ori      60210000   1     XNOP      
    6|                              CL.113:
    7| 00073C cmplwi   28160010   1     CL4       cr0=gr22,16
    7| 000740 bc       418103C0   1     BT        CL.5522,cr0,0x10/lgt,taken=40%(40,60)
   11|                              CL.116:
    6| 000744 addi     3A940001   1     AI        gr20=gr20,1
    6| 000748 cmpldi   28340001   1     CL8       cr0=gr20,1
    6| 00074C bc       4180FFF0   1     BT        CL.113,cr0,0x8/llt,taken=80%(80,20)
   12| 000750 or       7FE3FB78   1     LR        gr3=gr31
   12| 000754 or       7EC4B378   1     LR        gr4=gr22
   12| 000758 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns7.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP2",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   12| 00075C ori      60000000   1
   13| 000760 slw      7C60A830   1     SLL4      gr0=gr3,gr21
    4| 000764 addi     3AC00000   1     LI        gr22=0
   13| 000768 add      7C009A14   1     A         gr0=gr0,gr19
   13| 00076C cmplwi   2800007A   1     CL4       cr0=gr0,122
   13| 000770 bc       40820348   1     BF        CL.99,cr0,0x4/eq,taken=10%(10,90)
    5| 000774 addi     3AA00000   1     LI        gr21=0
    6| 000778 addi     3A800000   1     LI        gr20=0
    6|                              CL.118:
    7| 00077C cmplwi   28190010   1     CL4       cr0=gr25,16
    7| 000780 bc       41810358   1     BT        CL.5523,cr0,0x10/lgt,taken=40%(40,60)
   11|                              CL.121:
    6| 000784 addi     3A940001   1     AI        gr20=gr20,1
    6| 000788 cmpldi   28340001   1     CL8       cr0=gr20,1
    6| 00078C bc       4180FFF0   1     BT        CL.118,cr0,0x8/llt,taken=80%(80,20)
   12| 000790 or       7FE3FB78   1     LR        gr3=gr31
   12| 000794 or       7F24CB78   1     LR        gr4=gr25
   12| 000798 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns7.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP2",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   12| 00079C ori      60000000   1
   13| 0007A0 slw      7C60A830   1     SLL4      gr0=gr3,gr21
    4| 0007A4 addi     3B200000   1     LI        gr25=0
   13| 0007A8 add      7C00B214   1     A         gr0=gr0,gr22
   13| 0007AC cmpwi    2C000000   1     C4        cr0=gr0,0
   13| 0007B0 bc       40820308   1     BF        CL.99,cr0,0x4/eq,taken=10%(10,90)
  235| 0007B4 addi     3A600010   1     LI        gr19=16
  235| 0007B8 addi     3AC00010   1     LI        gr22=16
    5| 0007BC addi     3AA00000   1     LI        gr21=0
    6| 0007C0 addi     3A800000   1     LI        gr20=0
    0| 0007C4 ori      60210000   1     XNOP      
    0| 0007C8 ori      60210000   1     XNOP      
    6|                              CL.126:
    7| 0007CC cmplwi   28160010   1     CL4       cr0=gr22,16
    7| 0007D0 bc       418102C0   1     BT        CL.5524,cr0,0x10/lgt,taken=40%(40,60)
   11|                              CL.129:
    6| 0007D4 addi     3A940001   1     AI        gr20=gr20,1
    6| 0007D8 cmpldi   28340001   1     CL8       cr0=gr20,1
    6| 0007DC bc       4180FFF0   1     BT        CL.126,cr0,0x8/llt,taken=80%(80,20)
   12| 0007E0 or       7FE3FB78   1     LR        gr3=gr31
   12| 0007E4 or       7EC4B378   1     LR        gr4=gr22
   12| 0007E8 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns7.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP2",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   12| 0007EC ori      60000000   1
   13| 0007F0 slw      7C60A830   1     SLL4      gr0=gr3,gr21
    4| 0007F4 addi     3AC00000   1     LI        gr22=0
   13| 0007F8 add      7C00CA14   1     A         gr0=gr0,gr25
   13| 0007FC cmplwi   28000101   1     CL4       cr0=gr0,257
   13| 000800 bc       40820244   1     BF        CL.124,cr0,0x4/eq,taken=10%(10,90)
    5| 000804 addi     3B200000   1     LI        gr25=0
    6| 000808 addi     3AA00000   1     LI        gr21=0
    6|                              CL.131:
    7| 00080C cmplwi   28130010   1     CL4       cr0=gr19,16
    7| 000810 bc       41810258   1     BT        CL.5525,cr0,0x10/lgt,taken=40%(40,60)
   11|                              CL.134:
    6| 000814 addi     3AB50001   1     AI        gr21=gr21,1
    6| 000818 cmpldi   28350001   1     CL8       cr0=gr21,1
    6| 00081C bc       4180FFF0   1     BT        CL.131,cr0,0x8/llt,taken=80%(80,20)
   12| 000820 or       7FE3FB78   1     LR        gr3=gr31
   12| 000824 or       7E649B78   1     LR        gr4=gr19
   12| 000828 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns7.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP2",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   12| 00082C ori      60000000   1
   13| 000830 slw      7C60C830   1     SLL4      gr0=gr3,gr25
    4| 000834 addi     3B200000   1     LI        gr25=0
   13| 000838 add      7C00B214   1     A         gr0=gr0,gr22
   13| 00083C cmplwi   28000001   1     CL4       cr0=gr0,1
   13| 000840 bc       40820204   1     BF        CL.124,cr0,0x4/eq,taken=10%(10,90)
  242| 000844 addi     3A600020   1     LI        gr19=32
  242| 000848 addi     3AC00020   1     LI        gr22=32
    5| 00084C addi     3AA00000   1     LI        gr21=0
    6| 000850 addi     3A800000   1     LI        gr20=0
    0| 000854 ori      60210000   1     XNOP      
    0| 000858 ori      60210000   1     XNOP      
    6|                              CL.136:
    7| 00085C cmplwi   28160010   1     CL4       cr0=gr22,16
    7| 000860 bc       418101BC   1     BT        CL.5526,cr0,0x10/lgt,taken=40%(40,60)
   11|                              CL.139:
    6| 000864 addi     3A940001   1     AI        gr20=gr20,1
    6| 000868 cmpldi   28340001   1     CL8       cr0=gr20,1
    6| 00086C bc       4180FFF0   1     BT        CL.136,cr0,0x8/llt,taken=80%(80,20)
   12| 000870 or       7FE3FB78   1     LR        gr3=gr31
   12| 000874 or       7EC4B378   1     LR        gr4=gr22
   12| 000878 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns7.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP2",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   12| 00087C ori      60000000   1
   13| 000880 slw      7C60A830   1     SLL4      gr0=gr3,gr21
    4| 000884 addi     3AC00000   1     LI        gr22=0
   13| 000888 add      7C00CA14   1     A         gr0=gr0,gr25
  243| 00088C addi     3B200020   1     LI        gr25=32
   13| 000890 stw      901B0000   1     ST4Z      (unsigned int).rns11.(gr27,0)=gr0
    5| 000894 addi     3B600000   1     LI        gr27=0
    6| 000898 addi     3AA00000   1     LI        gr21=0
    6|                              CL.141:
    7| 00089C cmplwi   28190010   1     CL4       cr0=gr25,16
    7| 0008A0 bc       41810154   1     BT        CL.5527,cr0,0x10/lgt,taken=40%(40,60)
   11|                              CL.144:
    6| 0008A4 addi     3AB50001   1     AI        gr21=gr21,1
    6| 0008A8 cmpldi   28350001   1     CL8       cr0=gr21,1
    6| 0008AC bc       4180FFF0   1     BT        CL.141,cr0,0x8/llt,taken=80%(80,20)
   12| 0008B0 or       7FE3FB78   1     LR        gr3=gr31
   12| 0008B4 or       7F24CB78   1     LR        gr4=gr25
   12| 0008B8 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns7.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP2",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   12| 0008BC ori      60000000   1
   13| 0008C0 slw      7C60D830   1     SLL4      gr0=gr3,gr27
    4| 0008C4 addi     3B600000   1     LI        gr27=0
   13| 0008C8 add      7C00B214   1     A         gr0=gr0,gr22
  244| 0008CC addi     3B200020   1     LI        gr25=32
   13| 0008D0 stw      901C0000   1     ST4Z      (unsigned int).rns12.(gr28,0)=gr0
    5| 0008D4 addi     3B800000   1     LI        gr28=0
    6| 0008D8 addi     3AC00000   1     LI        gr22=0
    6|                              CL.146:
    7| 0008DC cmplwi   28190010   1     CL4       cr0=gr25,16
    7| 0008E0 bc       418100EC   1     BT        CL.5528,cr0,0x10/lgt,taken=40%(40,60)
   11|                              CL.149:
    6| 0008E4 addi     3AD60001   1     AI        gr22=gr22,1
    6| 0008E8 cmpldi   28360001   1     CL8       cr0=gr22,1
    6| 0008EC bc       4180FFF0   1     BT        CL.146,cr0,0x8/llt,taken=80%(80,20)
   12| 0008F0 or       7FE3FB78   1     LR        gr3=gr31
   12| 0008F4 or       7F24CB78   1     LR        gr4=gr25
   12| 0008F8 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns7.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP2",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   12| 0008FC ori      60000000   1
   13| 000900 slw      7C60E030   1     SLL4      gr0=gr3,gr28
    5| 000904 addi     3B800000   1     LI        gr28=0
   13| 000908 add      7C00DA14   1     A         gr0=gr0,gr27
   13| 00090C stw      901D0000   1     ST4Z      (unsigned int).rns13.(gr29,0)=gr0
    0| 000910 ori      60210000   1     XNOP      
    0| 000914 ori      60210000   1     XNOP      
    0| 000918 ori      60210000   1     XNOP      
    6|                              CL.151:
    7| 00091C cmplwi   28130010   1     CL4       cr0=gr19,16
    7| 000920 bc       41810084   1     BT        CL.5529,cr0,0x10/lgt,taken=40%(40,60)
   11|                              CL.154:
    6| 000924 addi     3AF70001   1     AI        gr23=gr23,1
    6| 000928 cmpldi   28370001   1     CL8       cr0=gr23,1
    6| 00092C bc       4180FFF0   1     BT        CL.151,cr0,0x8/llt,taken=80%(80,20)
   12| 000930 or       7FE3FB78   1     LR        gr3=gr31
   12| 000934 or       7E649B78   1     LR        gr4=gr19
   12| 000938 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns7.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP2",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   12| 00093C ori      60000000   1
   13| 000940 slw      7C60E030   1     SLL4      gr0=gr3,gr28
   13| 000944 or       7FE3FB78   1     LR        gr3=gr31
   13| 000948 add      7C00C214   1     A         gr0=gr0,gr24
   13| 00094C stw      901E0000   1     ST4Z      (unsigned int).rns14.(gr30,0)=gr0
   13| 000950 bl       48000001   1     CALL      gr3=_ZN9RCdecoder6decodeEv,1,(char).rns7.",gr3,#ProcAlias",_ZN9RCdecoder6decodeEv",fcr",#MX_TEMP2",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   13| 000954 ori      60000000   1
  248| 000958 ld       E9810110   1     L8        gr12=#stack(gr1,272)
   13| 00095C rlwinm   5460063E   1     RN4       gr0=gr3,0,0xFF
  248| 000960 addi     38210100   1     AI        gr1=gr1,256
  247| 000964 stw      901A0000   1     ST4Z      (int).rns15.(gr26,0)=gr0
  248| 000968 ld       EA61FF98   1     L8        gr19=#stack(gr1,-104)
  248| 00096C ld       EA81FFA0   1     L8        gr20=#stack(gr1,-96)
  248| 000970 mtspr    7D8803A6   1     LLR       lr=gr12
  248| 000974 ld       EAA1FFA8   1     L8        gr21=#stack(gr1,-88)
  248| 000978 ld       EAC1FFB0   1     L8        gr22=#stack(gr1,-80)
  248| 00097C ld       EAE1FFB8   1     L8        gr23=#stack(gr1,-72)
  248| 000980 ld       EB01FFC0   1     L8        gr24=#stack(gr1,-64)
  248| 000984 ld       EB21FFC8   1     L8        gr25=#stack(gr1,-56)
  248| 000988 ld       EB41FFD0   1     L8        gr26=#stack(gr1,-48)
  248| 00098C ld       EB61FFD8   1     L8        gr27=#stack(gr1,-40)
  248| 000990 ld       EB81FFE0   1     L8        gr28=#stack(gr1,-32)
  248| 000994 ld       EBA1FFE8   1     L8        gr29=#stack(gr1,-24)
  248| 000998 ld       EBC1FFF0   1     L8        gr30=#stack(gr1,-16)
  248| 00099C ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
  248| 0009A0 bclr     4E800020   1     BA        lr
    0|                              CL.5529:
    3| 0009A4 or       7FE3FB78   1     LR        gr3=gr31
    3| 0009A8 addi     38800010   1     LI        gr4=16
    3| 0009AC bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns7.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP2",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    3| 0009B0 ori      60000000   1
    8| 0009B4 slw      7C60E030   1     SLL4      gr0=gr3,gr28
   10| 0009B8 addi     3873FFF0   1     AI        gr3=gr19,-16
    8| 0009BC add      7F180214   1     A         gr24=gr24,gr0
    9| 0009C0 addi     3B9C0010   1     AI        gr28=gr28,16
   10| 0009C4 rlwinm   5473003E   1     RN4       gr19=gr3,0,0xFFFFFFFF
    0| 0009C8 b        4BFFFF5C   1     B         CL.154,-1
    0|                              CL.5528:
    3| 0009CC or       7FE3FB78   1     LR        gr3=gr31
    3| 0009D0 addi     38800010   1     LI        gr4=16
    3| 0009D4 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns7.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP2",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    3| 0009D8 ori      60000000   1
    8| 0009DC slw      7C60E030   1     SLL4      gr0=gr3,gr28
   10| 0009E0 addi     3879FFF0   1     AI        gr3=gr25,-16
    8| 0009E4 add      7F7B0214   1     A         gr27=gr27,gr0
    9| 0009E8 addi     3B9C0010   1     AI        gr28=gr28,16
   10| 0009EC rlwinm   5479003E   1     RN4       gr25=gr3,0,0xFFFFFFFF
    0| 0009F0 b        4BFFFEF4   1     B         CL.149,-1
    0|                              CL.5527:
    3| 0009F4 or       7FE3FB78   1     LR        gr3=gr31
    3| 0009F8 addi     38800010   1     LI        gr4=16
    3| 0009FC bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns7.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP2",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    3| 000A00 ori      60000000   1
    8| 000A04 slw      7C60D830   1     SLL4      gr0=gr3,gr27
   10| 000A08 addi     3879FFF0   1     AI        gr3=gr25,-16
    8| 000A0C add      7ED60214   1     A         gr22=gr22,gr0
    9| 000A10 addi     3B7B0010   1     AI        gr27=gr27,16
   10| 000A14 rlwinm   5479003E   1     RN4       gr25=gr3,0,0xFFFFFFFF
    0| 000A18 b        4BFFFE8C   1     B         CL.144,-1
    0|                              CL.5526:
    3| 000A1C or       7FE3FB78   1     LR        gr3=gr31
    3| 000A20 addi     38800010   1     LI        gr4=16
    3| 000A24 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns7.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP2",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    3| 000A28 ori      60000000   1
    8| 000A2C slw      7C60A830   1     SLL4      gr0=gr3,gr21
   10| 000A30 addi     3876FFF0   1     AI        gr3=gr22,-16
    8| 000A34 add      7F390214   1     A         gr25=gr25,gr0
    9| 000A38 addi     3AB50010   1     AI        gr21=gr21,16
   10| 000A3C rlwinm   5476003E   1     RN4       gr22=gr3,0,0xFFFFFFFF
    0| 000A40 b        4BFFFE24   1     B         CL.139,-1
   13|                              CL.124:
  237| 000A44 ld       E8620000   1     L8        gr3=.stderr(gr2,0)
  237| 000A48 ld       E8820000   1     L8        gr4=.+CONSTANT_AREA(gr2,0)
  237| 000A4C ld       E8630000   1     L8        gr3=<s52:d0:l8>(gr3,0)
  237| 000A50 addi     3884001C   1     AI        gr4=gr4,28
  237| 000A54 bl       48000001   1     CALL      gr3=fprintf,2,(_IO_FILE).rns2.",gr3,gr4,#ProcAlias",fprintf",fcr",#MX_TEMP2",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  237| 000A58 ori      60000000   1
  238| 000A5C bl       48000001   1     CALL      abort,0,#ProcAlias",abort",fcr",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  238| 000A60 ori      60000000   1
  238| 000A64 tw       7C8E7008   1     TRAP      9
    0|                              CL.5525:
    3| 000A68 or       7FE3FB78   1     LR        gr3=gr31
    3| 000A6C addi     38800010   1     LI        gr4=16
    3| 000A70 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns7.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP2",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    3| 000A74 ori      60000000   1
    8| 000A78 slw      7C60C830   1     SLL4      gr0=gr3,gr25
   10| 000A7C addi     3873FFF0   1     AI        gr3=gr19,-16
    8| 000A80 add      7ED60214   1     A         gr22=gr22,gr0
    9| 000A84 addi     3B390010   1     AI        gr25=gr25,16
   10| 000A88 rlwinm   5473003E   1     RN4       gr19=gr3,0,0xFFFFFFFF
    0| 000A8C b        4BFFFD88   1     B         CL.134,-1
    0|                              CL.5524:
    3| 000A90 or       7FE3FB78   1     LR        gr3=gr31
    3| 000A94 addi     38800010   1     LI        gr4=16
    3| 000A98 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns7.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP2",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    3| 000A9C ori      60000000   1
    8| 000AA0 slw      7C60A830   1     SLL4      gr0=gr3,gr21
   10| 000AA4 addi     3876FFF0   1     AI        gr3=gr22,-16
    8| 000AA8 add      7F390214   1     A         gr25=gr25,gr0
    9| 000AAC addi     3AB50010   1     AI        gr21=gr21,16
   10| 000AB0 rlwinm   5476003E   1     RN4       gr22=gr3,0,0xFFFFFFFF
    0| 000AB4 b        4BFFFD20   1     B         CL.129,-1
   13|                              CL.99:
  230| 000AB8 ld       E8620000   1     L8        gr3=.stderr(gr2,0)
  230| 000ABC ld       E8820000   1     L8        gr4=.+CONSTANT_AREA(gr2,0)
  230| 000AC0 ld       E8630000   1     L8        gr3=<s52:d0:l8>(gr3,0)
  230| 000AC4 bl       48000001   1     CALL      gr3=fprintf,2,(_IO_FILE).rns2.",gr3,gr4,#ProcAlias",fprintf",fcr",#MX_TEMP2",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  230| 000AC8 ori      60000000   1
  231| 000ACC bl       48000001   1     CALL      abort,0,#ProcAlias",abort",fcr",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  231| 000AD0 ori      60000000   1
  231| 000AD4 tw       7C8E7008   1     TRAP      9
    0|                              CL.5523:
    3| 000AD8 or       7FE3FB78   1     LR        gr3=gr31
    3| 000ADC addi     38800010   1     LI        gr4=16
    3| 000AE0 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns7.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP2",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    3| 000AE4 ori      60000000   1
    8| 000AE8 slw      7C60A830   1     SLL4      gr0=gr3,gr21
   10| 000AEC addi     3879FFF0   1     AI        gr3=gr25,-16
    8| 000AF0 add      7ED60214   1     A         gr22=gr22,gr0
    9| 000AF4 addi     3AB50010   1     AI        gr21=gr21,16
   10| 000AF8 rlwinm   5479003E   1     RN4       gr25=gr3,0,0xFFFFFFFF
    0| 000AFC b        4BFFFC88   1     B         CL.121,-1
    0|                              CL.5522:
    3| 000B00 or       7FE3FB78   1     LR        gr3=gr31
    3| 000B04 addi     38800010   1     LI        gr4=16
    3| 000B08 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns7.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP2",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    3| 000B0C ori      60000000   1
    8| 000B10 slw      7C60A830   1     SLL4      gr0=gr3,gr21
   10| 000B14 addi     3876FFF0   1     AI        gr3=gr22,-16
    8| 000B18 add      7E730214   1     A         gr19=gr19,gr0
    9| 000B1C addi     3AB50010   1     AI        gr21=gr21,16
   10| 000B20 rlwinm   5476003E   1     RN4       gr22=gr3,0,0xFFFFFFFF
    0| 000B24 b        4BFFFC20   1     B         CL.116,-1
    0|                              CL.5521:
    3| 000B28 or       7FE3FB78   1     LR        gr3=gr31
    3| 000B2C addi     38800010   1     LI        gr4=16
    3| 000B30 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns7.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP2",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    3| 000B34 ori      60000000   1
    8| 000B38 slw      7C60A030   1     SLL4      gr0=gr3,gr20
   10| 000B3C addi     3875FFF0   1     AI        gr3=gr21,-16
    8| 000B40 add      7ED60214   1     A         gr22=gr22,gr0
    9| 000B44 addi     3A940010   1     AI        gr20=gr20,16
   10| 000B48 rlwinm   5475003E   1     RN4       gr21=gr3,0,0xFFFFFFFF
    0| 000B4C b        4BFFFBA8   1     B         CL.111,-1
    0|                              CL.5520:
    3| 000B50 or       7FE3FB78   1     LR        gr3=gr31
    3| 000B54 addi     38800010   1     LI        gr4=16
    3| 000B58 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns7.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP2",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    3| 000B5C ori      60000000   1
    8| 000B60 slw      7C60A030   1     SLL4      gr0=gr3,gr20
   10| 000B64 addi     3876FFF0   1     AI        gr3=gr22,-16
    8| 000B68 add      7EB50214   1     A         gr21=gr21,gr0
    9| 000B6C addi     3A940010   1     AI        gr20=gr20,16
   10| 000B70 rlwinm   5476003E   1     RN4       gr22=gr3,0,0xFFFFFFFF
    0| 000B74 b        4BFFFB30   1     B         CL.106,-1
     |               Tag Table
     | 000B78        00000000 00092041 800D0600 00000000 00000558 00265F5A
     | 000B90        31306765 745F6865 61646572 50395243 6465636F 64657250
     | 000BA8        6A53315F 53315F53 315F5069
     |               Instruction count          342
     |               Straight-line exec time    342
 GPR's set/used:   ss-s ssss ssss s---  ---- ---- ---- ----
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ----
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     decompress4d<double>(RCdecoder *, double *, int *, unsigned int, unsigned int, unsigned int, unsigned int)
     | 000000                           AKA       _Z12decompress4dIdEvP9RCdecoderPT_Pijjjj
  135|                                  PROC      rd_79_3,data_79_3,prec_79_3,nx_79_3,ny_79_3,nz_79_3,nf_79_3,gr3-gr9
    0| 000BC0 stdu     F821FF81   1     ST8U      gr1,#stack(gr1,-128)=gr1
    0| 000BC4 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 000BC8 std      F8010090   1     ST8       #stack(gr1,144)=gr0
    0| 000BCC rlwinm   5529003F   1     RN4_R     gr9,cr0=gr9,0,0xFFFFFFFF
  146| 000BD0 bc       4182001C   1     BT        CL.5495,cr0,0x4/eq,taken=60%(60,40)
    0| 000BD4 rlwinm   54C6003E   1     RN4       gr6=gr6,0,0xFFFFFFFF
    0| 000BD8 rlwinm   54E7003E   1     RN4       gr7=gr7,0,0xFFFFFFFF
    0| 000BDC rlwinm   5508003E   1     RN4       gr8=gr8,0,0xFFFFFFFF
  170| 000BE0 addi     38210080   1     AI        gr1=gr1,128
  170| 000BE4 b        48007CCC   1     CALLF     decompress4d<double>(RCdecoder *, double *, int *, unsigned int, unsigned int, unsigned int, unsigned int)$AF79_3,7,gr3-gr9,#MX_TEMP3",decompress4d<double>(RCdecoder *, double *, int *, unsigned int, unsigned int, unsigned int, unsigned int)$AF79_3",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  170| 000BE8 ori      60000000   1
  165|                              CL.2244:
  146|                              CL.5495:
  170| 000BEC addi     38210080   1     AI        gr1=gr1,128
  170| 000BF0 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 000BF4        00000000 00092041 80000700 00000000 00000034 00285F5A
     | 000C0C        31326465 636F6D70 72657373 34644964 45765039 52436465
     | 000C24        636F6465 7250545F 50696A6A 6A6A
     |               Instruction count           13
     |               Straight-line exec time     13
 GPR's set/used:   ss-s ssss ssss s---  ---- ---- ---- ----
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ----
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     decompress4d<float>(RCdecoder *, float *, int *, unsigned int, unsigned int, unsigned int, unsigned int)
     | 000000                           AKA       _Z12decompress4dIfEvP9RCdecoderPT_Pijjjj
  135|                                  PROC      rd_78_4,data_78_4,prec_78_4,nx_78_4,ny_78_4,nz_78_4,nf_78_4,gr3-gr9
    0| 000C40 stdu     F821FF81   1     ST8U      gr1,#stack(gr1,-128)=gr1
    0| 000C44 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 000C48 std      F8010090   1     ST8       #stack(gr1,144)=gr0
    0| 000C4C rlwinm   5529003F   1     RN4_R     gr9,cr0=gr9,0,0xFFFFFFFF
  146| 000C50 bc       4182001C   1     BT        CL.4945,cr0,0x4/eq,taken=60%(60,40)
    0| 000C54 rlwinm   54C6003E   1     RN4       gr6=gr6,0,0xFFFFFFFF
    0| 000C58 rlwinm   54E7003E   1     RN4       gr7=gr7,0,0xFFFFFFFF
    0| 000C5C rlwinm   5508003E   1     RN4       gr8=gr8,0,0xFFFFFFFF
  170| 000C60 addi     38210080   1     AI        gr1=gr1,128
  170| 000C64 b        480079AC   1     CALLF     decompress4d<float>(RCdecoder *, float *, int *, unsigned int, unsigned int, unsigned int, unsigned int)$AF78_4,7,gr3-gr9,#MX_TEMP4",decompress4d<float>(RCdecoder *, float *, int *, unsigned int, unsigned int, unsigned int, unsigned int)$AF78_4",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  170| 000C68 ori      60000000   1
  165|                              CL.2136:
  146|                              CL.4945:
  170| 000C6C addi     38210080   1     AI        gr1=gr1,128
  170| 000C70 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 000C74        00000000 00092041 80000700 00000000 00000034 00285F5A
     | 000C8C        31326465 636F6D70 72657373 34644966 45765039 52436465
     | 000CA4        636F6465 7250545F 50696A6A 6A6A
     |               Instruction count           13
     |               Straight-line exec time     13
 GPR's set/used:   ss-s ssss ssss s---  ---- ---- --ss ssss
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ---s
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     PCdecoder<double,PCmap<double,16,void>,1>::decode(double, unsigned int)
     | 000000                           AKA       _ZN9PCdecoderId5PCmapIdLj16EvELb1EE6decodeEdj
   47|                                  PROC      this,pred,context,gr3,fp1,gr5
    0| 000CC0 stfd     DBE1FFF8   1     STFL      #stack(gr1,-8)=fp31
    0| 000CC4 std      FBE1FFF0   1     ST8       #stack(gr1,-16)=gr31
    0| 000CC8 std      FBC1FFE8   1     ST8       #stack(gr1,-24)=gr30
    0| 000CCC std      FBA1FFE0   1     ST8       #stack(gr1,-32)=gr29
    0| 000CD0 std      FB81FFD8   1     ST8       #stack(gr1,-40)=gr28
    0| 000CD4 std      FB61FFD0   1     ST8       #stack(gr1,-48)=gr27
    0| 000CD8 std      FB41FFC8   1     ST8       #stack(gr1,-56)=gr26
    0| 000CDC mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 000CE0 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 000CE4 stdu     F821FEC1   1     ST8U      gr1,#stack(gr1,-320)=gr1
   50| 000CE8 ld       E8830010   1     L8        gr4=(PCdecoder<double,PCmap<double,16,void>,1>).rm@10.rns230.(gr3,16)
    0| 000CEC fmr      FFE00890   1     LRFL      fp31=fp1
    0| 000CF0 or       7C7F1B78   2     LR        gr31=gr3
   50| 000CF4 ld       E8630008   1     L8        gr3=(PCdecoder<double,PCmap<double,16,void>,1>).rd@8.rns231.(gr3,8)
   50| 000CF8 rldic    78A51F48   1     RN8       gr5=gr5,3,0x7FFFFFFF8
   50| 000CFC ldx      7C84282A   1     L8        gr4=(RCmodel *).rns225.(gr4,gr5,0)
   50| 000D00 bl       48000001   1     CALL      gr3=_ZN9RCdecoder6decodeEP7RCmodel,2,(char).rns108.",gr3,(char).rns108.",gr4,#ProcAlias",_ZN9RCdecoder6decodeEP7RCmodel",fcr",#MX_TEMP5",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   50| 000D04 ori      60000000   1
   51| 000D08 cmplwi   28030010   1     CL4       cr0=gr3,16
   51| 000D0C bc       408100F8   1     BF        CL.236,cr0,0x10/lgt,taken=50%(0,0)
   53| 000D10 addi     3B43FFEF   1     AI        gr26=gr3,-17
   53| 000D14 ld       EBFF0008   1     L8        gr31=(PCdecoder<double,PCmap<double,16,void>,1>).rd@8.rns231.(gr31,8)
   53| 000D18 rlwinm   575E003E   1     RN4       gr30=gr26,0,0xFFFFFFFF
    4| 000D1C addi     3BA00000   1     LI        gr29=0
    5| 000D20 addi     3B800000   1     LI        gr28=0
    6| 000D24 addi     3B600000   1     LI        gr27=0
    0| 000D28 ori      60210000   1     XNOP      
    6|                              CL.238:
    7| 000D2C cmplwi   281E0010   1     CL4       cr0=gr30,16
    7| 000D30 bc       418100A0   1     BT        CL.3282,cr0,0x10/lgt,taken=40%(40,60)
    6| 000D34 addi     3B7B0001   1     AI        gr27=gr27,1
    6| 000D38 cmpldi   283B0003   1     CL8       cr0=gr27,3
    6| 000D3C bc       4180FFF0   1     BT        CL.238,cr0,0x8/llt,taken=80%(80,20)
    0|                              CL.3279:
   12| 000D40 or       7FE3FB78   1     LR        gr3=gr31
   12| 000D44 or       7FC4F378   1     LR        gr4=gr30
   12| 000D48 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns108.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP5",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   12| 000D4C ori      60000000   1
   71| 000D50 stfd     DBE10080   1     STFL      shared(gr1,128)=fp31
   55| 000D54 addi     38000001   1     LI        gr0=1
   55| 000D58 sld      7C63E036   1     SLL8      gr3=gr3,gr28
   55| 000D5C sld      7C00D036   1     SLL8      gr0=gr0,gr26
   55| 000D60 add      7C00EA14   1     A         gr0=gr0,gr29
   72| 000D64 ld       E8810080   1     L8        gr4=shared(gr1,128)
  104| 000D68 nor      7C8420F8   1     NOR       gr4=gr4,gr4
  104| 000D6C rldicl   78850FE0   1     SRL8      gr5=gr4,63
  104| 000D70 rldicl   78848420   1     SRL8      gr4=gr4,48
  104| 000D74 neg      7CA500D0   1     COMP      gr5=gr5
  104| 000D78 rldicl   78A57C60   1     SRL8      gr5=gr5,49
  104| 000D7C xor      7C842A78   1     X         gr4=gr4,gr5
   55| 000D80 add      7C632214   1     A         gr3=gr3,gr4
   55| 000D84 add      7C601A14   1     A         gr3=gr0,gr3
  111| 000D88 rldicl   78608BC2   1     SRL8      gr0=gr3,15
  111| 000D8C neg      7C0000D0   1     COMP      gr0=gr0
  111| 000D90 rldicl   78007C60   1     SRL8      gr0=gr0,49
  113| 000D94 eqv      7C001A38   1     EQV       gr0=gr0,gr3
  113| 000D98 rldicr   780083C6   1     SLL8      gr0=gr0,48
   87| 000D9C std      F80100A0   1     ST8       shared(gr1,160)=gr0
   88| 000DA0 lfd      C82100A0   1     LFL       fp1=shared(gr1,160)
   66|                              CL.1944:
   67| 000DA4 ld       E9810150   1     L8        gr12=#stack(gr1,336)
   67| 000DA8 lfd      CBE10138   1     LFL       fp31=#stack(gr1,312)
   67| 000DAC addi     38210140   1     AI        gr1=gr1,320
   67| 000DB0 ld       EB41FFC8   1     L8        gr26=#stack(gr1,-56)
   67| 000DB4 ld       EB61FFD0   1     L8        gr27=#stack(gr1,-48)
   67| 000DB8 mtspr    7D8803A6   1     LLR       lr=gr12
   67| 000DBC ld       EB81FFD8   1     L8        gr28=#stack(gr1,-40)
   67| 000DC0 ld       EBA1FFE0   1     L8        gr29=#stack(gr1,-32)
   67| 000DC4 ld       EBC1FFE8   1     L8        gr30=#stack(gr1,-24)
   67| 000DC8 ld       EBE1FFF0   1     L8        gr31=#stack(gr1,-16)
   67| 000DCC bclr     4E800020   1     BA        lr
    0|                              CL.3282:
    3| 000DD0 or       7FE3FB78   1     LR        gr3=gr31
    3| 000DD4 addi     38800010   1     LI        gr4=16
    3| 000DD8 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns108.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP5",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    3| 000DDC ori      60000000   1
    6| 000DE0 addi     3B7B0001   1     AI        gr27=gr27,1
    8| 000DE4 sld      7C60E036   1     SLL8      gr0=gr3,gr28
   10| 000DE8 addi     387EFFF0   1     AI        gr3=gr30,-16
    6| 000DEC cmpldi   283B0003   1     CL8       cr0=gr27,3
    8| 000DF0 add      7FBD0214   1     A         gr29=gr29,gr0
    9| 000DF4 addi     3B9C0010   1     AI        gr28=gr28,16
   10| 000DF8 rlwinm   547E003E   1     RN4       gr30=gr3,0,0xFFFFFFFF
    6| 000DFC bc       4080FF44   1     BF        CL.3279,cr0,0x8/llt,taken=20%(20,80)
    6| 000E00 b        4BFFFF2C   1     B         CL.238,-1
   57|                              CL.236:
   58| 000E04 bc       408000E0   1     BF        CL.244,cr0,0x8/llt,taken=30%(30,70)
   60| 000E08 subfic   2343000F   1     SFI       gr26=15,gr3,ca"
   60| 000E0C ld       EBFF0008   1     L8        gr31=(PCdecoder<double,PCmap<double,16,void>,1>).rd@8.rns231.(gr31,8)
   60| 000E10 rlwinm   575E003E   1     RN4       gr30=gr26,0,0xFFFFFFFF
    4| 000E14 addi     3BA00000   1     LI        gr29=0
    5| 000E18 addi     3B800000   1     LI        gr28=0
    6| 000E1C addi     3B600000   1     LI        gr27=0
    0| 000E20 ori      60210000   1     XNOP      
    0| 000E24 ori      60210000   1     XNOP      
    0| 000E28 ori      60210000   1     XNOP      
    6|                              CL.246:
    7| 000E2C cmplwi   281E0010   1     CL4       cr0=gr30,16
    7| 000E30 bc       41810080   1     BT        CL.3283,cr0,0x10/lgt,taken=40%(40,60)
    6| 000E34 addi     3B7B0001   1     AI        gr27=gr27,1
    6| 000E38 cmpldi   283B0003   1     CL8       cr0=gr27,3
    6| 000E3C bc       4180FFF0   1     BT        CL.246,cr0,0x8/llt,taken=80%(80,20)
    0| 000E40 ori      60210000   1     XNOP      
    0| 000E44 ori      60210000   1     XNOP      
    0|                              CL.3281:
   12| 000E48 or       7FE3FB78   1     LR        gr3=gr31
   12| 000E4C or       7FC4F378   1     LR        gr4=gr30
   12| 000E50 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns108.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP5",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   12| 000E54 ori      60000000   1
   71| 000E58 stfd     DBE10080   1     STFL      shared(gr1,128)=fp31
   62| 000E5C addi     38000001   1     LI        gr0=1
   62| 000E60 sld      7C63E036   1     SLL8      gr3=gr3,gr28
   62| 000E64 sld      7C00D036   1     SLL8      gr0=gr0,gr26
   62| 000E68 add      7C00EA14   1     A         gr0=gr0,gr29
   62| 000E6C add      7C001A14   1     A         gr0=gr0,gr3
   72| 000E70 ld       E8610080   1     L8        gr3=shared(gr1,128)
  104| 000E74 nor      7C6318F8   1     NOR       gr3=gr3,gr3
  104| 000E78 rldicl   78640FE0   1     SRL8      gr4=gr3,63
  104| 000E7C rldicl   78638420   1     SRL8      gr3=gr3,48
  104| 000E80 neg      7C8400D0   1     COMP      gr4=gr4
  104| 000E84 rldicl   78847C60   1     SRL8      gr4=gr4,49
  104| 000E88 xor      7C632278   1     X         gr3=gr3,gr4
   62| 000E8C subf     7C601850   1     S         gr3=gr3,gr0
  111| 000E90 rldicl   78608BC2   1     SRL8      gr0=gr3,15
  111| 000E94 neg      7C0000D0   1     COMP      gr0=gr0
  111| 000E98 rldicl   78007C60   1     SRL8      gr0=gr0,49
  113| 000E9C eqv      7C001A38   1     EQV       gr0=gr0,gr3
  113| 000EA0 rldicr   780083C6   1     SLL8      gr0=gr0,48
   87| 000EA4 std      F80100A0   1     ST8       shared(gr1,160)=gr0
   88| 000EA8 lfd      C82100A0   1     LFL       fp1=shared(gr1,160)
   63| 000EAC b        4BFFFEF8   1     B         CL.1944,-1
    0|                              CL.3283:
    3| 000EB0 or       7FE3FB78   1     LR        gr3=gr31
    3| 000EB4 addi     38800010   1     LI        gr4=16
    3| 000EB8 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns108.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP5",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    3| 000EBC ori      60000000   1
    6| 000EC0 addi     3B7B0001   1     AI        gr27=gr27,1
    8| 000EC4 sld      7C60E036   1     SLL8      gr0=gr3,gr28
   10| 000EC8 addi     387EFFF0   1     AI        gr3=gr30,-16
    6| 000ECC cmpldi   283B0003   1     CL8       cr0=gr27,3
    8| 000ED0 add      7FBD0214   1     A         gr29=gr29,gr0
    9| 000ED4 addi     3B9C0010   1     AI        gr28=gr28,16
   10| 000ED8 rlwinm   547E003E   1     RN4       gr30=gr3,0,0xFFFFFFFF
    6| 000EDC bc       4080FF6C   1     BF        CL.3281,cr0,0x8/llt,taken=20%(20,80)
    6| 000EE0 b        4BFFFF4C   1     B         CL.246,-1
   64|                              CL.244:
   71| 000EE4 stfd     DBE100C0   1     STFL      shared(gr1,192)=fp31
   67| 000EE8 ld       E9810150   1     L8        gr12=#stack(gr1,336)
   67| 000EEC lfd      CBE10138   1     LFL       fp31=#stack(gr1,312)
   67| 000EF0 mtspr    7D8803A6   1     LLR       lr=gr12
   72| 000EF4 ld       E80100C0   1     L8        gr0=shared(gr1,192)
  123| 000EF8 rldicr   780003C4   1     RN8       gr0=gr0,0,0xFFFF000000000000
   87| 000EFC std      F80100E0   1     ST8       shared(gr1,224)=gr0
   88| 000F00 lfd      C82100E0   1     LFL       fp1=shared(gr1,224)
   67| 000F04 addi     38210140   1     AI        gr1=gr1,320
   67| 000F08 ld       EBE1FFF0   1     L8        gr31=#stack(gr1,-16)
   67| 000F0C bclr     4E800020   1     BA        lr
     |               Tag Table
     | 000F10        00000000 00092241 81060200 60000000 00000250 002D5F5A
     | 000F28        4E395043 6465636F 64657249 64355043 6D617049 644C6A31
     | 000F40        36457645 4C623145 45366465 636F6465 45646A
     |               Instruction count          148
     |               Straight-line exec time    149
 GPR's set/used:   ssus ssss ssss s---  ---- ---s ssss ssss
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ----
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     fpzip_file_read
  286|                                  PROC      file,data,prec,dp,nx,ny,nz,nf,gr3-gr10
    0| 000F60 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 000F64 std      FBC1FFF0   1     ST8       #stack(gr1,-16)=gr30
    0| 000F68 std      FBA1FFE8   1     ST8       #stack(gr1,-24)=gr29
    0| 000F6C std      FB81FFE0   1     ST8       #stack(gr1,-32)=gr28
    0| 000F70 std      FB61FFD8   1     ST8       #stack(gr1,-40)=gr27
    0| 000F74 std      FB41FFD0   1     ST8       #stack(gr1,-48)=gr26
    0| 000F78 std      FB21FFC8   1     ST8       #stack(gr1,-56)=gr25
    0| 000F7C std      FB01FFC0   1     ST8       #stack(gr1,-64)=gr24
    0| 000F80 std      FAE1FFB8   1     ST8       #stack(gr1,-72)=gr23
    0| 000F84 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 000F88 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 000F8C stdu     F821FF21   1     ST8U      gr1,#stack(gr1,-224)=gr1
  300| 000F90 std      F8410028   1     ST8       #cur_toc(gr1,40)=gr2
    0| 000F94 or       7C7F1B78   1     LR        gr31=gr3
  297| 000F98 addi     38601030   1     LI        gr3=4144
    0| 000F9C or       7C9E2378   1     LR        gr30=gr4
    0| 000FA0 or       7CBD2B78   1     LR        gr29=gr5
    0| 000FA4 or       7CDC3378   1     LR        gr28=gr6
    0| 000FA8 rlwinm   54FB003E   1     RN4       gr27=gr7,0,0xFFFFFFFF
    0| 000FAC rlwinm   551A003E   1     RN4       gr26=gr8,0,0xFFFFFFFF
    0| 000FB0 rlwinm   5539003E   1     RN4       gr25=gr9,0,0xFFFFFFFF
    0| 000FB4 rlwinm   5558003E   1     RN4       gr24=gr10,0,0xFFFFFFFF
  297| 000FB8 bl       48000001   1     CALL      gr3=_Znwm,1,gr3,#ProcAlias",_Znwm",fcr",#MX_TEMP6",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  297| 000FBC ori      60000000   1
  297| 000FC0 or       7C771B79   1     LR_R      gr23,cr0=gr3
  297| 000FC4 bc       41820034   1     BT        CL.265,cr0,0x4/eq,taken=50%(0,0)
   10| 000FC8 std      FBF70018   1     ST8       (RCfiledecoder).file@18.rns26.(gr23,24)=gr31
  297| 000FCC ld       E8620000   1     L8        gr3=._ZTV13RCfiledecoder(gr2,0)
    8| 000FD0 addi     3800FFFF   1     LI        gr0=-1
    8| 000FD4 addi     38800000   1     LI        gr4=0
    8| 000FD8 rldicl   78000020   1     RN8       gr0=gr0,0,0xFFFFFFFF
    8| 000FDC stw      90970010   1     ST4Z      (RCdecoder).code@10.rns23.(gr23,16)=gr4
    8| 000FE0 std      F8170008   1     ST8       (RCdecoder).|low@8.rns21.#612|range@c.rns22.#613_6(gr23,8)=gr0
   10| 000FE4 stb      98970014   1     ST1Z      (RCfiledecoder).error@14.rns25.(gr23,20)=gr4
   10| 000FE8 std      F8970020   1     ST8       (RCfiledecoder).|count@20.rns27.#618|index@24.rns28.#619_6(gr23,32)=gr4
   10| 000FEC stw      90970028   1     ST4Z      (RCfiledecoder).size@28.rns29.(gr23,40)=gr4
  297| 000FF0 addi     38030010   1     AI        gr0=gr3,16
  297| 000FF4 std      F8170000   1     ST8       (RCfiledecoder)[]@0.rns24.(gr23,0)=gr0
   10|                              CL.265:
  262| 000FF8 or       7EE3BB78   1     LR        gr3=gr23
  262| 000FFC bl       48000001   1     CALL      _ZN9RCdecoder4initEv,1,(char).rns108.",gr3,#ProcAlias",_ZN9RCdecoder4initEv",fcr",#MX_TEMP6",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  262| 001000 ori      60000000   1
  263| 001004 extsw    7F8807B4   1     EXTS4     gr8=gr28
  263| 001008 or       7EE3BB78   1     LR        gr3=gr23
  263| 00100C or       7F64DB78   1     LR        gr4=gr27
  263| 001010 or       7F45D378   1     LR        gr5=gr26
  263| 001014 or       7F26CB78   1     LR        gr6=gr25
  263| 001018 or       7F07C378   1     LR        gr7=gr24
  263| 00101C bl       4BFFEFE5   1     CALL      read_header(RCdecoder *, unsigned int, unsigned int, unsigned int, unsigned int, int),6,(char).rns108.",gr3-gr8,#ProcAlias",read_header(RCdecoder *, unsigned int, unsigned int, unsigned int, unsigned int, int)",fcr",#MX_TEMP6",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  263| 001020 ori      60000000   1
  264| 001024 cmpwi    2C1C0000   1     C4        cr0=gr28,0
  264| 001028 bc       408200B8   1     BF        CL.4208,cr0,0x4/eq,taken=50%(0,0)
  267| 00102C or       7EE3BB78   1     LR        gr3=gr23
  267| 001030 or       7FC4F378   1     LR        gr4=gr30
  267| 001034 or       7FA5EB78   1     LR        gr5=gr29
  267| 001038 or       7F66DB78   1     LR        gr6=gr27
  267| 00103C or       7F47D378   1     LR        gr7=gr26
  267| 001040 or       7F28CB78   1     LR        gr8=gr25
  267| 001044 or       7F09C378   1     LR        gr9=gr24
  267| 001048 bl       4BFFFBF9   1     CALL      decompress4d<float>(RCdecoder *, float *, int *, unsigned int, unsigned int, unsigned int, unsigned int),7,(char).rns108.",gr3,(float;void).rns80.",gr4,(int).rns78.$$57",gr5-gr9,#ProcAlias",decompress4d<float>(RCdecoder *, float *, int *, unsigned int, unsigned int, unsigned int, unsigned int)",fcr",#MX_TEMP6",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  267| 00104C ori      60000000   1
  299| 001050 lbz      88170014   1     L1Z       gr0=(RCfiledecoder).error@14.rns25.(gr23,20)
  299| 001054 cmpdi    2C200000   1     C8        cr0=gr0,0
  299| 001058 bc       41820080   1     BT        CL.4205,cr0,0x4/eq,taken=50%(0,0)
    0| 00105C ori      60210000   1     XNOP      
    0| 001060 ori      60210000   1     XNOP      
    0| 001064 ori      60210000   1     XNOP      
    0|                              CL.4204:
  299| 001068 addi     3BE00000   1     LI        gr31=0
   25|                              CL.269:
  300| 00106C cmpdi    2C370000   1     C8        cr0=gr23,0
  300| 001070 bc       41820060   1     BT        CL.5541,cr0,0x4/eq,taken=30%(30,70)
  300| 001074 ld       E8970000   1     L8        gr4=(RCfiledecoder)[]@0.rns24.(gr23,0)
  300| 001078 or       7EE3BB78   1     LR        gr3=gr23
  300| 00107C ld       E8840008   1     L8        gr4=((*)();__vftTypeGCCV3).rns19.(gr4,8)
  300| 001080 ld       E8040000   1     L8        gr0=#fnc_adr(gr4,0)
  300| 001084 ld       E9640010   1     L8        gr11=#new_env(gr4,16)
  300| 001088 mtspr    7C0903A6   1     LCTR      ctr=gr0
  300| 00108C ld       E8440008   1     CALL      gr3=gr4,1,(char).rns18.",gr3,#ProcAlias",fcr",#MX_TEMP6",(()vf).rns20.",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr",#fnc_adr,#cur_toc,ctr,gr11,#new_env,#(glue_dr_n,0,(()vf).rns20."
  300| 001090 bcctrl   4E800421   1
  300| 001094 ld       E8410028   1
  301| 001098 or       7FE3FB78   1     LR        gr3=gr31
  301|                              CL.1927:
  302| 00109C ld       E98100F0   1     L8        gr12=#stack(gr1,240)
  302| 0010A0 addi     382100E0   1     AI        gr1=gr1,224
  302| 0010A4 ld       EAE1FFB8   1     L8        gr23=#stack(gr1,-72)
  302| 0010A8 ld       EB01FFC0   1     L8        gr24=#stack(gr1,-64)
  302| 0010AC ld       EB21FFC8   1     L8        gr25=#stack(gr1,-56)
  302| 0010B0 mtspr    7D8803A6   1     LLR       lr=gr12
  302| 0010B4 ld       EB41FFD0   1     L8        gr26=#stack(gr1,-48)
  302| 0010B8 ld       EB61FFD8   1     L8        gr27=#stack(gr1,-40)
  302| 0010BC ld       EB81FFE0   1     L8        gr28=#stack(gr1,-32)
  302| 0010C0 ld       EBA1FFE8   1     L8        gr29=#stack(gr1,-24)
  302| 0010C4 ld       EBC1FFF0   1     L8        gr30=#stack(gr1,-16)
  302| 0010C8 ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
  302| 0010CC bclr     4E800020   1     BA        lr
    0|                              CL.5541:
  301| 0010D0 or       7FE3FB78   1     LR        gr3=gr31
    0| 0010D4 b        4BFFFFC8   1     B         CL.1927,-1
    0|                              CL.4205:
   25| 0010D8 lwz      83F70020   1     L4Z       gr31=(RCfiledecoder).count@20.rns27.(gr23,32)
    0| 0010DC b        4BFFFF90   1     B         CL.269,-1
    0|                              CL.4208:
  265| 0010E0 or       7EE3BB78   1     LR        gr3=gr23
  265| 0010E4 or       7FC4F378   1     LR        gr4=gr30
  265| 0010E8 or       7FA5EB78   1     LR        gr5=gr29
  265| 0010EC or       7F66DB78   1     LR        gr6=gr27
  265| 0010F0 or       7F47D378   1     LR        gr7=gr26
  265| 0010F4 or       7F28CB78   1     LR        gr8=gr25
  265| 0010F8 or       7F09C378   1     LR        gr9=gr24
  265| 0010FC bl       4BFFFAC5   1     CALL      decompress4d<double>(RCdecoder *, double *, int *, unsigned int, unsigned int, unsigned int, unsigned int),7,(char).rns108.",gr3,(double;void).rns79.",gr4,(int).rns78.$$57",gr5-gr9,#ProcAlias",decompress4d<double>(RCdecoder *, double *, int *, unsigned int, unsigned int, unsigned int, unsigned int)",fcr",#MX_TEMP6",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  265| 001100 ori      60000000   1
  299| 001104 lbz      88170014   1     L1Z       gr0=(RCfiledecoder).error@14.rns25.(gr23,20)
  299| 001108 cmpdi    2C200000   1     C8        cr0=gr0,0
  299| 00110C bc       4082FF5C   1     BF        CL.4204,cr0,0x4/eq,taken=50%(0,0)
   25| 001110 b        4BFFFFC8   1     B         CL.4205,-1
     |               Tag Table
     | 001114        00000000 00092041 80090800 00000000 000001B4 000F6670
     | 00112C        7A69705F 66696C65 5F726561 64
     |               Instruction count          109
     |               Straight-line exec time    109
 GPR's set/used:   ss-s ssss ssss s---  ---- ---- --ss ssss
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ---s
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     PCdecoder<double,PCmap<double,32,void>,1>::decode(double, unsigned int)
     | 000000                           AKA       _ZN9PCdecoderId5PCmapIdLj32EvELb1EE6decodeEdj
   47|                                  PROC      this,pred,context,gr3,fp1,gr5
    0| 001140 stfd     DBE1FFF8   1     STFL      #stack(gr1,-8)=fp31
    0| 001144 std      FBE1FFF0   1     ST8       #stack(gr1,-16)=gr31
    0| 001148 std      FBC1FFE8   1     ST8       #stack(gr1,-24)=gr30
    0| 00114C std      FBA1FFE0   1     ST8       #stack(gr1,-32)=gr29
    0| 001150 std      FB81FFD8   1     ST8       #stack(gr1,-40)=gr28
    0| 001154 std      FB61FFD0   1     ST8       #stack(gr1,-48)=gr27
    0| 001158 std      FB41FFC8   1     ST8       #stack(gr1,-56)=gr26
    0| 00115C mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 001160 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 001164 stdu     F821FEC1   1     ST8U      gr1,#stack(gr1,-320)=gr1
   50| 001168 ld       E8830010   1     L8        gr4=(PCdecoder<double,PCmap<double,32,void>,1>).rm@10.rns240.(gr3,16)
    0| 00116C fmr      FFE00890   1     LRFL      fp31=fp1
    0| 001170 or       7C7F1B78   2     LR        gr31=gr3
   50| 001174 ld       E8630008   1     L8        gr3=(PCdecoder<double,PCmap<double,32,void>,1>).rd@8.rns241.(gr3,8)
   50| 001178 rldic    78A51F48   1     RN8       gr5=gr5,3,0x7FFFFFFF8
   50| 00117C ldx      7C84282A   1     L8        gr4=(RCmodel *).rns225.(gr4,gr5,0)
   50| 001180 bl       48000001   1     CALL      gr3=_ZN9RCdecoder6decodeEP7RCmodel,2,(char).rns108.",gr3,(char).rns108.",gr4,#ProcAlias",_ZN9RCdecoder6decodeEP7RCmodel",fcr",#MX_TEMP7",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   50| 001184 ori      60000000   1
   51| 001188 cmplwi   28030020   1     CL4       cr0=gr3,32
   51| 00118C bc       408100F8   1     BF        CL.277,cr0,0x10/lgt,taken=50%(0,0)
   53| 001190 addi     3B43FFDF   1     AI        gr26=gr3,-33
   53| 001194 ld       EBFF0008   1     L8        gr31=(PCdecoder<double,PCmap<double,32,void>,1>).rd@8.rns241.(gr31,8)
   53| 001198 rlwinm   575E003E   1     RN4       gr30=gr26,0,0xFFFFFFFF
    4| 00119C addi     3BA00000   1     LI        gr29=0
    5| 0011A0 addi     3B800000   1     LI        gr28=0
    6| 0011A4 addi     3B600000   1     LI        gr27=0
    0| 0011A8 ori      60210000   1     XNOP      
    6|                              CL.279:
    7| 0011AC cmplwi   281E0010   1     CL4       cr0=gr30,16
    7| 0011B0 bc       418100A0   1     BT        CL.3963,cr0,0x10/lgt,taken=40%(40,60)
    6| 0011B4 addi     3B7B0001   1     AI        gr27=gr27,1
    6| 0011B8 cmpldi   283B0003   1     CL8       cr0=gr27,3
    6| 0011BC bc       4180FFF0   1     BT        CL.279,cr0,0x8/llt,taken=80%(80,20)
    0|                              CL.3960:
   12| 0011C0 or       7FE3FB78   1     LR        gr3=gr31
   12| 0011C4 or       7FC4F378   1     LR        gr4=gr30
   12| 0011C8 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns108.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP7",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   12| 0011CC ori      60000000   1
   71| 0011D0 stfd     DBE10080   1     STFL      shared(gr1,128)=fp31
   55| 0011D4 addi     38000001   1     LI        gr0=1
   55| 0011D8 sld      7C63E036   1     SLL8      gr3=gr3,gr28
   55| 0011DC sld      7C00D036   1     SLL8      gr0=gr0,gr26
   55| 0011E0 add      7C00EA14   1     A         gr0=gr0,gr29
   72| 0011E4 ld       E8810080   1     L8        gr4=shared(gr1,128)
  104| 0011E8 nor      7C8420F8   1     NOR       gr4=gr4,gr4
  104| 0011EC rldicl   78850FE0   1     SRL8      gr5=gr4,63
  104| 0011F0 rldicl   78840022   1     SRL8      gr4=gr4,32
  104| 0011F4 neg      7CA500D0   1     COMP      gr5=gr5
  104| 0011F8 rldicl   78A5F860   1     SRL8      gr5=gr5,33
  104| 0011FC xor      7C842A78   1     X         gr4=gr4,gr5
   55| 001200 add      7C632214   1     A         gr3=gr3,gr4
   55| 001204 add      7C601A14   1     A         gr3=gr0,gr3
  111| 001208 rldicl   78600FC2   1     SRL8      gr0=gr3,31
  111| 00120C neg      7C0000D0   1     COMP      gr0=gr0
  111| 001210 rldicl   7800F860   1     SRL8      gr0=gr0,33
  113| 001214 eqv      7C001A38   1     EQV       gr0=gr0,gr3
  113| 001218 rldicr   780007C6   1     SLL8      gr0=gr0,32
   87| 00121C std      F80100A0   1     ST8       shared(gr1,160)=gr0
   88| 001220 lfd      C82100A0   1     LFL       fp1=shared(gr1,160)
   66|                              CL.1946:
   67| 001224 ld       E9810150   1     L8        gr12=#stack(gr1,336)
   67| 001228 lfd      CBE10138   1     LFL       fp31=#stack(gr1,312)
   67| 00122C addi     38210140   1     AI        gr1=gr1,320
   67| 001230 ld       EB41FFC8   1     L8        gr26=#stack(gr1,-56)
   67| 001234 ld       EB61FFD0   1     L8        gr27=#stack(gr1,-48)
   67| 001238 mtspr    7D8803A6   1     LLR       lr=gr12
   67| 00123C ld       EB81FFD8   1     L8        gr28=#stack(gr1,-40)
   67| 001240 ld       EBA1FFE0   1     L8        gr29=#stack(gr1,-32)
   67| 001244 ld       EBC1FFE8   1     L8        gr30=#stack(gr1,-24)
   67| 001248 ld       EBE1FFF0   1     L8        gr31=#stack(gr1,-16)
   67| 00124C bclr     4E800020   1     BA        lr
    0|                              CL.3963:
    3| 001250 or       7FE3FB78   1     LR        gr3=gr31
    3| 001254 addi     38800010   1     LI        gr4=16
    3| 001258 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns108.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP7",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    3| 00125C ori      60000000   1
    6| 001260 addi     3B7B0001   1     AI        gr27=gr27,1
    8| 001264 sld      7C60E036   1     SLL8      gr0=gr3,gr28
   10| 001268 addi     387EFFF0   1     AI        gr3=gr30,-16
    6| 00126C cmpldi   283B0003   1     CL8       cr0=gr27,3
    8| 001270 add      7FBD0214   1     A         gr29=gr29,gr0
    9| 001274 addi     3B9C0010   1     AI        gr28=gr28,16
   10| 001278 rlwinm   547E003E   1     RN4       gr30=gr3,0,0xFFFFFFFF
    6| 00127C bc       4080FF44   1     BF        CL.3960,cr0,0x8/llt,taken=20%(20,80)
    6| 001280 b        4BFFFF2C   1     B         CL.279,-1
   57|                              CL.277:
   58| 001284 bc       408000E0   1     BF        CL.285,cr0,0x8/llt,taken=30%(30,70)
   60| 001288 subfic   2343001F   1     SFI       gr26=31,gr3,ca"
   60| 00128C ld       EBFF0008   1     L8        gr31=(PCdecoder<double,PCmap<double,32,void>,1>).rd@8.rns241.(gr31,8)
   60| 001290 rlwinm   575E003E   1     RN4       gr30=gr26,0,0xFFFFFFFF
    4| 001294 addi     3BA00000   1     LI        gr29=0
    5| 001298 addi     3B800000   1     LI        gr28=0
    6| 00129C addi     3B600000   1     LI        gr27=0
    0| 0012A0 ori      60210000   1     XNOP      
    0| 0012A4 ori      60210000   1     XNOP      
    0| 0012A8 ori      60210000   1     XNOP      
    6|                              CL.287:
    7| 0012AC cmplwi   281E0010   1     CL4       cr0=gr30,16
    7| 0012B0 bc       41810080   1     BT        CL.3964,cr0,0x10/lgt,taken=40%(40,60)
    6| 0012B4 addi     3B7B0001   1     AI        gr27=gr27,1
    6| 0012B8 cmpldi   283B0003   1     CL8       cr0=gr27,3
    6| 0012BC bc       4180FFF0   1     BT        CL.287,cr0,0x8/llt,taken=80%(80,20)
    0| 0012C0 ori      60210000   1     XNOP      
    0| 0012C4 ori      60210000   1     XNOP      
    0|                              CL.3962:
   12| 0012C8 or       7FE3FB78   1     LR        gr3=gr31
   12| 0012CC or       7FC4F378   1     LR        gr4=gr30
   12| 0012D0 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns108.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP7",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   12| 0012D4 ori      60000000   1
   71| 0012D8 stfd     DBE10080   1     STFL      shared(gr1,128)=fp31
   62| 0012DC addi     38000001   1     LI        gr0=1
   62| 0012E0 sld      7C63E036   1     SLL8      gr3=gr3,gr28
   62| 0012E4 sld      7C00D036   1     SLL8      gr0=gr0,gr26
   62| 0012E8 add      7C00EA14   1     A         gr0=gr0,gr29
   62| 0012EC add      7C001A14   1     A         gr0=gr0,gr3
   72| 0012F0 ld       E8610080   1     L8        gr3=shared(gr1,128)
  104| 0012F4 nor      7C6318F8   1     NOR       gr3=gr3,gr3
  104| 0012F8 rldicl   78640FE0   1     SRL8      gr4=gr3,63
  104| 0012FC rldicl   78630022   1     SRL8      gr3=gr3,32
  104| 001300 neg      7C8400D0   1     COMP      gr4=gr4
  104| 001304 rldicl   7884F860   1     SRL8      gr4=gr4,33
  104| 001308 xor      7C632278   1     X         gr3=gr3,gr4
   62| 00130C subf     7C601850   1     S         gr3=gr3,gr0
  111| 001310 rldicl   78600FC2   1     SRL8      gr0=gr3,31
  111| 001314 neg      7C0000D0   1     COMP      gr0=gr0
  111| 001318 rldicl   7800F860   1     SRL8      gr0=gr0,33
  113| 00131C eqv      7C001A38   1     EQV       gr0=gr0,gr3
  113| 001320 rldicr   780007C6   1     SLL8      gr0=gr0,32
   87| 001324 std      F80100A0   1     ST8       shared(gr1,160)=gr0
   88| 001328 lfd      C82100A0   1     LFL       fp1=shared(gr1,160)
   63| 00132C b        4BFFFEF8   1     B         CL.1946,-1
    0|                              CL.3964:
    3| 001330 or       7FE3FB78   1     LR        gr3=gr31
    3| 001334 addi     38800010   1     LI        gr4=16
    3| 001338 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns108.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP7",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    3| 00133C ori      60000000   1
    6| 001340 addi     3B7B0001   1     AI        gr27=gr27,1
    8| 001344 sld      7C60E036   1     SLL8      gr0=gr3,gr28
   10| 001348 addi     387EFFF0   1     AI        gr3=gr30,-16
    6| 00134C cmpldi   283B0003   1     CL8       cr0=gr27,3
    8| 001350 add      7FBD0214   1     A         gr29=gr29,gr0
    9| 001354 addi     3B9C0010   1     AI        gr28=gr28,16
   10| 001358 rlwinm   547E003E   1     RN4       gr30=gr3,0,0xFFFFFFFF
    6| 00135C bc       4080FF6C   1     BF        CL.3962,cr0,0x8/llt,taken=20%(20,80)
    6| 001360 b        4BFFFF4C   1     B         CL.287,-1
   64|                              CL.285:
   71| 001364 stfd     DBE100C0   1     STFL      shared(gr1,192)=fp31
   67| 001368 ld       E9810150   1     L8        gr12=#stack(gr1,336)
   67| 00136C lfd      CBE10138   1     LFL       fp31=#stack(gr1,312)
   67| 001370 mtspr    7D8803A6   1     LLR       lr=gr12
   72| 001374 ld       E80100C0   1     L8        gr0=shared(gr1,192)
  123| 001378 rldicr   780007C4   1     RN8       gr0=gr0,0,0xFFFFFFFF00000000
   87| 00137C std      F80100E0   1     ST8       shared(gr1,224)=gr0
   88| 001380 lfd      C82100E0   1     LFL       fp1=shared(gr1,224)
   67| 001384 addi     38210140   1     AI        gr1=gr1,320
   67| 001388 ld       EBE1FFF0   1     L8        gr31=#stack(gr1,-16)
   67| 00138C bclr     4E800020   1     BA        lr
     |               Tag Table
     | 001390        00000000 00092241 81060200 60000000 00000250 002D5F5A
     | 0013A8        4E395043 6465636F 64657249 64355043 6D617049 644C6A33
     | 0013C0        32457645 4C623145 45366465 636F6465 45646A
     |               Instruction count          148
     |               Straight-line exec time    149
 GPR's set/used:   ssus ssss ssss s---  ---- ---s ssss ssss
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ----
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     fpzip_memory_read
  306|                                  PROC      buffer,data,prec,dp,nx,ny,nz,nf,gr3-gr10
    0| 0013E0 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 0013E4 std      FBC1FFF0   1     ST8       #stack(gr1,-16)=gr30
    0| 0013E8 std      FBA1FFE8   1     ST8       #stack(gr1,-24)=gr29
    0| 0013EC std      FB81FFE0   1     ST8       #stack(gr1,-32)=gr28
    0| 0013F0 std      FB61FFD8   1     ST8       #stack(gr1,-40)=gr27
    0| 0013F4 std      FB41FFD0   1     ST8       #stack(gr1,-48)=gr26
    0| 0013F8 std      FB21FFC8   1     ST8       #stack(gr1,-56)=gr25
    0| 0013FC std      FB01FFC0   1     ST8       #stack(gr1,-64)=gr24
    0| 001400 std      FAE1FFB8   1     ST8       #stack(gr1,-72)=gr23
    0| 001404 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 001408 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 00140C stdu     F821FF21   1     ST8U      gr1,#stack(gr1,-224)=gr1
  320| 001410 std      F8410028   1     ST8       #cur_toc(gr1,40)=gr2
    0| 001414 or       7C7F1B78   1     LR        gr31=gr3
  317| 001418 addi     38600028   1     LI        gr3=40
    0| 00141C or       7C9E2378   1     LR        gr30=gr4
    0| 001420 or       7CBD2B78   1     LR        gr29=gr5
    0| 001424 or       7CDC3378   1     LR        gr28=gr6
    0| 001428 rlwinm   54FB003E   1     RN4       gr27=gr7,0,0xFFFFFFFF
    0| 00142C rlwinm   551A003E   1     RN4       gr26=gr8,0,0xFFFFFFFF
    0| 001430 rlwinm   5539003E   1     RN4       gr25=gr9,0,0xFFFFFFFF
    0| 001434 rlwinm   5558003E   1     RN4       gr24=gr10,0,0xFFFFFFFF
  317| 001438 bl       48000001   1     CALL      gr3=_Znwm,1,gr3,#ProcAlias",_Znwm",fcr",#MX_TEMP9",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  317| 00143C ori      60000000   1
  317| 001440 or       7C771B79   1     LR_R      gr23,cr0=gr3
  317| 001444 bc       41820030   1     BT        CL.318,cr0,0x4/eq,taken=50%(0,0)
   57| 001448 std      FBF70018   1     ST8       (RCmemdecoder).ptr@18.rns40.(gr23,24)=gr31
   57| 00144C std      FBF70020   1     ST8       (RCmemdecoder).begin@20.rns41.(gr23,32)=gr31
  317| 001450 ld       E8620000   1     L8        gr3=._ZTV12RCmemdecoder(gr2,0)
    8| 001454 addi     3800FFFF   1     LI        gr0=-1
    8| 001458 addi     38800000   1     LI        gr4=0
    8| 00145C rldicl   78000020   1     RN8       gr0=gr0,0,0xFFFFFFFF
    8| 001460 stw      90970010   1     ST4Z      (RCdecoder).code@10.rns23.(gr23,16)=gr4
    8| 001464 std      F8170008   1     ST8       (RCdecoder).|low@8.rns21.#612|range@c.rns22.#613_9(gr23,8)=gr0
   57| 001468 stb      98970014   1     ST1Z      (RCmemdecoder).error@14.rns39.(gr23,20)=gr4
  317| 00146C addi     38030010   1     AI        gr0=gr3,16
  317| 001470 std      F8170000   1     ST8       (RCmemdecoder)[]@0.rns38.(gr23,0)=gr0
   57|                              CL.318:
  262| 001474 or       7EE3BB78   1     LR        gr3=gr23
  262| 001478 bl       48000001   1     CALL      _ZN9RCdecoder4initEv,1,(char).rns108.",gr3,#ProcAlias",_ZN9RCdecoder4initEv",fcr",#MX_TEMP9",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  262| 00147C ori      60000000   1
  263| 001480 extsw    7F8807B4   1     EXTS4     gr8=gr28
  263| 001484 or       7EE3BB78   1     LR        gr3=gr23
  263| 001488 or       7F64DB78   1     LR        gr4=gr27
  263| 00148C or       7F45D378   1     LR        gr5=gr26
  263| 001490 or       7F26CB78   1     LR        gr6=gr25
  263| 001494 or       7F07C378   1     LR        gr7=gr24
  263| 001498 bl       4BFFEB69   1     CALL      read_header(RCdecoder *, unsigned int, unsigned int, unsigned int, unsigned int, int),6,(char).rns108.",gr3-gr8,#ProcAlias",read_header(RCdecoder *, unsigned int, unsigned int, unsigned int, unsigned int, int)",fcr",#MX_TEMP9",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  263| 00149C ori      60000000   1
  264| 0014A0 cmpwi    2C1C0000   1     C4        cr0=gr28,0
  264| 0014A4 bc       408200BC   1     BF        CL.4215,cr0,0x4/eq,taken=50%(0,0)
  267| 0014A8 or       7EE3BB78   1     LR        gr3=gr23
  267| 0014AC or       7FC4F378   1     LR        gr4=gr30
  267| 0014B0 or       7FA5EB78   1     LR        gr5=gr29
  267| 0014B4 or       7F66DB78   1     LR        gr6=gr27
  267| 0014B8 or       7F47D378   1     LR        gr7=gr26
  267| 0014BC or       7F28CB78   1     LR        gr8=gr25
  267| 0014C0 or       7F09C378   1     LR        gr9=gr24
  267| 0014C4 bl       4BFFF77D   1     CALL      decompress4d<float>(RCdecoder *, float *, int *, unsigned int, unsigned int, unsigned int, unsigned int),7,(char).rns108.",gr3,(float;void).rns80.",gr4,(int).rns78.$$57",gr5-gr9,#ProcAlias",decompress4d<float>(RCdecoder *, float *, int *, unsigned int, unsigned int, unsigned int, unsigned int)",fcr",#MX_TEMP9",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  267| 0014C8 ori      60000000   1
  319| 0014CC lbz      88170014   1     L1Z       gr0=(RCmemdecoder).error@14.rns39.(gr23,20)
  319| 0014D0 cmpdi    2C200000   1     C8        cr0=gr0,0
  319| 0014D4 bc       41820078   1     BT        CL.4212,cr0,0x4/eq,taken=50%(0,0)
    0| 0014D8 ori      60210000   1     XNOP      
    0|                              CL.4211:
  319| 0014DC addi     3BE00000   1     LI        gr31=0
   59|                              CL.322:
  320| 0014E0 cmpdi    2C370000   1     C8        cr0=gr23,0
  320| 0014E4 bc       41820060   1     BT        CL.5540,cr0,0x4/eq,taken=30%(30,70)
  320| 0014E8 ld       E8970000   1     L8        gr4=(RCmemdecoder)[]@0.rns38.(gr23,0)
  320| 0014EC or       7EE3BB78   1     LR        gr3=gr23
  320| 0014F0 ld       E8840008   1     L8        gr4=((*)();__vftTypeGCCV3).rns19.(gr4,8)
  320| 0014F4 ld       E8040000   1     L8        gr0=#fnc_adr(gr4,0)
  320| 0014F8 ld       E9640010   1     L8        gr11=#new_env(gr4,16)
  320| 0014FC mtspr    7C0903A6   1     LCTR      ctr=gr0
  320| 001500 ld       E8440008   1     CALL      gr3=gr4,1,(char).rns18.",gr3,#ProcAlias",fcr",#MX_TEMP9",(()vf).rns34.",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr",#fnc_adr,#cur_toc,ctr,gr11,#new_env,#(glue_dr_n,0,(()vf).rns34."
  320| 001504 bcctrl   4E800421   1
  320| 001508 ld       E8410028   1
  321| 00150C or       7FE3FB78   1     LR        gr3=gr31
  321|                              CL.1928:
  322| 001510 ld       E98100F0   1     L8        gr12=#stack(gr1,240)
  322| 001514 addi     382100E0   1     AI        gr1=gr1,224
  322| 001518 ld       EAE1FFB8   1     L8        gr23=#stack(gr1,-72)
  322| 00151C ld       EB01FFC0   1     L8        gr24=#stack(gr1,-64)
  322| 001520 ld       EB21FFC8   1     L8        gr25=#stack(gr1,-56)
  322| 001524 mtspr    7D8803A6   1     LLR       lr=gr12
  322| 001528 ld       EB41FFD0   1     L8        gr26=#stack(gr1,-48)
  322| 00152C ld       EB61FFD8   1     L8        gr27=#stack(gr1,-40)
  322| 001530 ld       EB81FFE0   1     L8        gr28=#stack(gr1,-32)
  322| 001534 ld       EBA1FFE8   1     L8        gr29=#stack(gr1,-24)
  322| 001538 ld       EBC1FFF0   1     L8        gr30=#stack(gr1,-16)
  322| 00153C ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
  322| 001540 bclr     4E800020   1     BA        lr
    0|                              CL.5540:
  321| 001544 or       7FE3FB78   1     LR        gr3=gr31
    0| 001548 b        4BFFFFC8   1     B         CL.1928,-1
    0|                              CL.4212:
   59| 00154C ld       E8170018   1     L8        gr0=(RCmemdecoder).ptr@18.rns40.(gr23,24)
   59| 001550 ld       E8770020   1     L8        gr3=(RCmemdecoder).begin@20.rns41.(gr23,32)
   59| 001554 subf     7C030050   1     S         gr0=gr0,gr3
   59| 001558 rlwinm   541F003E   1     RN4       gr31=gr0,0,0xFFFFFFFF
    0| 00155C b        4BFFFF84   1     B         CL.322,-1
    0|                              CL.4215:
  265| 001560 or       7EE3BB78   1     LR        gr3=gr23
  265| 001564 or       7FC4F378   1     LR        gr4=gr30
  265| 001568 or       7FA5EB78   1     LR        gr5=gr29
  265| 00156C or       7F66DB78   1     LR        gr6=gr27
  265| 001570 or       7F47D378   1     LR        gr7=gr26
  265| 001574 or       7F28CB78   1     LR        gr8=gr25
  265| 001578 or       7F09C378   1     LR        gr9=gr24
  265| 00157C bl       4BFFF645   1     CALL      decompress4d<double>(RCdecoder *, double *, int *, unsigned int, unsigned int, unsigned int, unsigned int),7,(char).rns108.",gr3,(double;void).rns79.",gr4,(int).rns78.$$57",gr5-gr9,#ProcAlias",decompress4d<double>(RCdecoder *, double *, int *, unsigned int, unsigned int, unsigned int, unsigned int)",fcr",#MX_TEMP9",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  265| 001580 ori      60000000   1
  319| 001584 lbz      88170014   1     L1Z       gr0=(RCmemdecoder).error@14.rns39.(gr23,20)
  319| 001588 cmpdi    2C200000   1     C8        cr0=gr0,0
  319| 00158C bc       4082FF50   1     BF        CL.4211,cr0,0x4/eq,taken=50%(0,0)
   59| 001590 b        4BFFFFBC   1     B         CL.4212,-1
     |               Tag Table
     | 001594        00000000 00092041 80090800 00000000 000001B4 00116670
     | 0015AC        7A69705F 6D656D6F 72795F72 656164
     |               Instruction count          109
     |               Straight-line exec time    109
 GPR's set/used:   ssus ssss ssss s---  ---- ---- -sss ssss
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ----
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     fpzip_memory_get_header
  326|                                  PROC      buffer,dp,nx,ny,nz,nf,gr3-gr8
    0| 0015C0 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 0015C4 std      FBC1FFF0   1     ST8       #stack(gr1,-16)=gr30
    0| 0015C8 std      FBA1FFE8   1     ST8       #stack(gr1,-24)=gr29
    0| 0015CC std      FB81FFE0   1     ST8       #stack(gr1,-32)=gr28
    0| 0015D0 std      FB61FFD8   1     ST8       #stack(gr1,-40)=gr27
    0| 0015D4 std      FB41FFD0   1     ST8       #stack(gr1,-48)=gr26
    0| 0015D8 std      FB21FFC8   1     ST8       #stack(gr1,-56)=gr25
    0| 0015DC mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 0015E0 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 0015E4 stdu     F821FF41   1     ST8U      gr1,#stack(gr1,-192)=gr1
  337| 0015E8 std      F8410028   1     ST8       #cur_toc(gr1,40)=gr2
    0| 0015EC or       7C7F1B78   1     LR        gr31=gr3
  335| 0015F0 addi     38600028   1     LI        gr3=40
    0| 0015F4 or       7C9E2378   1     LR        gr30=gr4
    0| 0015F8 or       7CBD2B78   1     LR        gr29=gr5
    0| 0015FC or       7CDC3378   1     LR        gr28=gr6
    0| 001600 or       7CFB3B78   1     LR        gr27=gr7
    0| 001604 or       7D1A4378   1     LR        gr26=gr8
  335| 001608 bl       48000001   1     CALL      gr3=_Znwm,1,gr3,#ProcAlias",_Znwm",fcr",#MX_TEMP10",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  335| 00160C ori      60000000   1
  335| 001610 cmpdi    2C230000   1     C8        cr0=gr3,0
  335| 001614 bc       418200B0   1     BT        CL.340,cr0,0x4/eq,taken=30%(30,70)
   57| 001618 std      FBE30018   1     ST8       (RCmemdecoder).ptr@18.rns40.(gr3,24)=gr31
  335| 00161C ld       E8820000   1     L8        gr4=._ZTV12RCmemdecoder(gr2,0)
  335| 001620 or       7C791B78   1     LR        gr25=gr3
   57| 001624 std      FBE30020   1     ST8       (RCmemdecoder).begin@20.rns41.(gr3,32)=gr31
    8| 001628 addi     3800FFFF   1     LI        gr0=-1
    8| 00162C rldicl   78000020   1     RN8       gr0=gr0,0,0xFFFFFFFF
  335| 001630 addi     38640010   1     AI        gr3=gr4,16
    8| 001634 addi     38800000   1     LI        gr4=0
  335| 001638 std      F8790000   1     ST8       (RCmemdecoder)[]@0.rns38.(gr25,0)=gr3
    8| 00163C std      F8190008   1     ST8       (RCdecoder).|low@8.rns21.#612|range@c.rns22.#613_10(gr25,8)=gr0
    8| 001640 stw      90990010   1     ST4Z      (RCdecoder).code@10.rns23.(gr25,16)=gr4
   57| 001644 stb      98990014   1     ST1Z      (RCmemdecoder).error@14.rns39.(gr25,20)=gr4
  280| 001648 or       7F23CB78   1     LR        gr3=gr25
  280| 00164C bl       48000001   1     CALL      _ZN9RCdecoder4initEv,1,(char).rns108.",gr3,#ProcAlias",_ZN9RCdecoder4initEv",fcr",#MX_TEMP10",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  280| 001650 ori      60000000   1
  281| 001654 or       7FA4EB78   1     LR        gr4=gr29
  281| 001658 or       7F23CB78   1     LR        gr3=gr25
  281| 00165C or       7F85E378   1     LR        gr5=gr28
  281| 001660 or       7F66DB78   1     LR        gr6=gr27
  281| 001664 or       7F47D378   1     LR        gr7=gr26
  281| 001668 or       7FC8F378   1     LR        gr8=gr30
  281| 00166C bl       4BFFEFB5   1     CALL      get_header(RCdecoder *, unsigned int *, unsigned int *, unsigned int *, unsigned int *, int *),6,(char).rns108.",gr3,(unsigned int).rns83.$$64",gr4,(unsigned int).rns83.$$64",gr5,(unsigned int).rns83.$$64",gr6,(unsigned int).rns83.$$64",gr7,(int).rns78.$$57",gr8,#ProcAlias",get_header(RCdecoder *, unsigned int *, unsigned int *, unsigned int *, unsigned int *, int *)",fcr",#MX_TEMP10",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  281| 001670 ori      60000000   1
  337| 001674 ld       E8990000   1     L8        gr4=(RCmemdecoder)[]@0.rns38.(gr25,0)
  337| 001678 or       7F23CB78   1     LR        gr3=gr25
  337| 00167C ld       E8840008   1     L8        gr4=((*)();__vftTypeGCCV3).rns19.(gr4,8)
  337| 001680 ld       E8040000   1     L8        gr0=#fnc_adr(gr4,0)
  337| 001684 ld       E9640010   1     L8        gr11=#new_env(gr4,16)
  337| 001688 mtspr    7C0903A6   1     LCTR      ctr=gr0
  337| 00168C ld       E8440008   1     CALL      gr3=gr4,1,(char).rns18.",gr3,#ProcAlias",fcr",#MX_TEMP10",(()vf).rns49.",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr",#fnc_adr,#cur_toc,ctr,gr11,#new_env,#(glue_dr_n,0,(()vf).rns49."
  337| 001690 bcctrl   4E800421   1
  337| 001694 ld       E8410028   1
  338| 001698 ld       E98100D0   1     L8        gr12=#stack(gr1,208)
  338| 00169C addi     382100C0   1     AI        gr1=gr1,192
  338| 0016A0 ld       EB21FFC8   1     L8        gr25=#stack(gr1,-56)
  338| 0016A4 ld       EB41FFD0   1     L8        gr26=#stack(gr1,-48)
  338| 0016A8 ld       EB61FFD8   1     L8        gr27=#stack(gr1,-40)
  338| 0016AC mtspr    7D8803A6   1     LLR       lr=gr12
  338| 0016B0 ld       EB81FFE0   1     L8        gr28=#stack(gr1,-32)
  338| 0016B4 ld       EBA1FFE8   1     L8        gr29=#stack(gr1,-24)
  338| 0016B8 ld       EBC1FFF0   1     L8        gr30=#stack(gr1,-16)
  338| 0016BC ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
  338| 0016C0 bclr     4E800020   1     BA        lr
   57|                              CL.340:
  280| 0016C4 addi     38600000   1     LI        gr3=0
  280| 0016C8 bl       48000001   1     CALL      _ZN9RCdecoder4initEv,1,(char).rns108.",gr3,#ProcAlias",_ZN9RCdecoder4initEv",fcr",#MX_TEMP10",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  280| 0016CC ori      60000000   1
  281| 0016D0 addi     38600000   1     LI        gr3=0
  281| 0016D4 or       7FA4EB78   1     LR        gr4=gr29
  281| 0016D8 or       7F85E378   1     LR        gr5=gr28
  281| 0016DC or       7F66DB78   1     LR        gr6=gr27
  281| 0016E0 or       7F47D378   1     LR        gr7=gr26
  281| 0016E4 or       7FC8F378   1     LR        gr8=gr30
  281| 0016E8 bl       4BFFEF39   1     CALL      get_header(RCdecoder *, unsigned int *, unsigned int *, unsigned int *, unsigned int *, int *),6,(char).rns108.",gr3,(unsigned int).rns83.$$64",gr4,(unsigned int).rns83.$$64",gr5,(unsigned int).rns83.$$64",gr6,(unsigned int).rns83.$$64",gr7,(int).rns78.$$57",gr8,#ProcAlias",get_header(RCdecoder *, unsigned int *, unsigned int *, unsigned int *, unsigned int *, int *)",fcr",#MX_TEMP10",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  281| 0016EC ori      60000000   1
  338| 0016F0 ld       E98100D0   1     L8        gr12=#stack(gr1,208)
  338| 0016F4 addi     382100C0   1     AI        gr1=gr1,192
  338| 0016F8 ld       EB41FFD0   1     L8        gr26=#stack(gr1,-48)
  338| 0016FC ld       EB61FFD8   1     L8        gr27=#stack(gr1,-40)
  338| 001700 ld       EB81FFE0   1     L8        gr28=#stack(gr1,-32)
  338| 001704 mtspr    7D8803A6   1     LLR       lr=gr12
  338| 001708 ld       EBA1FFE8   1     L8        gr29=#stack(gr1,-24)
  338| 00170C ld       EBC1FFF0   1     L8        gr30=#stack(gr1,-16)
  338| 001710 ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
  338| 001714 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 001718        00000000 00092041 80070600 00000000 00000158 00176670
     | 001730        7A69705F 6D656D6F 72795F67 65745F68 65616465 72
     |               Instruction count           86
     |               Straight-line exec time     86
 GPR's set/used:   ssus ssss ssss s---  ---- --ss ssss ssss
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ----
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     fpzip_file_read_f
  342|                                  PROC      path,data,prec,dp,nx,ny,nz,nf,gr3-gr10
    0| 001750 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 001754 std      FBC1FFF0   1     ST8       #stack(gr1,-16)=gr30
    0| 001758 std      FBA1FFE8   1     ST8       #stack(gr1,-24)=gr29
    0| 00175C std      FB81FFE0   1     ST8       #stack(gr1,-32)=gr28
    0| 001760 std      FB61FFD8   1     ST8       #stack(gr1,-40)=gr27
    0| 001764 std      FB41FFD0   1     ST8       #stack(gr1,-48)=gr26
    0| 001768 std      FB21FFC8   1     ST8       #stack(gr1,-56)=gr25
    0| 00176C std      FB01FFC0   1     ST8       #stack(gr1,-64)=gr24
    0| 001770 std      FAE1FFB8   1     ST8       #stack(gr1,-72)=gr23
    0| 001774 std      FAC1FFB0   1     ST8       #stack(gr1,-80)=gr22
    0| 001778 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 00177C std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 001780 stdu     F821FF21   1     ST8U      gr1,#stack(gr1,-224)=gr1
    0| 001784 or       7C9E2378   1     LR        gr30=gr4
  353| 001788 ld       E8820000   1     L8        gr4=.+CONSTANT_AREA(gr2,0)
  300| 00178C std      F8410028   1     ST8       #cur_toc(gr1,40)=gr2
  353| 001790 or       7C7F1B78   1     LR        gr31=gr3
    0| 001794 or       7CBD2B78   1     LR        gr29=gr5
    0| 001798 or       7CDB3378   1     LR        gr27=gr6
    0| 00179C or       7CFA3B78   1     LR        gr26=gr7
    0| 0017A0 or       7D194378   1     LR        gr25=gr8
    0| 0017A4 or       7D374B78   1     LR        gr23=gr9
    0| 0017A8 or       7D585378   1     LR        gr24=gr10
  353| 0017AC addi     388400C0   1     AI        gr4=gr4,192
  353| 0017B0 bl       48000001   1     CALL      gr3=fopen,2,(char).rns58.",gr3,gr4,#ProcAlias",fopen",fcr",#MX_TEMP12",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  353| 0017B4 ori      60000000   1
  354| 0017B8 cmpdi    2C230000   1     C8        cr0=gr3,0
  354| 0017BC bc       418201F0   1     BT        CL.4306,cr0,0x4/eq,taken=10%(10,90)
  353| 0017C0 or       7C7C1B78   1     LR        gr28=gr3
  297| 0017C4 addi     38601030   1     LI        gr3=4144
  357| 0017C8 lwz      837B0000   1     L4Z       gr27=(int).rns64.(gr27,0)
  357| 0017CC lwz      835A0000   1     L4Z       gr26=(int).rns63.(gr26,0)
  357| 0017D0 lwz      83390000   1     L4Z       gr25=(int).rns62.(gr25,0)
  357| 0017D4 lwz      82D70000   1     L4Z       gr22=(int).rns61.(gr23,0)
  357| 0017D8 lwz      83180000   1     L4Z       gr24=(int).rns60.(gr24,0)
  297| 0017DC bl       48000001   1     CALL      gr3=_Znwm,1,gr3,#ProcAlias",_Znwm",fcr",#MX_TEMP12",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  297| 0017E0 ori      60000000   1
  297| 0017E4 or       7C771B79   1     LR_R      gr23,cr0=gr3
  297| 0017E8 bc       4182018C   1     BT        CL.4299,cr0,0x4/eq,taken=50%(0,0)
   10| 0017EC std      FB970018   1     ST8       (RCfiledecoder).file@18.rns26.$$67(gr23,24)=gr28
  297| 0017F0 ld       E8620000   1     L8        gr3=._ZTV13RCfiledecoder(gr2,0)
    8| 0017F4 addi     3800FFFF   1     LI        gr0=-1
    8| 0017F8 addi     38800000   1     LI        gr4=0
    8| 0017FC rldicl   78000020   1     RN8       gr0=gr0,0,0xFFFFFFFF
    8| 001800 stw      90970010   1     ST4Z      (RCdecoder).code@10.rns23.$$67(gr23,16)=gr4
    8| 001804 std      F8170008   1     ST8       (RCdecoder).|low@8.rns21.$$67#1648|range@c.rns22.$$67#1649_12(gr23,8)=gr0
   10| 001808 stb      98970014   1     ST1Z      (RCfiledecoder).error@14.rns25.$$67(gr23,20)=gr4
   10| 00180C stw      90970028   1     ST4Z      (RCfiledecoder).size@28.rns29.$$67(gr23,40)=gr4
  297| 001810 addi     38030010   1     AI        gr0=gr3,16
   10| 001814 std      F8970020   1     ST8       (RCfiledecoder).|count@20.rns27.$$67#1654|index@24.rns28.$$67#1655_12(gr23,32)=gr4
  297| 001818 std      F8170000   1     ST8       (RCfiledecoder)[]@0.rns24.$$67(gr23,0)=gr0
  262| 00181C or       7EE3BB78   1     LR        gr3=gr23
  262| 001820 bl       48000001   1     CALL      _ZN9RCdecoder4initEv,1,(char).rns108.",gr3,#ProcAlias",_ZN9RCdecoder4initEv",fcr",#MX_TEMP12",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  262| 001824 ori      60000000   1
  263| 001828 extsw    7F6807B4   1     EXTS4     gr8=gr27
  263| 00182C or       7EE3BB78   1     LR        gr3=gr23
  263| 001830 or       7F44D378   1     LR        gr4=gr26
  263| 001834 or       7F25CB78   1     LR        gr5=gr25
  263| 001838 or       7EC6B378   1     LR        gr6=gr22
  263| 00183C or       7F07C378   1     LR        gr7=gr24
  263| 001840 bl       4BFFE7C1   1     CALL      read_header(RCdecoder *, unsigned int, unsigned int, unsigned int, unsigned int, int),6,(char).rns108.",gr3-gr8,#ProcAlias",read_header(RCdecoder *, unsigned int, unsigned int, unsigned int, unsigned int, int)",fcr",#MX_TEMP12",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  263| 001844 ori      60000000   1
  264| 001848 cmpdi    2C3B0000   1     C8        cr0=gr27,0
  264| 00184C bc       418200F4   1     BT        CL.371,cr0,0x4/eq,taken=40%(40,60)
    0|                              CL.4300:
  265| 001850 or       7EE3BB78   1     LR        gr3=gr23
  265| 001854 or       7FC4F378   1     LR        gr4=gr30
  265| 001858 or       7FA5EB78   1     LR        gr5=gr29
  265| 00185C or       7F46D378   1     LR        gr6=gr26
  265| 001860 or       7F27CB78   1     LR        gr7=gr25
  265| 001864 or       7EC8B378   1     LR        gr8=gr22
  265| 001868 or       7F09C378   1     LR        gr9=gr24
  265| 00186C bl       4BFFF355   1     CALL      decompress4d<double>(RCdecoder *, double *, int *, unsigned int, unsigned int, unsigned int, unsigned int),7,(char).rns108.",gr3,(double;void).rns79.",gr4,(int).rns78.$$57",gr5-gr9,#ProcAlias",decompress4d<double>(RCdecoder *, double *, int *, unsigned int, unsigned int, unsigned int, unsigned int)",fcr",#MX_TEMP12",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  265| 001870 ori      60000000   1
  299| 001874 lbz      88170014   1     L1Z       gr0=(RCfiledecoder).error@14.rns25.$$67(gr23,20)
  299| 001878 cmpdi    2C200000   1     C8        cr0=gr0,0
  299| 00187C bc       408200BC   1     BF        CL.4298,cr0,0x4/eq,taken=50%(0,0)
   25|                              CL.5499:
   25| 001880 lwz      83D70020   1     L4Z       gr30=(RCfiledecoder).count@20.rns27.$$67(gr23,32)
   25|                              CL.375:
  300| 001884 cmpdi    2C370000   1     C8        cr0=gr23,0
  300| 001888 bc       418200A0   1     BT        CL.5498,cr0,0x4/eq,taken=30%(30,70)
  300| 00188C ld       E8970000   1     L8        gr4=(RCfiledecoder)[]@0.rns24.$$67(gr23,0)
  300| 001890 or       7EE3BB78   1     LR        gr3=gr23
  300| 001894 ld       E8840008   1     L8        gr4=((*)();__vftTypeGCCV3).rns19.(gr4,8)
  300| 001898 ld       E8040000   1     L8        gr0=#fnc_adr(gr4,0)
  300| 00189C ld       E9640010   1     L8        gr11=#new_env(gr4,16)
  300| 0018A0 mtspr    7C0903A6   1     LCTR      ctr=gr0
  300| 0018A4 ld       E8440008   1     CALL      gr3=gr4,1,(char).rns18.",gr3,#ProcAlias",fcr",#MX_TEMP12",(()vf).rns20.$$67",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr",#fnc_adr,#cur_toc,ctr,gr11,#new_env,#(glue_dr_n,0,(()vf).rns20.$$67"
  300| 0018A8 bcctrl   4E800421   1
  300| 0018AC ld       E8410028   1
  358| 0018B0 cmpdi    2C3E0000   1     C8        cr0=gr30,0
  358| 0018B4 bc       4182004C   1     BT        CL.4305,cr0,0x4/eq,taken=10%(10,90)
    0| 0018B8 ori      60210000   1     XNOP      
  361|                              CL.362:
  362| 0018BC or       7F83E378   1     LR        gr3=gr28
  362| 0018C0 bl       48000001   1     CALL      gr3=fclose,1,(_IO_FILE).rns2.",gr3,#ProcAlias",fclose",fcr",#MX_TEMP12",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  362| 0018C4 ori      60000000   1
  363| 0018C8 ld       E98100F0   1     L8        gr12=#stack(gr1,240)
  363| 0018CC addi     382100E0   1     AI        gr1=gr1,224
  363| 0018D0 ld       EAC1FFB0   1     L8        gr22=#stack(gr1,-80)
  363| 0018D4 ld       EAE1FFB8   1     L8        gr23=#stack(gr1,-72)
  363| 0018D8 ld       EB01FFC0   1     L8        gr24=#stack(gr1,-64)
  363| 0018DC mtspr    7D8803A6   1     LLR       lr=gr12
  363| 0018E0 ld       EB21FFC8   1     L8        gr25=#stack(gr1,-56)
  363| 0018E4 ld       EB41FFD0   1     L8        gr26=#stack(gr1,-48)
  363| 0018E8 ld       EB61FFD8   1     L8        gr27=#stack(gr1,-40)
  363| 0018EC ld       EB81FFE0   1     L8        gr28=#stack(gr1,-32)
  363| 0018F0 ld       EBA1FFE8   1     L8        gr29=#stack(gr1,-24)
  363| 0018F4 ld       EBC1FFF0   1     L8        gr30=#stack(gr1,-16)
  363| 0018F8 ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
  363| 0018FC bclr     4E800020   1     BA        lr
    0|                              CL.4305:
  359| 001900 ld       E8620000   1     L8        gr3=.stderr(gr2,0)
  359| 001904 ld       E8820000   1     L8        gr4=.+CONSTANT_AREA(gr2,0)
  359| 001908 or       7FE5FB78   1     LR        gr5=gr31
  359| 00190C ld       E8630000   1     L8        gr3=<s52:d0:l8>(gr3,0)
  359| 001910 addi     388400E0   1     AI        gr4=gr4,224
  359| 001914 bl       48000001   1     CALL      gr3=fprintf,3,(_IO_FILE).rns2.",gr3,gr4,(char).rns58.",gr5,#ProcAlias",fprintf",fcr",#MX_TEMP12",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  359| 001918 ori      60000000   1
  360| 00191C bl       48000001   1     CALL      abort,0,#ProcAlias",abort",fcr",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  360| 001920 ori      60000000   1
  360| 001924 tw       7C8E7008   1     TRAP      9
    0|                              CL.5498:
  358| 001928 cmpdi    2C3E0000   1     C8        cr0=gr30,0
  358| 00192C bc       4082FF90   1     BF        CL.362,cr0,0x4/eq,taken=30%(30,70)
    0| 001930 b        4BFFFFD0   1     B         CL.4305,-1
    0| 001934 ori      60210000   1     XNOP      
    0|                              CL.4298:
  299| 001938 addi     3BC00000   1     LI        gr30=0
  299| 00193C b        4BFFFF48   1     B         CL.375,-1
  265|                              CL.371:
  267| 001940 or       7EE3BB78   1     LR        gr3=gr23
  267| 001944 or       7FC4F378   1     LR        gr4=gr30
  267| 001948 or       7FA5EB78   1     LR        gr5=gr29
  267| 00194C or       7F46D378   1     LR        gr6=gr26
  267| 001950 or       7F27CB78   1     LR        gr7=gr25
  267| 001954 or       7EC8B378   1     LR        gr8=gr22
  267| 001958 or       7F09C378   1     LR        gr9=gr24
  267| 00195C bl       4BFFF2E5   1     CALL      decompress4d<float>(RCdecoder *, float *, int *, unsigned int, unsigned int, unsigned int, unsigned int),7,(char).rns108.",gr3,(float;void).rns80.",gr4,(int).rns78.$$57",gr5-gr9,#ProcAlias",decompress4d<float>(RCdecoder *, float *, int *, unsigned int, unsigned int, unsigned int, unsigned int)",fcr",#MX_TEMP12",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  267| 001960 ori      60000000   1
  299| 001964 lbz      88170014   1     L1Z       gr0=(RCfiledecoder).error@14.rns25.$$67(gr23,20)
  299| 001968 cmpdi    2C200000   1     C8        cr0=gr0,0
  299| 00196C bc       4082FFCC   1     BF        CL.4298,cr0,0x4/eq,taken=50%(0,0)
   25| 001970 b        4BFFFF10   1     B         CL.5499,-1
    0|                              CL.4299:
  262| 001974 or       7EE3BB78   1     LR        gr3=gr23
  262| 001978 bl       48000001   1     CALL      _ZN9RCdecoder4initEv,1,(char).rns108.",gr3,#ProcAlias",_ZN9RCdecoder4initEv",fcr",#MX_TEMP12",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  262| 00197C ori      60000000   1
  263| 001980 extsw    7F6807B4   1     EXTS4     gr8=gr27
  263| 001984 or       7EE3BB78   1     LR        gr3=gr23
  263| 001988 or       7F44D378   1     LR        gr4=gr26
  263| 00198C or       7F25CB78   1     LR        gr5=gr25
  263| 001990 or       7EC6B378   1     LR        gr6=gr22
  263| 001994 or       7F07C378   1     LR        gr7=gr24
  263| 001998 bl       4BFFE669   1     CALL      read_header(RCdecoder *, unsigned int, unsigned int, unsigned int, unsigned int, int),6,(char).rns108.",gr3-gr8,#ProcAlias",read_header(RCdecoder *, unsigned int, unsigned int, unsigned int, unsigned int, int)",fcr",#MX_TEMP12",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  263| 00199C ori      60000000   1
  264| 0019A0 cmpdi    2C3B0000   1     C8        cr0=gr27,0
  264| 0019A4 bc       4182FF9C   1     BT        CL.371,cr0,0x4/eq,taken=40%(40,60)
    0| 0019A8 b        4BFFFEA8   1     B         CL.4300,-1
    0|                              CL.4306:
  355| 0019AC ld       E8620000   1     L8        gr3=.stderr(gr2,0)
  355| 0019B0 ld       E8820000   1     L8        gr4=.+CONSTANT_AREA(gr2,0)
  355| 0019B4 or       7FE5FB78   1     LR        gr5=gr31
  355| 0019B8 ld       E8630000   1     L8        gr3=<s52:d0:l8>(gr3,0)
  355| 0019BC addi     388400C4   1     AI        gr4=gr4,196
  355| 0019C0 bl       48000001   1     CALL      gr3=fprintf,3,(_IO_FILE).rns2.",gr3,gr4,(char).rns58.",gr5,#ProcAlias",fprintf",fcr",#MX_TEMP12",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  355| 0019C4 ori      60000000   1
  356| 0019C8 bl       48000001   1     CALL      abort,0,#ProcAlias",abort",fcr",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  356| 0019CC ori      60000000   1
  356| 0019D0 tw       7C8E7008   1     TRAP      9
     | 0019D4 b        48000000   1
     |               Tag Table
     | 0019D8        00000000 00092041 800A0800 00000000 00000288 00116670
     | 0019F0        7A69705F 66696C65 5F726561 645F66
     |               Instruction count          162
     |               Straight-line exec time    162
 GPR's set/used:   ssus ssss ssss s---  ---- -sss ssss ssss
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ----
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     fpzip_file_read_f_
  366|                                  PROC      path,data,prec,dp,nx,ny,nz,nf,gr3-gr10
    0| 001A00 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 001A04 std      FBC1FFF0   1     ST8       #stack(gr1,-16)=gr30
    0| 001A08 std      FBA1FFE8   1     ST8       #stack(gr1,-24)=gr29
    0| 001A0C std      FB81FFE0   1     ST8       #stack(gr1,-32)=gr28
    0| 001A10 std      FB61FFD8   1     ST8       #stack(gr1,-40)=gr27
    0| 001A14 std      FB41FFD0   1     ST8       #stack(gr1,-48)=gr26
    0| 001A18 std      FB21FFC8   1     ST8       #stack(gr1,-56)=gr25
    0| 001A1C std      FB01FFC0   1     ST8       #stack(gr1,-64)=gr24
    0| 001A20 std      FAE1FFB8   1     ST8       #stack(gr1,-72)=gr23
    0| 001A24 std      FAC1FFB0   1     ST8       #stack(gr1,-80)=gr22
    0| 001A28 std      FAA1FFA8   1     ST8       #stack(gr1,-88)=gr21
    0| 001A2C mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 001A30 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 001A34 stdu     F821FF21   1     ST8U      gr1,#stack(gr1,-224)=gr1
  300| 001A38 std      F8410028   1     ST8       #cur_toc(gr1,40)=gr2
  353| 001A3C ld       EBE20000   1     L8        gr31=.+CONSTANT_AREA(gr2,0)
  353| 001A40 or       7C7E1B78   1     LR        gr30=gr3
    0| 001A44 or       7C9D2378   1     LR        gr29=gr4
    0| 001A48 or       7CBC2B78   1     LR        gr28=gr5
    0| 001A4C or       7CDA3378   1     LR        gr26=gr6
    0| 001A50 or       7CF93B78   1     LR        gr25=gr7
    0| 001A54 or       7D184378   1     LR        gr24=gr8
    0| 001A58 or       7D364B78   1     LR        gr22=gr9
    0| 001A5C or       7D575378   1     LR        gr23=gr10
  353| 001A60 addi     389F00C0   1     AI        gr4=gr31,192
  353| 001A64 bl       48000001   1     CALL      gr3=fopen,2,(char).rns108.",gr3,gr4,#ProcAlias",fopen",fcr",#MX_TEMP13",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  353| 001A68 ori      60000000   1
  354| 001A6C cmpdi    2C230000   1     C8        cr0=gr3,0
  354| 001A70 bc       418201EC   1     BT        CL.4318,cr0,0x4/eq,taken=10%(10,90)
  353| 001A74 or       7C7B1B78   1     LR        gr27=gr3
  297| 001A78 addi     38601030   1     LI        gr3=4144
  357| 001A7C lwz      835A0000   1     L4Z       gr26=(int).rns78.$$57(gr26,0)
  357| 001A80 lwz      83390000   1     L4Z       gr25=(int).rns78.$$57(gr25,0)
  357| 001A84 lwz      83180000   1     L4Z       gr24=(int).rns78.$$57(gr24,0)
  357| 001A88 lwz      82B60000   1     L4Z       gr21=(int).rns78.$$57(gr22,0)
  357| 001A8C lwz      82F70000   1     L4Z       gr23=(int).rns78.$$57(gr23,0)
  297| 001A90 bl       48000001   1     CALL      gr3=_Znwm,1,gr3,#ProcAlias",_Znwm",fcr",#MX_TEMP13",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  297| 001A94 ori      60000000   1
  297| 001A98 or       7C761B79   1     LR_R      gr22,cr0=gr3
  297| 001A9C bc       41820188   1     BT        CL.4311,cr0,0x4/eq,taken=50%(0,0)
   10| 001AA0 std      FB760018   1     ST8       (RCfiledecoder).file@18.rns26.$$67$$73(gr22,24)=gr27
  297| 001AA4 ld       E8620000   1     L8        gr3=._ZTV13RCfiledecoder(gr2,0)
    8| 001AA8 addi     3800FFFF   1     LI        gr0=-1
    8| 001AAC addi     38800000   1     LI        gr4=0
    8| 001AB0 rldicl   78000020   1     RN8       gr0=gr0,0,0xFFFFFFFF
    8| 001AB4 stw      90960010   1     ST4Z      (RCdecoder).code@10.rns23.$$67$$73(gr22,16)=gr4
    8| 001AB8 std      F8160008   1     ST8       (RCdecoder).|low@8.rns21.$$67$$73#1676|range@c.rns22.$$67$$73#1677_13(gr22,8)=gr0
   10| 001ABC stb      98960014   1     ST1Z      (RCfiledecoder).error@14.rns25.$$67$$73(gr22,20)=gr4
   10| 001AC0 stw      90960028   1     ST4Z      (RCfiledecoder).size@28.rns29.$$67$$73(gr22,40)=gr4
  297| 001AC4 addi     38030010   1     AI        gr0=gr3,16
   10| 001AC8 std      F8960020   1     ST8       (RCfiledecoder).|count@20.rns27.$$67$$73#1682|index@24.rns28.$$67$$73#1683_13(gr22,32)=gr4
  297| 001ACC std      F8160000   1     ST8       (RCfiledecoder)[]@0.rns24.$$67$$73(gr22,0)=gr0
  262| 001AD0 or       7EC3B378   1     LR        gr3=gr22
  262| 001AD4 bl       48000001   1     CALL      _ZN9RCdecoder4initEv,1,(char).rns108.",gr3,#ProcAlias",_ZN9RCdecoder4initEv",fcr",#MX_TEMP13",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  262| 001AD8 ori      60000000   1
  263| 001ADC extsw    7F4807B4   1     EXTS4     gr8=gr26
  263| 001AE0 or       7EC3B378   1     LR        gr3=gr22
  263| 001AE4 or       7F24CB78   1     LR        gr4=gr25
  263| 001AE8 or       7F05C378   1     LR        gr5=gr24
  263| 001AEC or       7EA6AB78   1     LR        gr6=gr21
  263| 001AF0 or       7EE7BB78   1     LR        gr7=gr23
  263| 001AF4 bl       4BFFE50D   1     CALL      read_header(RCdecoder *, unsigned int, unsigned int, unsigned int, unsigned int, int),6,(char).rns108.",gr3-gr8,#ProcAlias",read_header(RCdecoder *, unsigned int, unsigned int, unsigned int, unsigned int, int)",fcr",#MX_TEMP13",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  263| 001AF8 ori      60000000   1
  264| 001AFC cmpdi    2C3A0000   1     C8        cr0=gr26,0
  264| 001B00 bc       418200F0   1     BT        CL.391,cr0,0x4/eq,taken=40%(40,60)
    0|                              CL.4312:
  265| 001B04 or       7EC3B378   1     LR        gr3=gr22
  265| 001B08 or       7FA4EB78   1     LR        gr4=gr29
  265| 001B0C or       7F85E378   1     LR        gr5=gr28
  265| 001B10 or       7F26CB78   1     LR        gr6=gr25
  265| 001B14 or       7F07C378   1     LR        gr7=gr24
  265| 001B18 or       7EA8AB78   1     LR        gr8=gr21
  265| 001B1C or       7EE9BB78   1     LR        gr9=gr23
  265| 001B20 bl       4BFFF0A1   1     CALL      decompress4d<double>(RCdecoder *, double *, int *, unsigned int, unsigned int, unsigned int, unsigned int),7,(char).rns108.",gr3,(double;void).rns79.",gr4,(int).rns78.$$57",gr5-gr9,#ProcAlias",decompress4d<double>(RCdecoder *, double *, int *, unsigned int, unsigned int, unsigned int, unsigned int)",fcr",#MX_TEMP13",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  265| 001B24 ori      60000000   1
  299| 001B28 lbz      88160014   1     L1Z       gr0=(RCfiledecoder).error@14.rns25.$$67$$73(gr22,20)
  299| 001B2C cmpdi    2C200000   1     C8        cr0=gr0,0
  299| 001B30 bc       408200B8   1     BF        CL.4310,cr0,0x4/eq,taken=50%(0,0)
   25|                              CL.5497:
   25| 001B34 lwz      83B60020   1     L4Z       gr29=(RCfiledecoder).count@20.rns27.$$67$$73(gr22,32)
   25|                              CL.395:
  300| 001B38 cmpdi    2C360000   1     C8        cr0=gr22,0
  300| 001B3C bc       4182009C   1     BT        CL.5496,cr0,0x4/eq,taken=30%(30,70)
  300| 001B40 ld       E8960000   1     L8        gr4=(RCfiledecoder)[]@0.rns24.$$67$$73(gr22,0)
  300| 001B44 or       7EC3B378   1     LR        gr3=gr22
  300| 001B48 ld       E8840008   1     L8        gr4=((*)();__vftTypeGCCV3).rns19.(gr4,8)
  300| 001B4C ld       E8040000   1     L8        gr0=#fnc_adr(gr4,0)
  300| 001B50 ld       E9640010   1     L8        gr11=#new_env(gr4,16)
  300| 001B54 mtspr    7C0903A6   1     LCTR      ctr=gr0
  300| 001B58 ld       E8440008   1     CALL      gr3=gr4,1,(char).rns18.",gr3,#ProcAlias",fcr",#MX_TEMP13",(()vf).rns20.$$67$$73",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr",#fnc_adr,#cur_toc,ctr,gr11,#new_env,#(glue_dr_n,0,(()vf).rns20.$$67$$73"
  300| 001B5C bcctrl   4E800421   1
  300| 001B60 ld       E8410028   1
  358| 001B64 cmpdi    2C3D0000   1     C8        cr0=gr29,0
  358| 001B68 bc       4182004C   1     BT        CL.4317,cr0,0x4/eq,taken=10%(10,90)
  361|                              CL.398:
  362| 001B6C or       7F63DB78   1     LR        gr3=gr27
  362| 001B70 bl       48000001   1     CALL      gr3=fclose,1,(_IO_FILE).rns2.",gr3,#ProcAlias",fclose",fcr",#MX_TEMP13",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  362| 001B74 ori      60000000   1
  378| 001B78 ld       E98100F0   1     L8        gr12=#stack(gr1,240)
  378| 001B7C addi     382100E0   1     AI        gr1=gr1,224
  378| 001B80 ld       EAA1FFA8   1     L8        gr21=#stack(gr1,-88)
  378| 001B84 ld       EAC1FFB0   1     L8        gr22=#stack(gr1,-80)
  378| 001B88 ld       EAE1FFB8   1     L8        gr23=#stack(gr1,-72)
  378| 001B8C mtspr    7D8803A6   1     LLR       lr=gr12
  378| 001B90 ld       EB01FFC0   1     L8        gr24=#stack(gr1,-64)
  378| 001B94 ld       EB21FFC8   1     L8        gr25=#stack(gr1,-56)
  378| 001B98 ld       EB41FFD0   1     L8        gr26=#stack(gr1,-48)
  378| 001B9C ld       EB61FFD8   1     L8        gr27=#stack(gr1,-40)
  378| 001BA0 ld       EB81FFE0   1     L8        gr28=#stack(gr1,-32)
  378| 001BA4 ld       EBA1FFE8   1     L8        gr29=#stack(gr1,-24)
  378| 001BA8 ld       EBC1FFF0   1     L8        gr30=#stack(gr1,-16)
  378| 001BAC ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
  378| 001BB0 bclr     4E800020   1     BA        lr
    0|                              CL.4317:
  359| 001BB4 ld       E8620000   1     L8        gr3=.stderr(gr2,0)
  359| 001BB8 addi     389F00E0   1     AI        gr4=gr31,224
  359| 001BBC or       7FC5F378   1     LR        gr5=gr30
  359| 001BC0 ld       E8630000   1     L8        gr3=<s52:d0:l8>(gr3,0)
  359| 001BC4 bl       48000001   1     CALL      gr3=fprintf,3,(_IO_FILE).rns2.",gr3,gr4,(char).rns108.",gr5,#ProcAlias",fprintf",fcr",#MX_TEMP13",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  359| 001BC8 ori      60000000   1
  360| 001BCC bl       48000001   1     CALL      abort,0,#ProcAlias",abort",fcr",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  360| 001BD0 ori      60000000   1
  360| 001BD4 tw       7C8E7008   1     TRAP      9
    0|                              CL.5496:
  358| 001BD8 cmpdi    2C3D0000   1     C8        cr0=gr29,0
  358| 001BDC bc       4082FF90   1     BF        CL.398,cr0,0x4/eq,taken=30%(30,70)
    0| 001BE0 b        4BFFFFD4   1     B         CL.4317,-1
    0| 001BE4 ori      60210000   1     XNOP      
    0|                              CL.4310:
  299| 001BE8 addi     3BA00000   1     LI        gr29=0
  299| 001BEC b        4BFFFF4C   1     B         CL.395,-1
  265|                              CL.391:
  267| 001BF0 or       7EC3B378   1     LR        gr3=gr22
  267| 001BF4 or       7FA4EB78   1     LR        gr4=gr29
  267| 001BF8 or       7F85E378   1     LR        gr5=gr28
  267| 001BFC or       7F26CB78   1     LR        gr6=gr25
  267| 001C00 or       7F07C378   1     LR        gr7=gr24
  267| 001C04 or       7EA8AB78   1     LR        gr8=gr21
  267| 001C08 or       7EE9BB78   1     LR        gr9=gr23
  267| 001C0C bl       4BFFF035   1     CALL      decompress4d<float>(RCdecoder *, float *, int *, unsigned int, unsigned int, unsigned int, unsigned int),7,(char).rns108.",gr3,(float;void).rns80.",gr4,(int).rns78.$$57",gr5-gr9,#ProcAlias",decompress4d<float>(RCdecoder *, float *, int *, unsigned int, unsigned int, unsigned int, unsigned int)",fcr",#MX_TEMP13",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  267| 001C10 ori      60000000   1
  299| 001C14 lbz      88160014   1     L1Z       gr0=(RCfiledecoder).error@14.rns25.$$67$$73(gr22,20)
  299| 001C18 cmpdi    2C200000   1     C8        cr0=gr0,0
  299| 001C1C bc       4082FFCC   1     BF        CL.4310,cr0,0x4/eq,taken=50%(0,0)
   25| 001C20 b        4BFFFF14   1     B         CL.5497,-1
    0|                              CL.4311:
  262| 001C24 or       7EC3B378   1     LR        gr3=gr22
  262| 001C28 bl       48000001   1     CALL      _ZN9RCdecoder4initEv,1,(char).rns108.",gr3,#ProcAlias",_ZN9RCdecoder4initEv",fcr",#MX_TEMP13",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  262| 001C2C ori      60000000   1
  263| 001C30 extsw    7F4807B4   1     EXTS4     gr8=gr26
  263| 001C34 or       7EC3B378   1     LR        gr3=gr22
  263| 001C38 or       7F24CB78   1     LR        gr4=gr25
  263| 001C3C or       7F05C378   1     LR        gr5=gr24
  263| 001C40 or       7EA6AB78   1     LR        gr6=gr21
  263| 001C44 or       7EE7BB78   1     LR        gr7=gr23
  263| 001C48 bl       4BFFE3B9   1     CALL      read_header(RCdecoder *, unsigned int, unsigned int, unsigned int, unsigned int, int),6,(char).rns108.",gr3-gr8,#ProcAlias",read_header(RCdecoder *, unsigned int, unsigned int, unsigned int, unsigned int, int)",fcr",#MX_TEMP13",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  263| 001C4C ori      60000000   1
  264| 001C50 cmpdi    2C3A0000   1     C8        cr0=gr26,0
  264| 001C54 bc       4182FF9C   1     BT        CL.391,cr0,0x4/eq,taken=40%(40,60)
    0| 001C58 b        4BFFFEAC   1     B         CL.4312,-1
    0|                              CL.4318:
  355| 001C5C ld       E8620000   1     L8        gr3=.stderr(gr2,0)
  355| 001C60 addi     389F00C4   1     AI        gr4=gr31,196
  355| 001C64 or       7FC5F378   1     LR        gr5=gr30
  355| 001C68 ld       E8630000   1     L8        gr3=<s52:d0:l8>(gr3,0)
  355| 001C6C bl       48000001   1     CALL      gr3=fprintf,3,(_IO_FILE).rns2.",gr3,gr4,(char).rns108.",gr5,#ProcAlias",fprintf",fcr",#MX_TEMP13",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  355| 001C70 ori      60000000   1
  356| 001C74 bl       48000001   1     CALL      abort,0,#ProcAlias",abort",fcr",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  356| 001C78 ori      60000000   1
  356| 001C7C tw       7C8E7008   1     TRAP      9
     | 001C80 b        48000000   1
     |               Tag Table
     | 001C84        00000000 00092041 800B0800 00000000 00000284 00126670
     | 001C9C        7A69705F 66696C65 5F726561 645F665F
     |               Instruction count          161
     |               Straight-line exec time    161
 GPR's set/used:   ss-s ssss ssss s---  ---- ---- --ss ssss
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ---s
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     PCdecoder<double,PCmap<double,48,void>,1>::decode(double, unsigned int)
     | 000000                           AKA       _ZN9PCdecoderId5PCmapIdLj48EvELb1EE6decodeEdj
   47|                                  PROC      this,pred,context,gr3,fp1,gr5
    0| 001CB0 stfd     DBE1FFF8   1     STFL      #stack(gr1,-8)=fp31
    0| 001CB4 std      FBE1FFF0   1     ST8       #stack(gr1,-16)=gr31
    0| 001CB8 std      FBC1FFE8   1     ST8       #stack(gr1,-24)=gr30
    0| 001CBC std      FBA1FFE0   1     ST8       #stack(gr1,-32)=gr29
    0| 001CC0 std      FB81FFD8   1     ST8       #stack(gr1,-40)=gr28
    0| 001CC4 std      FB61FFD0   1     ST8       #stack(gr1,-48)=gr27
    0| 001CC8 std      FB41FFC8   1     ST8       #stack(gr1,-56)=gr26
    0| 001CCC mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 001CD0 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 001CD4 stdu     F821FEC1   1     ST8U      gr1,#stack(gr1,-320)=gr1
   50| 001CD8 ld       E8830010   1     L8        gr4=(PCdecoder<double,PCmap<double,48,void>,1>).rm@10.rns247.(gr3,16)
    0| 001CDC fmr      FFE00890   1     LRFL      fp31=fp1
    0| 001CE0 or       7C7F1B78   2     LR        gr31=gr3
   50| 001CE4 ld       E8630008   1     L8        gr3=(PCdecoder<double,PCmap<double,48,void>,1>).rd@8.rns248.(gr3,8)
   50| 001CE8 rldic    78A51F48   1     RN8       gr5=gr5,3,0x7FFFFFFF8
   50| 001CEC ldx      7C84282A   1     L8        gr4=(RCmodel *).rns225.(gr4,gr5,0)
   50| 001CF0 bl       48000001   1     CALL      gr3=_ZN9RCdecoder6decodeEP7RCmodel,2,(char).rns108.",gr3,(char).rns108.",gr4,#ProcAlias",_ZN9RCdecoder6decodeEP7RCmodel",fcr",#MX_TEMP14",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   50| 001CF4 ori      60000000   1
   51| 001CF8 cmplwi   28030030   1     CL4       cr0=gr3,48
   51| 001CFC bc       408100F8   1     BF        CL.405,cr0,0x10/lgt,taken=50%(0,0)
   53| 001D00 addi     3B43FFCF   1     AI        gr26=gr3,-49
   53| 001D04 ld       EBFF0008   1     L8        gr31=(PCdecoder<double,PCmap<double,48,void>,1>).rd@8.rns248.(gr31,8)
   53| 001D08 rlwinm   575E003E   1     RN4       gr30=gr26,0,0xFFFFFFFF
    4| 001D0C addi     3BA00000   1     LI        gr29=0
    5| 001D10 addi     3B800000   1     LI        gr28=0
    6| 001D14 addi     3B600000   1     LI        gr27=0
    0| 001D18 ori      60210000   1     XNOP      
    6|                              CL.407:
    7| 001D1C cmplwi   281E0010   1     CL4       cr0=gr30,16
    7| 001D20 bc       418100A0   1     BT        CL.3736,cr0,0x10/lgt,taken=40%(40,60)
    6| 001D24 addi     3B7B0001   1     AI        gr27=gr27,1
    6| 001D28 cmpldi   283B0003   1     CL8       cr0=gr27,3
    6| 001D2C bc       4180FFF0   1     BT        CL.407,cr0,0x8/llt,taken=80%(80,20)
    0|                              CL.3733:
   12| 001D30 or       7FE3FB78   1     LR        gr3=gr31
   12| 001D34 or       7FC4F378   1     LR        gr4=gr30
   12| 001D38 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns108.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP14",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   12| 001D3C ori      60000000   1
   71| 001D40 stfd     DBE10080   1     STFL      shared(gr1,128)=fp31
   55| 001D44 addi     38000001   1     LI        gr0=1
   55| 001D48 sld      7C63E036   1     SLL8      gr3=gr3,gr28
   55| 001D4C sld      7C00D036   1     SLL8      gr0=gr0,gr26
   55| 001D50 add      7C00EA14   1     A         gr0=gr0,gr29
   72| 001D54 ld       E8810080   1     L8        gr4=shared(gr1,128)
  104| 001D58 nor      7C8420F8   1     NOR       gr4=gr4,gr4
  104| 001D5C rldicl   78850FE0   1     SRL8      gr5=gr4,63
  104| 001D60 rldicl   78848402   1     SRL8      gr4=gr4,16
  104| 001D64 neg      7CA500D0   1     COMP      gr5=gr5
  104| 001D68 rldicl   78A57C42   1     SRL8      gr5=gr5,17
  104| 001D6C xor      7C842A78   1     X         gr4=gr4,gr5
   55| 001D70 add      7C632214   1     A         gr3=gr3,gr4
   55| 001D74 add      7C601A14   1     A         gr3=gr0,gr3
  111| 001D78 rldicl   78608BE0   1     SRL8      gr0=gr3,47
  111| 001D7C neg      7C0000D0   1     COMP      gr0=gr0
  111| 001D80 rldicl   78007C42   1     SRL8      gr0=gr0,17
  113| 001D84 eqv      7C001A38   1     EQV       gr0=gr0,gr3
  113| 001D88 rldicr   780083E4   1     SLL8      gr0=gr0,16
   87| 001D8C std      F80100A0   1     ST8       shared(gr1,160)=gr0
   88| 001D90 lfd      C82100A0   1     LFL       fp1=shared(gr1,160)
   66|                              CL.1947:
   67| 001D94 ld       E9810150   1     L8        gr12=#stack(gr1,336)
   67| 001D98 lfd      CBE10138   1     LFL       fp31=#stack(gr1,312)
   67| 001D9C addi     38210140   1     AI        gr1=gr1,320
   67| 001DA0 ld       EB41FFC8   1     L8        gr26=#stack(gr1,-56)
   67| 001DA4 ld       EB61FFD0   1     L8        gr27=#stack(gr1,-48)
   67| 001DA8 mtspr    7D8803A6   1     LLR       lr=gr12
   67| 001DAC ld       EB81FFD8   1     L8        gr28=#stack(gr1,-40)
   67| 001DB0 ld       EBA1FFE0   1     L8        gr29=#stack(gr1,-32)
   67| 001DB4 ld       EBC1FFE8   1     L8        gr30=#stack(gr1,-24)
   67| 001DB8 ld       EBE1FFF0   1     L8        gr31=#stack(gr1,-16)
   67| 001DBC bclr     4E800020   1     BA        lr
    0|                              CL.3736:
    3| 001DC0 or       7FE3FB78   1     LR        gr3=gr31
    3| 001DC4 addi     38800010   1     LI        gr4=16
    3| 001DC8 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns108.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP14",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    3| 001DCC ori      60000000   1
    6| 001DD0 addi     3B7B0001   1     AI        gr27=gr27,1
    8| 001DD4 sld      7C60E036   1     SLL8      gr0=gr3,gr28
   10| 001DD8 addi     387EFFF0   1     AI        gr3=gr30,-16
    6| 001DDC cmpldi   283B0003   1     CL8       cr0=gr27,3
    8| 001DE0 add      7FBD0214   1     A         gr29=gr29,gr0
    9| 001DE4 addi     3B9C0010   1     AI        gr28=gr28,16
   10| 001DE8 rlwinm   547E003E   1     RN4       gr30=gr3,0,0xFFFFFFFF
    6| 001DEC bc       4080FF44   1     BF        CL.3733,cr0,0x8/llt,taken=20%(20,80)
    6| 001DF0 b        4BFFFF2C   1     B         CL.407,-1
   57|                              CL.405:
   58| 001DF4 bc       408000E0   1     BF        CL.413,cr0,0x8/llt,taken=30%(30,70)
   60| 001DF8 subfic   2343002F   1     SFI       gr26=47,gr3,ca"
   60| 001DFC ld       EBFF0008   1     L8        gr31=(PCdecoder<double,PCmap<double,48,void>,1>).rd@8.rns248.(gr31,8)
   60| 001E00 rlwinm   575E003E   1     RN4       gr30=gr26,0,0xFFFFFFFF
    4| 001E04 addi     3BA00000   1     LI        gr29=0
    5| 001E08 addi     3B800000   1     LI        gr28=0
    6| 001E0C addi     3B600000   1     LI        gr27=0
    0| 001E10 ori      60210000   1     XNOP      
    0| 001E14 ori      60210000   1     XNOP      
    0| 001E18 ori      60210000   1     XNOP      
    6|                              CL.415:
    7| 001E1C cmplwi   281E0010   1     CL4       cr0=gr30,16
    7| 001E20 bc       41810080   1     BT        CL.3737,cr0,0x10/lgt,taken=40%(40,60)
    6| 001E24 addi     3B7B0001   1     AI        gr27=gr27,1
    6| 001E28 cmpldi   283B0003   1     CL8       cr0=gr27,3
    6| 001E2C bc       4180FFF0   1     BT        CL.415,cr0,0x8/llt,taken=80%(80,20)
    0| 001E30 ori      60210000   1     XNOP      
    0| 001E34 ori      60210000   1     XNOP      
    0|                              CL.3735:
   12| 001E38 or       7FE3FB78   1     LR        gr3=gr31
   12| 001E3C or       7FC4F378   1     LR        gr4=gr30
   12| 001E40 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns108.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP14",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   12| 001E44 ori      60000000   1
   71| 001E48 stfd     DBE10080   1     STFL      shared(gr1,128)=fp31
   62| 001E4C addi     38000001   1     LI        gr0=1
   62| 001E50 sld      7C63E036   1     SLL8      gr3=gr3,gr28
   62| 001E54 sld      7C00D036   1     SLL8      gr0=gr0,gr26
   62| 001E58 add      7C00EA14   1     A         gr0=gr0,gr29
   62| 001E5C add      7C001A14   1     A         gr0=gr0,gr3
   72| 001E60 ld       E8610080   1     L8        gr3=shared(gr1,128)
  104| 001E64 nor      7C6318F8   1     NOR       gr3=gr3,gr3
  104| 001E68 rldicl   78640FE0   1     SRL8      gr4=gr3,63
  104| 001E6C rldicl   78638402   1     SRL8      gr3=gr3,16
  104| 001E70 neg      7C8400D0   1     COMP      gr4=gr4
  104| 001E74 rldicl   78847C42   1     SRL8      gr4=gr4,17
  104| 001E78 xor      7C632278   1     X         gr3=gr3,gr4
   62| 001E7C subf     7C601850   1     S         gr3=gr3,gr0
  111| 001E80 rldicl   78608BE0   1     SRL8      gr0=gr3,47
  111| 001E84 neg      7C0000D0   1     COMP      gr0=gr0
  111| 001E88 rldicl   78007C42   1     SRL8      gr0=gr0,17
  113| 001E8C eqv      7C001A38   1     EQV       gr0=gr0,gr3
  113| 001E90 rldicr   780083E4   1     SLL8      gr0=gr0,16
   87| 001E94 std      F80100A0   1     ST8       shared(gr1,160)=gr0
   88| 001E98 lfd      C82100A0   1     LFL       fp1=shared(gr1,160)
   63| 001E9C b        4BFFFEF8   1     B         CL.1947,-1
    0|                              CL.3737:
    3| 001EA0 or       7FE3FB78   1     LR        gr3=gr31
    3| 001EA4 addi     38800010   1     LI        gr4=16
    3| 001EA8 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns108.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP14",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    3| 001EAC ori      60000000   1
    6| 001EB0 addi     3B7B0001   1     AI        gr27=gr27,1
    8| 001EB4 sld      7C60E036   1     SLL8      gr0=gr3,gr28
   10| 001EB8 addi     387EFFF0   1     AI        gr3=gr30,-16
    6| 001EBC cmpldi   283B0003   1     CL8       cr0=gr27,3
    8| 001EC0 add      7FBD0214   1     A         gr29=gr29,gr0
    9| 001EC4 addi     3B9C0010   1     AI        gr28=gr28,16
   10| 001EC8 rlwinm   547E003E   1     RN4       gr30=gr3,0,0xFFFFFFFF
    6| 001ECC bc       4080FF6C   1     BF        CL.3735,cr0,0x8/llt,taken=20%(20,80)
    6| 001ED0 b        4BFFFF4C   1     B         CL.415,-1
   64|                              CL.413:
   71| 001ED4 stfd     DBE100C0   1     STFL      shared(gr1,192)=fp31
   67| 001ED8 ld       E9810150   1     L8        gr12=#stack(gr1,336)
   67| 001EDC lfd      CBE10138   1     LFL       fp31=#stack(gr1,312)
   67| 001EE0 mtspr    7D8803A6   1     LLR       lr=gr12
   72| 001EE4 ld       E80100C0   1     L8        gr0=shared(gr1,192)
  123| 001EE8 rldicr   780003E4   1     RN8       gr0=gr0,0,0xFFFFFFFFFFFF0000
   87| 001EEC std      F80100E0   1     ST8       shared(gr1,224)=gr0
   88| 001EF0 lfd      C82100E0   1     LFL       fp1=shared(gr1,224)
   67| 001EF4 addi     38210140   1     AI        gr1=gr1,320
   67| 001EF8 ld       EBE1FFF0   1     L8        gr31=#stack(gr1,-16)
   67| 001EFC bclr     4E800020   1     BA        lr
     |               Tag Table
     | 001F00        00000000 00092241 81060200 60000000 00000250 002D5F5A
     | 001F18        4E395043 6465636F 64657249 64355043 6D617049 644C6A34
     | 001F30        38457645 4C623145 45366465 636F6465 45646A
     |               Instruction count          148
     |               Straight-line exec time    149
 GPR's set/used:   ssus ssss ssss s---  ---- ssss ssss ssss
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ----
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     decompress3d<double,16>(RCdecoder *, double *, unsigned int, unsigned int, unsigned int)
     | 000000                           AKA       _Z12decompress3dIdLj16EEvP9RCdecoderPT_jjj
   14|                                  PROC      rd,data,nx,ny,nz,gr3-gr7
    0| 001F50 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 001F54 std      FBC1FFF0   1     ST8       #stack(gr1,-16)=gr30
    0| 001F58 std      FBA1FFE8   1     ST8       #stack(gr1,-24)=gr29
    0| 001F5C std      FB81FFE0   1     ST8       #stack(gr1,-32)=gr28
    0| 001F60 std      FB61FFD8   1     ST8       #stack(gr1,-40)=gr27
    0| 001F64 std      FB41FFD0   1     ST8       #stack(gr1,-48)=gr26
    0| 001F68 std      FB21FFC8   1     ST8       #stack(gr1,-56)=gr25
    0| 001F6C std      FB01FFC0   1     ST8       #stack(gr1,-64)=gr24
    0| 001F70 std      FAE1FFB8   1     ST8       #stack(gr1,-72)=gr23
    0| 001F74 std      FAC1FFB0   1     ST8       #stack(gr1,-80)=gr22
    0| 001F78 std      FAA1FFA8   1     ST8       #stack(gr1,-88)=gr21
    0| 001F7C std      FA81FFA0   1     ST8       #stack(gr1,-96)=gr20
    0| 001F80 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 001F84 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 001F88 stdu     F821FEC1   1     ST8U      gr1,#stack(gr1,-320)=gr1
    0| 001F8C or       7C771B78   1     LR        gr23=gr3
   24| 001F90 addi     38600048   1     LI        gr3=72
   53| 001F94 std      F8410028   1     ST8       #cur_toc(gr1,40)=gr2
    0| 001F98 ld       E8020000   1     L8        gr0=.$STATIC(gr2,0)
    0| 001F9C addi     3BE00000   1     LI        gr31=0
    0| 001FA0 or       7CB82B78   1     LR        gr24=gr5
    0| 001FA4 stw      93E100C0   1     ST4Z      <a15:d192:l4>(gr1,192)=gr31
    0| 001FA8 std      FBE100D0   1     ST8       <a15:d208:l8>(gr1,208)=gr31
    0| 001FAC or       7C9E2378   1     LR        gr30=gr4
    0| 001FB0 std      F80100C8   1     ST8       <a15:d200:l8>(gr1,200)=gr0
    0| 001FB4 or       7CB92B78   1     LR        gr25=gr5
    0| 001FB8 rlwinm   54BD003E   1     RN4       gr29=gr5,0,0xFFFFFFFF
    0| 001FBC or       7CD63378   1     LR        gr22=gr6
    0| 001FC0 stw      93E100D8   1     ST4Z      <a15:d216:l4>(gr1,216)=gr31
    0| 001FC4 rlwinm   54DC003E   1     RN4       gr28=gr6,0,0xFFFFFFFF
    0| 001FC8 or       7CF53B78   1     LR        gr21=gr7
    0| 001FCC rlwinm   54FB003E   1     RN4       gr27=gr7,0,0xFFFFFFFF
   24| 001FD0 bl       48000001   1     CALL      gr3=_Znwm,1,gr3,#ProcAlias",_Znwm",fcr",#MX_TEMP15",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   24| 001FD4 ori      60000000   1
   24| 001FD8 or       7C7A1B79   1     LR_R      gr26,cr0=gr3
   24| 001FDC std      F86100A8   1     ST8       __144(gr1,168)=gr3
   24| 001FE0 bc       40820834   1     BF        CL.5200,cr0,0x4/eq,taken=40%(40,60)
   24|                              CL.434:
   25| 001FE4 addi     38600018   1     LI        gr3=24
   25| 001FE8 bl       48000001   1     CALL      gr3=_Znwm,1,gr3,#ProcAlias",_Znwm",fcr",#MX_TEMP15",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   25| 001FEC ori      60000000   1
   25| 001FF0 std      FB4100B0   1     ST8       rm(gr1,176)=gr26
   25| 001FF4 or       7C7A1B79   1     LR_R      gr26,cr0=gr3
   25| 001FF8 bc       41820010   1     BT        CL.437,cr0,0x4/eq,taken=50%(0,0)
   34| 001FFC std      FAFA0008   1     ST8       (PCdecoder<double,PCmap<double,16,void>,1>).rd@8.rns110.(gr26,8)=gr23
   34| 002000 addi     380100B0   1     AI        gr0=gr1,176
   34| 002004 std      F81A0010   1     ST8       (PCdecoder<double,PCmap<double,16,void>,1>).rm@10.rns111.(gr26,16)=gr0
   34|                              CL.437:
    9| 002008 addi     38B80001   1     AI        gr5=gr24,1
   26| 00200C std      FBE10080   1     ST8       <a15:d128:l8>(gr1,128)=gr31
    9| 002010 addi     387D0001   1     AI        gr3=gr29,1
    9| 002014 addi     389C0001   1     AI        gr4=gr28,1
    9| 002018 stw      90A1008C   1     ST4Z      <a15:d140:l4>(gr1,140)=gr5
    9| 00201C mulld    7C8321D2   1     M         gr4=gr3,gr4
    9| 002020 addi     38000001   1     LI        gr0=1
   45| 002024 add      7C64EA14   1     A         gr3=gr4,gr29
    9| 002028 stw      90810090   1     ST4Z      <a15:d144:l4>(gr1,144)=gr4
   45| 00202C addi     38830002   1     AI        gr4=gr3,2
   45| 002030 addi     38630001   1     AI        gr3=gr3,1
    9| 002034 stw      90010088   1     ST4Z      <a15:d136:l4>(gr1,136)=gr0
   45| 002038 and      7C642038   1     N         gr4=gr3,gr4
   45| 00203C rlwinm   5463003E   1     RN4       gr3=gr3,0,0xFFFFFFFF
   45| 002040 cmpwi    2C040000   1     C4        cr0=gr4,0
    0| 002044 addi     38030001   1     AI        gr0=gr3,1
   45| 002048 bc       41820018   1     BT        CL.441,cr0,0x4/eq,taken=20%(20,80)
   45|                              CL.439:
    9| 00204C or       7C001B78   1     O         gr0=gr0,gr3
    9| 002050 rldicl   78030020   1     RN8       gr3=gr0,0,0xFFFFFFFF
   45| 002054 addi     38030001   1     AI        gr0=gr3,1
   45| 002058 and      7C640039   1     N_R       gr4,cr0=gr3,gr0
   45| 00205C bc       4082FFF0   1     BF        CL.439,cr0,0x4/eq,taken=80%(80,20)
   45|                              CL.441:
   47| 002060 stw      90610094   1     ST4Z      <a15:d148:l4>(gr1,148)=gr3
   10| 002064 stw      93E10098   1     ST4Z      <a15:d152:l4>(gr1,152)=gr31
   10| 002068 rldic    78031F48   1     RN8       gr3=gr0,3,0x7FFFFFFF8
   10| 00206C bl       48000001   1     CALL      gr3=_Znam,1,gr3,#ProcAlias",_Znam",fcr",#MX_TEMP15",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   10| 002070 ori      60000000   1
   10| 002074 addi     38000002   1     LI        gr0=2
   24| 002078 lwz      80A10090   1     L4Z       gr5=<a15:d144:l4>(gr1,144)
   10| 00207C stb      980100C3   1     ST1Z      <a15:d195:l1>(gr1,195)=gr0
   23| 002080 lfd      C8010080   1     LFL       fp0=<a15:d128:l8>(gr1,128)
   10| 002084 std      F86100A0   1     ST8       <a15:d160:l8>(gr1,160)=gr3
   23| 002088 lwz      80010094   1     L4Z       gr0=<a15:d148:l4>(gr1,148)
   23| 00208C lwz      80C10098   1     L4Z       gr6=<a15:d152:l4>(gr1,152)
   24| 002090 cmplwi   28050001   1     CL4       cr0=gr5,1
   24| 002094 addi     3905FFFF   1     AI        gr8=gr5,-1
   23| 002098 and      7C043038   1     N         gr4=gr0,gr6
   23| 00209C rldicr   78841F24   1     SLL8      gr4=gr4,3
   23| 0020A0 addi     38E60001   1     AI        gr7=gr6,1
   23| 0020A4 stfdx    7C0325AE   1     STFL      (double).rns98.(gr3,gr4,0)=fp0
   23| 0020A8 stw      90E10098   1     ST4Z      <a15:d152:l4>(gr1,152)=gr7
   23| 0020AC rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   24| 0020B0 bc       4182003C   1     BT        CL.475,cr0,0x4/eq,taken=20%(20,80)
   24| 0020B4 addi     38E00000   1     LI        gr7=0
    0| 0020B8 rlwinm   5509003E   1     RN4       gr9=gr8,0,0xFFFFFFFF
    0| 0020BC ori      60210000   1     XNOP      
   22|                              CL.445:
   23| 0020C0 rldicl   78E80020   1     RN8       gr8=gr7,0,0xFFFFFFFF
   24| 0020C4 addi     38E70001   1     AI        gr7=gr7,1
   23| 0020C8 add      7D044214   1     A         gr8=gr4,gr8
   24| 0020CC cmpld    7C274840   1     CL8       cr0=gr7,gr9
   23| 0020D0 and      7C084038   1     N         gr8=gr0,gr8
   23| 0020D4 rldicr   79081F24   1     SLL8      gr8=gr8,3
   23| 0020D8 stfdx    7C0345AE   1     STFL      (double).rns98.(gr3,gr8,0)=fp0
   24| 0020DC bc       4180FFE4   1     BT        CL.445,cr0,0x8/llt,taken=80%(80,20)
   24| 0020E0 add      7C853214   1     A         gr4=gr5,gr6
   24| 0020E4 stw      90810098   1     ST4Z      <a15:d152:l4>(gr1,152)=gr4
   24| 0020E8 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   24|                              CL.475:
   31| 0020EC cmpdi    2C3B0000   1     C8        cr0=gr27,0
   31| 0020F0 bc       418201F0   1     BT        CL.444,cr0,0x4/eq,taken=50%(0,0)
   31| 0020F4 cmpdi    2C3C0000   1     C8        cr0=gr28,0
    0| 0020F8 cmpdi    2CBD0000   1     C8        cr1=gr29,0
   31| 0020FC bc       41820558   1     BT        CL.502,cr0,0x4/eq,taken=50%(0,0)
   31| 002100 bc       41860270   1     BT        CL.490,cr1,0x4/eq,taken=50%(0,0)
   31| 002104 addi     3A800000   1     LI        gr20=0
    0| 002108 rldic    7B391F48   1     RN8       gr25=gr25,3,0x7FFFFFFF8
   31|                              CL.442:
   24| 00210C lwz      80A1008C   1     L4Z       gr5=<a15:d140:l4>(gr1,140)
    0| 002110 lfd      C8010080   1     LFL       fp0=<a15:d128:l8>(gr1,128)
   23| 002114 and      7C062038   1     N         gr6=gr0,gr4
   23| 002118 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 00211C addi     38E40001   1     AI        gr7=gr4,1
   23| 002120 or       7C882378   1     LR        gr8=gr4
   24| 002124 cmplwi   28050001   1     CL4       cr0=gr5,1
   24| 002128 addi     3925FFFF   1     AI        gr9=gr5,-1
   23| 00212C rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   23| 002130 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
   24| 002134 bc       41820034   1     BT        CL.476,cr0,0x4/eq,taken=20%(20,80)
   24| 002138 or       7FE6FB78   1     LR        gr6=gr31
    0| 00213C rlwinm   5529003E   1     RN4       gr9=gr9,0,0xFFFFFFFF
   22|                              CL.451:
   23| 002140 rldicl   78C70020   1     RN8       gr7=gr6,0,0xFFFFFFFF
   24| 002144 addi     38C60001   1     AI        gr6=gr6,1
   23| 002148 add      7CE43A14   1     A         gr7=gr4,gr7
   24| 00214C cmpld    7C264840   1     CL8       cr0=gr6,gr9
   23| 002150 and      7C073838   1     N         gr7=gr0,gr7
   23| 002154 rldicr   78E71F24   1     SLL8      gr7=gr7,3
   23| 002158 stfdx    7C033DAE   1     STFL      (double).rns89.(gr3,gr7,0)=fp0
   24| 00215C bc       4180FFE4   1     BT        CL.451,cr0,0x8/llt,taken=80%(80,20)
   24| 002160 add      7C854214   1     A         gr4=gr5,gr8
   24| 002164 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   24|                              CL.476:
   31| 002168 or       7FF8FB78   1     LR        gr24=gr31
    0| 00216C addi     3AFEFFF8   1     AI        gr23=gr30,-8
   31|                              CL.448:
   24| 002170 lwz      80A10088   1     L4Z       gr5=<a15:d136:l4>(gr1,136)
   30| 002174 lfd      C8010080   1     LFL       fp0=<a15:d128:l8>(gr1,128)
   23| 002178 and      7C062038   1     N         gr6=gr0,gr4
   23| 00217C rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 002180 addi     38E40001   1     AI        gr7=gr4,1
   23| 002184 or       7C882378   1     LR        gr8=gr4
   24| 002188 addi     3925FFFF   1     AI        gr9=gr5,-1
   23| 00218C stw      90E10098   1     ST4Z      <a15:d152:l4>(gr1,152)=gr7
   24| 002190 cmplwi   28050001   1     CL4       cr0=gr5,1
   23| 002194 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
   23| 002198 rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   24| 00219C bc       41820040   1     BT        CL.477,cr0,0x4/eq,taken=20%(20,80)
   24| 0021A0 or       7FE6FB78   1     LR        gr6=gr31
    0| 0021A4 rlwinm   5529003E   1     RN4       gr9=gr9,0,0xFFFFFFFF
    0| 0021A8 ori      60210000   1     XNOP      
    0| 0021AC ori      60210000   1     XNOP      
   22|                              CL.457:
   23| 0021B0 rldicl   78C70020   1     RN8       gr7=gr6,0,0xFFFFFFFF
   24| 0021B4 addi     38C60001   1     AI        gr6=gr6,1
   23| 0021B8 add      7CE43A14   1     A         gr7=gr4,gr7
   24| 0021BC cmpld    7C264840   1     CL8       cr0=gr6,gr9
   23| 0021C0 and      7C073838   1     N         gr7=gr0,gr7
   23| 0021C4 rldicr   78E71F24   1     SLL8      gr7=gr7,3
   23| 0021C8 stfdx    7C033DAE   1     STFL      (double).rns89.(gr3,gr7,0)=fp0
   24| 0021CC bc       4180FFE4   1     BT        CL.457,cr0,0x8/llt,taken=80%(80,20)
   24| 0021D0 add      7C854214   1     A         gr4=gr5,gr8
   24| 0021D4 stw      90810098   1     ST4Z      <a15:d152:l4>(gr1,152)=gr4
   24| 0021D8 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   24|                              CL.477:
   31| 0021DC or       7FF6FB78   1     LR        gr22=gr31
   48| 0021E0 or       7EF5BB78   1     LR        gr21=gr23
    0| 0021E4 ori      60210000   1     XNOP      
   31|                              CL.454:
   47| 0021E8 lwz      8101008C   1     L4Z       gr8=<a15:d140:l4>(gr1,140)
    0| 0021EC lwz      80C10088   1     L4Z       gr6=<a15:d136:l4>(gr1,136)
   47| 0021F0 lwz      81210090   1     L4Z       gr9=<a15:d144:l4>(gr1,144)
   47| 0021F4 addi     38A00000   1     LI        gr5=0
   47| 0021F8 subf     7D482050   1     S         gr10=gr4,gr8
   47| 0021FC subf     7D662050   1     S         gr11=gr4,gr6
   47| 002200 subf     7CE95050   1     S         gr7=gr10,gr9
   47| 002204 and      7C065838   1     N         gr6=gr0,gr11
   47| 002208 and      7C073838   1     N         gr7=gr0,gr7
   47| 00220C rldicr   78C61F24   1     SLL8      gr6=gr6,3
   47| 002210 rldicr   78E71F24   1     SLL8      gr7=gr7,3
   47| 002214 lfdx     7C2334AE   1     LFL       fp1=(double).rns89.(gr3,gr6,0)
   47| 002218 lfdx     7C433CAE   1     LFL       fp2=(double).rns89.(gr3,gr7,0)
   47| 00221C and      7C065038   1     N         gr6=gr0,gr10
   47| 002220 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   47| 002224 subf     7CE95850   1     S         gr7=gr11,gr9
   47| 002228 lfdx     7C0334AE   1     LFL       fp0=(double).rns89.(gr3,gr6,0)
   47| 00222C and      7C063838   1     N         gr6=gr0,gr7
   47| 002230 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   47| 002234 fsub     FC211028   1     SFL       fp1=fp1,fp2,fcr
   47| 002238 subf     7C892050   1     S         gr4=gr4,gr9
   47| 00223C lfdx     7C4334AE   1     LFL       fp2=(double).rns89.(gr3,gr6,0)
   47| 002240 and      7C042038   1     N         gr4=gr0,gr4
   47| 002244 rldicr   78841F24   1     SLL8      gr4=gr4,3
   47| 002248 subf     7CC85850   1     S         gr6=gr11,gr8
   47| 00224C fadd     FC21002A   1     AFL       fp1=fp1,fp0,fcr
   47| 002250 lfdx     7C0324AE   2     LFL       fp0=(double).rns89.(gr3,gr4,0)
   47| 002254 and      7C043038   1     N         gr4=gr0,gr6
   47| 002258 rldicr   78841F24   1     SLL8      gr4=gr4,3
   47| 00225C subf     7CC93050   1     S         gr6=gr6,gr9
   47| 002260 lfdx     7C6324AE   1     LFL       fp3=(double).rns89.(gr3,gr4,0)
   47| 002264 fsub     FC211028   1     SFL       fp1=fp1,fp2,fcr
   47| 002268 and      7C003038   2     N         gr0=gr0,gr6
   47| 00226C rldicr   78041F24   1     SLL8      gr4=gr0,3
   47| 002270 lfdx     7C4324AE   1     LFL       fp2=(double).rns89.(gr3,gr4,0)
   47| 002274 or       7F43D378   1     LR        gr3=gr26
   47| 002278 fadd     FC01002A   1     AFL       fp0=fp1,fp0,fcr
   47| 00227C fsub     FC001828   2     SFL       fp0=fp0,fp3,fcr
   47| 002280 fadd     FC20102A   2     AFL       fp1=fp0,fp2,fcr
   47| 002284 bl       4BFFEA3D   1     CALL      fp1=PCdecoder<double,PCmap<double,16,void>,1>::decode(double, unsigned int),3,(PCdecoder<double,PCmap<double,16,void>,1>).rns102.",gr3,fp1,gr5,#ProcAlias",PCdecoder<double,PCmap<double,16,void>,1>::decode(double, unsigned int)",fcr",#MX_TEMP15",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   47| 002288 ori      60000000   1
   23| 00228C lwz      80010094   1     L4Z       gr0=<a15:d148:l4>(gr1,148)
   23| 002290 lwz      80A10098   1     L4Z       gr5=<a15:d152:l4>(gr1,152)
   23| 002294 ld       E86100A0   1     L8        gr3=<a15:d160:l8>(gr1,160)
   32| 002298 addi     3AD60001   1     AI        gr22=gr22,1
   48| 00229C stfdu    DC350008   1     STFDU     gr21,(double).rns89.(gr21,8)=fp1
   32| 0022A0 cmpld    7C36E840   1     CL8       cr0=gr22,gr29
   23| 0022A4 and      7C042838   1     N         gr4=gr0,gr5
   23| 0022A8 rldicr   78841F24   1     SLL8      gr4=gr4,3
   23| 0022AC addi     38A50001   1     AI        gr5=gr5,1
   23| 0022B0 stfdx    7C2325AE   1     STFL      (double).rns89.(gr3,gr4,0)=fp1
   23| 0022B4 stw      90A10098   1     ST4Z      <a15:d152:l4>(gr1,152)=gr5
   23| 0022B8 rlwinm   54A4003E   1     RN4       gr4=gr5,0,0xFFFFFFFF
   32| 0022BC bc       4180FF2C   1     BT        CL.454,cr0,0x8/llt,taken=80%(80,20)
   31| 0022C0 addi     3B180001   1     AI        gr24=gr24,1
   32| 0022C4 add      7FDECA14   1     A         gr30=gr30,gr25
   31| 0022C8 cmpld    7C38E040   1     CL8       cr0=gr24,gr28
    0| 0022CC add      7EF7CA14   1     A         gr23=gr23,gr25
   31| 0022D0 bc       4180FEA0   1     BT        CL.448,cr0,0x8/llt,taken=80%(80,20)
   30| 0022D4 addi     3A940001   1     AI        gr20=gr20,1
   30| 0022D8 cmpld    7C34D840   1     CL8       cr0=gr20,gr27
   30| 0022DC bc       4180FE30   1     BT        CL.442,cr0,0x8/llt,taken=80%(80,20)
   30|                              CL.444:
   52| 0022E0 cmpdi    2C3A0000   1     C8        cr0=gr26,0
   52| 0022E4 bc       4082007C   1     BF        CL.5201,cr0,0x4/eq,taken=40%(40,60)
   35|                              CL.464:
   53| 0022E8 ld       E86100B0   1     L8        gr3=rm(gr1,176)
   53| 0022EC cmpdi    2C230000   1     C8        cr0=gr3,0
   53| 0022F0 bc       41820024   1     BT        CL.467,cr0,0x4/eq,taken=30%(30,70)
   53| 0022F4 ld       E8830000   1     L8        gr4=(RCmodel)[]@0.rns112.(gr3,0)
   53| 0022F8 ld       E8840008   1     L8        gr4=((*)();__vftTypeGCCV3).rns19.(gr4,8)
   53| 0022FC ld       E8040000   1     L8        gr0=#fnc_adr(gr4,0)
   53| 002300 ld       E9640010   1     L8        gr11=#new_env(gr4,16)
   53| 002304 mtspr    7C0903A6   1     LCTR      ctr=gr0
   53| 002308 ld       E8440008   1     CALL      gr3=gr4,1,(char).rns108.",gr3,#ProcAlias",fcr",#MX_TEMP15",(()vf).rns107.",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr",#fnc_adr,#cur_toc,ctr,gr11,#new_env,#(glue_dr_n,0,(()vf).rns107."
   53| 00230C bcctrl   4E800421   1
   53| 002310 ld       E8410028   1
   53|                              CL.467:
   11| 002314 ld       E86100A0   1     L8        gr3=<a15:d160:l8>(gr1,160)
   11| 002318 bl       48000001   1     CALL      _ZdaPv,1,(char).rns108.",gr3,#ProcAlias",_ZdaPv",fcr",#MX_TEMP15",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   11| 00231C ori      60000000   1
   54| 002320 ld       E9810150   1     L8        gr12=#stack(gr1,336)
   54| 002324 addi     38210140   1     AI        gr1=gr1,320
   54| 002328 ld       EA81FFA0   1     L8        gr20=#stack(gr1,-96)
   54| 00232C ld       EAA1FFA8   1     L8        gr21=#stack(gr1,-88)
   54| 002330 ld       EAC1FFB0   1     L8        gr22=#stack(gr1,-80)
   54| 002334 mtspr    7D8803A6   1     LLR       lr=gr12
   54| 002338 ld       EAE1FFB8   1     L8        gr23=#stack(gr1,-72)
   54| 00233C ld       EB01FFC0   1     L8        gr24=#stack(gr1,-64)
   54| 002340 ld       EB21FFC8   1     L8        gr25=#stack(gr1,-56)
   54| 002344 ld       EB41FFD0   1     L8        gr26=#stack(gr1,-48)
   54| 002348 ld       EB61FFD8   1     L8        gr27=#stack(gr1,-40)
   54| 00234C ld       EB81FFE0   1     L8        gr28=#stack(gr1,-32)
   54| 002350 ld       EBA1FFE8   1     L8        gr29=#stack(gr1,-24)
   54| 002354 ld       EBC1FFF0   1     L8        gr30=#stack(gr1,-16)
   54| 002358 ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
   54| 00235C bclr     4E800020   1     BA        lr
    0|                              CL.5201:
   35| 002360 or       7F43D378   1     LR        gr3=gr26
   35| 002364 bl       48000001   1     CALL      _ZdlPv,1,(char).rns105.",gr3,#ProcAlias",_ZdlPv",fcr",#MX_TEMP15",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   35| 002368 ori      60000000   1
    0| 00236C b        4BFFFF7C   1     B         CL.464,-1
   30|                              CL.490:
   31| 002370 lwz      80A1008C   1     L4Z       gr5=<a15:d140:l4>(gr1,140)
    0| 002374 lwz      80C10088   1     L4Z       gr6=<a15:d136:l4>(gr1,136)
   31| 002378 cmplwi   28050001   1     CL4       cr0=gr5,1
    0| 00237C cmplwi   28860001   1     CL4       cr1=gr6,1
   31| 002380 bc       418201B4   1     BT        CL.541,cr0,0x4/eq,taken=50%(0,0)
   31| 002384 bc       418600CC   1     BT        CL.531,cr1,0x4/eq,taken=50%(0,0)
    0| 002388 addi     38E5FFFF   1     AI        gr7=gr5,-1
    0| 00238C addi     38C6FFFF   1     AI        gr6=gr6,-1
   31| 002390 addi     38A00000   1     LI        gr5=0
    0| 002394 rlwinm   54E7003E   1     RN4       gr7=gr7,0,0xFFFFFFFF
    0| 002398 rlwinm   54C8003E   1     RN4       gr8=gr6,0,0xFFFFFFFF
   31|                              CL.492:
    0| 00239C lfd      C8010080   1     LFL       fp0=<a15:d128:l8>(gr1,128)
   23| 0023A0 and      7C062038   1     N         gr6=gr0,gr4
   23| 0023A4 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 0023A8 addi     39240001   1     AI        gr9=gr4,1
   24| 0023AC or       7FE4FB78   1     LR        gr4=gr31
   23| 0023B0 rlwinm   552A003E   1     RN4       gr10=gr9,0,0xFFFFFFFF
   23| 0023B4 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
    0| 0023B8 ori      60210000   1     XNOP      
    0| 0023BC ori      60210000   1     XNOP      
   22|                              CL.493:
   23| 0023C0 rldicl   78860020   1     RN8       gr6=gr4,0,0xFFFFFFFF
   24| 0023C4 addi     38840001   1     AI        gr4=gr4,1
   23| 0023C8 add      7CC65214   1     A         gr6=gr6,gr10
   24| 0023CC cmpld    7C243840   1     CL8       cr0=gr4,gr7
   23| 0023D0 and      7C063038   1     N         gr6=gr0,gr6
   23| 0023D4 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 0023D8 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
   24| 0023DC bc       4180FFE4   1     BT        CL.493,cr0,0x8/llt,taken=80%(80,20)
   24| 0023E0 add      7C874A14   1     A         gr4=gr7,gr9
    0| 0023E4 mtspr    7F8903A6   1     LCTR      ctr=gr28
   24| 0023E8 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   31|                              CL.495:
   30| 0023EC lfd      C8010080   1     LFL       fp0=<a15:d128:l8>(gr1,128)
    0| 0023F0 and      7C062038   1     N         gr6=gr0,gr4
   23| 0023F4 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 0023F8 addi     39240001   1     AI        gr9=gr4,1
   24| 0023FC or       7FE4FB78   1     LR        gr4=gr31
   23| 002400 rlwinm   552A003E   1     RN4       gr10=gr9,0,0xFFFFFFFF
   23| 002404 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
    0| 002408 ori      60210000   1     XNOP      
    0| 00240C ori      60210000   1     XNOP      
   22|                              CL.496:
   23| 002410 rldicl   78860020   1     RN8       gr6=gr4,0,0xFFFFFFFF
   24| 002414 addi     38840001   1     AI        gr4=gr4,1
   23| 002418 add      7CC65214   1     A         gr6=gr6,gr10
   24| 00241C cmpld    7C244040   1     CL8       cr0=gr4,gr8
   23| 002420 and      7C063038   1     N         gr6=gr0,gr6
   23| 002424 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 002428 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
   24| 00242C bc       4180FFE4   1     BT        CL.496,cr0,0x8/llt,taken=80%(80,20)
   24| 002430 add      7CC84A14   1     A         gr6=gr8,gr9
   24| 002434 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   31| 002438 bc       4200FFB4   1     BCT       ctr=CL.495,taken=100%(100,0)
   30| 00243C addi     38A50001   1     AI        gr5=gr5,1
   30| 002440 cmpld    7C25D840   1     CL8       cr0=gr5,gr27
   30| 002444 bc       4180FF58   1     BT        CL.492,cr0,0x8/llt,taken=80%(80,20)
   24|                              CL.5208:
   24| 002448 stw      90C10098   1     ST4Z      <a15:d152:l4>(gr1,152)=gr6
   30| 00244C b        4BFFFE94   1     B         CL.444,-1
   30|                              CL.531:
    0| 002450 addi     38E5FFFF   1     AI        gr7=gr5,-1
    0| 002454 rlwinm   56C6F87E   1     RN4       gr6=gr22,31,0x7FFFFFFF
   31| 002458 addi     38A00000   1     LI        gr5=0
    0| 00245C rlwinm   54E7003E   1     RN4       gr7=gr7,0,0xFFFFFFFF
    0| 002460 rldicl   7B8807E1   1     RN8_R     gr8,cr0=gr28,0,0x1
    0| 002464 cmpdi    2F260000   1     C8        cr6=gr6,0
   31|                              CL.533:
    0| 002468 lfd      C8010080   1     LFL       fp0=<a15:d128:l8>(gr1,128)
   23| 00246C and      7C082038   1     N         gr8=gr0,gr4
   23| 002470 rldicr   79081F24   1     SLL8      gr8=gr8,3
   23| 002474 addi     39440001   1     AI        gr10=gr4,1
   23| 002478 or       7C892378   1     LR        gr9=gr4
   23| 00247C rlwinm   554B003E   1     RN4       gr11=gr10,0,0xFFFFFFFF
   24| 002480 or       7FE4FB78   1     LR        gr4=gr31
   23| 002484 stfdx    7C0345AE   1     STFL      (double).rns89.(gr3,gr8,0)=fp0
    0| 002488 ori      60210000   1     XNOP      
    0| 00248C ori      60210000   1     XNOP      
   22|                              CL.534:
   23| 002490 rldicl   78880020   1     RN8       gr8=gr4,0,0xFFFFFFFF
   24| 002494 addi     38840001   1     AI        gr4=gr4,1
   23| 002498 add      7D085A14   1     A         gr8=gr8,gr11
   24| 00249C cmpld    7CA43840   1     CL8       cr1=gr4,gr7
   23| 0024A0 and      7C084038   1     N         gr8=gr0,gr8
   23| 0024A4 rldicr   79081F24   1     SLL8      gr8=gr8,3
   23| 0024A8 stfdx    7C0345AE   1     STFL      (double).rns89.(gr3,gr8,0)=fp0
   24| 0024AC bc       4184FFE4   1     BT        CL.534,cr1,0x8/llt,taken=80%(80,20)
   24| 0024B0 add      7C875214   1     A         gr4=gr7,gr10
    0| 0024B4 mtspr    7CC903A6   1     LCTR      ctr=gr6
   24| 0024B8 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
    0| 0024BC bc       4182002C   1     BT        CL.3440,cr0,0x4/eq,taken=50%(0,0)
   23| 0024C0 lfd      C8010080   1     LFL       fp0=<a15:d128:l8>(gr1,128)
   23| 0024C4 addi     39290002   1     AI        gr9=gr9,2
   23| 0024C8 and      7C082038   1     N         gr8=gr0,gr4
   23| 0024CC rldicr   79081F24   1     SLL8      gr8=gr8,3
   23| 0024D0 add      7D274A14   1     A         gr9=gr7,gr9
   23| 0024D4 addi     39440001   1     AI        gr10=gr4,1
   23| 0024D8 rlwinm   5524003E   1     RN4       gr4=gr9,0,0xFFFFFFFF
   23| 0024DC stfdx    7C0345AE   1     STFL      (double).rns89.(gr3,gr8,0)=fp0
    0| 0024E0 bc       419A0040   1     BT        CL.3441,cr6,0x4/eq,taken=20%(20,80)
    0| 0024E4 ori      60210000   1     XNOP      
    0|                              CL.3440:
   31|                              CL.536:
   23| 0024E8 lfd      C8010080   1     LFL       fp0=<a15:d128:l8>(gr1,128)
   23| 0024EC and      7C082038   1     N         gr8=gr0,gr4
   23| 0024F0 rldicr   79081F24   1     SLL8      gr8=gr8,3
   23| 0024F4 addi     39240001   1     AI        gr9=gr4,1
   23| 0024F8 rlwinm   5524003E   1     RN4       gr4=gr9,0,0xFFFFFFFF
   23| 0024FC addi     39290001   1     AI        gr9=gr9,1
   23| 002500 and      7C0A2038   1     N         gr10=gr0,gr4
   23| 002504 stfdx    7C0345AE   1     STFL      (double).rns89.(gr3,gr8,0)=fp0
   23| 002508 lfd      C8010080   1     LFL       fp0=<a15:d128:l8>(gr1,128)
   23| 00250C rldicr   79481F24   1     SLL8      gr8=gr10,3
   23| 002510 addi     39440001   1     AI        gr10=gr4,1
   23| 002514 rlwinm   5524003E   1     RN4       gr4=gr9,0,0xFFFFFFFF
   23| 002518 stfdx    7C0345AE   1     STFL      (double).rns89.(gr3,gr8,0)=fp0
   31| 00251C bc       4200FFCC   1     BCT       ctr=CL.536,taken=100%(100,0)
    0|                              CL.3441:
   30| 002520 addi     38A50001   1     AI        gr5=gr5,1
   30| 002524 cmpld    7CA5D840   1     CL8       cr1=gr5,gr27
   30| 002528 bc       4184FF40   1     BT        CL.533,cr1,0x8/llt,taken=80%(80,20)
   31| 00252C stw      91410098   1     ST4Z      <a15:d152:l4>(gr1,152)=gr10
   30| 002530 b        4BFFFDB0   1     B         CL.444,-1
   30|                              CL.541:
   31| 002534 bc       41860088   1     BT        CL.551,cr1,0x4/eq,taken=50%(0,0)
    0| 002538 addi     38C6FFFF   1     AI        gr6=gr6,-1
   31| 00253C addi     38A00000   1     LI        gr5=0
    0| 002540 rlwinm   54C7003E   1     RN4       gr7=gr6,0,0xFFFFFFFF
   31|                              CL.543:
    0| 002544 lfd      C8010080   1     LFL       fp0=<a15:d128:l8>(gr1,128)
   23| 002548 and      7C062038   1     N         gr6=gr0,gr4
   23| 00254C rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 002550 addi     38840001   1     AI        gr4=gr4,1
    0| 002554 mtspr    7F8903A6   1     LCTR      ctr=gr28
   23| 002558 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   23| 00255C stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
   31|                              CL.546:
   30| 002560 lfd      C8010080   1     LFL       fp0=<a15:d128:l8>(gr1,128)
   23| 002564 and      7C062038   1     N         gr6=gr0,gr4
   23| 002568 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 00256C addi     39040001   1     AI        gr8=gr4,1
   24| 002570 or       7FE4FB78   1     LR        gr4=gr31
   23| 002574 rlwinm   5509003E   1     RN4       gr9=gr8,0,0xFFFFFFFF
   23| 002578 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
    0| 00257C ori      60210000   1     XNOP      
   22|                              CL.547:
   23| 002580 rldicl   78860020   1     RN8       gr6=gr4,0,0xFFFFFFFF
   24| 002584 addi     38840001   1     AI        gr4=gr4,1
   23| 002588 add      7CC64A14   1     A         gr6=gr6,gr9
   24| 00258C cmpld    7C243840   1     CL8       cr0=gr4,gr7
   23| 002590 and      7C063038   1     N         gr6=gr0,gr6
   23| 002594 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 002598 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
   24| 00259C bc       4180FFE4   1     BT        CL.547,cr0,0x8/llt,taken=80%(80,20)
   24| 0025A0 add      7CC74214   1     A         gr6=gr7,gr8
   24| 0025A4 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   31| 0025A8 bc       4200FFB8   1     BCT       ctr=CL.546,taken=100%(100,0)
   30| 0025AC addi     38A50001   1     AI        gr5=gr5,1
   30| 0025B0 cmpld    7C25D840   1     CL8       cr0=gr5,gr27
   30| 0025B4 bc       4180FF90   1     BT        CL.543,cr0,0x8/llt,taken=80%(80,20)
   24| 0025B8 b        4BFFFE90   1     B         CL.5208,-1
   30|                              CL.551:
    0| 0025BC rlwinm   56C5F87E   1     RN4       gr5=gr22,31,0x7FFFFFFF
    0| 0025C0 rldicl   7B8607E1   1     RN8_R     gr6,cr0=gr28,0,0x1
    0| 0025C4 cmpdi    2CA50000   1     C8        cr1=gr5,0
   31|                              CL.552:
    0| 0025C8 lfd      C8010080   1     LFL       fp0=<a15:d128:l8>(gr1,128)
   23| 0025CC and      7C062038   1     N         gr6=gr0,gr4
   23| 0025D0 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 0025D4 addi     39040001   1     AI        gr8=gr4,1
   23| 0025D8 or       7C872378   1     LR        gr7=gr4
   23| 0025DC rlwinm   5504003E   1     RN4       gr4=gr8,0,0xFFFFFFFF
    0| 0025E0 mtspr    7CA903A6   1     LCTR      ctr=gr5
   23| 0025E4 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
    0| 0025E8 bc       41820024   1     BT        CL.3443,cr0,0x4/eq,taken=50%(0,0)
   23| 0025EC lfd      C8010080   1     LFL       fp0=<a15:d128:l8>(gr1,128)
   23| 0025F0 and      7C840038   1     N         gr4=gr4,gr0
   23| 0025F4 rldicr   78861F24   1     SLL8      gr6=gr4,3
   23| 0025F8 addi     38870002   1     AI        gr4=gr7,2
   23| 0025FC rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   23| 002600 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
    0| 002604 bc       4186003C   1     BT        CL.3444,cr1,0x4/eq,taken=20%(20,80)
    0| 002608 ori      60210000   1     XNOP      
    0|                              CL.3443:
   31|                              CL.555:
   23| 00260C lfd      C8010080   1     LFL       fp0=<a15:d128:l8>(gr1,128)
   23| 002610 and      7C062038   1     N         gr6=gr0,gr4
   23| 002614 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 002618 addi     38840001   1     AI        gr4=gr4,1
   23| 00261C rlwinm   5487003E   1     RN4       gr7=gr4,0,0xFFFFFFFF
   23| 002620 addi     38840001   1     AI        gr4=gr4,1
   23| 002624 and      7C073838   1     N         gr7=gr0,gr7
   23| 002628 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
   23| 00262C lfd      C8010080   1     LFL       fp0=<a15:d128:l8>(gr1,128)
   23| 002630 rldicr   78E61F24   1     SLL8      gr6=gr7,3
   23| 002634 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   23| 002638 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
   31| 00263C bc       4200FFD0   1     BCT       ctr=CL.555,taken=100%(100,0)
    0|                              CL.3444:
   30| 002640 addi     3BFF0001   1     AI        gr31=gr31,1
   30| 002644 cmpld    7F3FD840   1     CL8       cr6=gr31,gr27
   30| 002648 bc       4198FF80   1     BT        CL.552,cr6,0x8/llt,taken=80%(80,20)
   30|                              CL.3286:
   30| 00264C stw      90810098   1     ST4Z      <a15:d152:l4>(gr1,152)=gr4
   30| 002650 b        4BFFFC90   1     B         CL.444,-1
   30|                              CL.502:
    0| 002654 lwz      80A1008C   1     L4Z       gr5=<a15:d140:l4>(gr1,140)
    0| 002658 cmplwi   28050001   1     CL4       cr0=gr5,1
   31| 00265C bc       418600DC   1     BT        CL.514,cr1,0x4/eq,taken=50%(0,0)
   31| 002660 bc       41820060   1     BT        CL.562,cr0,0x4/eq,taken=50%(0,0)
    0| 002664 addi     38A5FFFF   1     AI        gr5=gr5,-1
    0| 002668 mtspr    7F6903A6   1     LCTR      ctr=gr27
    0| 00266C rlwinm   54A6003E   1     RN4       gr6=gr5,0,0xFFFFFFFF
   31|                              CL.504:
    0| 002670 lfd      C8010080   1     LFL       fp0=<a15:d128:l8>(gr1,128)
   23| 002674 and      7C052038   1     N         gr5=gr0,gr4
   23| 002678 rldicr   78A51F24   1     SLL8      gr5=gr5,3
   23| 00267C addi     38E40001   1     AI        gr7=gr4,1
   24| 002680 or       7FE4FB78   1     LR        gr4=gr31
   23| 002684 rlwinm   54E8003E   1     RN4       gr8=gr7,0,0xFFFFFFFF
   23| 002688 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
    0| 00268C ori      60210000   1     XNOP      
   22|                              CL.505:
   23| 002690 rldicl   78850020   1     RN8       gr5=gr4,0,0xFFFFFFFF
   24| 002694 addi     38840001   1     AI        gr4=gr4,1
   23| 002698 add      7CA54214   1     A         gr5=gr5,gr8
   24| 00269C cmpld    7C243040   1     CL8       cr0=gr4,gr6
   23| 0026A0 and      7C052838   1     N         gr5=gr0,gr5
   23| 0026A4 rldicr   78A51F24   1     SLL8      gr5=gr5,3
   23| 0026A8 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
   24| 0026AC bc       4180FFE4   1     BT        CL.505,cr0,0x8/llt,taken=80%(80,20)
   24| 0026B0 add      7C863A14   1     A         gr4=gr6,gr7
   24| 0026B4 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   30| 0026B8 bc       4200FFB8   1     BCT       ctr=CL.504,taken=100%(100,0)
   30| 0026BC b        4BFFFF90   1     B         CL.3286,-1
   30|                              CL.562:
    0| 0026C0 rlwinm   56A5F87E   1     RN4       gr5=gr21,31,0x7FFFFFFF
    0| 0026C4 rldicl   7B6607E1   1     RN8_R     gr6,cr0=gr27,0,0x1
    0| 0026C8 cmpdi    2CA50000   1     C8        cr1=gr5,0
    0| 0026CC mtspr    7CA903A6   1     LCTR      ctr=gr5
    0| 0026D0 bc       41820028   1     BT        CL.3446,cr0,0x4/eq,taken=50%(0,0)
    0| 0026D4 lfd      C8010080   1     LFL       fp0=<a15:d128:l8>(gr1,128)
   23| 0026D8 and      7C052038   1     N         gr5=gr0,gr4
   23| 0026DC rldicr   78A51F24   1     SLL8      gr5=gr5,3
   23| 0026E0 addi     38E40001   1     AI        gr7=gr4,1
   23| 0026E4 rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   23| 0026E8 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
    0| 0026EC bc       41860044   1     BT        CL.3447,cr1,0x4/eq,taken=20%(20,80)
    0| 0026F0 ori      60210000   1     XNOP      
    0| 0026F4 ori      60210000   1     XNOP      
    0|                              CL.3446:
   31|                              CL.564:
    0| 0026F8 lfd      C8010080   1     LFL       fp0=<a15:d128:l8>(gr1,128)
   23| 0026FC and      7C052038   1     N         gr5=gr0,gr4
   23| 002700 rldicr   78A51F24   1     SLL8      gr5=gr5,3
   23| 002704 addi     38C40001   1     AI        gr6=gr4,1
   23| 002708 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   23| 00270C addi     38C60001   1     AI        gr6=gr6,1
   23| 002710 and      7C072038   1     N         gr7=gr0,gr4
   23| 002714 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
    0| 002718 lfd      C8010080   1     LFL       fp0=<a15:d128:l8>(gr1,128)
   23| 00271C rldicr   78E51F24   1     SLL8      gr5=gr7,3
   23| 002720 addi     38E40001   1     AI        gr7=gr4,1
   23| 002724 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   23| 002728 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
   30| 00272C bc       4200FFCC   1     BCT       ctr=CL.564,taken=100%(100,0)
    0|                              CL.3447:
   30| 002730 stw      90E10098   1     ST4Z      <a15:d152:l4>(gr1,152)=gr7
   30| 002734 b        4BFFFBAC   1     B         CL.444,-1
   30|                              CL.514:
   31| 002738 bc       41820068   1     BT        CL.569,cr0,0x4/eq,taken=50%(0,0)
    0| 00273C addi     38A5FFFF   1     AI        gr5=gr5,-1
    0| 002740 mtspr    7F6903A6   1     LCTR      ctr=gr27
    0| 002744 rlwinm   54A6003E   1     RN4       gr6=gr5,0,0xFFFFFFFF
   31|                              CL.515:
    0| 002748 lfd      C8010080   1     LFL       fp0=<a15:d128:l8>(gr1,128)
   23| 00274C and      7C052038   1     N         gr5=gr0,gr4
   23| 002750 rldicr   78A51F24   1     SLL8      gr5=gr5,3
   23| 002754 addi     38E40001   1     AI        gr7=gr4,1
   24| 002758 or       7FE4FB78   1     LR        gr4=gr31
   23| 00275C rlwinm   54E8003E   1     RN4       gr8=gr7,0,0xFFFFFFFF
   23| 002760 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
    0| 002764 ori      60210000   1     XNOP      
    0| 002768 ori      60210000   1     XNOP      
    0| 00276C ori      60210000   1     XNOP      
   22|                              CL.516:
   23| 002770 rldicl   78850020   1     RN8       gr5=gr4,0,0xFFFFFFFF
   24| 002774 addi     38840001   1     AI        gr4=gr4,1
   23| 002778 add      7CA54214   1     A         gr5=gr5,gr8
   24| 00277C cmpld    7C243040   1     CL8       cr0=gr4,gr6
   23| 002780 and      7C052838   1     N         gr5=gr0,gr5
   23| 002784 rldicr   78A51F24   1     SLL8      gr5=gr5,3
   23| 002788 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
   24| 00278C bc       4180FFE4   1     BT        CL.516,cr0,0x8/llt,taken=80%(80,20)
   24| 002790 add      7C863A14   1     A         gr4=gr6,gr7
   24| 002794 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   30| 002798 bc       4200FFB0   1     BCT       ctr=CL.515,taken=100%(100,0)
    0| 00279C b        4BFFFEB0   1     B         CL.3286,-1
   30|                              CL.569:
    0| 0027A0 rlwinm   56A5F87E   1     RN4       gr5=gr21,31,0x7FFFFFFF
    0| 0027A4 rldicl   7B6607E1   1     RN8_R     gr6,cr0=gr27,0,0x1
    0| 0027A8 cmpdi    2CA50000   1     C8        cr1=gr5,0
    0| 0027AC mtspr    7CA903A6   1     LCTR      ctr=gr5
    0| 0027B0 bc       41820028   1     BT        CL.3449,cr0,0x4/eq,taken=50%(0,0)
    0| 0027B4 lfd      C8010080   1     LFL       fp0=<a15:d128:l8>(gr1,128)
   23| 0027B8 and      7C052038   1     N         gr5=gr0,gr4
   23| 0027BC rldicr   78A51F24   1     SLL8      gr5=gr5,3
   23| 0027C0 addi     38E40001   1     AI        gr7=gr4,1
   23| 0027C4 rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   23| 0027C8 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
    0| 0027CC bc       4186FF64   1     BT        CL.3447,cr1,0x4/eq,taken=20%(20,80)
    0| 0027D0 ori      60210000   1     XNOP      
    0| 0027D4 ori      60210000   1     XNOP      
    0|                              CL.3449:
   31|                              CL.571:
    0| 0027D8 lfd      C8010080   1     LFL       fp0=<a15:d128:l8>(gr1,128)
   23| 0027DC and      7C052038   1     N         gr5=gr0,gr4
   23| 0027E0 rldicr   78A51F24   1     SLL8      gr5=gr5,3
   23| 0027E4 addi     38C40001   1     AI        gr6=gr4,1
   23| 0027E8 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   23| 0027EC addi     38C60001   1     AI        gr6=gr6,1
   23| 0027F0 and      7C072038   1     N         gr7=gr0,gr4
   23| 0027F4 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
    0| 0027F8 lfd      C8010080   1     LFL       fp0=<a15:d128:l8>(gr1,128)
   23| 0027FC rldicr   78E51F24   1     SLL8      gr5=gr7,3
   23| 002800 addi     38E40001   1     AI        gr7=gr4,1
   23| 002804 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   23| 002808 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
   30| 00280C bc       4200FFCC   1     BCT       ctr=CL.571,taken=100%(100,0)
   30| 002810 b        4BFFFF20   1     B         CL.3447,-1
    0|                              CL.5200:
   24| 002814 addi     38000001   1     LI        gr0=1
   24| 002818 addi     38800000   1     LI        gr4=0
   24| 00281C stb      980100C3   1     ST1Z      <a15:d195:l1>(gr1,195)=gr0
   24| 002820 addi     38A00021   1     LI        gr5=33
   24| 002824 addi     38C00010   1     LI        gr6=16
   24| 002828 addi     38E00400   1     LI        gr7=1024
   24| 00282C bl       48000001   1     CALL      gr3=_ZN9RCqsmodelC1Ebjjj,5,(char).rns97.",gr3-gr7,#ProcAlias",_ZN9RCqsmodelC1Ebjjj",fcr",#MX_TEMP15",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   24| 002830 ori      60000000   1
   24| 002834 stb      9BE100C3   1     ST1Z      <a15:d195:l1>(gr1,195)=gr31
    0| 002838 ld       EB4100A8   1     L8        gr26=__144(gr1,168)
    0| 00283C b        4BFFF7A8   1     B         CL.434,-1
     |               Tag Table
     | 002840        00000000 00092A41 800C0500 00000000 000008F0 00000001
     | 002858        000000C0 002A5F5A 31326465 636F6D70 72657373 33644964
     | 002870        4C6A3136 45457650 39524364 65636F64 65725054 5F6A6A6A
     |               Instruction count          572
     |               Straight-line exec time    576
 GPR's set/used:   ssus ssss ssss s---  ---- ssss ssss ssss
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ----
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     decompress3d<double,32>(RCdecoder *, double *, unsigned int, unsigned int, unsigned int)
     | 000000                           AKA       _Z12decompress3dIdLj32EEvP9RCdecoderPT_jjj
   14|                                  PROC      rd,data,nx,ny,nz,gr3-gr7
    0| 002890 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 002894 std      FBC1FFF0   1     ST8       #stack(gr1,-16)=gr30
    0| 002898 std      FBA1FFE8   1     ST8       #stack(gr1,-24)=gr29
    0| 00289C std      FB81FFE0   1     ST8       #stack(gr1,-32)=gr28
    0| 0028A0 std      FB61FFD8   1     ST8       #stack(gr1,-40)=gr27
    0| 0028A4 std      FB41FFD0   1     ST8       #stack(gr1,-48)=gr26
    0| 0028A8 std      FB21FFC8   1     ST8       #stack(gr1,-56)=gr25
    0| 0028AC std      FB01FFC0   1     ST8       #stack(gr1,-64)=gr24
    0| 0028B0 std      FAE1FFB8   1     ST8       #stack(gr1,-72)=gr23
    0| 0028B4 std      FAC1FFB0   1     ST8       #stack(gr1,-80)=gr22
    0| 0028B8 std      FAA1FFA8   1     ST8       #stack(gr1,-88)=gr21
    0| 0028BC std      FA81FFA0   1     ST8       #stack(gr1,-96)=gr20
    0| 0028C0 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 0028C4 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 0028C8 stdu     F821FEC1   1     ST8U      gr1,#stack(gr1,-320)=gr1
    0| 0028CC or       7C771B78   1     LR        gr23=gr3
   24| 0028D0 addi     38600048   1     LI        gr3=72
   53| 0028D4 std      F8410028   1     ST8       #cur_toc(gr1,40)=gr2
    0| 0028D8 ld       E9020000   1     L8        gr8=.$STATIC(gr2,0)
    0| 0028DC addi     3BE00000   1     LI        gr31=0
    0| 0028E0 or       7CB82B78   1     LR        gr24=gr5
    0| 0028E4 stw      93E100C0   1     ST4Z      <a16:d192:l4>(gr1,192)=gr31
    0| 0028E8 std      FBE100D0   1     ST8       <a16:d208:l8>(gr1,208)=gr31
    0| 0028EC or       7C9E2378   1     LR        gr30=gr4
    0| 0028F0 addi     38080060   1     AI        gr0=gr8,96
    0| 0028F4 stw      93E100D8   1     ST4Z      <a16:d216:l4>(gr1,216)=gr31
    0| 0028F8 std      F80100C8   1     ST8       <a16:d200:l8>(gr1,200)=gr0
    0| 0028FC or       7CB92B78   1     LR        gr25=gr5
    0| 002900 rlwinm   54BD003E   1     RN4       gr29=gr5,0,0xFFFFFFFF
    0| 002904 or       7CD63378   1     LR        gr22=gr6
    0| 002908 rlwinm   54DC003E   1     RN4       gr28=gr6,0,0xFFFFFFFF
    0| 00290C or       7CF53B78   1     LR        gr21=gr7
    0| 002910 rlwinm   54FB003E   1     RN4       gr27=gr7,0,0xFFFFFFFF
   24| 002914 bl       48000001   1     CALL      gr3=_Znwm,1,gr3,#ProcAlias",_Znwm",fcr",#MX_TEMP16",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   24| 002918 ori      60000000   1
   24| 00291C or       7C7A1B79   1     LR_R      gr26,cr0=gr3
   24| 002920 std      F86100A8   1     ST8       __199(gr1,168)=gr3
   24| 002924 bc       40820840   1     BF        CL.5334,cr0,0x4/eq,taken=40%(40,60)
   24|                              CL.595:
   25| 002928 addi     38600018   1     LI        gr3=24
   25| 00292C bl       48000001   1     CALL      gr3=_Znwm,1,gr3,#ProcAlias",_Znwm",fcr",#MX_TEMP16",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   25| 002930 ori      60000000   1
   25| 002934 std      FB4100B0   1     ST8       rm(gr1,176)=gr26
   25| 002938 or       7C7A1B79   1     LR_R      gr26,cr0=gr3
   25| 00293C bc       41820010   1     BT        CL.598,cr0,0x4/eq,taken=50%(0,0)
   34| 002940 std      FAFA0008   1     ST8       (PCdecoder<double,PCmap<double,32,void>,1>).rd@8.rns126.(gr26,8)=gr23
   34| 002944 addi     380100B0   1     AI        gr0=gr1,176
   34| 002948 std      F81A0010   1     ST8       (PCdecoder<double,PCmap<double,32,void>,1>).rm@10.rns127.(gr26,16)=gr0
   34|                              CL.598:
    9| 00294C addi     38B80001   1     AI        gr5=gr24,1
   26| 002950 std      FBE10080   1     ST8       <a16:d128:l8>(gr1,128)=gr31
    9| 002954 addi     387D0001   1     AI        gr3=gr29,1
    9| 002958 addi     389C0001   1     AI        gr4=gr28,1
    9| 00295C stw      90A1008C   1     ST4Z      <a16:d140:l4>(gr1,140)=gr5
    9| 002960 mulld    7C8321D2   1     M         gr4=gr3,gr4
    9| 002964 addi     38000001   1     LI        gr0=1
   45| 002968 add      7C64EA14   1     A         gr3=gr4,gr29
    9| 00296C stw      90810090   1     ST4Z      <a16:d144:l4>(gr1,144)=gr4
   45| 002970 addi     38830002   1     AI        gr4=gr3,2
   45| 002974 addi     38630001   1     AI        gr3=gr3,1
    9| 002978 stw      90010088   1     ST4Z      <a16:d136:l4>(gr1,136)=gr0
   45| 00297C and      7C642038   1     N         gr4=gr3,gr4
   45| 002980 rlwinm   5463003E   1     RN4       gr3=gr3,0,0xFFFFFFFF
   45| 002984 cmpwi    2C040000   1     C4        cr0=gr4,0
    0| 002988 addi     38030001   1     AI        gr0=gr3,1
   45| 00298C bc       41820024   1     BT        CL.602,cr0,0x4/eq,taken=20%(20,80)
    0| 002990 ori      60210000   1     XNOP      
    0| 002994 ori      60210000   1     XNOP      
    0| 002998 ori      60210000   1     XNOP      
   45|                              CL.600:
    9| 00299C or       7C001B78   1     O         gr0=gr0,gr3
    9| 0029A0 rldicl   78030020   1     RN8       gr3=gr0,0,0xFFFFFFFF
   45| 0029A4 addi     38030001   1     AI        gr0=gr3,1
   45| 0029A8 and      7C640039   1     N_R       gr4,cr0=gr3,gr0
   45| 0029AC bc       4082FFF0   1     BF        CL.600,cr0,0x4/eq,taken=80%(80,20)
   45|                              CL.602:
   47| 0029B0 stw      90610094   1     ST4Z      <a16:d148:l4>(gr1,148)=gr3
   10| 0029B4 stw      93E10098   1     ST4Z      <a16:d152:l4>(gr1,152)=gr31
   10| 0029B8 rldic    78031F48   1     RN8       gr3=gr0,3,0x7FFFFFFF8
   10| 0029BC bl       48000001   1     CALL      gr3=_Znam,1,gr3,#ProcAlias",_Znam",fcr",#MX_TEMP16",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   10| 0029C0 ori      60000000   1
   10| 0029C4 addi     38000002   1     LI        gr0=2
   24| 0029C8 lwz      80A10090   1     L4Z       gr5=<a16:d144:l4>(gr1,144)
   10| 0029CC stb      980100C3   1     ST1Z      <a16:d195:l1>(gr1,195)=gr0
   23| 0029D0 lfd      C8010080   1     LFL       fp0=<a16:d128:l8>(gr1,128)
   10| 0029D4 std      F86100A0   1     ST8       <a16:d160:l8>(gr1,160)=gr3
   23| 0029D8 lwz      80010094   1     L4Z       gr0=<a16:d148:l4>(gr1,148)
   23| 0029DC lwz      80C10098   1     L4Z       gr6=<a16:d152:l4>(gr1,152)
   24| 0029E0 cmplwi   28050001   1     CL4       cr0=gr5,1
   24| 0029E4 addi     3905FFFF   1     AI        gr8=gr5,-1
   23| 0029E8 and      7C043038   1     N         gr4=gr0,gr6
   23| 0029EC rldicr   78841F24   1     SLL8      gr4=gr4,3
   23| 0029F0 addi     38E60001   1     AI        gr7=gr6,1
   23| 0029F4 stfdx    7C0325AE   1     STFL      (double).rns114.(gr3,gr4,0)=fp0
   23| 0029F8 stw      90E10098   1     ST4Z      <a16:d152:l4>(gr1,152)=gr7
   23| 0029FC rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   24| 002A00 bc       4182003C   1     BT        CL.636,cr0,0x4/eq,taken=20%(20,80)
   24| 002A04 addi     38E00000   1     LI        gr7=0
    0| 002A08 rlwinm   5509003E   1     RN4       gr9=gr8,0,0xFFFFFFFF
    0| 002A0C ori      60210000   1     XNOP      
   22|                              CL.606:
   23| 002A10 rldicl   78E80020   1     RN8       gr8=gr7,0,0xFFFFFFFF
   24| 002A14 addi     38E70001   1     AI        gr7=gr7,1
   23| 002A18 add      7D044214   1     A         gr8=gr4,gr8
   24| 002A1C cmpld    7C274840   1     CL8       cr0=gr7,gr9
   23| 002A20 and      7C084038   1     N         gr8=gr0,gr8
   23| 002A24 rldicr   79081F24   1     SLL8      gr8=gr8,3
   23| 002A28 stfdx    7C0345AE   1     STFL      (double).rns114.(gr3,gr8,0)=fp0
   24| 002A2C bc       4180FFE4   1     BT        CL.606,cr0,0x8/llt,taken=80%(80,20)
   24| 002A30 add      7C853214   1     A         gr4=gr5,gr6
   24| 002A34 stw      90810098   1     ST4Z      <a16:d152:l4>(gr1,152)=gr4
   24| 002A38 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   24|                              CL.636:
   31| 002A3C cmpdi    2C3B0000   1     C8        cr0=gr27,0
   31| 002A40 bc       418201F0   1     BT        CL.605,cr0,0x4/eq,taken=50%(0,0)
   31| 002A44 cmpdi    2C3C0000   1     C8        cr0=gr28,0
    0| 002A48 cmpdi    2CBD0000   1     C8        cr1=gr29,0
   31| 002A4C bc       41820558   1     BT        CL.663,cr0,0x4/eq,taken=50%(0,0)
   31| 002A50 bc       41860270   1     BT        CL.651,cr1,0x4/eq,taken=50%(0,0)
   31| 002A54 addi     3A800000   1     LI        gr20=0
    0| 002A58 rldic    7B391F48   1     RN8       gr25=gr25,3,0x7FFFFFFF8
   31|                              CL.603:
   24| 002A5C lwz      80A1008C   1     L4Z       gr5=<a16:d140:l4>(gr1,140)
    0| 002A60 lfd      C8010080   1     LFL       fp0=<a16:d128:l8>(gr1,128)
   23| 002A64 and      7C062038   1     N         gr6=gr0,gr4
   23| 002A68 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 002A6C addi     38E40001   1     AI        gr7=gr4,1
   23| 002A70 or       7C882378   1     LR        gr8=gr4
   24| 002A74 cmplwi   28050001   1     CL4       cr0=gr5,1
   24| 002A78 addi     3925FFFF   1     AI        gr9=gr5,-1
   23| 002A7C rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   23| 002A80 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
   24| 002A84 bc       41820034   1     BT        CL.637,cr0,0x4/eq,taken=20%(20,80)
   24| 002A88 or       7FE6FB78   1     LR        gr6=gr31
    0| 002A8C rlwinm   5529003E   1     RN4       gr9=gr9,0,0xFFFFFFFF
   22|                              CL.612:
   23| 002A90 rldicl   78C70020   1     RN8       gr7=gr6,0,0xFFFFFFFF
   24| 002A94 addi     38C60001   1     AI        gr6=gr6,1
   23| 002A98 add      7CE43A14   1     A         gr7=gr4,gr7
   24| 002A9C cmpld    7C264840   1     CL8       cr0=gr6,gr9
   23| 002AA0 and      7C073838   1     N         gr7=gr0,gr7
   23| 002AA4 rldicr   78E71F24   1     SLL8      gr7=gr7,3
   23| 002AA8 stfdx    7C033DAE   1     STFL      (double).rns89.(gr3,gr7,0)=fp0
   24| 002AAC bc       4180FFE4   1     BT        CL.612,cr0,0x8/llt,taken=80%(80,20)
   24| 002AB0 add      7C854214   1     A         gr4=gr5,gr8
   24| 002AB4 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   24|                              CL.637:
   31| 002AB8 or       7FF8FB78   1     LR        gr24=gr31
    0| 002ABC addi     3AFEFFF8   1     AI        gr23=gr30,-8
   31|                              CL.609:
   24| 002AC0 lwz      80A10088   1     L4Z       gr5=<a16:d136:l4>(gr1,136)
   30| 002AC4 lfd      C8010080   1     LFL       fp0=<a16:d128:l8>(gr1,128)
   23| 002AC8 and      7C062038   1     N         gr6=gr0,gr4
   23| 002ACC rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 002AD0 addi     38E40001   1     AI        gr7=gr4,1
   23| 002AD4 or       7C882378   1     LR        gr8=gr4
   24| 002AD8 addi     3925FFFF   1     AI        gr9=gr5,-1
   23| 002ADC stw      90E10098   1     ST4Z      <a16:d152:l4>(gr1,152)=gr7
   24| 002AE0 cmplwi   28050001   1     CL4       cr0=gr5,1
   23| 002AE4 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
   23| 002AE8 rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   24| 002AEC bc       41820040   1     BT        CL.638,cr0,0x4/eq,taken=20%(20,80)
   24| 002AF0 or       7FE6FB78   1     LR        gr6=gr31
    0| 002AF4 rlwinm   5529003E   1     RN4       gr9=gr9,0,0xFFFFFFFF
    0| 002AF8 ori      60210000   1     XNOP      
    0| 002AFC ori      60210000   1     XNOP      
   22|                              CL.618:
   23| 002B00 rldicl   78C70020   1     RN8       gr7=gr6,0,0xFFFFFFFF
   24| 002B04 addi     38C60001   1     AI        gr6=gr6,1
   23| 002B08 add      7CE43A14   1     A         gr7=gr4,gr7
   24| 002B0C cmpld    7C264840   1     CL8       cr0=gr6,gr9
   23| 002B10 and      7C073838   1     N         gr7=gr0,gr7
   23| 002B14 rldicr   78E71F24   1     SLL8      gr7=gr7,3
   23| 002B18 stfdx    7C033DAE   1     STFL      (double).rns89.(gr3,gr7,0)=fp0
   24| 002B1C bc       4180FFE4   1     BT        CL.618,cr0,0x8/llt,taken=80%(80,20)
   24| 002B20 add      7C854214   1     A         gr4=gr5,gr8
   24| 002B24 stw      90810098   1     ST4Z      <a16:d152:l4>(gr1,152)=gr4
   24| 002B28 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   24|                              CL.638:
   31| 002B2C or       7FF6FB78   1     LR        gr22=gr31
   48| 002B30 or       7EF5BB78   1     LR        gr21=gr23
    0| 002B34 ori      60210000   1     XNOP      
   31|                              CL.615:
   47| 002B38 lwz      8101008C   1     L4Z       gr8=<a16:d140:l4>(gr1,140)
    0| 002B3C lwz      80C10088   1     L4Z       gr6=<a16:d136:l4>(gr1,136)
   47| 002B40 lwz      81210090   1     L4Z       gr9=<a16:d144:l4>(gr1,144)
   47| 002B44 addi     38A00000   1     LI        gr5=0
   47| 002B48 subf     7D482050   1     S         gr10=gr4,gr8
   47| 002B4C subf     7D662050   1     S         gr11=gr4,gr6
   47| 002B50 subf     7CE95050   1     S         gr7=gr10,gr9
   47| 002B54 and      7C065838   1     N         gr6=gr0,gr11
   47| 002B58 and      7C073838   1     N         gr7=gr0,gr7
   47| 002B5C rldicr   78C61F24   1     SLL8      gr6=gr6,3
   47| 002B60 rldicr   78E71F24   1     SLL8      gr7=gr7,3
   47| 002B64 lfdx     7C2334AE   1     LFL       fp1=(double).rns89.(gr3,gr6,0)
   47| 002B68 lfdx     7C433CAE   1     LFL       fp2=(double).rns89.(gr3,gr7,0)
   47| 002B6C and      7C065038   1     N         gr6=gr0,gr10
   47| 002B70 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   47| 002B74 subf     7CE95850   1     S         gr7=gr11,gr9
   47| 002B78 lfdx     7C0334AE   1     LFL       fp0=(double).rns89.(gr3,gr6,0)
   47| 002B7C and      7C063838   1     N         gr6=gr0,gr7
   47| 002B80 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   47| 002B84 fsub     FC211028   1     SFL       fp1=fp1,fp2,fcr
   47| 002B88 subf     7C892050   1     S         gr4=gr4,gr9
   47| 002B8C lfdx     7C4334AE   1     LFL       fp2=(double).rns89.(gr3,gr6,0)
   47| 002B90 and      7C042038   1     N         gr4=gr0,gr4
   47| 002B94 rldicr   78841F24   1     SLL8      gr4=gr4,3
   47| 002B98 subf     7CC85850   1     S         gr6=gr11,gr8
   47| 002B9C fadd     FC21002A   1     AFL       fp1=fp1,fp0,fcr
   47| 002BA0 lfdx     7C0324AE   2     LFL       fp0=(double).rns89.(gr3,gr4,0)
   47| 002BA4 and      7C043038   1     N         gr4=gr0,gr6
   47| 002BA8 rldicr   78841F24   1     SLL8      gr4=gr4,3
   47| 002BAC subf     7CC93050   1     S         gr6=gr6,gr9
   47| 002BB0 lfdx     7C6324AE   1     LFL       fp3=(double).rns89.(gr3,gr4,0)
   47| 002BB4 fsub     FC211028   1     SFL       fp1=fp1,fp2,fcr
   47| 002BB8 and      7C003038   2     N         gr0=gr0,gr6
   47| 002BBC rldicr   78041F24   1     SLL8      gr4=gr0,3
   47| 002BC0 lfdx     7C4324AE   1     LFL       fp2=(double).rns89.(gr3,gr4,0)
   47| 002BC4 or       7F43D378   1     LR        gr3=gr26
   47| 002BC8 fadd     FC01002A   1     AFL       fp0=fp1,fp0,fcr
   47| 002BCC fsub     FC001828   2     SFL       fp0=fp0,fp3,fcr
   47| 002BD0 fadd     FC20102A   2     AFL       fp1=fp0,fp2,fcr
   47| 002BD4 bl       4BFFE56D   1     CALL      fp1=PCdecoder<double,PCmap<double,32,void>,1>::decode(double, unsigned int),3,(PCdecoder<double,PCmap<double,32,void>,1>).rns118.",gr3,fp1,gr5,#ProcAlias",PCdecoder<double,PCmap<double,32,void>,1>::decode(double, unsigned int)",fcr",#MX_TEMP16",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   47| 002BD8 ori      60000000   1
   23| 002BDC lwz      80010094   1     L4Z       gr0=<a16:d148:l4>(gr1,148)
   23| 002BE0 lwz      80A10098   1     L4Z       gr5=<a16:d152:l4>(gr1,152)
   23| 002BE4 ld       E86100A0   1     L8        gr3=<a16:d160:l8>(gr1,160)
   32| 002BE8 addi     3AD60001   1     AI        gr22=gr22,1
   48| 002BEC stfdu    DC350008   1     STFDU     gr21,(double).rns89.(gr21,8)=fp1
   32| 002BF0 cmpld    7C36E840   1     CL8       cr0=gr22,gr29
   23| 002BF4 and      7C042838   1     N         gr4=gr0,gr5
   23| 002BF8 rldicr   78841F24   1     SLL8      gr4=gr4,3
   23| 002BFC addi     38A50001   1     AI        gr5=gr5,1
   23| 002C00 stfdx    7C2325AE   1     STFL      (double).rns89.(gr3,gr4,0)=fp1
   23| 002C04 stw      90A10098   1     ST4Z      <a16:d152:l4>(gr1,152)=gr5
   23| 002C08 rlwinm   54A4003E   1     RN4       gr4=gr5,0,0xFFFFFFFF
   32| 002C0C bc       4180FF2C   1     BT        CL.615,cr0,0x8/llt,taken=80%(80,20)
   31| 002C10 addi     3B180001   1     AI        gr24=gr24,1
   32| 002C14 add      7FDECA14   1     A         gr30=gr30,gr25
   31| 002C18 cmpld    7C38E040   1     CL8       cr0=gr24,gr28
    0| 002C1C add      7EF7CA14   1     A         gr23=gr23,gr25
   31| 002C20 bc       4180FEA0   1     BT        CL.609,cr0,0x8/llt,taken=80%(80,20)
   30| 002C24 addi     3A940001   1     AI        gr20=gr20,1
   30| 002C28 cmpld    7C34D840   1     CL8       cr0=gr20,gr27
   30| 002C2C bc       4180FE30   1     BT        CL.603,cr0,0x8/llt,taken=80%(80,20)
   30|                              CL.605:
   52| 002C30 cmpdi    2C3A0000   1     C8        cr0=gr26,0
   52| 002C34 bc       4082007C   1     BF        CL.5335,cr0,0x4/eq,taken=40%(40,60)
   35|                              CL.625:
   53| 002C38 ld       E86100B0   1     L8        gr3=rm(gr1,176)
   53| 002C3C cmpdi    2C230000   1     C8        cr0=gr3,0
   53| 002C40 bc       41820024   1     BT        CL.628,cr0,0x4/eq,taken=30%(30,70)
   53| 002C44 ld       E8830000   1     L8        gr4=(RCmodel)[]@0.rns112.(gr3,0)
   53| 002C48 ld       E8840008   1     L8        gr4=((*)();__vftTypeGCCV3).rns19.(gr4,8)
   53| 002C4C ld       E8040000   1     L8        gr0=#fnc_adr(gr4,0)
   53| 002C50 ld       E9640010   1     L8        gr11=#new_env(gr4,16)
   53| 002C54 mtspr    7C0903A6   1     LCTR      ctr=gr0
   53| 002C58 ld       E8440008   1     CALL      gr3=gr4,1,(char).rns108.",gr3,#ProcAlias",fcr",#MX_TEMP16",(()vf).rns123.",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr",#fnc_adr,#cur_toc,ctr,gr11,#new_env,#(glue_dr_n,0,(()vf).rns123."
   53| 002C5C bcctrl   4E800421   1
   53| 002C60 ld       E8410028   1
   53|                              CL.628:
   11| 002C64 ld       E86100A0   1     L8        gr3=<a16:d160:l8>(gr1,160)
   11| 002C68 bl       48000001   1     CALL      _ZdaPv,1,(char).rns108.",gr3,#ProcAlias",_ZdaPv",fcr",#MX_TEMP16",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   11| 002C6C ori      60000000   1
   54| 002C70 ld       E9810150   1     L8        gr12=#stack(gr1,336)
   54| 002C74 addi     38210140   1     AI        gr1=gr1,320
   54| 002C78 ld       EA81FFA0   1     L8        gr20=#stack(gr1,-96)
   54| 002C7C ld       EAA1FFA8   1     L8        gr21=#stack(gr1,-88)
   54| 002C80 ld       EAC1FFB0   1     L8        gr22=#stack(gr1,-80)
   54| 002C84 mtspr    7D8803A6   1     LLR       lr=gr12
   54| 002C88 ld       EAE1FFB8   1     L8        gr23=#stack(gr1,-72)
   54| 002C8C ld       EB01FFC0   1     L8        gr24=#stack(gr1,-64)
   54| 002C90 ld       EB21FFC8   1     L8        gr25=#stack(gr1,-56)
   54| 002C94 ld       EB41FFD0   1     L8        gr26=#stack(gr1,-48)
   54| 002C98 ld       EB61FFD8   1     L8        gr27=#stack(gr1,-40)
   54| 002C9C ld       EB81FFE0   1     L8        gr28=#stack(gr1,-32)
   54| 002CA0 ld       EBA1FFE8   1     L8        gr29=#stack(gr1,-24)
   54| 002CA4 ld       EBC1FFF0   1     L8        gr30=#stack(gr1,-16)
   54| 002CA8 ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
   54| 002CAC bclr     4E800020   1     BA        lr
    0|                              CL.5335:
   35| 002CB0 or       7F43D378   1     LR        gr3=gr26
   35| 002CB4 bl       48000001   1     CALL      _ZdlPv,1,(char).rns121.",gr3,#ProcAlias",_ZdlPv",fcr",#MX_TEMP16",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   35| 002CB8 ori      60000000   1
    0| 002CBC b        4BFFFF7C   1     B         CL.625,-1
   30|                              CL.651:
   31| 002CC0 lwz      80A1008C   1     L4Z       gr5=<a16:d140:l4>(gr1,140)
    0| 002CC4 lwz      80C10088   1     L4Z       gr6=<a16:d136:l4>(gr1,136)
   31| 002CC8 cmplwi   28050001   1     CL4       cr0=gr5,1
    0| 002CCC cmplwi   28860001   1     CL4       cr1=gr6,1
   31| 002CD0 bc       418201B4   1     BT        CL.702,cr0,0x4/eq,taken=50%(0,0)
   31| 002CD4 bc       418600CC   1     BT        CL.692,cr1,0x4/eq,taken=50%(0,0)
    0| 002CD8 addi     38E5FFFF   1     AI        gr7=gr5,-1
    0| 002CDC addi     38C6FFFF   1     AI        gr6=gr6,-1
   31| 002CE0 addi     38A00000   1     LI        gr5=0
    0| 002CE4 rlwinm   54E7003E   1     RN4       gr7=gr7,0,0xFFFFFFFF
    0| 002CE8 rlwinm   54C8003E   1     RN4       gr8=gr6,0,0xFFFFFFFF
   31|                              CL.653:
    0| 002CEC lfd      C8010080   1     LFL       fp0=<a16:d128:l8>(gr1,128)
   23| 002CF0 and      7C062038   1     N         gr6=gr0,gr4
   23| 002CF4 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 002CF8 addi     39240001   1     AI        gr9=gr4,1
   24| 002CFC or       7FE4FB78   1     LR        gr4=gr31
   23| 002D00 rlwinm   552A003E   1     RN4       gr10=gr9,0,0xFFFFFFFF
   23| 002D04 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
    0| 002D08 ori      60210000   1     XNOP      
    0| 002D0C ori      60210000   1     XNOP      
   22|                              CL.654:
   23| 002D10 rldicl   78860020   1     RN8       gr6=gr4,0,0xFFFFFFFF
   24| 002D14 addi     38840001   1     AI        gr4=gr4,1
   23| 002D18 add      7CC65214   1     A         gr6=gr6,gr10
   24| 002D1C cmpld    7C243840   1     CL8       cr0=gr4,gr7
   23| 002D20 and      7C063038   1     N         gr6=gr0,gr6
   23| 002D24 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 002D28 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
   24| 002D2C bc       4180FFE4   1     BT        CL.654,cr0,0x8/llt,taken=80%(80,20)
   24| 002D30 add      7C874A14   1     A         gr4=gr7,gr9
    0| 002D34 mtspr    7F8903A6   1     LCTR      ctr=gr28
   24| 002D38 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   31|                              CL.656:
   30| 002D3C lfd      C8010080   1     LFL       fp0=<a16:d128:l8>(gr1,128)
    0| 002D40 and      7C062038   1     N         gr6=gr0,gr4
   23| 002D44 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 002D48 addi     39240001   1     AI        gr9=gr4,1
   24| 002D4C or       7FE4FB78   1     LR        gr4=gr31
   23| 002D50 rlwinm   552A003E   1     RN4       gr10=gr9,0,0xFFFFFFFF
   23| 002D54 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
    0| 002D58 ori      60210000   1     XNOP      
    0| 002D5C ori      60210000   1     XNOP      
   22|                              CL.657:
   23| 002D60 rldicl   78860020   1     RN8       gr6=gr4,0,0xFFFFFFFF
   24| 002D64 addi     38840001   1     AI        gr4=gr4,1
   23| 002D68 add      7CC65214   1     A         gr6=gr6,gr10
   24| 002D6C cmpld    7C244040   1     CL8       cr0=gr4,gr8
   23| 002D70 and      7C063038   1     N         gr6=gr0,gr6
   23| 002D74 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 002D78 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
   24| 002D7C bc       4180FFE4   1     BT        CL.657,cr0,0x8/llt,taken=80%(80,20)
   24| 002D80 add      7CC84A14   1     A         gr6=gr8,gr9
   24| 002D84 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   31| 002D88 bc       4200FFB4   1     BCT       ctr=CL.656,taken=100%(100,0)
   30| 002D8C addi     38A50001   1     AI        gr5=gr5,1
   30| 002D90 cmpld    7C25D840   1     CL8       cr0=gr5,gr27
   30| 002D94 bc       4180FF58   1     BT        CL.653,cr0,0x8/llt,taken=80%(80,20)
   24|                              CL.5342:
   24| 002D98 stw      90C10098   1     ST4Z      <a16:d152:l4>(gr1,152)=gr6
   30| 002D9C b        4BFFFE94   1     B         CL.605,-1
   30|                              CL.692:
    0| 002DA0 addi     38E5FFFF   1     AI        gr7=gr5,-1
    0| 002DA4 rlwinm   56C6F87E   1     RN4       gr6=gr22,31,0x7FFFFFFF
   31| 002DA8 addi     38A00000   1     LI        gr5=0
    0| 002DAC rlwinm   54E7003E   1     RN4       gr7=gr7,0,0xFFFFFFFF
    0| 002DB0 rldicl   7B8807E1   1     RN8_R     gr8,cr0=gr28,0,0x1
    0| 002DB4 cmpdi    2F260000   1     C8        cr6=gr6,0
   31|                              CL.694:
    0| 002DB8 lfd      C8010080   1     LFL       fp0=<a16:d128:l8>(gr1,128)
   23| 002DBC and      7C082038   1     N         gr8=gr0,gr4
   23| 002DC0 rldicr   79081F24   1     SLL8      gr8=gr8,3
   23| 002DC4 addi     39440001   1     AI        gr10=gr4,1
   23| 002DC8 or       7C892378   1     LR        gr9=gr4
   23| 002DCC rlwinm   554B003E   1     RN4       gr11=gr10,0,0xFFFFFFFF
   24| 002DD0 or       7FE4FB78   1     LR        gr4=gr31
   23| 002DD4 stfdx    7C0345AE   1     STFL      (double).rns89.(gr3,gr8,0)=fp0
    0| 002DD8 ori      60210000   1     XNOP      
    0| 002DDC ori      60210000   1     XNOP      
   22|                              CL.695:
   23| 002DE0 rldicl   78880020   1     RN8       gr8=gr4,0,0xFFFFFFFF
   24| 002DE4 addi     38840001   1     AI        gr4=gr4,1
   23| 002DE8 add      7D085A14   1     A         gr8=gr8,gr11
   24| 002DEC cmpld    7CA43840   1     CL8       cr1=gr4,gr7
   23| 002DF0 and      7C084038   1     N         gr8=gr0,gr8
   23| 002DF4 rldicr   79081F24   1     SLL8      gr8=gr8,3
   23| 002DF8 stfdx    7C0345AE   1     STFL      (double).rns89.(gr3,gr8,0)=fp0
   24| 002DFC bc       4184FFE4   1     BT        CL.695,cr1,0x8/llt,taken=80%(80,20)
   24| 002E00 add      7C875214   1     A         gr4=gr7,gr10
    0| 002E04 mtspr    7CC903A6   1     LCTR      ctr=gr6
   24| 002E08 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
    0| 002E0C bc       4182002C   1     BT        CL.4121,cr0,0x4/eq,taken=50%(0,0)
   23| 002E10 lfd      C8010080   1     LFL       fp0=<a16:d128:l8>(gr1,128)
   23| 002E14 addi     39290002   1     AI        gr9=gr9,2
   23| 002E18 and      7C082038   1     N         gr8=gr0,gr4
   23| 002E1C rldicr   79081F24   1     SLL8      gr8=gr8,3
   23| 002E20 add      7D274A14   1     A         gr9=gr7,gr9
   23| 002E24 addi     39440001   1     AI        gr10=gr4,1
   23| 002E28 rlwinm   5524003E   1     RN4       gr4=gr9,0,0xFFFFFFFF
   23| 002E2C stfdx    7C0345AE   1     STFL      (double).rns89.(gr3,gr8,0)=fp0
    0| 002E30 bc       419A0040   1     BT        CL.4122,cr6,0x4/eq,taken=20%(20,80)
    0| 002E34 ori      60210000   1     XNOP      
    0|                              CL.4121:
   31|                              CL.697:
   23| 002E38 lfd      C8010080   1     LFL       fp0=<a16:d128:l8>(gr1,128)
   23| 002E3C and      7C082038   1     N         gr8=gr0,gr4
   23| 002E40 rldicr   79081F24   1     SLL8      gr8=gr8,3
   23| 002E44 addi     39240001   1     AI        gr9=gr4,1
   23| 002E48 rlwinm   5524003E   1     RN4       gr4=gr9,0,0xFFFFFFFF
   23| 002E4C addi     39290001   1     AI        gr9=gr9,1
   23| 002E50 and      7C0A2038   1     N         gr10=gr0,gr4
   23| 002E54 stfdx    7C0345AE   1     STFL      (double).rns89.(gr3,gr8,0)=fp0
   23| 002E58 lfd      C8010080   1     LFL       fp0=<a16:d128:l8>(gr1,128)
   23| 002E5C rldicr   79481F24   1     SLL8      gr8=gr10,3
   23| 002E60 addi     39440001   1     AI        gr10=gr4,1
   23| 002E64 rlwinm   5524003E   1     RN4       gr4=gr9,0,0xFFFFFFFF
   23| 002E68 stfdx    7C0345AE   1     STFL      (double).rns89.(gr3,gr8,0)=fp0
   31| 002E6C bc       4200FFCC   1     BCT       ctr=CL.697,taken=100%(100,0)
    0|                              CL.4122:
   30| 002E70 addi     38A50001   1     AI        gr5=gr5,1
   30| 002E74 cmpld    7CA5D840   1     CL8       cr1=gr5,gr27
   30| 002E78 bc       4184FF40   1     BT        CL.694,cr1,0x8/llt,taken=80%(80,20)
   31| 002E7C stw      91410098   1     ST4Z      <a16:d152:l4>(gr1,152)=gr10
   30| 002E80 b        4BFFFDB0   1     B         CL.605,-1
   30|                              CL.702:
   31| 002E84 bc       41860088   1     BT        CL.712,cr1,0x4/eq,taken=50%(0,0)
    0| 002E88 addi     38C6FFFF   1     AI        gr6=gr6,-1
   31| 002E8C addi     38A00000   1     LI        gr5=0
    0| 002E90 rlwinm   54C7003E   1     RN4       gr7=gr6,0,0xFFFFFFFF
   31|                              CL.704:
    0| 002E94 lfd      C8010080   1     LFL       fp0=<a16:d128:l8>(gr1,128)
   23| 002E98 and      7C062038   1     N         gr6=gr0,gr4
   23| 002E9C rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 002EA0 addi     38840001   1     AI        gr4=gr4,1
    0| 002EA4 mtspr    7F8903A6   1     LCTR      ctr=gr28
   23| 002EA8 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   23| 002EAC stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
   31|                              CL.707:
   30| 002EB0 lfd      C8010080   1     LFL       fp0=<a16:d128:l8>(gr1,128)
   23| 002EB4 and      7C062038   1     N         gr6=gr0,gr4
   23| 002EB8 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 002EBC addi     39040001   1     AI        gr8=gr4,1
   24| 002EC0 or       7FE4FB78   1     LR        gr4=gr31
   23| 002EC4 rlwinm   5509003E   1     RN4       gr9=gr8,0,0xFFFFFFFF
   23| 002EC8 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
    0| 002ECC ori      60210000   1     XNOP      
   22|                              CL.708:
   23| 002ED0 rldicl   78860020   1     RN8       gr6=gr4,0,0xFFFFFFFF
   24| 002ED4 addi     38840001   1     AI        gr4=gr4,1
   23| 002ED8 add      7CC64A14   1     A         gr6=gr6,gr9
   24| 002EDC cmpld    7C243840   1     CL8       cr0=gr4,gr7
   23| 002EE0 and      7C063038   1     N         gr6=gr0,gr6
   23| 002EE4 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 002EE8 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
   24| 002EEC bc       4180FFE4   1     BT        CL.708,cr0,0x8/llt,taken=80%(80,20)
   24| 002EF0 add      7CC74214   1     A         gr6=gr7,gr8
   24| 002EF4 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   31| 002EF8 bc       4200FFB8   1     BCT       ctr=CL.707,taken=100%(100,0)
   30| 002EFC addi     38A50001   1     AI        gr5=gr5,1
   30| 002F00 cmpld    7C25D840   1     CL8       cr0=gr5,gr27
   30| 002F04 bc       4180FF90   1     BT        CL.704,cr0,0x8/llt,taken=80%(80,20)
   24| 002F08 b        4BFFFE90   1     B         CL.5342,-1
   30|                              CL.712:
    0| 002F0C rlwinm   56C5F87E   1     RN4       gr5=gr22,31,0x7FFFFFFF
    0| 002F10 rldicl   7B8607E1   1     RN8_R     gr6,cr0=gr28,0,0x1
    0| 002F14 cmpdi    2CA50000   1     C8        cr1=gr5,0
   31|                              CL.713:
    0| 002F18 lfd      C8010080   1     LFL       fp0=<a16:d128:l8>(gr1,128)
   23| 002F1C and      7C062038   1     N         gr6=gr0,gr4
   23| 002F20 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 002F24 addi     39040001   1     AI        gr8=gr4,1
   23| 002F28 or       7C872378   1     LR        gr7=gr4
   23| 002F2C rlwinm   5504003E   1     RN4       gr4=gr8,0,0xFFFFFFFF
    0| 002F30 mtspr    7CA903A6   1     LCTR      ctr=gr5
   23| 002F34 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
    0| 002F38 bc       41820024   1     BT        CL.4124,cr0,0x4/eq,taken=50%(0,0)
   23| 002F3C lfd      C8010080   1     LFL       fp0=<a16:d128:l8>(gr1,128)
   23| 002F40 and      7C840038   1     N         gr4=gr4,gr0
   23| 002F44 rldicr   78861F24   1     SLL8      gr6=gr4,3
   23| 002F48 addi     38870002   1     AI        gr4=gr7,2
   23| 002F4C rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   23| 002F50 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
    0| 002F54 bc       4186003C   1     BT        CL.4125,cr1,0x4/eq,taken=20%(20,80)
    0| 002F58 ori      60210000   1     XNOP      
    0|                              CL.4124:
   31|                              CL.716:
   23| 002F5C lfd      C8010080   1     LFL       fp0=<a16:d128:l8>(gr1,128)
   23| 002F60 and      7C062038   1     N         gr6=gr0,gr4
   23| 002F64 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 002F68 addi     38840001   1     AI        gr4=gr4,1
   23| 002F6C rlwinm   5487003E   1     RN4       gr7=gr4,0,0xFFFFFFFF
   23| 002F70 addi     38840001   1     AI        gr4=gr4,1
   23| 002F74 and      7C073838   1     N         gr7=gr0,gr7
   23| 002F78 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
   23| 002F7C lfd      C8010080   1     LFL       fp0=<a16:d128:l8>(gr1,128)
   23| 002F80 rldicr   78E61F24   1     SLL8      gr6=gr7,3
   23| 002F84 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   23| 002F88 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
   31| 002F8C bc       4200FFD0   1     BCT       ctr=CL.716,taken=100%(100,0)
    0|                              CL.4125:
   30| 002F90 addi     3BFF0001   1     AI        gr31=gr31,1
   30| 002F94 cmpld    7F3FD840   1     CL8       cr6=gr31,gr27
   30| 002F98 bc       4198FF80   1     BT        CL.713,cr6,0x8/llt,taken=80%(80,20)
   30|                              CL.3967:
   30| 002F9C stw      90810098   1     ST4Z      <a16:d152:l4>(gr1,152)=gr4
   30| 002FA0 b        4BFFFC90   1     B         CL.605,-1
   30|                              CL.663:
    0| 002FA4 lwz      80A1008C   1     L4Z       gr5=<a16:d140:l4>(gr1,140)
    0| 002FA8 cmplwi   28050001   1     CL4       cr0=gr5,1
   31| 002FAC bc       418600DC   1     BT        CL.675,cr1,0x4/eq,taken=50%(0,0)
   31| 002FB0 bc       41820060   1     BT        CL.723,cr0,0x4/eq,taken=50%(0,0)
    0| 002FB4 addi     38A5FFFF   1     AI        gr5=gr5,-1
    0| 002FB8 mtspr    7F6903A6   1     LCTR      ctr=gr27
    0| 002FBC rlwinm   54A6003E   1     RN4       gr6=gr5,0,0xFFFFFFFF
   31|                              CL.665:
    0| 002FC0 lfd      C8010080   1     LFL       fp0=<a16:d128:l8>(gr1,128)
   23| 002FC4 and      7C052038   1     N         gr5=gr0,gr4
   23| 002FC8 rldicr   78A51F24   1     SLL8      gr5=gr5,3
   23| 002FCC addi     38E40001   1     AI        gr7=gr4,1
   24| 002FD0 or       7FE4FB78   1     LR        gr4=gr31
   23| 002FD4 rlwinm   54E8003E   1     RN4       gr8=gr7,0,0xFFFFFFFF
   23| 002FD8 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
    0| 002FDC ori      60210000   1     XNOP      
   22|                              CL.666:
   23| 002FE0 rldicl   78850020   1     RN8       gr5=gr4,0,0xFFFFFFFF
   24| 002FE4 addi     38840001   1     AI        gr4=gr4,1
   23| 002FE8 add      7CA54214   1     A         gr5=gr5,gr8
   24| 002FEC cmpld    7C243040   1     CL8       cr0=gr4,gr6
   23| 002FF0 and      7C052838   1     N         gr5=gr0,gr5
   23| 002FF4 rldicr   78A51F24   1     SLL8      gr5=gr5,3
   23| 002FF8 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
   24| 002FFC bc       4180FFE4   1     BT        CL.666,cr0,0x8/llt,taken=80%(80,20)
   24| 003000 add      7C863A14   1     A         gr4=gr6,gr7
   24| 003004 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   30| 003008 bc       4200FFB8   1     BCT       ctr=CL.665,taken=100%(100,0)
   30| 00300C b        4BFFFF90   1     B         CL.3967,-1
   30|                              CL.723:
    0| 003010 rlwinm   56A5F87E   1     RN4       gr5=gr21,31,0x7FFFFFFF
    0| 003014 rldicl   7B6607E1   1     RN8_R     gr6,cr0=gr27,0,0x1
    0| 003018 cmpdi    2CA50000   1     C8        cr1=gr5,0
    0| 00301C mtspr    7CA903A6   1     LCTR      ctr=gr5
    0| 003020 bc       41820028   1     BT        CL.4127,cr0,0x4/eq,taken=50%(0,0)
    0| 003024 lfd      C8010080   1     LFL       fp0=<a16:d128:l8>(gr1,128)
   23| 003028 and      7C052038   1     N         gr5=gr0,gr4
   23| 00302C rldicr   78A51F24   1     SLL8      gr5=gr5,3
   23| 003030 addi     38E40001   1     AI        gr7=gr4,1
   23| 003034 rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   23| 003038 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
    0| 00303C bc       41860044   1     BT        CL.4128,cr1,0x4/eq,taken=20%(20,80)
    0| 003040 ori      60210000   1     XNOP      
    0| 003044 ori      60210000   1     XNOP      
    0|                              CL.4127:
   31|                              CL.725:
    0| 003048 lfd      C8010080   1     LFL       fp0=<a16:d128:l8>(gr1,128)
   23| 00304C and      7C052038   1     N         gr5=gr0,gr4
   23| 003050 rldicr   78A51F24   1     SLL8      gr5=gr5,3
   23| 003054 addi     38C40001   1     AI        gr6=gr4,1
   23| 003058 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   23| 00305C addi     38C60001   1     AI        gr6=gr6,1
   23| 003060 and      7C072038   1     N         gr7=gr0,gr4
   23| 003064 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
    0| 003068 lfd      C8010080   1     LFL       fp0=<a16:d128:l8>(gr1,128)
   23| 00306C rldicr   78E51F24   1     SLL8      gr5=gr7,3
   23| 003070 addi     38E40001   1     AI        gr7=gr4,1
   23| 003074 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   23| 003078 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
   30| 00307C bc       4200FFCC   1     BCT       ctr=CL.725,taken=100%(100,0)
    0|                              CL.4128:
   30| 003080 stw      90E10098   1     ST4Z      <a16:d152:l4>(gr1,152)=gr7
   30| 003084 b        4BFFFBAC   1     B         CL.605,-1
   30|                              CL.675:
   31| 003088 bc       41820068   1     BT        CL.730,cr0,0x4/eq,taken=50%(0,0)
    0| 00308C addi     38A5FFFF   1     AI        gr5=gr5,-1
    0| 003090 mtspr    7F6903A6   1     LCTR      ctr=gr27
    0| 003094 rlwinm   54A6003E   1     RN4       gr6=gr5,0,0xFFFFFFFF
   31|                              CL.676:
    0| 003098 lfd      C8010080   1     LFL       fp0=<a16:d128:l8>(gr1,128)
   23| 00309C and      7C052038   1     N         gr5=gr0,gr4
   23| 0030A0 rldicr   78A51F24   1     SLL8      gr5=gr5,3
   23| 0030A4 addi     38E40001   1     AI        gr7=gr4,1
   24| 0030A8 or       7FE4FB78   1     LR        gr4=gr31
   23| 0030AC rlwinm   54E8003E   1     RN4       gr8=gr7,0,0xFFFFFFFF
   23| 0030B0 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
    0| 0030B4 ori      60210000   1     XNOP      
    0| 0030B8 ori      60210000   1     XNOP      
    0| 0030BC ori      60210000   1     XNOP      
   22|                              CL.677:
   23| 0030C0 rldicl   78850020   1     RN8       gr5=gr4,0,0xFFFFFFFF
   24| 0030C4 addi     38840001   1     AI        gr4=gr4,1
   23| 0030C8 add      7CA54214   1     A         gr5=gr5,gr8
   24| 0030CC cmpld    7C243040   1     CL8       cr0=gr4,gr6
   23| 0030D0 and      7C052838   1     N         gr5=gr0,gr5
   23| 0030D4 rldicr   78A51F24   1     SLL8      gr5=gr5,3
   23| 0030D8 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
   24| 0030DC bc       4180FFE4   1     BT        CL.677,cr0,0x8/llt,taken=80%(80,20)
   24| 0030E0 add      7C863A14   1     A         gr4=gr6,gr7
   24| 0030E4 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   30| 0030E8 bc       4200FFB0   1     BCT       ctr=CL.676,taken=100%(100,0)
    0| 0030EC b        4BFFFEB0   1     B         CL.3967,-1
   30|                              CL.730:
    0| 0030F0 rlwinm   56A5F87E   1     RN4       gr5=gr21,31,0x7FFFFFFF
    0| 0030F4 rldicl   7B6607E1   1     RN8_R     gr6,cr0=gr27,0,0x1
    0| 0030F8 cmpdi    2CA50000   1     C8        cr1=gr5,0
    0| 0030FC mtspr    7CA903A6   1     LCTR      ctr=gr5
    0| 003100 bc       41820028   1     BT        CL.4130,cr0,0x4/eq,taken=50%(0,0)
    0| 003104 lfd      C8010080   1     LFL       fp0=<a16:d128:l8>(gr1,128)
   23| 003108 and      7C052038   1     N         gr5=gr0,gr4
   23| 00310C rldicr   78A51F24   1     SLL8      gr5=gr5,3
   23| 003110 addi     38E40001   1     AI        gr7=gr4,1
   23| 003114 rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   23| 003118 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
    0| 00311C bc       4186FF64   1     BT        CL.4128,cr1,0x4/eq,taken=20%(20,80)
    0| 003120 ori      60210000   1     XNOP      
    0| 003124 ori      60210000   1     XNOP      
    0|                              CL.4130:
   31|                              CL.732:
    0| 003128 lfd      C8010080   1     LFL       fp0=<a16:d128:l8>(gr1,128)
   23| 00312C and      7C052038   1     N         gr5=gr0,gr4
   23| 003130 rldicr   78A51F24   1     SLL8      gr5=gr5,3
   23| 003134 addi     38C40001   1     AI        gr6=gr4,1
   23| 003138 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   23| 00313C addi     38C60001   1     AI        gr6=gr6,1
   23| 003140 and      7C072038   1     N         gr7=gr0,gr4
   23| 003144 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
    0| 003148 lfd      C8010080   1     LFL       fp0=<a16:d128:l8>(gr1,128)
   23| 00314C rldicr   78E51F24   1     SLL8      gr5=gr7,3
   23| 003150 addi     38E40001   1     AI        gr7=gr4,1
   23| 003154 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   23| 003158 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
   30| 00315C bc       4200FFCC   1     BCT       ctr=CL.732,taken=100%(100,0)
   30| 003160 b        4BFFFF20   1     B         CL.4128,-1
    0|                              CL.5334:
   24| 003164 addi     38000001   1     LI        gr0=1
   24| 003168 addi     38800000   1     LI        gr4=0
   24| 00316C stb      980100C3   1     ST1Z      <a16:d195:l1>(gr1,195)=gr0
   24| 003170 addi     38A00041   1     LI        gr5=65
   24| 003174 addi     38C00010   1     LI        gr6=16
   24| 003178 addi     38E00400   1     LI        gr7=1024
   24| 00317C bl       48000001   1     CALL      gr3=_ZN9RCqsmodelC1Ebjjj,5,(char).rns113.",gr3-gr7,#ProcAlias",_ZN9RCqsmodelC1Ebjjj",fcr",#MX_TEMP16",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   24| 003180 ori      60000000   1
   24| 003184 stb      9BE100C3   1     ST1Z      <a16:d195:l1>(gr1,195)=gr31
    0| 003188 ld       EB4100A8   1     L8        gr26=__199(gr1,168)
    0| 00318C b        4BFFF79C   1     B         CL.595,-1
     |               Tag Table
     | 003190        00000000 00092A41 800C0500 00000000 00000900 00000001
     | 0031A8        000000C0 002A5F5A 31326465 636F6D70 72657373 33644964
     | 0031C0        4C6A3332 45457650 39524364 65636F64 65725054 5F6A6A6A
     |               Instruction count          576
     |               Straight-line exec time    580
 GPR's set/used:   ssus ssss ssss s---  ---- ssss ssss ssss
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ----
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     decompress3d<double,48>(RCdecoder *, double *, unsigned int, unsigned int, unsigned int)
     | 000000                           AKA       _Z12decompress3dIdLj48EEvP9RCdecoderPT_jjj
   14|                                  PROC      rd,data,nx,ny,nz,gr3-gr7
    0| 0031E0 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 0031E4 std      FBC1FFF0   1     ST8       #stack(gr1,-16)=gr30
    0| 0031E8 std      FBA1FFE8   1     ST8       #stack(gr1,-24)=gr29
    0| 0031EC std      FB81FFE0   1     ST8       #stack(gr1,-32)=gr28
    0| 0031F0 std      FB61FFD8   1     ST8       #stack(gr1,-40)=gr27
    0| 0031F4 std      FB41FFD0   1     ST8       #stack(gr1,-48)=gr26
    0| 0031F8 std      FB21FFC8   1     ST8       #stack(gr1,-56)=gr25
    0| 0031FC std      FB01FFC0   1     ST8       #stack(gr1,-64)=gr24
    0| 003200 std      FAE1FFB8   1     ST8       #stack(gr1,-72)=gr23
    0| 003204 std      FAC1FFB0   1     ST8       #stack(gr1,-80)=gr22
    0| 003208 std      FAA1FFA8   1     ST8       #stack(gr1,-88)=gr21
    0| 00320C std      FA81FFA0   1     ST8       #stack(gr1,-96)=gr20
    0| 003210 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 003214 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 003218 stdu     F821FEC1   1     ST8U      gr1,#stack(gr1,-320)=gr1
    0| 00321C or       7C771B78   1     LR        gr23=gr3
   24| 003220 addi     38600048   1     LI        gr3=72
   53| 003224 std      F8410028   1     ST8       #cur_toc(gr1,40)=gr2
    0| 003228 ld       E9020000   1     L8        gr8=.$STATIC(gr2,0)
    0| 00322C addi     3BE00000   1     LI        gr31=0
    0| 003230 or       7CB82B78   1     LR        gr24=gr5
    0| 003234 stw      93E100C0   1     ST4Z      <a17:d192:l4>(gr1,192)=gr31
    0| 003238 std      FBE100D0   1     ST8       <a17:d208:l8>(gr1,208)=gr31
    0| 00323C or       7C9E2378   1     LR        gr30=gr4
    0| 003240 addi     380800C0   1     AI        gr0=gr8,192
    0| 003244 stw      93E100D8   1     ST4Z      <a17:d216:l4>(gr1,216)=gr31
    0| 003248 std      F80100C8   1     ST8       <a17:d200:l8>(gr1,200)=gr0
    0| 00324C or       7CB92B78   1     LR        gr25=gr5
    0| 003250 rlwinm   54BD003E   1     RN4       gr29=gr5,0,0xFFFFFFFF
    0| 003254 or       7CD63378   1     LR        gr22=gr6
    0| 003258 rlwinm   54DC003E   1     RN4       gr28=gr6,0,0xFFFFFFFF
    0| 00325C or       7CF53B78   1     LR        gr21=gr7
    0| 003260 rlwinm   54FB003E   1     RN4       gr27=gr7,0,0xFFFFFFFF
   24| 003264 bl       48000001   1     CALL      gr3=_Znwm,1,gr3,#ProcAlias",_Znwm",fcr",#MX_TEMP17",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   24| 003268 ori      60000000   1
   24| 00326C or       7C7A1B79   1     LR_R      gr26,cr0=gr3
   24| 003270 std      F86100A8   1     ST8       __254(gr1,168)=gr3
   24| 003274 bc       40820840   1     BF        CL.5468,cr0,0x4/eq,taken=40%(40,60)
   24|                              CL.756:
   25| 003278 addi     38600018   1     LI        gr3=24
   25| 00327C bl       48000001   1     CALL      gr3=_Znwm,1,gr3,#ProcAlias",_Znwm",fcr",#MX_TEMP17",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   25| 003280 ori      60000000   1
   25| 003284 std      FB4100B0   1     ST8       rm(gr1,176)=gr26
   25| 003288 or       7C7A1B79   1     LR_R      gr26,cr0=gr3
   25| 00328C bc       41820010   1     BT        CL.759,cr0,0x4/eq,taken=50%(0,0)
   34| 003290 std      FAFA0008   1     ST8       (PCdecoder<double,PCmap<double,48,void>,1>).rd@8.rns142.(gr26,8)=gr23
   34| 003294 addi     380100B0   1     AI        gr0=gr1,176
   34| 003298 std      F81A0010   1     ST8       (PCdecoder<double,PCmap<double,48,void>,1>).rm@10.rns143.(gr26,16)=gr0
   34|                              CL.759:
    9| 00329C addi     38B80001   1     AI        gr5=gr24,1
   26| 0032A0 std      FBE10080   1     ST8       <a17:d128:l8>(gr1,128)=gr31
    9| 0032A4 addi     387D0001   1     AI        gr3=gr29,1
    9| 0032A8 addi     389C0001   1     AI        gr4=gr28,1
    9| 0032AC stw      90A1008C   1     ST4Z      <a17:d140:l4>(gr1,140)=gr5
    9| 0032B0 mulld    7C8321D2   1     M         gr4=gr3,gr4
    9| 0032B4 addi     38000001   1     LI        gr0=1
   45| 0032B8 add      7C64EA14   1     A         gr3=gr4,gr29
    9| 0032BC stw      90810090   1     ST4Z      <a17:d144:l4>(gr1,144)=gr4
   45| 0032C0 addi     38830002   1     AI        gr4=gr3,2
   45| 0032C4 addi     38630001   1     AI        gr3=gr3,1
    9| 0032C8 stw      90010088   1     ST4Z      <a17:d136:l4>(gr1,136)=gr0
   45| 0032CC and      7C642038   1     N         gr4=gr3,gr4
   45| 0032D0 rlwinm   5463003E   1     RN4       gr3=gr3,0,0xFFFFFFFF
   45| 0032D4 cmpwi    2C040000   1     C4        cr0=gr4,0
    0| 0032D8 addi     38030001   1     AI        gr0=gr3,1
   45| 0032DC bc       41820024   1     BT        CL.763,cr0,0x4/eq,taken=20%(20,80)
    0| 0032E0 ori      60210000   1     XNOP      
    0| 0032E4 ori      60210000   1     XNOP      
    0| 0032E8 ori      60210000   1     XNOP      
   45|                              CL.761:
    9| 0032EC or       7C001B78   1     O         gr0=gr0,gr3
    9| 0032F0 rldicl   78030020   1     RN8       gr3=gr0,0,0xFFFFFFFF
   45| 0032F4 addi     38030001   1     AI        gr0=gr3,1
   45| 0032F8 and      7C640039   1     N_R       gr4,cr0=gr3,gr0
   45| 0032FC bc       4082FFF0   1     BF        CL.761,cr0,0x4/eq,taken=80%(80,20)
   45|                              CL.763:
   47| 003300 stw      90610094   1     ST4Z      <a17:d148:l4>(gr1,148)=gr3
   10| 003304 stw      93E10098   1     ST4Z      <a17:d152:l4>(gr1,152)=gr31
   10| 003308 rldic    78031F48   1     RN8       gr3=gr0,3,0x7FFFFFFF8
   10| 00330C bl       48000001   1     CALL      gr3=_Znam,1,gr3,#ProcAlias",_Znam",fcr",#MX_TEMP17",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   10| 003310 ori      60000000   1
   10| 003314 addi     38000002   1     LI        gr0=2
   24| 003318 lwz      80A10090   1     L4Z       gr5=<a17:d144:l4>(gr1,144)
   10| 00331C stb      980100C3   1     ST1Z      <a17:d195:l1>(gr1,195)=gr0
   23| 003320 lfd      C8010080   1     LFL       fp0=<a17:d128:l8>(gr1,128)
   10| 003324 std      F86100A0   1     ST8       <a17:d160:l8>(gr1,160)=gr3
   23| 003328 lwz      80010094   1     L4Z       gr0=<a17:d148:l4>(gr1,148)
   23| 00332C lwz      80C10098   1     L4Z       gr6=<a17:d152:l4>(gr1,152)
   24| 003330 cmplwi   28050001   1     CL4       cr0=gr5,1
   24| 003334 addi     3905FFFF   1     AI        gr8=gr5,-1
   23| 003338 and      7C043038   1     N         gr4=gr0,gr6
   23| 00333C rldicr   78841F24   1     SLL8      gr4=gr4,3
   23| 003340 addi     38E60001   1     AI        gr7=gr6,1
   23| 003344 stfdx    7C0325AE   1     STFL      (double).rns130.(gr3,gr4,0)=fp0
   23| 003348 stw      90E10098   1     ST4Z      <a17:d152:l4>(gr1,152)=gr7
   23| 00334C rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   24| 003350 bc       4182003C   1     BT        CL.797,cr0,0x4/eq,taken=20%(20,80)
   24| 003354 addi     38E00000   1     LI        gr7=0
    0| 003358 rlwinm   5509003E   1     RN4       gr9=gr8,0,0xFFFFFFFF
    0| 00335C ori      60210000   1     XNOP      
   22|                              CL.767:
   23| 003360 rldicl   78E80020   1     RN8       gr8=gr7,0,0xFFFFFFFF
   24| 003364 addi     38E70001   1     AI        gr7=gr7,1
   23| 003368 add      7D044214   1     A         gr8=gr4,gr8
   24| 00336C cmpld    7C274840   1     CL8       cr0=gr7,gr9
   23| 003370 and      7C084038   1     N         gr8=gr0,gr8
   23| 003374 rldicr   79081F24   1     SLL8      gr8=gr8,3
   23| 003378 stfdx    7C0345AE   1     STFL      (double).rns130.(gr3,gr8,0)=fp0
   24| 00337C bc       4180FFE4   1     BT        CL.767,cr0,0x8/llt,taken=80%(80,20)
   24| 003380 add      7C853214   1     A         gr4=gr5,gr6
   24| 003384 stw      90810098   1     ST4Z      <a17:d152:l4>(gr1,152)=gr4
   24| 003388 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   24|                              CL.797:
   31| 00338C cmpdi    2C3B0000   1     C8        cr0=gr27,0
   31| 003390 bc       418201F0   1     BT        CL.766,cr0,0x4/eq,taken=50%(0,0)
   31| 003394 cmpdi    2C3C0000   1     C8        cr0=gr28,0
    0| 003398 cmpdi    2CBD0000   1     C8        cr1=gr29,0
   31| 00339C bc       41820558   1     BT        CL.824,cr0,0x4/eq,taken=50%(0,0)
   31| 0033A0 bc       41860270   1     BT        CL.812,cr1,0x4/eq,taken=50%(0,0)
   31| 0033A4 addi     3A800000   1     LI        gr20=0
    0| 0033A8 rldic    7B391F48   1     RN8       gr25=gr25,3,0x7FFFFFFF8
   31|                              CL.764:
   24| 0033AC lwz      80A1008C   1     L4Z       gr5=<a17:d140:l4>(gr1,140)
    0| 0033B0 lfd      C8010080   1     LFL       fp0=<a17:d128:l8>(gr1,128)
   23| 0033B4 and      7C062038   1     N         gr6=gr0,gr4
   23| 0033B8 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 0033BC addi     38E40001   1     AI        gr7=gr4,1
   23| 0033C0 or       7C882378   1     LR        gr8=gr4
   24| 0033C4 cmplwi   28050001   1     CL4       cr0=gr5,1
   24| 0033C8 addi     3925FFFF   1     AI        gr9=gr5,-1
   23| 0033CC rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   23| 0033D0 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
   24| 0033D4 bc       41820034   1     BT        CL.798,cr0,0x4/eq,taken=20%(20,80)
   24| 0033D8 or       7FE6FB78   1     LR        gr6=gr31
    0| 0033DC rlwinm   5529003E   1     RN4       gr9=gr9,0,0xFFFFFFFF
   22|                              CL.773:
   23| 0033E0 rldicl   78C70020   1     RN8       gr7=gr6,0,0xFFFFFFFF
   24| 0033E4 addi     38C60001   1     AI        gr6=gr6,1
   23| 0033E8 add      7CE43A14   1     A         gr7=gr4,gr7
   24| 0033EC cmpld    7C264840   1     CL8       cr0=gr6,gr9
   23| 0033F0 and      7C073838   1     N         gr7=gr0,gr7
   23| 0033F4 rldicr   78E71F24   1     SLL8      gr7=gr7,3
   23| 0033F8 stfdx    7C033DAE   1     STFL      (double).rns89.(gr3,gr7,0)=fp0
   24| 0033FC bc       4180FFE4   1     BT        CL.773,cr0,0x8/llt,taken=80%(80,20)
   24| 003400 add      7C854214   1     A         gr4=gr5,gr8
   24| 003404 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   24|                              CL.798:
   31| 003408 or       7FF8FB78   1     LR        gr24=gr31
    0| 00340C addi     3AFEFFF8   1     AI        gr23=gr30,-8
   31|                              CL.770:
   24| 003410 lwz      80A10088   1     L4Z       gr5=<a17:d136:l4>(gr1,136)
   30| 003414 lfd      C8010080   1     LFL       fp0=<a17:d128:l8>(gr1,128)
   23| 003418 and      7C062038   1     N         gr6=gr0,gr4
   23| 00341C rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 003420 addi     38E40001   1     AI        gr7=gr4,1
   23| 003424 or       7C882378   1     LR        gr8=gr4
   24| 003428 addi     3925FFFF   1     AI        gr9=gr5,-1
   23| 00342C stw      90E10098   1     ST4Z      <a17:d152:l4>(gr1,152)=gr7
   24| 003430 cmplwi   28050001   1     CL4       cr0=gr5,1
   23| 003434 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
   23| 003438 rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   24| 00343C bc       41820040   1     BT        CL.799,cr0,0x4/eq,taken=20%(20,80)
   24| 003440 or       7FE6FB78   1     LR        gr6=gr31
    0| 003444 rlwinm   5529003E   1     RN4       gr9=gr9,0,0xFFFFFFFF
    0| 003448 ori      60210000   1     XNOP      
    0| 00344C ori      60210000   1     XNOP      
   22|                              CL.779:
   23| 003450 rldicl   78C70020   1     RN8       gr7=gr6,0,0xFFFFFFFF
   24| 003454 addi     38C60001   1     AI        gr6=gr6,1
   23| 003458 add      7CE43A14   1     A         gr7=gr4,gr7
   24| 00345C cmpld    7C264840   1     CL8       cr0=gr6,gr9
   23| 003460 and      7C073838   1     N         gr7=gr0,gr7
   23| 003464 rldicr   78E71F24   1     SLL8      gr7=gr7,3
   23| 003468 stfdx    7C033DAE   1     STFL      (double).rns89.(gr3,gr7,0)=fp0
   24| 00346C bc       4180FFE4   1     BT        CL.779,cr0,0x8/llt,taken=80%(80,20)
   24| 003470 add      7C854214   1     A         gr4=gr5,gr8
   24| 003474 stw      90810098   1     ST4Z      <a17:d152:l4>(gr1,152)=gr4
   24| 003478 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   24|                              CL.799:
   31| 00347C or       7FF6FB78   1     LR        gr22=gr31
   48| 003480 or       7EF5BB78   1     LR        gr21=gr23
    0| 003484 ori      60210000   1     XNOP      
   31|                              CL.776:
   47| 003488 lwz      8101008C   1     L4Z       gr8=<a17:d140:l4>(gr1,140)
    0| 00348C lwz      80C10088   1     L4Z       gr6=<a17:d136:l4>(gr1,136)
   47| 003490 lwz      81210090   1     L4Z       gr9=<a17:d144:l4>(gr1,144)
   47| 003494 addi     38A00000   1     LI        gr5=0
   47| 003498 subf     7D482050   1     S         gr10=gr4,gr8
   47| 00349C subf     7D662050   1     S         gr11=gr4,gr6
   47| 0034A0 subf     7CE95050   1     S         gr7=gr10,gr9
   47| 0034A4 and      7C065838   1     N         gr6=gr0,gr11
   47| 0034A8 and      7C073838   1     N         gr7=gr0,gr7
   47| 0034AC rldicr   78C61F24   1     SLL8      gr6=gr6,3
   47| 0034B0 rldicr   78E71F24   1     SLL8      gr7=gr7,3
   47| 0034B4 lfdx     7C2334AE   1     LFL       fp1=(double).rns89.(gr3,gr6,0)
   47| 0034B8 lfdx     7C433CAE   1     LFL       fp2=(double).rns89.(gr3,gr7,0)
   47| 0034BC and      7C065038   1     N         gr6=gr0,gr10
   47| 0034C0 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   47| 0034C4 subf     7CE95850   1     S         gr7=gr11,gr9
   47| 0034C8 lfdx     7C0334AE   1     LFL       fp0=(double).rns89.(gr3,gr6,0)
   47| 0034CC and      7C063838   1     N         gr6=gr0,gr7
   47| 0034D0 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   47| 0034D4 fsub     FC211028   1     SFL       fp1=fp1,fp2,fcr
   47| 0034D8 subf     7C892050   1     S         gr4=gr4,gr9
   47| 0034DC lfdx     7C4334AE   1     LFL       fp2=(double).rns89.(gr3,gr6,0)
   47| 0034E0 and      7C042038   1     N         gr4=gr0,gr4
   47| 0034E4 rldicr   78841F24   1     SLL8      gr4=gr4,3
   47| 0034E8 subf     7CC85850   1     S         gr6=gr11,gr8
   47| 0034EC fadd     FC21002A   1     AFL       fp1=fp1,fp0,fcr
   47| 0034F0 lfdx     7C0324AE   2     LFL       fp0=(double).rns89.(gr3,gr4,0)
   47| 0034F4 and      7C043038   1     N         gr4=gr0,gr6
   47| 0034F8 rldicr   78841F24   1     SLL8      gr4=gr4,3
   47| 0034FC subf     7CC93050   1     S         gr6=gr6,gr9
   47| 003500 lfdx     7C6324AE   1     LFL       fp3=(double).rns89.(gr3,gr4,0)
   47| 003504 fsub     FC211028   1     SFL       fp1=fp1,fp2,fcr
   47| 003508 and      7C003038   2     N         gr0=gr0,gr6
   47| 00350C rldicr   78041F24   1     SLL8      gr4=gr0,3
   47| 003510 lfdx     7C4324AE   1     LFL       fp2=(double).rns89.(gr3,gr4,0)
   47| 003514 or       7F43D378   1     LR        gr3=gr26
   47| 003518 fadd     FC01002A   1     AFL       fp0=fp1,fp0,fcr
   47| 00351C fsub     FC001828   2     SFL       fp0=fp0,fp3,fcr
   47| 003520 fadd     FC20102A   2     AFL       fp1=fp0,fp2,fcr
   47| 003524 bl       4BFFE78D   1     CALL      fp1=PCdecoder<double,PCmap<double,48,void>,1>::decode(double, unsigned int),3,(PCdecoder<double,PCmap<double,48,void>,1>).rns134.",gr3,fp1,gr5,#ProcAlias",PCdecoder<double,PCmap<double,48,void>,1>::decode(double, unsigned int)",fcr",#MX_TEMP17",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   47| 003528 ori      60000000   1
   23| 00352C lwz      80010094   1     L4Z       gr0=<a17:d148:l4>(gr1,148)
   23| 003530 lwz      80A10098   1     L4Z       gr5=<a17:d152:l4>(gr1,152)
   23| 003534 ld       E86100A0   1     L8        gr3=<a17:d160:l8>(gr1,160)
   32| 003538 addi     3AD60001   1     AI        gr22=gr22,1
   48| 00353C stfdu    DC350008   1     STFDU     gr21,(double).rns89.(gr21,8)=fp1
   32| 003540 cmpld    7C36E840   1     CL8       cr0=gr22,gr29
   23| 003544 and      7C042838   1     N         gr4=gr0,gr5
   23| 003548 rldicr   78841F24   1     SLL8      gr4=gr4,3
   23| 00354C addi     38A50001   1     AI        gr5=gr5,1
   23| 003550 stfdx    7C2325AE   1     STFL      (double).rns89.(gr3,gr4,0)=fp1
   23| 003554 stw      90A10098   1     ST4Z      <a17:d152:l4>(gr1,152)=gr5
   23| 003558 rlwinm   54A4003E   1     RN4       gr4=gr5,0,0xFFFFFFFF
   32| 00355C bc       4180FF2C   1     BT        CL.776,cr0,0x8/llt,taken=80%(80,20)
   31| 003560 addi     3B180001   1     AI        gr24=gr24,1
   32| 003564 add      7FDECA14   1     A         gr30=gr30,gr25
   31| 003568 cmpld    7C38E040   1     CL8       cr0=gr24,gr28
    0| 00356C add      7EF7CA14   1     A         gr23=gr23,gr25
   31| 003570 bc       4180FEA0   1     BT        CL.770,cr0,0x8/llt,taken=80%(80,20)
   30| 003574 addi     3A940001   1     AI        gr20=gr20,1
   30| 003578 cmpld    7C34D840   1     CL8       cr0=gr20,gr27
   30| 00357C bc       4180FE30   1     BT        CL.764,cr0,0x8/llt,taken=80%(80,20)
   30|                              CL.766:
   52| 003580 cmpdi    2C3A0000   1     C8        cr0=gr26,0
   52| 003584 bc       4082007C   1     BF        CL.5469,cr0,0x4/eq,taken=40%(40,60)
   35|                              CL.786:
   53| 003588 ld       E86100B0   1     L8        gr3=rm(gr1,176)
   53| 00358C cmpdi    2C230000   1     C8        cr0=gr3,0
   53| 003590 bc       41820024   1     BT        CL.789,cr0,0x4/eq,taken=30%(30,70)
   53| 003594 ld       E8830000   1     L8        gr4=(RCmodel)[]@0.rns112.(gr3,0)
   53| 003598 ld       E8840008   1     L8        gr4=((*)();__vftTypeGCCV3).rns19.(gr4,8)
   53| 00359C ld       E8040000   1     L8        gr0=#fnc_adr(gr4,0)
   53| 0035A0 ld       E9640010   1     L8        gr11=#new_env(gr4,16)
   53| 0035A4 mtspr    7C0903A6   1     LCTR      ctr=gr0
   53| 0035A8 ld       E8440008   1     CALL      gr3=gr4,1,(char).rns108.",gr3,#ProcAlias",fcr",#MX_TEMP17",(()vf).rns139.",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr",#fnc_adr,#cur_toc,ctr,gr11,#new_env,#(glue_dr_n,0,(()vf).rns139."
   53| 0035AC bcctrl   4E800421   1
   53| 0035B0 ld       E8410028   1
   53|                              CL.789:
   11| 0035B4 ld       E86100A0   1     L8        gr3=<a17:d160:l8>(gr1,160)
   11| 0035B8 bl       48000001   1     CALL      _ZdaPv,1,(char).rns108.",gr3,#ProcAlias",_ZdaPv",fcr",#MX_TEMP17",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   11| 0035BC ori      60000000   1
   54| 0035C0 ld       E9810150   1     L8        gr12=#stack(gr1,336)
   54| 0035C4 addi     38210140   1     AI        gr1=gr1,320
   54| 0035C8 ld       EA81FFA0   1     L8        gr20=#stack(gr1,-96)
   54| 0035CC ld       EAA1FFA8   1     L8        gr21=#stack(gr1,-88)
   54| 0035D0 ld       EAC1FFB0   1     L8        gr22=#stack(gr1,-80)
   54| 0035D4 mtspr    7D8803A6   1     LLR       lr=gr12
   54| 0035D8 ld       EAE1FFB8   1     L8        gr23=#stack(gr1,-72)
   54| 0035DC ld       EB01FFC0   1     L8        gr24=#stack(gr1,-64)
   54| 0035E0 ld       EB21FFC8   1     L8        gr25=#stack(gr1,-56)
   54| 0035E4 ld       EB41FFD0   1     L8        gr26=#stack(gr1,-48)
   54| 0035E8 ld       EB61FFD8   1     L8        gr27=#stack(gr1,-40)
   54| 0035EC ld       EB81FFE0   1     L8        gr28=#stack(gr1,-32)
   54| 0035F0 ld       EBA1FFE8   1     L8        gr29=#stack(gr1,-24)
   54| 0035F4 ld       EBC1FFF0   1     L8        gr30=#stack(gr1,-16)
   54| 0035F8 ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
   54| 0035FC bclr     4E800020   1     BA        lr
    0|                              CL.5469:
   35| 003600 or       7F43D378   1     LR        gr3=gr26
   35| 003604 bl       48000001   1     CALL      _ZdlPv,1,(char).rns137.",gr3,#ProcAlias",_ZdlPv",fcr",#MX_TEMP17",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   35| 003608 ori      60000000   1
    0| 00360C b        4BFFFF7C   1     B         CL.786,-1
   30|                              CL.812:
   31| 003610 lwz      80A1008C   1     L4Z       gr5=<a17:d140:l4>(gr1,140)
    0| 003614 lwz      80C10088   1     L4Z       gr6=<a17:d136:l4>(gr1,136)
   31| 003618 cmplwi   28050001   1     CL4       cr0=gr5,1
    0| 00361C cmplwi   28860001   1     CL4       cr1=gr6,1
   31| 003620 bc       418201B4   1     BT        CL.863,cr0,0x4/eq,taken=50%(0,0)
   31| 003624 bc       418600CC   1     BT        CL.853,cr1,0x4/eq,taken=50%(0,0)
    0| 003628 addi     38E5FFFF   1     AI        gr7=gr5,-1
    0| 00362C addi     38C6FFFF   1     AI        gr6=gr6,-1
   31| 003630 addi     38A00000   1     LI        gr5=0
    0| 003634 rlwinm   54E7003E   1     RN4       gr7=gr7,0,0xFFFFFFFF
    0| 003638 rlwinm   54C8003E   1     RN4       gr8=gr6,0,0xFFFFFFFF
   31|                              CL.814:
    0| 00363C lfd      C8010080   1     LFL       fp0=<a17:d128:l8>(gr1,128)
   23| 003640 and      7C062038   1     N         gr6=gr0,gr4
   23| 003644 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 003648 addi     39240001   1     AI        gr9=gr4,1
   24| 00364C or       7FE4FB78   1     LR        gr4=gr31
   23| 003650 rlwinm   552A003E   1     RN4       gr10=gr9,0,0xFFFFFFFF
   23| 003654 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
    0| 003658 ori      60210000   1     XNOP      
    0| 00365C ori      60210000   1     XNOP      
   22|                              CL.815:
   23| 003660 rldicl   78860020   1     RN8       gr6=gr4,0,0xFFFFFFFF
   24| 003664 addi     38840001   1     AI        gr4=gr4,1
   23| 003668 add      7CC65214   1     A         gr6=gr6,gr10
   24| 00366C cmpld    7C243840   1     CL8       cr0=gr4,gr7
   23| 003670 and      7C063038   1     N         gr6=gr0,gr6
   23| 003674 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 003678 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
   24| 00367C bc       4180FFE4   1     BT        CL.815,cr0,0x8/llt,taken=80%(80,20)
   24| 003680 add      7C874A14   1     A         gr4=gr7,gr9
    0| 003684 mtspr    7F8903A6   1     LCTR      ctr=gr28
   24| 003688 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   31|                              CL.817:
   30| 00368C lfd      C8010080   1     LFL       fp0=<a17:d128:l8>(gr1,128)
    0| 003690 and      7C062038   1     N         gr6=gr0,gr4
   23| 003694 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 003698 addi     39240001   1     AI        gr9=gr4,1
   24| 00369C or       7FE4FB78   1     LR        gr4=gr31
   23| 0036A0 rlwinm   552A003E   1     RN4       gr10=gr9,0,0xFFFFFFFF
   23| 0036A4 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
    0| 0036A8 ori      60210000   1     XNOP      
    0| 0036AC ori      60210000   1     XNOP      
   22|                              CL.818:
   23| 0036B0 rldicl   78860020   1     RN8       gr6=gr4,0,0xFFFFFFFF
   24| 0036B4 addi     38840001   1     AI        gr4=gr4,1
   23| 0036B8 add      7CC65214   1     A         gr6=gr6,gr10
   24| 0036BC cmpld    7C244040   1     CL8       cr0=gr4,gr8
   23| 0036C0 and      7C063038   1     N         gr6=gr0,gr6
   23| 0036C4 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 0036C8 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
   24| 0036CC bc       4180FFE4   1     BT        CL.818,cr0,0x8/llt,taken=80%(80,20)
   24| 0036D0 add      7CC84A14   1     A         gr6=gr8,gr9
   24| 0036D4 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   31| 0036D8 bc       4200FFB4   1     BCT       ctr=CL.817,taken=100%(100,0)
   30| 0036DC addi     38A50001   1     AI        gr5=gr5,1
   30| 0036E0 cmpld    7C25D840   1     CL8       cr0=gr5,gr27
   30| 0036E4 bc       4180FF58   1     BT        CL.814,cr0,0x8/llt,taken=80%(80,20)
   24|                              CL.5476:
   24| 0036E8 stw      90C10098   1     ST4Z      <a17:d152:l4>(gr1,152)=gr6
   30| 0036EC b        4BFFFE94   1     B         CL.766,-1
   30|                              CL.853:
    0| 0036F0 addi     38E5FFFF   1     AI        gr7=gr5,-1
    0| 0036F4 rlwinm   56C6F87E   1     RN4       gr6=gr22,31,0x7FFFFFFF
   31| 0036F8 addi     38A00000   1     LI        gr5=0
    0| 0036FC rlwinm   54E7003E   1     RN4       gr7=gr7,0,0xFFFFFFFF
    0| 003700 rldicl   7B8807E1   1     RN8_R     gr8,cr0=gr28,0,0x1
    0| 003704 cmpdi    2F260000   1     C8        cr6=gr6,0
   31|                              CL.855:
    0| 003708 lfd      C8010080   1     LFL       fp0=<a17:d128:l8>(gr1,128)
   23| 00370C and      7C082038   1     N         gr8=gr0,gr4
   23| 003710 rldicr   79081F24   1     SLL8      gr8=gr8,3
   23| 003714 addi     39440001   1     AI        gr10=gr4,1
   23| 003718 or       7C892378   1     LR        gr9=gr4
   23| 00371C rlwinm   554B003E   1     RN4       gr11=gr10,0,0xFFFFFFFF
   24| 003720 or       7FE4FB78   1     LR        gr4=gr31
   23| 003724 stfdx    7C0345AE   1     STFL      (double).rns89.(gr3,gr8,0)=fp0
    0| 003728 ori      60210000   1     XNOP      
    0| 00372C ori      60210000   1     XNOP      
   22|                              CL.856:
   23| 003730 rldicl   78880020   1     RN8       gr8=gr4,0,0xFFFFFFFF
   24| 003734 addi     38840001   1     AI        gr4=gr4,1
   23| 003738 add      7D085A14   1     A         gr8=gr8,gr11
   24| 00373C cmpld    7CA43840   1     CL8       cr1=gr4,gr7
   23| 003740 and      7C084038   1     N         gr8=gr0,gr8
   23| 003744 rldicr   79081F24   1     SLL8      gr8=gr8,3
   23| 003748 stfdx    7C0345AE   1     STFL      (double).rns89.(gr3,gr8,0)=fp0
   24| 00374C bc       4184FFE4   1     BT        CL.856,cr1,0x8/llt,taken=80%(80,20)
   24| 003750 add      7C875214   1     A         gr4=gr7,gr10
    0| 003754 mtspr    7CC903A6   1     LCTR      ctr=gr6
   24| 003758 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
    0| 00375C bc       4182002C   1     BT        CL.3894,cr0,0x4/eq,taken=50%(0,0)
   23| 003760 lfd      C8010080   1     LFL       fp0=<a17:d128:l8>(gr1,128)
   23| 003764 addi     39290002   1     AI        gr9=gr9,2
   23| 003768 and      7C082038   1     N         gr8=gr0,gr4
   23| 00376C rldicr   79081F24   1     SLL8      gr8=gr8,3
   23| 003770 add      7D274A14   1     A         gr9=gr7,gr9
   23| 003774 addi     39440001   1     AI        gr10=gr4,1
   23| 003778 rlwinm   5524003E   1     RN4       gr4=gr9,0,0xFFFFFFFF
   23| 00377C stfdx    7C0345AE   1     STFL      (double).rns89.(gr3,gr8,0)=fp0
    0| 003780 bc       419A0040   1     BT        CL.3895,cr6,0x4/eq,taken=20%(20,80)
    0| 003784 ori      60210000   1     XNOP      
    0|                              CL.3894:
   31|                              CL.858:
   23| 003788 lfd      C8010080   1     LFL       fp0=<a17:d128:l8>(gr1,128)
   23| 00378C and      7C082038   1     N         gr8=gr0,gr4
   23| 003790 rldicr   79081F24   1     SLL8      gr8=gr8,3
   23| 003794 addi     39240001   1     AI        gr9=gr4,1
   23| 003798 rlwinm   5524003E   1     RN4       gr4=gr9,0,0xFFFFFFFF
   23| 00379C addi     39290001   1     AI        gr9=gr9,1
   23| 0037A0 and      7C0A2038   1     N         gr10=gr0,gr4
   23| 0037A4 stfdx    7C0345AE   1     STFL      (double).rns89.(gr3,gr8,0)=fp0
   23| 0037A8 lfd      C8010080   1     LFL       fp0=<a17:d128:l8>(gr1,128)
   23| 0037AC rldicr   79481F24   1     SLL8      gr8=gr10,3
   23| 0037B0 addi     39440001   1     AI        gr10=gr4,1
   23| 0037B4 rlwinm   5524003E   1     RN4       gr4=gr9,0,0xFFFFFFFF
   23| 0037B8 stfdx    7C0345AE   1     STFL      (double).rns89.(gr3,gr8,0)=fp0
   31| 0037BC bc       4200FFCC   1     BCT       ctr=CL.858,taken=100%(100,0)
    0|                              CL.3895:
   30| 0037C0 addi     38A50001   1     AI        gr5=gr5,1
   30| 0037C4 cmpld    7CA5D840   1     CL8       cr1=gr5,gr27
   30| 0037C8 bc       4184FF40   1     BT        CL.855,cr1,0x8/llt,taken=80%(80,20)
   31| 0037CC stw      91410098   1     ST4Z      <a17:d152:l4>(gr1,152)=gr10
   30| 0037D0 b        4BFFFDB0   1     B         CL.766,-1
   30|                              CL.863:
   31| 0037D4 bc       41860088   1     BT        CL.873,cr1,0x4/eq,taken=50%(0,0)
    0| 0037D8 addi     38C6FFFF   1     AI        gr6=gr6,-1
   31| 0037DC addi     38A00000   1     LI        gr5=0
    0| 0037E0 rlwinm   54C7003E   1     RN4       gr7=gr6,0,0xFFFFFFFF
   31|                              CL.865:
    0| 0037E4 lfd      C8010080   1     LFL       fp0=<a17:d128:l8>(gr1,128)
   23| 0037E8 and      7C062038   1     N         gr6=gr0,gr4
   23| 0037EC rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 0037F0 addi     38840001   1     AI        gr4=gr4,1
    0| 0037F4 mtspr    7F8903A6   1     LCTR      ctr=gr28
   23| 0037F8 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   23| 0037FC stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
   31|                              CL.868:
   30| 003800 lfd      C8010080   1     LFL       fp0=<a17:d128:l8>(gr1,128)
   23| 003804 and      7C062038   1     N         gr6=gr0,gr4
   23| 003808 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 00380C addi     39040001   1     AI        gr8=gr4,1
   24| 003810 or       7FE4FB78   1     LR        gr4=gr31
   23| 003814 rlwinm   5509003E   1     RN4       gr9=gr8,0,0xFFFFFFFF
   23| 003818 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
    0| 00381C ori      60210000   1     XNOP      
   22|                              CL.869:
   23| 003820 rldicl   78860020   1     RN8       gr6=gr4,0,0xFFFFFFFF
   24| 003824 addi     38840001   1     AI        gr4=gr4,1
   23| 003828 add      7CC64A14   1     A         gr6=gr6,gr9
   24| 00382C cmpld    7C243840   1     CL8       cr0=gr4,gr7
   23| 003830 and      7C063038   1     N         gr6=gr0,gr6
   23| 003834 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 003838 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
   24| 00383C bc       4180FFE4   1     BT        CL.869,cr0,0x8/llt,taken=80%(80,20)
   24| 003840 add      7CC74214   1     A         gr6=gr7,gr8
   24| 003844 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   31| 003848 bc       4200FFB8   1     BCT       ctr=CL.868,taken=100%(100,0)
   30| 00384C addi     38A50001   1     AI        gr5=gr5,1
   30| 003850 cmpld    7C25D840   1     CL8       cr0=gr5,gr27
   30| 003854 bc       4180FF90   1     BT        CL.865,cr0,0x8/llt,taken=80%(80,20)
   24| 003858 b        4BFFFE90   1     B         CL.5476,-1
   30|                              CL.873:
    0| 00385C rlwinm   56C5F87E   1     RN4       gr5=gr22,31,0x7FFFFFFF
    0| 003860 rldicl   7B8607E1   1     RN8_R     gr6,cr0=gr28,0,0x1
    0| 003864 cmpdi    2CA50000   1     C8        cr1=gr5,0
   31|                              CL.874:
    0| 003868 lfd      C8010080   1     LFL       fp0=<a17:d128:l8>(gr1,128)
   23| 00386C and      7C062038   1     N         gr6=gr0,gr4
   23| 003870 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 003874 addi     39040001   1     AI        gr8=gr4,1
   23| 003878 or       7C872378   1     LR        gr7=gr4
   23| 00387C rlwinm   5504003E   1     RN4       gr4=gr8,0,0xFFFFFFFF
    0| 003880 mtspr    7CA903A6   1     LCTR      ctr=gr5
   23| 003884 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
    0| 003888 bc       41820024   1     BT        CL.3897,cr0,0x4/eq,taken=50%(0,0)
   23| 00388C lfd      C8010080   1     LFL       fp0=<a17:d128:l8>(gr1,128)
   23| 003890 and      7C840038   1     N         gr4=gr4,gr0
   23| 003894 rldicr   78861F24   1     SLL8      gr6=gr4,3
   23| 003898 addi     38870002   1     AI        gr4=gr7,2
   23| 00389C rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   23| 0038A0 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
    0| 0038A4 bc       4186003C   1     BT        CL.3898,cr1,0x4/eq,taken=20%(20,80)
    0| 0038A8 ori      60210000   1     XNOP      
    0|                              CL.3897:
   31|                              CL.877:
   23| 0038AC lfd      C8010080   1     LFL       fp0=<a17:d128:l8>(gr1,128)
   23| 0038B0 and      7C062038   1     N         gr6=gr0,gr4
   23| 0038B4 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 0038B8 addi     38840001   1     AI        gr4=gr4,1
   23| 0038BC rlwinm   5487003E   1     RN4       gr7=gr4,0,0xFFFFFFFF
   23| 0038C0 addi     38840001   1     AI        gr4=gr4,1
   23| 0038C4 and      7C073838   1     N         gr7=gr0,gr7
   23| 0038C8 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
   23| 0038CC lfd      C8010080   1     LFL       fp0=<a17:d128:l8>(gr1,128)
   23| 0038D0 rldicr   78E61F24   1     SLL8      gr6=gr7,3
   23| 0038D4 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   23| 0038D8 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
   31| 0038DC bc       4200FFD0   1     BCT       ctr=CL.877,taken=100%(100,0)
    0|                              CL.3898:
   30| 0038E0 addi     3BFF0001   1     AI        gr31=gr31,1
   30| 0038E4 cmpld    7F3FD840   1     CL8       cr6=gr31,gr27
   30| 0038E8 bc       4198FF80   1     BT        CL.874,cr6,0x8/llt,taken=80%(80,20)
   30|                              CL.3740:
   30| 0038EC stw      90810098   1     ST4Z      <a17:d152:l4>(gr1,152)=gr4
   30| 0038F0 b        4BFFFC90   1     B         CL.766,-1
   30|                              CL.824:
    0| 0038F4 lwz      80A1008C   1     L4Z       gr5=<a17:d140:l4>(gr1,140)
    0| 0038F8 cmplwi   28050001   1     CL4       cr0=gr5,1
   31| 0038FC bc       418600DC   1     BT        CL.836,cr1,0x4/eq,taken=50%(0,0)
   31| 003900 bc       41820060   1     BT        CL.884,cr0,0x4/eq,taken=50%(0,0)
    0| 003904 addi     38A5FFFF   1     AI        gr5=gr5,-1
    0| 003908 mtspr    7F6903A6   1     LCTR      ctr=gr27
    0| 00390C rlwinm   54A6003E   1     RN4       gr6=gr5,0,0xFFFFFFFF
   31|                              CL.826:
    0| 003910 lfd      C8010080   1     LFL       fp0=<a17:d128:l8>(gr1,128)
   23| 003914 and      7C052038   1     N         gr5=gr0,gr4
   23| 003918 rldicr   78A51F24   1     SLL8      gr5=gr5,3
   23| 00391C addi     38E40001   1     AI        gr7=gr4,1
   24| 003920 or       7FE4FB78   1     LR        gr4=gr31
   23| 003924 rlwinm   54E8003E   1     RN4       gr8=gr7,0,0xFFFFFFFF
   23| 003928 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
    0| 00392C ori      60210000   1     XNOP      
   22|                              CL.827:
   23| 003930 rldicl   78850020   1     RN8       gr5=gr4,0,0xFFFFFFFF
   24| 003934 addi     38840001   1     AI        gr4=gr4,1
   23| 003938 add      7CA54214   1     A         gr5=gr5,gr8
   24| 00393C cmpld    7C243040   1     CL8       cr0=gr4,gr6
   23| 003940 and      7C052838   1     N         gr5=gr0,gr5
   23| 003944 rldicr   78A51F24   1     SLL8      gr5=gr5,3
   23| 003948 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
   24| 00394C bc       4180FFE4   1     BT        CL.827,cr0,0x8/llt,taken=80%(80,20)
   24| 003950 add      7C863A14   1     A         gr4=gr6,gr7
   24| 003954 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   30| 003958 bc       4200FFB8   1     BCT       ctr=CL.826,taken=100%(100,0)
   30| 00395C b        4BFFFF90   1     B         CL.3740,-1
   30|                              CL.884:
    0| 003960 rlwinm   56A5F87E   1     RN4       gr5=gr21,31,0x7FFFFFFF
    0| 003964 rldicl   7B6607E1   1     RN8_R     gr6,cr0=gr27,0,0x1
    0| 003968 cmpdi    2CA50000   1     C8        cr1=gr5,0
    0| 00396C mtspr    7CA903A6   1     LCTR      ctr=gr5
    0| 003970 bc       41820028   1     BT        CL.3900,cr0,0x4/eq,taken=50%(0,0)
    0| 003974 lfd      C8010080   1     LFL       fp0=<a17:d128:l8>(gr1,128)
   23| 003978 and      7C052038   1     N         gr5=gr0,gr4
   23| 00397C rldicr   78A51F24   1     SLL8      gr5=gr5,3
   23| 003980 addi     38E40001   1     AI        gr7=gr4,1
   23| 003984 rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   23| 003988 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
    0| 00398C bc       41860044   1     BT        CL.3901,cr1,0x4/eq,taken=20%(20,80)
    0| 003990 ori      60210000   1     XNOP      
    0| 003994 ori      60210000   1     XNOP      
    0|                              CL.3900:
   31|                              CL.886:
    0| 003998 lfd      C8010080   1     LFL       fp0=<a17:d128:l8>(gr1,128)
   23| 00399C and      7C052038   1     N         gr5=gr0,gr4
   23| 0039A0 rldicr   78A51F24   1     SLL8      gr5=gr5,3
   23| 0039A4 addi     38C40001   1     AI        gr6=gr4,1
   23| 0039A8 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   23| 0039AC addi     38C60001   1     AI        gr6=gr6,1
   23| 0039B0 and      7C072038   1     N         gr7=gr0,gr4
   23| 0039B4 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
    0| 0039B8 lfd      C8010080   1     LFL       fp0=<a17:d128:l8>(gr1,128)
   23| 0039BC rldicr   78E51F24   1     SLL8      gr5=gr7,3
   23| 0039C0 addi     38E40001   1     AI        gr7=gr4,1
   23| 0039C4 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   23| 0039C8 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
   30| 0039CC bc       4200FFCC   1     BCT       ctr=CL.886,taken=100%(100,0)
    0|                              CL.3901:
   30| 0039D0 stw      90E10098   1     ST4Z      <a17:d152:l4>(gr1,152)=gr7
   30| 0039D4 b        4BFFFBAC   1     B         CL.766,-1
   30|                              CL.836:
   31| 0039D8 bc       41820068   1     BT        CL.891,cr0,0x4/eq,taken=50%(0,0)
    0| 0039DC addi     38A5FFFF   1     AI        gr5=gr5,-1
    0| 0039E0 mtspr    7F6903A6   1     LCTR      ctr=gr27
    0| 0039E4 rlwinm   54A6003E   1     RN4       gr6=gr5,0,0xFFFFFFFF
   31|                              CL.837:
    0| 0039E8 lfd      C8010080   1     LFL       fp0=<a17:d128:l8>(gr1,128)
   23| 0039EC and      7C052038   1     N         gr5=gr0,gr4
   23| 0039F0 rldicr   78A51F24   1     SLL8      gr5=gr5,3
   23| 0039F4 addi     38E40001   1     AI        gr7=gr4,1
   24| 0039F8 or       7FE4FB78   1     LR        gr4=gr31
   23| 0039FC rlwinm   54E8003E   1     RN4       gr8=gr7,0,0xFFFFFFFF
   23| 003A00 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
    0| 003A04 ori      60210000   1     XNOP      
    0| 003A08 ori      60210000   1     XNOP      
    0| 003A0C ori      60210000   1     XNOP      
   22|                              CL.838:
   23| 003A10 rldicl   78850020   1     RN8       gr5=gr4,0,0xFFFFFFFF
   24| 003A14 addi     38840001   1     AI        gr4=gr4,1
   23| 003A18 add      7CA54214   1     A         gr5=gr5,gr8
   24| 003A1C cmpld    7C243040   1     CL8       cr0=gr4,gr6
   23| 003A20 and      7C052838   1     N         gr5=gr0,gr5
   23| 003A24 rldicr   78A51F24   1     SLL8      gr5=gr5,3
   23| 003A28 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
   24| 003A2C bc       4180FFE4   1     BT        CL.838,cr0,0x8/llt,taken=80%(80,20)
   24| 003A30 add      7C863A14   1     A         gr4=gr6,gr7
   24| 003A34 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   30| 003A38 bc       4200FFB0   1     BCT       ctr=CL.837,taken=100%(100,0)
    0| 003A3C b        4BFFFEB0   1     B         CL.3740,-1
   30|                              CL.891:
    0| 003A40 rlwinm   56A5F87E   1     RN4       gr5=gr21,31,0x7FFFFFFF
    0| 003A44 rldicl   7B6607E1   1     RN8_R     gr6,cr0=gr27,0,0x1
    0| 003A48 cmpdi    2CA50000   1     C8        cr1=gr5,0
    0| 003A4C mtspr    7CA903A6   1     LCTR      ctr=gr5
    0| 003A50 bc       41820028   1     BT        CL.3903,cr0,0x4/eq,taken=50%(0,0)
    0| 003A54 lfd      C8010080   1     LFL       fp0=<a17:d128:l8>(gr1,128)
   23| 003A58 and      7C052038   1     N         gr5=gr0,gr4
   23| 003A5C rldicr   78A51F24   1     SLL8      gr5=gr5,3
   23| 003A60 addi     38E40001   1     AI        gr7=gr4,1
   23| 003A64 rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   23| 003A68 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
    0| 003A6C bc       4186FF64   1     BT        CL.3901,cr1,0x4/eq,taken=20%(20,80)
    0| 003A70 ori      60210000   1     XNOP      
    0| 003A74 ori      60210000   1     XNOP      
    0|                              CL.3903:
   31|                              CL.893:
    0| 003A78 lfd      C8010080   1     LFL       fp0=<a17:d128:l8>(gr1,128)
   23| 003A7C and      7C052038   1     N         gr5=gr0,gr4
   23| 003A80 rldicr   78A51F24   1     SLL8      gr5=gr5,3
   23| 003A84 addi     38C40001   1     AI        gr6=gr4,1
   23| 003A88 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   23| 003A8C addi     38C60001   1     AI        gr6=gr6,1
   23| 003A90 and      7C072038   1     N         gr7=gr0,gr4
   23| 003A94 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
    0| 003A98 lfd      C8010080   1     LFL       fp0=<a17:d128:l8>(gr1,128)
   23| 003A9C rldicr   78E51F24   1     SLL8      gr5=gr7,3
   23| 003AA0 addi     38E40001   1     AI        gr7=gr4,1
   23| 003AA4 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   23| 003AA8 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
   30| 003AAC bc       4200FFCC   1     BCT       ctr=CL.893,taken=100%(100,0)
   30| 003AB0 b        4BFFFF20   1     B         CL.3901,-1
    0|                              CL.5468:
   24| 003AB4 addi     38000001   1     LI        gr0=1
   24| 003AB8 addi     38800000   1     LI        gr4=0
   24| 003ABC stb      980100C3   1     ST1Z      <a17:d195:l1>(gr1,195)=gr0
   24| 003AC0 addi     38A00061   1     LI        gr5=97
   24| 003AC4 addi     38C00010   1     LI        gr6=16
   24| 003AC8 addi     38E00400   1     LI        gr7=1024
   24| 003ACC bl       48000001   1     CALL      gr3=_ZN9RCqsmodelC1Ebjjj,5,(char).rns129.",gr3-gr7,#ProcAlias",_ZN9RCqsmodelC1Ebjjj",fcr",#MX_TEMP17",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   24| 003AD0 ori      60000000   1
   24| 003AD4 stb      9BE100C3   1     ST1Z      <a17:d195:l1>(gr1,195)=gr31
    0| 003AD8 ld       EB4100A8   1     L8        gr26=__254(gr1,168)
    0| 003ADC b        4BFFF79C   1     B         CL.756,-1
     |               Tag Table
     | 003AE0        00000000 00092A41 800C0500 00000000 00000900 00000001
     | 003AF8        000000C0 002A5F5A 31326465 636F6D70 72657373 33644964
     | 003B10        4C6A3438 45457650 39524364 65636F64 65725054 5F6A6A6A
     |               Instruction count          576
     |               Straight-line exec time    580
 GPR's set/used:   ssus ssss ssss s---  ---- ssss ssss ssss
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ----
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     decompress3d<double,64>(RCdecoder *, double *, unsigned int, unsigned int, unsigned int)
     | 000000                           AKA       _Z12decompress3dIdLj64EEvP9RCdecoderPT_jjj
   14|                                  PROC      rd,data,nx,ny,nz,gr3-gr7
    0| 003B30 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 003B34 std      FBC1FFF0   1     ST8       #stack(gr1,-16)=gr30
    0| 003B38 std      FBA1FFE8   1     ST8       #stack(gr1,-24)=gr29
    0| 003B3C std      FB81FFE0   1     ST8       #stack(gr1,-32)=gr28
    0| 003B40 std      FB61FFD8   1     ST8       #stack(gr1,-40)=gr27
    0| 003B44 std      FB41FFD0   1     ST8       #stack(gr1,-48)=gr26
    0| 003B48 std      FB21FFC8   1     ST8       #stack(gr1,-56)=gr25
    0| 003B4C std      FB01FFC0   1     ST8       #stack(gr1,-64)=gr24
    0| 003B50 std      FAE1FFB8   1     ST8       #stack(gr1,-72)=gr23
    0| 003B54 std      FAC1FFB0   1     ST8       #stack(gr1,-80)=gr22
    0| 003B58 std      FAA1FFA8   1     ST8       #stack(gr1,-88)=gr21
    0| 003B5C std      FA81FFA0   1     ST8       #stack(gr1,-96)=gr20
    0| 003B60 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 003B64 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 003B68 stdu     F821FEC1   1     ST8U      gr1,#stack(gr1,-320)=gr1
    0| 003B6C or       7C771B78   1     LR        gr23=gr3
   24| 003B70 addi     38600048   1     LI        gr3=72
   53| 003B74 std      F8410028   1     ST8       #cur_toc(gr1,40)=gr2
    0| 003B78 ld       E9020000   1     L8        gr8=.$STATIC(gr2,0)
    0| 003B7C addi     3BE00000   1     LI        gr31=0
    0| 003B80 or       7CB82B78   1     LR        gr24=gr5
    0| 003B84 stw      93E100C0   1     ST4Z      <a18:d192:l4>(gr1,192)=gr31
    0| 003B88 std      FBE100D0   1     ST8       <a18:d208:l8>(gr1,208)=gr31
    0| 003B8C or       7C9E2378   1     LR        gr30=gr4
    0| 003B90 addi     38080120   1     AI        gr0=gr8,288
    0| 003B94 stw      93E100D8   1     ST4Z      <a18:d216:l4>(gr1,216)=gr31
    0| 003B98 std      F80100C8   1     ST8       <a18:d200:l8>(gr1,200)=gr0
    0| 003B9C or       7CB92B78   1     LR        gr25=gr5
    0| 003BA0 rlwinm   54BD003E   1     RN4       gr29=gr5,0,0xFFFFFFFF
    0| 003BA4 or       7CD63378   1     LR        gr22=gr6
    0| 003BA8 rlwinm   54DC003E   1     RN4       gr28=gr6,0,0xFFFFFFFF
    0| 003BAC or       7CF53B78   1     LR        gr21=gr7
    0| 003BB0 rlwinm   54FB003E   1     RN4       gr27=gr7,0,0xFFFFFFFF
   24| 003BB4 bl       48000001   1     CALL      gr3=_Znwm,1,gr3,#ProcAlias",_Znwm",fcr",#MX_TEMP18",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   24| 003BB8 ori      60000000   1
   24| 003BBC or       7C7A1B79   1     LR_R      gr26,cr0=gr3
   24| 003BC0 std      F86100A8   1     ST8       __309(gr1,168)=gr3
   24| 003BC4 bc       40820840   1     BF        CL.5066,cr0,0x4/eq,taken=40%(40,60)
   24|                              CL.917:
   25| 003BC8 addi     38600018   1     LI        gr3=24
   25| 003BCC bl       48000001   1     CALL      gr3=_Znwm,1,gr3,#ProcAlias",_Znwm",fcr",#MX_TEMP18",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   25| 003BD0 ori      60000000   1
   25| 003BD4 std      FB4100B0   1     ST8       rm(gr1,176)=gr26
   25| 003BD8 or       7C7A1B79   1     LR_R      gr26,cr0=gr3
   25| 003BDC bc       41820010   1     BT        CL.920,cr0,0x4/eq,taken=50%(0,0)
   34| 003BE0 std      FAFA0008   1     ST8       (PCdecoder<double,PCmap<double,64,void>,1>).rd@8.rns158.(gr26,8)=gr23
   34| 003BE4 addi     380100B0   1     AI        gr0=gr1,176
   34| 003BE8 std      F81A0010   1     ST8       (PCdecoder<double,PCmap<double,64,void>,1>).rm@10.rns159.(gr26,16)=gr0
   34|                              CL.920:
    9| 003BEC addi     38B80001   1     AI        gr5=gr24,1
   26| 003BF0 std      FBE10080   1     ST8       <a18:d128:l8>(gr1,128)=gr31
    9| 003BF4 addi     387D0001   1     AI        gr3=gr29,1
    9| 003BF8 addi     389C0001   1     AI        gr4=gr28,1
    9| 003BFC stw      90A1008C   1     ST4Z      <a18:d140:l4>(gr1,140)=gr5
    9| 003C00 mulld    7C8321D2   1     M         gr4=gr3,gr4
    9| 003C04 addi     38000001   1     LI        gr0=1
   45| 003C08 add      7C64EA14   1     A         gr3=gr4,gr29
    9| 003C0C stw      90810090   1     ST4Z      <a18:d144:l4>(gr1,144)=gr4
   45| 003C10 addi     38830002   1     AI        gr4=gr3,2
   45| 003C14 addi     38630001   1     AI        gr3=gr3,1
    9| 003C18 stw      90010088   1     ST4Z      <a18:d136:l4>(gr1,136)=gr0
   45| 003C1C and      7C642038   1     N         gr4=gr3,gr4
   45| 003C20 rlwinm   5463003E   1     RN4       gr3=gr3,0,0xFFFFFFFF
   45| 003C24 cmpwi    2C040000   1     C4        cr0=gr4,0
    0| 003C28 addi     38030001   1     AI        gr0=gr3,1
   45| 003C2C bc       41820024   1     BT        CL.924,cr0,0x4/eq,taken=20%(20,80)
    0| 003C30 ori      60210000   1     XNOP      
    0| 003C34 ori      60210000   1     XNOP      
    0| 003C38 ori      60210000   1     XNOP      
   45|                              CL.922:
    9| 003C3C or       7C001B78   1     O         gr0=gr0,gr3
    9| 003C40 rldicl   78030020   1     RN8       gr3=gr0,0,0xFFFFFFFF
   45| 003C44 addi     38030001   1     AI        gr0=gr3,1
   45| 003C48 and      7C640039   1     N_R       gr4,cr0=gr3,gr0
   45| 003C4C bc       4082FFF0   1     BF        CL.922,cr0,0x4/eq,taken=80%(80,20)
   45|                              CL.924:
   47| 003C50 stw      90610094   1     ST4Z      <a18:d148:l4>(gr1,148)=gr3
   10| 003C54 stw      93E10098   1     ST4Z      <a18:d152:l4>(gr1,152)=gr31
   10| 003C58 rldic    78031F48   1     RN8       gr3=gr0,3,0x7FFFFFFF8
   10| 003C5C bl       48000001   1     CALL      gr3=_Znam,1,gr3,#ProcAlias",_Znam",fcr",#MX_TEMP18",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   10| 003C60 ori      60000000   1
   10| 003C64 addi     38000002   1     LI        gr0=2
   24| 003C68 lwz      80A10090   1     L4Z       gr5=<a18:d144:l4>(gr1,144)
   10| 003C6C stb      980100C3   1     ST1Z      <a18:d195:l1>(gr1,195)=gr0
   23| 003C70 lfd      C8010080   1     LFL       fp0=<a18:d128:l8>(gr1,128)
   10| 003C74 std      F86100A0   1     ST8       <a18:d160:l8>(gr1,160)=gr3
   23| 003C78 lwz      80010094   1     L4Z       gr0=<a18:d148:l4>(gr1,148)
   23| 003C7C lwz      80C10098   1     L4Z       gr6=<a18:d152:l4>(gr1,152)
   24| 003C80 cmplwi   28050001   1     CL4       cr0=gr5,1
   24| 003C84 addi     3905FFFF   1     AI        gr8=gr5,-1
   23| 003C88 and      7C043038   1     N         gr4=gr0,gr6
   23| 003C8C rldicr   78841F24   1     SLL8      gr4=gr4,3
   23| 003C90 addi     38E60001   1     AI        gr7=gr6,1
   23| 003C94 stfdx    7C0325AE   1     STFL      (double).rns146.(gr3,gr4,0)=fp0
   23| 003C98 stw      90E10098   1     ST4Z      <a18:d152:l4>(gr1,152)=gr7
   23| 003C9C rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   24| 003CA0 bc       4182003C   1     BT        CL.958,cr0,0x4/eq,taken=20%(20,80)
   24| 003CA4 addi     38E00000   1     LI        gr7=0
    0| 003CA8 rlwinm   5509003E   1     RN4       gr9=gr8,0,0xFFFFFFFF
    0| 003CAC ori      60210000   1     XNOP      
   22|                              CL.928:
   23| 003CB0 rldicl   78E80020   1     RN8       gr8=gr7,0,0xFFFFFFFF
   24| 003CB4 addi     38E70001   1     AI        gr7=gr7,1
   23| 003CB8 add      7D044214   1     A         gr8=gr4,gr8
   24| 003CBC cmpld    7C274840   1     CL8       cr0=gr7,gr9
   23| 003CC0 and      7C084038   1     N         gr8=gr0,gr8
   23| 003CC4 rldicr   79081F24   1     SLL8      gr8=gr8,3
   23| 003CC8 stfdx    7C0345AE   1     STFL      (double).rns146.(gr3,gr8,0)=fp0
   24| 003CCC bc       4180FFE4   1     BT        CL.928,cr0,0x8/llt,taken=80%(80,20)
   24| 003CD0 add      7C853214   1     A         gr4=gr5,gr6
   24| 003CD4 stw      90810098   1     ST4Z      <a18:d152:l4>(gr1,152)=gr4
   24| 003CD8 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   24|                              CL.958:
   31| 003CDC cmpdi    2C3B0000   1     C8        cr0=gr27,0
   31| 003CE0 bc       418201F0   1     BT        CL.927,cr0,0x4/eq,taken=50%(0,0)
   31| 003CE4 cmpdi    2C3C0000   1     C8        cr0=gr28,0
    0| 003CE8 cmpdi    2CBD0000   1     C8        cr1=gr29,0
   31| 003CEC bc       41820558   1     BT        CL.985,cr0,0x4/eq,taken=50%(0,0)
   31| 003CF0 bc       41860270   1     BT        CL.973,cr1,0x4/eq,taken=50%(0,0)
   31| 003CF4 addi     3A800000   1     LI        gr20=0
    0| 003CF8 rldic    7B391F48   1     RN8       gr25=gr25,3,0x7FFFFFFF8
   31|                              CL.925:
   24| 003CFC lwz      80A1008C   1     L4Z       gr5=<a18:d140:l4>(gr1,140)
    0| 003D00 lfd      C8010080   1     LFL       fp0=<a18:d128:l8>(gr1,128)
   23| 003D04 and      7C062038   1     N         gr6=gr0,gr4
   23| 003D08 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 003D0C addi     38E40001   1     AI        gr7=gr4,1
   23| 003D10 or       7C882378   1     LR        gr8=gr4
   24| 003D14 cmplwi   28050001   1     CL4       cr0=gr5,1
   24| 003D18 addi     3925FFFF   1     AI        gr9=gr5,-1
   23| 003D1C rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   23| 003D20 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
   24| 003D24 bc       41820034   1     BT        CL.959,cr0,0x4/eq,taken=20%(20,80)
   24| 003D28 or       7FE6FB78   1     LR        gr6=gr31
    0| 003D2C rlwinm   5529003E   1     RN4       gr9=gr9,0,0xFFFFFFFF
   22|                              CL.934:
   23| 003D30 rldicl   78C70020   1     RN8       gr7=gr6,0,0xFFFFFFFF
   24| 003D34 addi     38C60001   1     AI        gr6=gr6,1
   23| 003D38 add      7CE43A14   1     A         gr7=gr4,gr7
   24| 003D3C cmpld    7C264840   1     CL8       cr0=gr6,gr9
   23| 003D40 and      7C073838   1     N         gr7=gr0,gr7
   23| 003D44 rldicr   78E71F24   1     SLL8      gr7=gr7,3
   23| 003D48 stfdx    7C033DAE   1     STFL      (double).rns89.(gr3,gr7,0)=fp0
   24| 003D4C bc       4180FFE4   1     BT        CL.934,cr0,0x8/llt,taken=80%(80,20)
   24| 003D50 add      7C854214   1     A         gr4=gr5,gr8
   24| 003D54 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   24|                              CL.959:
   31| 003D58 or       7FF8FB78   1     LR        gr24=gr31
    0| 003D5C addi     3AFEFFF8   1     AI        gr23=gr30,-8
   31|                              CL.931:
   24| 003D60 lwz      80A10088   1     L4Z       gr5=<a18:d136:l4>(gr1,136)
   30| 003D64 lfd      C8010080   1     LFL       fp0=<a18:d128:l8>(gr1,128)
   23| 003D68 and      7C062038   1     N         gr6=gr0,gr4
   23| 003D6C rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 003D70 addi     38E40001   1     AI        gr7=gr4,1
   23| 003D74 or       7C882378   1     LR        gr8=gr4
   24| 003D78 addi     3925FFFF   1     AI        gr9=gr5,-1
   23| 003D7C stw      90E10098   1     ST4Z      <a18:d152:l4>(gr1,152)=gr7
   24| 003D80 cmplwi   28050001   1     CL4       cr0=gr5,1
   23| 003D84 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
   23| 003D88 rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   24| 003D8C bc       41820040   1     BT        CL.960,cr0,0x4/eq,taken=20%(20,80)
   24| 003D90 or       7FE6FB78   1     LR        gr6=gr31
    0| 003D94 rlwinm   5529003E   1     RN4       gr9=gr9,0,0xFFFFFFFF
    0| 003D98 ori      60210000   1     XNOP      
    0| 003D9C ori      60210000   1     XNOP      
   22|                              CL.940:
   23| 003DA0 rldicl   78C70020   1     RN8       gr7=gr6,0,0xFFFFFFFF
   24| 003DA4 addi     38C60001   1     AI        gr6=gr6,1
   23| 003DA8 add      7CE43A14   1     A         gr7=gr4,gr7
   24| 003DAC cmpld    7C264840   1     CL8       cr0=gr6,gr9
   23| 003DB0 and      7C073838   1     N         gr7=gr0,gr7
   23| 003DB4 rldicr   78E71F24   1     SLL8      gr7=gr7,3
   23| 003DB8 stfdx    7C033DAE   1     STFL      (double).rns89.(gr3,gr7,0)=fp0
   24| 003DBC bc       4180FFE4   1     BT        CL.940,cr0,0x8/llt,taken=80%(80,20)
   24| 003DC0 add      7C854214   1     A         gr4=gr5,gr8
   24| 003DC4 stw      90810098   1     ST4Z      <a18:d152:l4>(gr1,152)=gr4
   24| 003DC8 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   24|                              CL.960:
   31| 003DCC or       7FF6FB78   1     LR        gr22=gr31
   48| 003DD0 or       7EF5BB78   1     LR        gr21=gr23
    0| 003DD4 ori      60210000   1     XNOP      
   31|                              CL.937:
   47| 003DD8 lwz      8101008C   1     L4Z       gr8=<a18:d140:l4>(gr1,140)
    0| 003DDC lwz      80C10088   1     L4Z       gr6=<a18:d136:l4>(gr1,136)
   47| 003DE0 lwz      81210090   1     L4Z       gr9=<a18:d144:l4>(gr1,144)
   47| 003DE4 addi     38A00000   1     LI        gr5=0
   47| 003DE8 subf     7D482050   1     S         gr10=gr4,gr8
   47| 003DEC subf     7D662050   1     S         gr11=gr4,gr6
   47| 003DF0 subf     7CE95050   1     S         gr7=gr10,gr9
   47| 003DF4 and      7C065838   1     N         gr6=gr0,gr11
   47| 003DF8 and      7C073838   1     N         gr7=gr0,gr7
   47| 003DFC rldicr   78C61F24   1     SLL8      gr6=gr6,3
   47| 003E00 rldicr   78E71F24   1     SLL8      gr7=gr7,3
   47| 003E04 lfdx     7C2334AE   1     LFL       fp1=(double).rns89.(gr3,gr6,0)
   47| 003E08 lfdx     7C433CAE   1     LFL       fp2=(double).rns89.(gr3,gr7,0)
   47| 003E0C and      7C065038   1     N         gr6=gr0,gr10
   47| 003E10 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   47| 003E14 subf     7CE95850   1     S         gr7=gr11,gr9
   47| 003E18 lfdx     7C0334AE   1     LFL       fp0=(double).rns89.(gr3,gr6,0)
   47| 003E1C and      7C063838   1     N         gr6=gr0,gr7
   47| 003E20 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   47| 003E24 fsub     FC211028   1     SFL       fp1=fp1,fp2,fcr
   47| 003E28 subf     7C892050   1     S         gr4=gr4,gr9
   47| 003E2C lfdx     7C4334AE   1     LFL       fp2=(double).rns89.(gr3,gr6,0)
   47| 003E30 and      7C042038   1     N         gr4=gr0,gr4
   47| 003E34 rldicr   78841F24   1     SLL8      gr4=gr4,3
   47| 003E38 subf     7CC85850   1     S         gr6=gr11,gr8
   47| 003E3C fadd     FC21002A   1     AFL       fp1=fp1,fp0,fcr
   47| 003E40 lfdx     7C0324AE   2     LFL       fp0=(double).rns89.(gr3,gr4,0)
   47| 003E44 and      7C043038   1     N         gr4=gr0,gr6
   47| 003E48 rldicr   78841F24   1     SLL8      gr4=gr4,3
   47| 003E4C subf     7CC93050   1     S         gr6=gr6,gr9
   47| 003E50 lfdx     7C6324AE   1     LFL       fp3=(double).rns89.(gr3,gr4,0)
   47| 003E54 fsub     FC211028   1     SFL       fp1=fp1,fp2,fcr
   47| 003E58 and      7C003038   2     N         gr0=gr0,gr6
   47| 003E5C rldicr   78041F24   1     SLL8      gr4=gr0,3
   47| 003E60 lfdx     7C4324AE   1     LFL       fp2=(double).rns89.(gr3,gr4,0)
   47| 003E64 or       7F43D378   1     LR        gr3=gr26
   47| 003E68 fadd     FC01002A   1     AFL       fp0=fp1,fp0,fcr
   47| 003E6C fsub     FC001828   2     SFL       fp0=fp0,fp3,fcr
   47| 003E70 fadd     FC20102A   2     AFL       fp1=fp0,fp2,fcr
   47| 003E74 bl       48002BDD   1     CALL      fp1=PCdecoder<double,PCmap<double,64,void>,1>::decode(double, unsigned int),3,(PCdecoder<double,PCmap<double,64,void>,1>).rns150.",gr3,fp1,gr5,#ProcAlias",PCdecoder<double,PCmap<double,64,void>,1>::decode(double, unsigned int)",fcr",#MX_TEMP18",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   47| 003E78 ori      60000000   1
   23| 003E7C lwz      80010094   1     L4Z       gr0=<a18:d148:l4>(gr1,148)
   23| 003E80 lwz      80A10098   1     L4Z       gr5=<a18:d152:l4>(gr1,152)
   23| 003E84 ld       E86100A0   1     L8        gr3=<a18:d160:l8>(gr1,160)
   32| 003E88 addi     3AD60001   1     AI        gr22=gr22,1
   48| 003E8C stfdu    DC350008   1     STFDU     gr21,(double).rns89.(gr21,8)=fp1
   32| 003E90 cmpld    7C36E840   1     CL8       cr0=gr22,gr29
   23| 003E94 and      7C042838   1     N         gr4=gr0,gr5
   23| 003E98 rldicr   78841F24   1     SLL8      gr4=gr4,3
   23| 003E9C addi     38A50001   1     AI        gr5=gr5,1
   23| 003EA0 stfdx    7C2325AE   1     STFL      (double).rns89.(gr3,gr4,0)=fp1
   23| 003EA4 stw      90A10098   1     ST4Z      <a18:d152:l4>(gr1,152)=gr5
   23| 003EA8 rlwinm   54A4003E   1     RN4       gr4=gr5,0,0xFFFFFFFF
   32| 003EAC bc       4180FF2C   1     BT        CL.937,cr0,0x8/llt,taken=80%(80,20)
   31| 003EB0 addi     3B180001   1     AI        gr24=gr24,1
   32| 003EB4 add      7FDECA14   1     A         gr30=gr30,gr25
   31| 003EB8 cmpld    7C38E040   1     CL8       cr0=gr24,gr28
    0| 003EBC add      7EF7CA14   1     A         gr23=gr23,gr25
   31| 003EC0 bc       4180FEA0   1     BT        CL.931,cr0,0x8/llt,taken=80%(80,20)
   30| 003EC4 addi     3A940001   1     AI        gr20=gr20,1
   30| 003EC8 cmpld    7C34D840   1     CL8       cr0=gr20,gr27
   30| 003ECC bc       4180FE30   1     BT        CL.925,cr0,0x8/llt,taken=80%(80,20)
   30|                              CL.927:
   52| 003ED0 cmpdi    2C3A0000   1     C8        cr0=gr26,0
   52| 003ED4 bc       4082007C   1     BF        CL.5067,cr0,0x4/eq,taken=40%(40,60)
   35|                              CL.947:
   53| 003ED8 ld       E86100B0   1     L8        gr3=rm(gr1,176)
   53| 003EDC cmpdi    2C230000   1     C8        cr0=gr3,0
   53| 003EE0 bc       41820024   1     BT        CL.950,cr0,0x4/eq,taken=30%(30,70)
   53| 003EE4 ld       E8830000   1     L8        gr4=(RCmodel)[]@0.rns112.(gr3,0)
   53| 003EE8 ld       E8840008   1     L8        gr4=((*)();__vftTypeGCCV3).rns19.(gr4,8)
   53| 003EEC ld       E8040000   1     L8        gr0=#fnc_adr(gr4,0)
   53| 003EF0 ld       E9640010   1     L8        gr11=#new_env(gr4,16)
   53| 003EF4 mtspr    7C0903A6   1     LCTR      ctr=gr0
   53| 003EF8 ld       E8440008   1     CALL      gr3=gr4,1,(char).rns108.",gr3,#ProcAlias",fcr",#MX_TEMP18",(()vf).rns155.",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr",#fnc_adr,#cur_toc,ctr,gr11,#new_env,#(glue_dr_n,0,(()vf).rns155."
   53| 003EFC bcctrl   4E800421   1
   53| 003F00 ld       E8410028   1
   53|                              CL.950:
   11| 003F04 ld       E86100A0   1     L8        gr3=<a18:d160:l8>(gr1,160)
   11| 003F08 bl       48000001   1     CALL      _ZdaPv,1,(char).rns108.",gr3,#ProcAlias",_ZdaPv",fcr",#MX_TEMP18",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   11| 003F0C ori      60000000   1
   54| 003F10 ld       E9810150   1     L8        gr12=#stack(gr1,336)
   54| 003F14 addi     38210140   1     AI        gr1=gr1,320
   54| 003F18 ld       EA81FFA0   1     L8        gr20=#stack(gr1,-96)
   54| 003F1C ld       EAA1FFA8   1     L8        gr21=#stack(gr1,-88)
   54| 003F20 ld       EAC1FFB0   1     L8        gr22=#stack(gr1,-80)
   54| 003F24 mtspr    7D8803A6   1     LLR       lr=gr12
   54| 003F28 ld       EAE1FFB8   1     L8        gr23=#stack(gr1,-72)
   54| 003F2C ld       EB01FFC0   1     L8        gr24=#stack(gr1,-64)
   54| 003F30 ld       EB21FFC8   1     L8        gr25=#stack(gr1,-56)
   54| 003F34 ld       EB41FFD0   1     L8        gr26=#stack(gr1,-48)
   54| 003F38 ld       EB61FFD8   1     L8        gr27=#stack(gr1,-40)
   54| 003F3C ld       EB81FFE0   1     L8        gr28=#stack(gr1,-32)
   54| 003F40 ld       EBA1FFE8   1     L8        gr29=#stack(gr1,-24)
   54| 003F44 ld       EBC1FFF0   1     L8        gr30=#stack(gr1,-16)
   54| 003F48 ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
   54| 003F4C bclr     4E800020   1     BA        lr
    0|                              CL.5067:
   35| 003F50 or       7F43D378   1     LR        gr3=gr26
   35| 003F54 bl       48000001   1     CALL      _ZdlPv,1,(char).rns153.",gr3,#ProcAlias",_ZdlPv",fcr",#MX_TEMP18",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   35| 003F58 ori      60000000   1
    0| 003F5C b        4BFFFF7C   1     B         CL.947,-1
   30|                              CL.973:
   31| 003F60 lwz      80A1008C   1     L4Z       gr5=<a18:d140:l4>(gr1,140)
    0| 003F64 lwz      80C10088   1     L4Z       gr6=<a18:d136:l4>(gr1,136)
   31| 003F68 cmplwi   28050001   1     CL4       cr0=gr5,1
    0| 003F6C cmplwi   28860001   1     CL4       cr1=gr6,1
   31| 003F70 bc       418201B4   1     BT        CL.1024,cr0,0x4/eq,taken=50%(0,0)
   31| 003F74 bc       418600CC   1     BT        CL.1014,cr1,0x4/eq,taken=50%(0,0)
    0| 003F78 addi     38E5FFFF   1     AI        gr7=gr5,-1
    0| 003F7C addi     38C6FFFF   1     AI        gr6=gr6,-1
   31| 003F80 addi     38A00000   1     LI        gr5=0
    0| 003F84 rlwinm   54E7003E   1     RN4       gr7=gr7,0,0xFFFFFFFF
    0| 003F88 rlwinm   54C8003E   1     RN4       gr8=gr6,0,0xFFFFFFFF
   31|                              CL.975:
    0| 003F8C lfd      C8010080   1     LFL       fp0=<a18:d128:l8>(gr1,128)
   23| 003F90 and      7C062038   1     N         gr6=gr0,gr4
   23| 003F94 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 003F98 addi     39240001   1     AI        gr9=gr4,1
   24| 003F9C or       7FE4FB78   1     LR        gr4=gr31
   23| 003FA0 rlwinm   552A003E   1     RN4       gr10=gr9,0,0xFFFFFFFF
   23| 003FA4 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
    0| 003FA8 ori      60210000   1     XNOP      
    0| 003FAC ori      60210000   1     XNOP      
   22|                              CL.976:
   23| 003FB0 rldicl   78860020   1     RN8       gr6=gr4,0,0xFFFFFFFF
   24| 003FB4 addi     38840001   1     AI        gr4=gr4,1
   23| 003FB8 add      7CC65214   1     A         gr6=gr6,gr10
   24| 003FBC cmpld    7C243840   1     CL8       cr0=gr4,gr7
   23| 003FC0 and      7C063038   1     N         gr6=gr0,gr6
   23| 003FC4 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 003FC8 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
   24| 003FCC bc       4180FFE4   1     BT        CL.976,cr0,0x8/llt,taken=80%(80,20)
   24| 003FD0 add      7C874A14   1     A         gr4=gr7,gr9
    0| 003FD4 mtspr    7F8903A6   1     LCTR      ctr=gr28
   24| 003FD8 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   31|                              CL.978:
   30| 003FDC lfd      C8010080   1     LFL       fp0=<a18:d128:l8>(gr1,128)
    0| 003FE0 and      7C062038   1     N         gr6=gr0,gr4
   23| 003FE4 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 003FE8 addi     39240001   1     AI        gr9=gr4,1
   24| 003FEC or       7FE4FB78   1     LR        gr4=gr31
   23| 003FF0 rlwinm   552A003E   1     RN4       gr10=gr9,0,0xFFFFFFFF
   23| 003FF4 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
    0| 003FF8 ori      60210000   1     XNOP      
    0| 003FFC ori      60210000   1     XNOP      
   22|                              CL.979:
   23| 004000 rldicl   78860020   1     RN8       gr6=gr4,0,0xFFFFFFFF
   24| 004004 addi     38840001   1     AI        gr4=gr4,1
   23| 004008 add      7CC65214   1     A         gr6=gr6,gr10
   24| 00400C cmpld    7C244040   1     CL8       cr0=gr4,gr8
   23| 004010 and      7C063038   1     N         gr6=gr0,gr6
   23| 004014 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 004018 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
   24| 00401C bc       4180FFE4   1     BT        CL.979,cr0,0x8/llt,taken=80%(80,20)
   24| 004020 add      7CC84A14   1     A         gr6=gr8,gr9
   24| 004024 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   31| 004028 bc       4200FFB4   1     BCT       ctr=CL.978,taken=100%(100,0)
   30| 00402C addi     38A50001   1     AI        gr5=gr5,1
   30| 004030 cmpld    7C25D840   1     CL8       cr0=gr5,gr27
   30| 004034 bc       4180FF58   1     BT        CL.975,cr0,0x8/llt,taken=80%(80,20)
   24|                              CL.5074:
   24| 004038 stw      90C10098   1     ST4Z      <a18:d152:l4>(gr1,152)=gr6
   30| 00403C b        4BFFFE94   1     B         CL.927,-1
   30|                              CL.1014:
    0| 004040 addi     38E5FFFF   1     AI        gr7=gr5,-1
    0| 004044 rlwinm   56C6F87E   1     RN4       gr6=gr22,31,0x7FFFFFFF
   31| 004048 addi     38A00000   1     LI        gr5=0
    0| 00404C rlwinm   54E7003E   1     RN4       gr7=gr7,0,0xFFFFFFFF
    0| 004050 rldicl   7B8807E1   1     RN8_R     gr8,cr0=gr28,0,0x1
    0| 004054 cmpdi    2F260000   1     C8        cr6=gr6,0
   31|                              CL.1016:
    0| 004058 lfd      C8010080   1     LFL       fp0=<a18:d128:l8>(gr1,128)
   23| 00405C and      7C082038   1     N         gr8=gr0,gr4
   23| 004060 rldicr   79081F24   1     SLL8      gr8=gr8,3
   23| 004064 addi     39440001   1     AI        gr10=gr4,1
   23| 004068 or       7C892378   1     LR        gr9=gr4
   23| 00406C rlwinm   554B003E   1     RN4       gr11=gr10,0,0xFFFFFFFF
   24| 004070 or       7FE4FB78   1     LR        gr4=gr31
   23| 004074 stfdx    7C0345AE   1     STFL      (double).rns89.(gr3,gr8,0)=fp0
    0| 004078 ori      60210000   1     XNOP      
    0| 00407C ori      60210000   1     XNOP      
   22|                              CL.1017:
   23| 004080 rldicl   78880020   1     RN8       gr8=gr4,0,0xFFFFFFFF
   24| 004084 addi     38840001   1     AI        gr4=gr4,1
   23| 004088 add      7D085A14   1     A         gr8=gr8,gr11
   24| 00408C cmpld    7CA43840   1     CL8       cr1=gr4,gr7
   23| 004090 and      7C084038   1     N         gr8=gr0,gr8
   23| 004094 rldicr   79081F24   1     SLL8      gr8=gr8,3
   23| 004098 stfdx    7C0345AE   1     STFL      (double).rns89.(gr3,gr8,0)=fp0
   24| 00409C bc       4184FFE4   1     BT        CL.1017,cr1,0x8/llt,taken=80%(80,20)
   24| 0040A0 add      7C875214   1     A         gr4=gr7,gr10
    0| 0040A4 mtspr    7CC903A6   1     LCTR      ctr=gr6
   24| 0040A8 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
    0| 0040AC bc       4182002C   1     BT        CL.3667,cr0,0x4/eq,taken=50%(0,0)
   23| 0040B0 lfd      C8010080   1     LFL       fp0=<a18:d128:l8>(gr1,128)
   23| 0040B4 addi     39290002   1     AI        gr9=gr9,2
   23| 0040B8 and      7C082038   1     N         gr8=gr0,gr4
   23| 0040BC rldicr   79081F24   1     SLL8      gr8=gr8,3
   23| 0040C0 add      7D274A14   1     A         gr9=gr7,gr9
   23| 0040C4 addi     39440001   1     AI        gr10=gr4,1
   23| 0040C8 rlwinm   5524003E   1     RN4       gr4=gr9,0,0xFFFFFFFF
   23| 0040CC stfdx    7C0345AE   1     STFL      (double).rns89.(gr3,gr8,0)=fp0
    0| 0040D0 bc       419A0040   1     BT        CL.3668,cr6,0x4/eq,taken=20%(20,80)
    0| 0040D4 ori      60210000   1     XNOP      
    0|                              CL.3667:
   31|                              CL.1019:
   23| 0040D8 lfd      C8010080   1     LFL       fp0=<a18:d128:l8>(gr1,128)
   23| 0040DC and      7C082038   1     N         gr8=gr0,gr4
   23| 0040E0 rldicr   79081F24   1     SLL8      gr8=gr8,3
   23| 0040E4 addi     39240001   1     AI        gr9=gr4,1
   23| 0040E8 rlwinm   5524003E   1     RN4       gr4=gr9,0,0xFFFFFFFF
   23| 0040EC addi     39290001   1     AI        gr9=gr9,1
   23| 0040F0 and      7C0A2038   1     N         gr10=gr0,gr4
   23| 0040F4 stfdx    7C0345AE   1     STFL      (double).rns89.(gr3,gr8,0)=fp0
   23| 0040F8 lfd      C8010080   1     LFL       fp0=<a18:d128:l8>(gr1,128)
   23| 0040FC rldicr   79481F24   1     SLL8      gr8=gr10,3
   23| 004100 addi     39440001   1     AI        gr10=gr4,1
   23| 004104 rlwinm   5524003E   1     RN4       gr4=gr9,0,0xFFFFFFFF
   23| 004108 stfdx    7C0345AE   1     STFL      (double).rns89.(gr3,gr8,0)=fp0
   31| 00410C bc       4200FFCC   1     BCT       ctr=CL.1019,taken=100%(100,0)
    0|                              CL.3668:
   30| 004110 addi     38A50001   1     AI        gr5=gr5,1
   30| 004114 cmpld    7CA5D840   1     CL8       cr1=gr5,gr27
   30| 004118 bc       4184FF40   1     BT        CL.1016,cr1,0x8/llt,taken=80%(80,20)
   31| 00411C stw      91410098   1     ST4Z      <a18:d152:l4>(gr1,152)=gr10
   30| 004120 b        4BFFFDB0   1     B         CL.927,-1
   30|                              CL.1024:
   31| 004124 bc       41860088   1     BT        CL.1034,cr1,0x4/eq,taken=50%(0,0)
    0| 004128 addi     38C6FFFF   1     AI        gr6=gr6,-1
   31| 00412C addi     38A00000   1     LI        gr5=0
    0| 004130 rlwinm   54C7003E   1     RN4       gr7=gr6,0,0xFFFFFFFF
   31|                              CL.1026:
    0| 004134 lfd      C8010080   1     LFL       fp0=<a18:d128:l8>(gr1,128)
   23| 004138 and      7C062038   1     N         gr6=gr0,gr4
   23| 00413C rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 004140 addi     38840001   1     AI        gr4=gr4,1
    0| 004144 mtspr    7F8903A6   1     LCTR      ctr=gr28
   23| 004148 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   23| 00414C stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
   31|                              CL.1029:
   30| 004150 lfd      C8010080   1     LFL       fp0=<a18:d128:l8>(gr1,128)
   23| 004154 and      7C062038   1     N         gr6=gr0,gr4
   23| 004158 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 00415C addi     39040001   1     AI        gr8=gr4,1
   24| 004160 or       7FE4FB78   1     LR        gr4=gr31
   23| 004164 rlwinm   5509003E   1     RN4       gr9=gr8,0,0xFFFFFFFF
   23| 004168 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
    0| 00416C ori      60210000   1     XNOP      
   22|                              CL.1030:
   23| 004170 rldicl   78860020   1     RN8       gr6=gr4,0,0xFFFFFFFF
   24| 004174 addi     38840001   1     AI        gr4=gr4,1
   23| 004178 add      7CC64A14   1     A         gr6=gr6,gr9
   24| 00417C cmpld    7C243840   1     CL8       cr0=gr4,gr7
   23| 004180 and      7C063038   1     N         gr6=gr0,gr6
   23| 004184 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 004188 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
   24| 00418C bc       4180FFE4   1     BT        CL.1030,cr0,0x8/llt,taken=80%(80,20)
   24| 004190 add      7CC74214   1     A         gr6=gr7,gr8
   24| 004194 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   31| 004198 bc       4200FFB8   1     BCT       ctr=CL.1029,taken=100%(100,0)
   30| 00419C addi     38A50001   1     AI        gr5=gr5,1
   30| 0041A0 cmpld    7C25D840   1     CL8       cr0=gr5,gr27
   30| 0041A4 bc       4180FF90   1     BT        CL.1026,cr0,0x8/llt,taken=80%(80,20)
   24| 0041A8 b        4BFFFE90   1     B         CL.5074,-1
   30|                              CL.1034:
    0| 0041AC rlwinm   56C5F87E   1     RN4       gr5=gr22,31,0x7FFFFFFF
    0| 0041B0 rldicl   7B8607E1   1     RN8_R     gr6,cr0=gr28,0,0x1
    0| 0041B4 cmpdi    2CA50000   1     C8        cr1=gr5,0
   31|                              CL.1035:
    0| 0041B8 lfd      C8010080   1     LFL       fp0=<a18:d128:l8>(gr1,128)
   23| 0041BC and      7C062038   1     N         gr6=gr0,gr4
   23| 0041C0 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 0041C4 addi     39040001   1     AI        gr8=gr4,1
   23| 0041C8 or       7C872378   1     LR        gr7=gr4
   23| 0041CC rlwinm   5504003E   1     RN4       gr4=gr8,0,0xFFFFFFFF
    0| 0041D0 mtspr    7CA903A6   1     LCTR      ctr=gr5
   23| 0041D4 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
    0| 0041D8 bc       41820024   1     BT        CL.3670,cr0,0x4/eq,taken=50%(0,0)
   23| 0041DC lfd      C8010080   1     LFL       fp0=<a18:d128:l8>(gr1,128)
   23| 0041E0 and      7C840038   1     N         gr4=gr4,gr0
   23| 0041E4 rldicr   78861F24   1     SLL8      gr6=gr4,3
   23| 0041E8 addi     38870002   1     AI        gr4=gr7,2
   23| 0041EC rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   23| 0041F0 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
    0| 0041F4 bc       4186003C   1     BT        CL.3671,cr1,0x4/eq,taken=20%(20,80)
    0| 0041F8 ori      60210000   1     XNOP      
    0|                              CL.3670:
   31|                              CL.1038:
   23| 0041FC lfd      C8010080   1     LFL       fp0=<a18:d128:l8>(gr1,128)
   23| 004200 and      7C062038   1     N         gr6=gr0,gr4
   23| 004204 rldicr   78C61F24   1     SLL8      gr6=gr6,3
   23| 004208 addi     38840001   1     AI        gr4=gr4,1
   23| 00420C rlwinm   5487003E   1     RN4       gr7=gr4,0,0xFFFFFFFF
   23| 004210 addi     38840001   1     AI        gr4=gr4,1
   23| 004214 and      7C073838   1     N         gr7=gr0,gr7
   23| 004218 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
   23| 00421C lfd      C8010080   1     LFL       fp0=<a18:d128:l8>(gr1,128)
   23| 004220 rldicr   78E61F24   1     SLL8      gr6=gr7,3
   23| 004224 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   23| 004228 stfdx    7C0335AE   1     STFL      (double).rns89.(gr3,gr6,0)=fp0
   31| 00422C bc       4200FFD0   1     BCT       ctr=CL.1038,taken=100%(100,0)
    0|                              CL.3671:
   30| 004230 addi     3BFF0001   1     AI        gr31=gr31,1
   30| 004234 cmpld    7F3FD840   1     CL8       cr6=gr31,gr27
   30| 004238 bc       4198FF80   1     BT        CL.1035,cr6,0x8/llt,taken=80%(80,20)
   30|                              CL.3513:
   30| 00423C stw      90810098   1     ST4Z      <a18:d152:l4>(gr1,152)=gr4
   30| 004240 b        4BFFFC90   1     B         CL.927,-1
   30|                              CL.985:
    0| 004244 lwz      80A1008C   1     L4Z       gr5=<a18:d140:l4>(gr1,140)
    0| 004248 cmplwi   28050001   1     CL4       cr0=gr5,1
   31| 00424C bc       418600DC   1     BT        CL.997,cr1,0x4/eq,taken=50%(0,0)
   31| 004250 bc       41820060   1     BT        CL.1045,cr0,0x4/eq,taken=50%(0,0)
    0| 004254 addi     38A5FFFF   1     AI        gr5=gr5,-1
    0| 004258 mtspr    7F6903A6   1     LCTR      ctr=gr27
    0| 00425C rlwinm   54A6003E   1     RN4       gr6=gr5,0,0xFFFFFFFF
   31|                              CL.987:
    0| 004260 lfd      C8010080   1     LFL       fp0=<a18:d128:l8>(gr1,128)
   23| 004264 and      7C052038   1     N         gr5=gr0,gr4
   23| 004268 rldicr   78A51F24   1     SLL8      gr5=gr5,3
   23| 00426C addi     38E40001   1     AI        gr7=gr4,1
   24| 004270 or       7FE4FB78   1     LR        gr4=gr31
   23| 004274 rlwinm   54E8003E   1     RN4       gr8=gr7,0,0xFFFFFFFF
   23| 004278 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
    0| 00427C ori      60210000   1     XNOP      
   22|                              CL.988:
   23| 004280 rldicl   78850020   1     RN8       gr5=gr4,0,0xFFFFFFFF
   24| 004284 addi     38840001   1     AI        gr4=gr4,1
   23| 004288 add      7CA54214   1     A         gr5=gr5,gr8
   24| 00428C cmpld    7C243040   1     CL8       cr0=gr4,gr6
   23| 004290 and      7C052838   1     N         gr5=gr0,gr5
   23| 004294 rldicr   78A51F24   1     SLL8      gr5=gr5,3
   23| 004298 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
   24| 00429C bc       4180FFE4   1     BT        CL.988,cr0,0x8/llt,taken=80%(80,20)
   24| 0042A0 add      7C863A14   1     A         gr4=gr6,gr7
   24| 0042A4 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   30| 0042A8 bc       4200FFB8   1     BCT       ctr=CL.987,taken=100%(100,0)
   30| 0042AC b        4BFFFF90   1     B         CL.3513,-1
   30|                              CL.1045:
    0| 0042B0 rlwinm   56A5F87E   1     RN4       gr5=gr21,31,0x7FFFFFFF
    0| 0042B4 rldicl   7B6607E1   1     RN8_R     gr6,cr0=gr27,0,0x1
    0| 0042B8 cmpdi    2CA50000   1     C8        cr1=gr5,0
    0| 0042BC mtspr    7CA903A6   1     LCTR      ctr=gr5
    0| 0042C0 bc       41820028   1     BT        CL.3673,cr0,0x4/eq,taken=50%(0,0)
    0| 0042C4 lfd      C8010080   1     LFL       fp0=<a18:d128:l8>(gr1,128)
   23| 0042C8 and      7C052038   1     N         gr5=gr0,gr4
   23| 0042CC rldicr   78A51F24   1     SLL8      gr5=gr5,3
   23| 0042D0 addi     38E40001   1     AI        gr7=gr4,1
   23| 0042D4 rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   23| 0042D8 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
    0| 0042DC bc       41860044   1     BT        CL.3674,cr1,0x4/eq,taken=20%(20,80)
    0| 0042E0 ori      60210000   1     XNOP      
    0| 0042E4 ori      60210000   1     XNOP      
    0|                              CL.3673:
   31|                              CL.1047:
    0| 0042E8 lfd      C8010080   1     LFL       fp0=<a18:d128:l8>(gr1,128)
   23| 0042EC and      7C052038   1     N         gr5=gr0,gr4
   23| 0042F0 rldicr   78A51F24   1     SLL8      gr5=gr5,3
   23| 0042F4 addi     38C40001   1     AI        gr6=gr4,1
   23| 0042F8 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   23| 0042FC addi     38C60001   1     AI        gr6=gr6,1
   23| 004300 and      7C072038   1     N         gr7=gr0,gr4
   23| 004304 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
    0| 004308 lfd      C8010080   1     LFL       fp0=<a18:d128:l8>(gr1,128)
   23| 00430C rldicr   78E51F24   1     SLL8      gr5=gr7,3
   23| 004310 addi     38E40001   1     AI        gr7=gr4,1
   23| 004314 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   23| 004318 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
   30| 00431C bc       4200FFCC   1     BCT       ctr=CL.1047,taken=100%(100,0)
    0|                              CL.3674:
   30| 004320 stw      90E10098   1     ST4Z      <a18:d152:l4>(gr1,152)=gr7
   30| 004324 b        4BFFFBAC   1     B         CL.927,-1
   30|                              CL.997:
   31| 004328 bc       41820068   1     BT        CL.1052,cr0,0x4/eq,taken=50%(0,0)
    0| 00432C addi     38A5FFFF   1     AI        gr5=gr5,-1
    0| 004330 mtspr    7F6903A6   1     LCTR      ctr=gr27
    0| 004334 rlwinm   54A6003E   1     RN4       gr6=gr5,0,0xFFFFFFFF
   31|                              CL.998:
    0| 004338 lfd      C8010080   1     LFL       fp0=<a18:d128:l8>(gr1,128)
   23| 00433C and      7C052038   1     N         gr5=gr0,gr4
   23| 004340 rldicr   78A51F24   1     SLL8      gr5=gr5,3
   23| 004344 addi     38E40001   1     AI        gr7=gr4,1
   24| 004348 or       7FE4FB78   1     LR        gr4=gr31
   23| 00434C rlwinm   54E8003E   1     RN4       gr8=gr7,0,0xFFFFFFFF
   23| 004350 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
    0| 004354 ori      60210000   1     XNOP      
    0| 004358 ori      60210000   1     XNOP      
    0| 00435C ori      60210000   1     XNOP      
   22|                              CL.999:
   23| 004360 rldicl   78850020   1     RN8       gr5=gr4,0,0xFFFFFFFF
   24| 004364 addi     38840001   1     AI        gr4=gr4,1
   23| 004368 add      7CA54214   1     A         gr5=gr5,gr8
   24| 00436C cmpld    7C243040   1     CL8       cr0=gr4,gr6
   23| 004370 and      7C052838   1     N         gr5=gr0,gr5
   23| 004374 rldicr   78A51F24   1     SLL8      gr5=gr5,3
   23| 004378 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
   24| 00437C bc       4180FFE4   1     BT        CL.999,cr0,0x8/llt,taken=80%(80,20)
   24| 004380 add      7C863A14   1     A         gr4=gr6,gr7
   24| 004384 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   30| 004388 bc       4200FFB0   1     BCT       ctr=CL.998,taken=100%(100,0)
    0| 00438C b        4BFFFEB0   1     B         CL.3513,-1
   30|                              CL.1052:
    0| 004390 rlwinm   56A5F87E   1     RN4       gr5=gr21,31,0x7FFFFFFF
    0| 004394 rldicl   7B6607E1   1     RN8_R     gr6,cr0=gr27,0,0x1
    0| 004398 cmpdi    2CA50000   1     C8        cr1=gr5,0
    0| 00439C mtspr    7CA903A6   1     LCTR      ctr=gr5
    0| 0043A0 bc       41820028   1     BT        CL.3676,cr0,0x4/eq,taken=50%(0,0)
    0| 0043A4 lfd      C8010080   1     LFL       fp0=<a18:d128:l8>(gr1,128)
   23| 0043A8 and      7C052038   1     N         gr5=gr0,gr4
   23| 0043AC rldicr   78A51F24   1     SLL8      gr5=gr5,3
   23| 0043B0 addi     38E40001   1     AI        gr7=gr4,1
   23| 0043B4 rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   23| 0043B8 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
    0| 0043BC bc       4186FF64   1     BT        CL.3674,cr1,0x4/eq,taken=20%(20,80)
    0| 0043C0 ori      60210000   1     XNOP      
    0| 0043C4 ori      60210000   1     XNOP      
    0|                              CL.3676:
   31|                              CL.1054:
    0| 0043C8 lfd      C8010080   1     LFL       fp0=<a18:d128:l8>(gr1,128)
   23| 0043CC and      7C052038   1     N         gr5=gr0,gr4
   23| 0043D0 rldicr   78A51F24   1     SLL8      gr5=gr5,3
   23| 0043D4 addi     38C40001   1     AI        gr6=gr4,1
   23| 0043D8 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   23| 0043DC addi     38C60001   1     AI        gr6=gr6,1
   23| 0043E0 and      7C072038   1     N         gr7=gr0,gr4
   23| 0043E4 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
    0| 0043E8 lfd      C8010080   1     LFL       fp0=<a18:d128:l8>(gr1,128)
   23| 0043EC rldicr   78E51F24   1     SLL8      gr5=gr7,3
   23| 0043F0 addi     38E40001   1     AI        gr7=gr4,1
   23| 0043F4 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   23| 0043F8 stfdx    7C032DAE   1     STFL      (double).rns89.(gr3,gr5,0)=fp0
   30| 0043FC bc       4200FFCC   1     BCT       ctr=CL.1054,taken=100%(100,0)
   30| 004400 b        4BFFFF20   1     B         CL.3674,-1
    0|                              CL.5066:
   24| 004404 addi     38000001   1     LI        gr0=1
   24| 004408 addi     38800000   1     LI        gr4=0
   24| 00440C stb      980100C3   1     ST1Z      <a18:d195:l1>(gr1,195)=gr0
   24| 004410 addi     38A00081   1     LI        gr5=129
   24| 004414 addi     38C00010   1     LI        gr6=16
   24| 004418 addi     38E00400   1     LI        gr7=1024
   24| 00441C bl       48000001   1     CALL      gr3=_ZN9RCqsmodelC1Ebjjj,5,(char).rns145.",gr3-gr7,#ProcAlias",_ZN9RCqsmodelC1Ebjjj",fcr",#MX_TEMP18",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   24| 004420 ori      60000000   1
   24| 004424 stb      9BE100C3   1     ST1Z      <a18:d195:l1>(gr1,195)=gr31
    0| 004428 ld       EB4100A8   1     L8        gr26=__309(gr1,168)
    0| 00442C b        4BFFF79C   1     B         CL.917,-1
     |               Tag Table
     | 004430        00000000 00092A41 800C0500 00000000 00000900 00000001
     | 004448        000000C0 002A5F5A 31326465 636F6D70 72657373 33644964
     | 004460        4C6A3634 45457650 39524364 65636F64 65725054 5F6A6A6A
     |               Instruction count          576
     |               Straight-line exec time    580
 GPR's set/used:   ssus ssss ssss s---  ---s ssss ssss ssss
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ----
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     decompress3d<float,8>(RCdecoder *, float *, unsigned int, unsigned int, unsigned int)
     | 000000                           AKA       _Z12decompress3dIfLj8EEvP9RCdecoderPT_jjj
   14|                                  PROC      rd,data,nx,ny,nz,gr3-gr7
    0| 004480 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 004484 std      FBC1FFF0   1     ST8       #stack(gr1,-16)=gr30
    0| 004488 std      FBA1FFE8   1     ST8       #stack(gr1,-24)=gr29
    0| 00448C std      FB81FFE0   1     ST8       #stack(gr1,-32)=gr28
    0| 004490 std      FB61FFD8   1     ST8       #stack(gr1,-40)=gr27
    0| 004494 std      FB41FFD0   1     ST8       #stack(gr1,-48)=gr26
    0| 004498 std      FB21FFC8   1     ST8       #stack(gr1,-56)=gr25
    0| 00449C std      FB01FFC0   1     ST8       #stack(gr1,-64)=gr24
    0| 0044A0 std      FAE1FFB8   1     ST8       #stack(gr1,-72)=gr23
    0| 0044A4 std      FAC1FFB0   1     ST8       #stack(gr1,-80)=gr22
    0| 0044A8 std      FAA1FFA8   1     ST8       #stack(gr1,-88)=gr21
    0| 0044AC std      FA81FFA0   1     ST8       #stack(gr1,-96)=gr20
    0| 0044B0 std      FA61FF98   1     ST8       #stack(gr1,-104)=gr19
    0| 0044B4 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 0044B8 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 0044BC stdu     F821FE61   1     ST8U      gr1,#stack(gr1,-416)=gr1
    0| 0044C0 or       7C751B78   1     LR        gr21=gr3
   24| 0044C4 addi     38600048   1     LI        gr3=72
   53| 0044C8 std      F8410028   1     ST8       #cur_toc(gr1,40)=gr2
    0| 0044CC ld       E9020000   1     L8        gr8=.$STATIC(gr2,0)
    0| 0044D0 addi     3BE00000   1     LI        gr31=0
    0| 0044D4 or       7CB62B78   1     LR        gr22=gr5
    0| 0044D8 stw      93E100C0   1     ST4Z      <a19:d192:l4>(gr1,192)=gr31
    0| 0044DC std      FBE100D0   1     ST8       <a19:d208:l8>(gr1,208)=gr31
    0| 0044E0 or       7C9E2378   1     LR        gr30=gr4
    0| 0044E4 addi     38080180   1     AI        gr0=gr8,384
    0| 0044E8 stw      93E100D8   1     ST4Z      <a19:d216:l4>(gr1,216)=gr31
    0| 0044EC std      F80100C8   1     ST8       <a19:d200:l8>(gr1,200)=gr0
    0| 0044F0 or       7CB72B78   1     LR        gr23=gr5
    0| 0044F4 rlwinm   54BD003E   1     RN4       gr29=gr5,0,0xFFFFFFFF
    0| 0044F8 or       7CD93378   1     LR        gr25=gr6
    0| 0044FC rlwinm   54DC003E   1     RN4       gr28=gr6,0,0xFFFFFFFF
    0| 004500 or       7CF83B78   1     LR        gr24=gr7
    0| 004504 rlwinm   54FB003E   1     RN4       gr27=gr7,0,0xFFFFFFFF
   24| 004508 bl       48000001   1     CALL      gr3=_Znwm,1,gr3,#ProcAlias",_Znwm",fcr",#MX_TEMP19",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   24| 00450C ori      60000000   1
   24| 004510 or       7C7A1B79   1     LR_R      gr26,cr0=gr3
   24| 004514 std      F86100A0   1     ST8       __364(gr1,160)=gr3
   24| 004518 bc       4082089C   1     BF        CL.4650,cr0,0x4/eq,taken=40%(40,60)
   24|                              CL.1078:
   25| 00451C addi     38600018   1     LI        gr3=24
   25| 004520 bl       48000001   1     CALL      gr3=_Znwm,1,gr3,#ProcAlias",_Znwm",fcr",#MX_TEMP19",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   25| 004524 ori      60000000   1
   25| 004528 std      FB4100A8   1     ST8       rm(gr1,168)=gr26
   25| 00452C or       7C7A1B79   1     LR_R      gr26,cr0=gr3
   25| 004530 bc       41820010   1     BT        CL.1081,cr0,0x4/eq,taken=50%(0,0)
    6| 004534 std      FABA0008   1     ST8       (PCdecoder<float,PCmap<float,8,void>,0>).rd@8.rns174.(gr26,8)=gr21
    6| 004538 addi     380100A8   1     AI        gr0=gr1,168
    6| 00453C std      F81A0010   1     ST8       (PCdecoder<float,PCmap<float,8,void>,0>).rm@10.rns175.(gr26,16)=gr0
    6|                              CL.1081:
    9| 004540 addi     381D0001   1     AI        gr0=gr29,1
    9| 004544 addi     387C0001   1     AI        gr3=gr28,1
    9| 004548 addi     38800001   1     LI        gr4=1
    9| 00454C mulld    7C0019D2   1     M         gr0=gr0,gr3
    9| 004550 std      F8810080   1     ST8       f.|zero@0#602|dx@4#603_19(gr1,128)=gr4
    9| 004554 stw      9001008C   1     ST4Z      <a19:d140:l4>(gr1,140)=gr0
    9| 004558 addi     38760001   1     AI        gr3=gr22,1
   45| 00455C add      7C80EA14   1     A         gr4=gr0,gr29
    9| 004560 stw      90610088   1     ST4Z      <a19:d136:l4>(gr1,136)=gr3
   45| 004564 addi     38640002   1     AI        gr3=gr4,2
   45| 004568 addi     38840001   1     AI        gr4=gr4,1
   45| 00456C and      7C602038   1     N         gr0=gr3,gr4
   45| 004570 rlwinm   5483003E   1     RN4       gr3=gr4,0,0xFFFFFFFF
   45| 004574 cmpwi    2C000000   1     C4        cr0=gr0,0
    0| 004578 addi     38030001   1     AI        gr0=gr3,1
   45| 00457C bc       41820024   1     BT        CL.1085,cr0,0x4/eq,taken=20%(20,80)
    0| 004580 ori      60210000   1     XNOP      
    0| 004584 ori      60210000   1     XNOP      
    0| 004588 ori      60210000   1     XNOP      
   45|                              CL.1083:
    9| 00458C or       7C001B78   1     O         gr0=gr0,gr3
    9| 004590 rldicl   78030020   1     RN8       gr3=gr0,0,0xFFFFFFFF
   45| 004594 addi     38030001   1     AI        gr0=gr3,1
   45| 004598 and      7C640039   1     N_R       gr4,cr0=gr3,gr0
   45| 00459C bc       4082FFF0   1     BF        CL.1083,cr0,0x4/eq,taken=80%(80,20)
   45|                              CL.1085:
   47| 0045A0 stw      90610090   1     ST4Z      <a19:d144:l4>(gr1,144)=gr3
   10| 0045A4 stw      93E10094   1     ST4Z      <a19:d148:l4>(gr1,148)=gr31
   10| 0045A8 rldic    78031788   1     RN8       gr3=gr0,2,0x3FFFFFFFC
   10| 0045AC bl       48000001   1     CALL      gr3=_Znam,1,gr3,#ProcAlias",_Znam",fcr",#MX_TEMP19",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   10| 0045B0 ori      60000000   1
   10| 0045B4 addi     38000002   1     LI        gr0=2
   24| 0045B8 lwz      80A1008C   1     L4Z       gr5=<a19:d140:l4>(gr1,140)
   10| 0045BC stb      980100C3   1     ST1Z      <a19:d195:l1>(gr1,195)=gr0
   23| 0045C0 lfs      C0010080   1     LFS       fp0=<a19:d128:l4>(gr1,128)
   10| 0045C4 std      F8610098   1     ST8       <a19:d152:l8>(gr1,152)=gr3
   23| 0045C8 lwz      80010090   1     L4Z       gr0=<a19:d144:l4>(gr1,144)
   23| 0045CC lwz      80C10094   1     L4Z       gr6=<a19:d148:l4>(gr1,148)
   24| 0045D0 cmplwi   28050001   1     CL4       cr0=gr5,1
   24| 0045D4 addi     3905FFFF   1     AI        gr8=gr5,-1
   23| 0045D8 and      7C043038   1     N         gr4=gr0,gr6
   23| 0045DC rldicr   78841764   1     SLL8      gr4=gr4,2
   23| 0045E0 addi     38E60001   1     AI        gr7=gr6,1
   23| 0045E4 stfsx    7C03252E   1     STFS      (float).rns162.(gr3,gr4,0)=fp0
   23| 0045E8 stw      90E10094   1     ST4Z      <a19:d148:l4>(gr1,148)=gr7
   23| 0045EC rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   24| 0045F0 bc       4182003C   1     BT        CL.1119,cr0,0x4/eq,taken=20%(20,80)
   24| 0045F4 addi     38E00000   1     LI        gr7=0
    0| 0045F8 rlwinm   5509003E   1     RN4       gr9=gr8,0,0xFFFFFFFF
    0| 0045FC ori      60210000   1     XNOP      
   22|                              CL.1089:
   23| 004600 rldicl   78E80020   1     RN8       gr8=gr7,0,0xFFFFFFFF
   24| 004604 addi     38E70001   1     AI        gr7=gr7,1
   23| 004608 add      7D044214   1     A         gr8=gr4,gr8
   24| 00460C cmpld    7C274840   1     CL8       cr0=gr7,gr9
   23| 004610 and      7C084038   1     N         gr8=gr0,gr8
   23| 004614 rldicr   79081764   1     SLL8      gr8=gr8,2
   23| 004618 stfsx    7C03452E   1     STFS      (float).rns162.(gr3,gr8,0)=fp0
   24| 00461C bc       4180FFE4   1     BT        CL.1089,cr0,0x8/llt,taken=80%(80,20)
   24| 004620 add      7C853214   1     A         gr4=gr5,gr6
   24| 004624 stw      90810094   1     ST4Z      <a19:d148:l4>(gr1,148)=gr4
   24| 004628 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   24|                              CL.1119:
   31| 00462C cmpdi    2C3B0000   1     C8        cr0=gr27,0
   31| 004630 bc       41820250   1     BT        CL.1088,cr0,0x4/eq,taken=50%(0,0)
   31| 004634 cmpdi    2C3C0000   1     C8        cr0=gr28,0
    0| 004638 cmpdi    2CBD0000   1     C8        cr1=gr29,0
   31| 00463C bc       418205B8   1     BT        CL.1151,cr0,0x4/eq,taken=50%(0,0)
   31| 004640 bc       418602D4   1     BT        CL.1139,cr1,0x4/eq,taken=50%(0,0)
    0| 004644 addi     38A0FFFF   1     LI        gr5=-1
   31| 004648 addi     3B200000   1     LI        gr25=0
    0| 00464C rldicl   78B80020   1     RN8       gr24=gr5,0,0xFFFFFFFF
    0| 004650 rldic    7AF71788   1     RN8       gr23=gr23,2,0x3FFFFFFFC
   31|                              CL.1086:
   24| 004654 lwz      80A10088   1     L4Z       gr5=<a19:d136:l4>(gr1,136)
    0| 004658 lfs      C0010080   1     LFS       fp0=<a19:d128:l4>(gr1,128)
   23| 00465C and      7C062038   1     N         gr6=gr0,gr4
   23| 004660 rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 004664 addi     38E40001   1     AI        gr7=gr4,1
   23| 004668 or       7C882378   1     LR        gr8=gr4
   24| 00466C cmplwi   28050001   1     CL4       cr0=gr5,1
   24| 004670 addi     3925FFFF   1     AI        gr9=gr5,-1
   23| 004674 rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   23| 004678 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
   24| 00467C bc       4182003C   1     BT        CL.1120,cr0,0x4/eq,taken=20%(20,80)
   24| 004680 or       7FE6FB78   1     LR        gr6=gr31
    0| 004684 rlwinm   5529003E   1     RN4       gr9=gr9,0,0xFFFFFFFF
    0| 004688 ori      60210000   1     XNOP      
    0| 00468C ori      60210000   1     XNOP      
   22|                              CL.1095:
   23| 004690 rldicl   78C70020   1     RN8       gr7=gr6,0,0xFFFFFFFF
   24| 004694 addi     38C60001   1     AI        gr6=gr6,1
   23| 004698 add      7CE43A14   1     A         gr7=gr4,gr7
   24| 00469C cmpld    7C264840   1     CL8       cr0=gr6,gr9
   23| 0046A0 and      7C073838   1     N         gr7=gr0,gr7
   23| 0046A4 rldicr   78E71764   1     SLL8      gr7=gr7,2
   23| 0046A8 stfsx    7C033D2E   1     STFS      (float).rns94.(gr3,gr7,0)=fp0
   24| 0046AC bc       4180FFE4   1     BT        CL.1095,cr0,0x8/llt,taken=80%(80,20)
   24| 0046B0 add      7C854214   1     A         gr4=gr5,gr8
   24| 0046B4 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   24|                              CL.1120:
   31| 0046B8 or       7FF6FB78   1     LR        gr22=gr31
    0| 0046BC addi     3ABEFFFC   1     AI        gr21=gr30,-4
   31|                              CL.1092:
   24| 0046C0 lwz      80A10084   1     L4Z       gr5=<a19:d132:l4>(gr1,132)
   30| 0046C4 lfs      C0010080   1     LFS       fp0=<a19:d128:l4>(gr1,128)
   23| 0046C8 and      7C062038   1     N         gr6=gr0,gr4
   23| 0046CC rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 0046D0 addi     38E40001   1     AI        gr7=gr4,1
   23| 0046D4 or       7C882378   1     LR        gr8=gr4
   24| 0046D8 addi     3925FFFF   1     AI        gr9=gr5,-1
   23| 0046DC stw      90E10094   1     ST4Z      <a19:d148:l4>(gr1,148)=gr7
   24| 0046E0 cmplwi   28050001   1     CL4       cr0=gr5,1
   23| 0046E4 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
   23| 0046E8 rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   24| 0046EC bc       41820040   1     BT        CL.1121,cr0,0x4/eq,taken=20%(20,80)
   24| 0046F0 or       7FE6FB78   1     LR        gr6=gr31
    0| 0046F4 rlwinm   5529003E   1     RN4       gr9=gr9,0,0xFFFFFFFF
    0| 0046F8 ori      60210000   1     XNOP      
    0| 0046FC ori      60210000   1     XNOP      
   22|                              CL.1101:
   23| 004700 rldicl   78C70020   1     RN8       gr7=gr6,0,0xFFFFFFFF
   24| 004704 addi     38C60001   1     AI        gr6=gr6,1
   23| 004708 add      7CE43A14   1     A         gr7=gr4,gr7
   24| 00470C cmpld    7C264840   1     CL8       cr0=gr6,gr9
   23| 004710 and      7C073838   1     N         gr7=gr0,gr7
   23| 004714 rldicr   78E71764   1     SLL8      gr7=gr7,2
   23| 004718 stfsx    7C033D2E   1     STFS      (float).rns94.(gr3,gr7,0)=fp0
   24| 00471C bc       4180FFE4   1     BT        CL.1101,cr0,0x8/llt,taken=80%(80,20)
   24| 004720 add      7C854214   1     A         gr4=gr5,gr8
   24| 004724 stw      90810094   1     ST4Z      <a19:d148:l4>(gr1,148)=gr4
   24| 004728 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   24|                              CL.1121:
   31| 00472C or       7FF4FB78   1     LR        gr20=gr31
   48| 004730 or       7EB3AB78   1     LR        gr19=gr21
    0| 004734 ori      60210000   1     XNOP      
    0| 004738 ori      60210000   1     XNOP      
    0| 00473C ori      60210000   1     XNOP      
   31|                              CL.1098:
    8| 004740 lwz      81010088   1     L4Z       gr8=<a19:d136:l4>(gr1,136)
    0| 004744 lwz      80C10084   1     L4Z       gr6=<a19:d132:l4>(gr1,132)
    8| 004748 lwz      8121008C   1     L4Z       gr9=<a19:d140:l4>(gr1,140)
   23| 00474C ld       E8BA0010   1     L8        gr5=(PCdecoder<float,PCmap<float,8,void>,0>).rm@10.rns260.$$134(gr26,16)
    8| 004750 subf     7D482050   1     S         gr10=gr4,gr8
    8| 004754 subf     7D662050   1     S         gr11=gr4,gr6
    8| 004758 subf     7CE95050   1     S         gr7=gr10,gr9
    8| 00475C and      7C065838   1     N         gr6=gr0,gr11
    8| 004760 and      7C073838   1     N         gr7=gr0,gr7
    8| 004764 rldicr   78C61764   1     SLL8      gr6=gr6,2
    8| 004768 rldicr   78E71764   1     SLL8      gr7=gr7,2
    8| 00476C lfsx     7C23342E   1     LFS       fp1=(float).rns94.(gr3,gr6,0)
    8| 004770 lfsx     7C433C2E   1     LFS       fp2=(float).rns94.(gr3,gr7,0)
    8| 004774 and      7C065038   1     N         gr6=gr0,gr10
    8| 004778 rldicr   78C61764   1     SLL8      gr6=gr6,2
    8| 00477C subf     7CE95850   1     S         gr7=gr11,gr9
    8| 004780 lfsx     7C03342E   1     LFS       fp0=(float).rns94.(gr3,gr6,0)
    8| 004784 and      7C063838   1     N         gr6=gr0,gr7
    8| 004788 rldicr   78C61764   1     SLL8      gr6=gr6,2
    8| 00478C fsubs    EC211028   1     SFS       fp1=fp1,fp2,fcr
    8| 004790 subf     7C892050   1     S         gr4=gr4,gr9
    8| 004794 lfsx     7C43342E   1     LFS       fp2=(float).rns94.(gr3,gr6,0)
    8| 004798 and      7C042038   1     N         gr4=gr0,gr4
    8| 00479C rldicr   78841764   1     SLL8      gr4=gr4,2
    8| 0047A0 subf     7CC85850   1     S         gr6=gr11,gr8
    8| 0047A4 fadds    EC21002A   1     AFS       fp1=fp1,fp0,fcr
    8| 0047A8 lfsx     7C03242E   1     LFS       fp0=(float).rns94.(gr3,gr4,0)
    8| 0047AC and      7C043038   1     N         gr4=gr0,gr6
    8| 0047B0 rldicr   78841764   1     SLL8      gr4=gr4,2
    8| 0047B4 subf     7CC93050   1     S         gr6=gr6,gr9
    8| 0047B8 lfsx     7C63242E   1     LFS       fp3=(float).rns94.(gr3,gr4,0)
    8| 0047BC fsubs    EC211028   1     SFS       fp1=fp1,fp2,fcr
    8| 0047C0 and      7C003038   1     N         gr0=gr0,gr6
    8| 0047C4 rldicr   78061764   1     SLL8      gr6=gr0,2
   23| 0047C8 ld       E8850000   1     L8        gr4=(RCmodel *).rns225.(gr5,0)
    8| 0047CC lfsx     7C43342E   1     LFS       fp2=(float).rns94.(gr3,gr6,0)
   23| 0047D0 ld       E87A0008   1     L8        gr3=(PCdecoder<float,PCmap<float,8,void>,0>).rd@8.rns261.$$134(gr26,8)
    8| 0047D4 fadds    EC01002A   1     AFS       fp0=fp1,fp0,fcr
    8| 0047D8 fsubs    EC001828   1     SFS       fp0=fp0,fp3,fcr
    8| 0047DC fadds    EC00102A   1     AFS       fp0=fp0,fp2,fcr
    8| 0047E0 stfs     D00100E0   1     STFS      shared(gr1,224)=fp0
   23| 0047E4 bl       48000001   1     CALL      gr3=_ZN9RCdecoder6decodeEP7RCmodel,2,(char).rns108.",gr3,(char).rns108.",gr4,#ProcAlias",_ZN9RCdecoder6decodeEP7RCmodel",fcr",#MX_TEMP19",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   23| 0047E8 ori      60000000   1
   23| 0047EC lwz      80810094   1     L4Z       gr4=<a19:d148:l4>(gr1,148)
   23| 0047F0 lwz      80010090   1     L4Z       gr0=<a19:d144:l4>(gr1,144)
   32| 0047F4 addi     3A940001   1     AI        gr20=gr20,1
   32| 0047F8 cmpld    7C34E840   1     CL8       cr0=gr20,gr29
   23| 0047FC addi     38E40001   1     AI        gr7=gr4,1
   24| 004800 lwz      80C100E0   1     L4Z       gr6=shared(gr1,224)
   23| 004804 stw      90E10094   1     ST4Z      <a19:d148:l4>(gr1,148)=gr7
   23| 004808 and      7C042038   1     N         gr4=gr0,gr4
   23| 00480C rldicr   78851764   1     SLL8      gr5=gr4,2
   23| 004810 rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   24| 004814 nor      7CC630F8   1     NOR       gr6=gr6,gr6
   24| 004818 rlwinm   54C70FFE   1     SRL4      gr7=gr6,31
   24| 00481C rlwinm   54C6463E   1     SRL4      gr6=gr6,24
   24| 004820 mulld    7CE7C1D2   1     M         gr7=gr7,gr24
   24| 004824 rlwinm   54E73E7E   1     SRL4      gr7=gr7,25
   24| 004828 xor      7CC63A78   1     X         gr6=gr6,gr7
   24| 00482C add      7CC33214   1     A         gr6=gr3,gr6
   23| 004830 ld       E8610098   1     L8        gr3=<a19:d152:l8>(gr1,152)
   24| 004834 addi     38E6FF01   1     AI        gr7=gr6,-255
   24| 004838 rlwinm   54E6C9FE   1     SRL4      gr6=gr7,7
   24| 00483C mulld    7CC6C1D2   1     M         gr6=gr6,gr24
   24| 004840 rlwinm   54C63E7E   1     SRL4      gr6=gr6,25
   24| 004844 eqv      7CC63A38   1     EQV       gr6=gr6,gr7
   24| 004848 rlwinm   54C6C00E   1     SLL4      gr6=gr6,24
   24| 00484C stw      90C10100   1     ST4Z      shared(gr1,256)=gr6
   48| 004850 lfs      C0010100   1     LFS       fp0=shared(gr1,256)
   48| 004854 stfsu    D4130004   1     STFSU     gr19,(float).rns94.(gr19,4)=fp0
   23| 004858 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
   32| 00485C bc       4180FEE4   1     BT        CL.1098,cr0,0x8/llt,taken=80%(80,20)
   31| 004860 addi     3AD60001   1     AI        gr22=gr22,1
   32| 004864 add      7FDEBA14   1     A         gr30=gr30,gr23
   31| 004868 cmpld    7C36E040   1     CL8       cr0=gr22,gr28
    0| 00486C add      7EB5BA14   1     A         gr21=gr21,gr23
   31| 004870 bc       4180FE50   1     BT        CL.1092,cr0,0x8/llt,taken=80%(80,20)
   30| 004874 addi     3B390001   1     AI        gr25=gr25,1
   30| 004878 cmpld    7C39D840   1     CL8       cr0=gr25,gr27
   30| 00487C bc       4180FDD8   1     BT        CL.1086,cr0,0x8/llt,taken=80%(80,20)
   30|                              CL.1088:
   52| 004880 cmpdi    2C3A0000   1     C8        cr0=gr26,0
   52| 004884 bc       40820080   1     BF        CL.4651,cr0,0x4/eq,taken=40%(40,60)
    7|                              CL.1108:
   53| 004888 ld       E86100A8   1     L8        gr3=rm(gr1,168)
   53| 00488C cmpdi    2C230000   1     C8        cr0=gr3,0
   53| 004890 bc       41820024   1     BT        CL.1111,cr0,0x4/eq,taken=30%(30,70)
   53| 004894 ld       E8830000   1     L8        gr4=(RCmodel)[]@0.rns112.(gr3,0)
   53| 004898 ld       E8840008   1     L8        gr4=((*)();__vftTypeGCCV3).rns19.(gr4,8)
   53| 00489C ld       E8040000   1     L8        gr0=#fnc_adr(gr4,0)
   53| 0048A0 ld       E9640010   1     L8        gr11=#new_env(gr4,16)
   53| 0048A4 mtspr    7C0903A6   1     LCTR      ctr=gr0
   53| 0048A8 ld       E8440008   1     CALL      gr3=gr4,1,(char).rns108.",gr3,#ProcAlias",fcr",#MX_TEMP19",(()vf).rns171.",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr",#fnc_adr,#cur_toc,ctr,gr11,#new_env,#(glue_dr_n,0,(()vf).rns171."
   53| 0048AC bcctrl   4E800421   1
   53| 0048B0 ld       E8410028   1
   53|                              CL.1111:
   11| 0048B4 ld       E8610098   1     L8        gr3=<a19:d152:l8>(gr1,152)
   11| 0048B8 bl       48000001   1     CALL      _ZdaPv,1,(char).rns108.",gr3,#ProcAlias",_ZdaPv",fcr",#MX_TEMP19",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   11| 0048BC ori      60000000   1
   54| 0048C0 ld       E98101B0   1     L8        gr12=#stack(gr1,432)
   54| 0048C4 addi     382101A0   1     AI        gr1=gr1,416
   54| 0048C8 ld       EA61FF98   1     L8        gr19=#stack(gr1,-104)
   54| 0048CC ld       EA81FFA0   1     L8        gr20=#stack(gr1,-96)
   54| 0048D0 ld       EAA1FFA8   1     L8        gr21=#stack(gr1,-88)
   54| 0048D4 mtspr    7D8803A6   1     LLR       lr=gr12
   54| 0048D8 ld       EAC1FFB0   1     L8        gr22=#stack(gr1,-80)
   54| 0048DC ld       EAE1FFB8   1     L8        gr23=#stack(gr1,-72)
   54| 0048E0 ld       EB01FFC0   1     L8        gr24=#stack(gr1,-64)
   54| 0048E4 ld       EB21FFC8   1     L8        gr25=#stack(gr1,-56)
   54| 0048E8 ld       EB41FFD0   1     L8        gr26=#stack(gr1,-48)
   54| 0048EC ld       EB61FFD8   1     L8        gr27=#stack(gr1,-40)
   54| 0048F0 ld       EB81FFE0   1     L8        gr28=#stack(gr1,-32)
   54| 0048F4 ld       EBA1FFE8   1     L8        gr29=#stack(gr1,-24)
   54| 0048F8 ld       EBC1FFF0   1     L8        gr30=#stack(gr1,-16)
   54| 0048FC ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
   54| 004900 bclr     4E800020   1     BA        lr
    0|                              CL.4651:
    7| 004904 or       7F43D378   1     LR        gr3=gr26
    7| 004908 bl       48000001   1     CALL      _ZdlPv,1,(char).rns169.",gr3,#ProcAlias",_ZdlPv",fcr",#MX_TEMP19",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    7| 00490C ori      60000000   1
    0| 004910 b        4BFFFF78   1     B         CL.1108,-1
   30|                              CL.1139:
   31| 004914 lwz      80A10088   1     L4Z       gr5=<a19:d136:l4>(gr1,136)
    0| 004918 lwz      80C10084   1     L4Z       gr6=<a19:d132:l4>(gr1,132)
   31| 00491C cmplwi   28050001   1     CL4       cr0=gr5,1
    0| 004920 cmplwi   28860001   1     CL4       cr1=gr6,1
   31| 004924 bc       418201B0   1     BT        CL.1190,cr0,0x4/eq,taken=50%(0,0)
   31| 004928 bc       418600C8   1     BT        CL.1180,cr1,0x4/eq,taken=50%(0,0)
    0| 00492C addi     38E5FFFF   1     AI        gr7=gr5,-1
    0| 004930 addi     38C6FFFF   1     AI        gr6=gr6,-1
   31| 004934 addi     38A00000   1     LI        gr5=0
    0| 004938 rlwinm   54E7003E   1     RN4       gr7=gr7,0,0xFFFFFFFF
    0| 00493C rlwinm   54C8003E   1     RN4       gr8=gr6,0,0xFFFFFFFF
   31|                              CL.1141:
    0| 004940 lfs      C0010080   1     LFS       fp0=<a19:d128:l4>(gr1,128)
   23| 004944 and      7C062038   1     N         gr6=gr0,gr4
   23| 004948 rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 00494C addi     39240001   1     AI        gr9=gr4,1
   24| 004950 or       7FE4FB78   1     LR        gr4=gr31
   23| 004954 rlwinm   552A003E   1     RN4       gr10=gr9,0,0xFFFFFFFF
   23| 004958 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
    0| 00495C ori      60210000   1     XNOP      
   22|                              CL.1142:
   23| 004960 rldicl   78860020   1     RN8       gr6=gr4,0,0xFFFFFFFF
   24| 004964 addi     38840001   1     AI        gr4=gr4,1
   23| 004968 add      7CC65214   1     A         gr6=gr6,gr10
   24| 00496C cmpld    7C243840   1     CL8       cr0=gr4,gr7
   23| 004970 and      7C063038   1     N         gr6=gr0,gr6
   23| 004974 rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 004978 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
   24| 00497C bc       4180FFE4   1     BT        CL.1142,cr0,0x8/llt,taken=80%(80,20)
   24| 004980 add      7C874A14   1     A         gr4=gr7,gr9
    0| 004984 mtspr    7F8903A6   1     LCTR      ctr=gr28
   24| 004988 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   31|                              CL.1144:
   30| 00498C lfs      C0010080   1     LFS       fp0=<a19:d128:l4>(gr1,128)
    0| 004990 and      7C062038   1     N         gr6=gr0,gr4
   23| 004994 rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 004998 addi     39240001   1     AI        gr9=gr4,1
   24| 00499C or       7FE4FB78   1     LR        gr4=gr31
   23| 0049A0 rlwinm   552A003E   1     RN4       gr10=gr9,0,0xFFFFFFFF
   23| 0049A4 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
    0| 0049A8 ori      60210000   1     XNOP      
    0| 0049AC ori      60210000   1     XNOP      
   22|                              CL.1145:
   23| 0049B0 rldicl   78860020   1     RN8       gr6=gr4,0,0xFFFFFFFF
   24| 0049B4 addi     38840001   1     AI        gr4=gr4,1
   23| 0049B8 add      7CC65214   1     A         gr6=gr6,gr10
   24| 0049BC cmpld    7C244040   1     CL8       cr0=gr4,gr8
   23| 0049C0 and      7C063038   1     N         gr6=gr0,gr6
   23| 0049C4 rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 0049C8 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
   24| 0049CC bc       4180FFE4   1     BT        CL.1145,cr0,0x8/llt,taken=80%(80,20)
   24| 0049D0 add      7CC84A14   1     A         gr6=gr8,gr9
   24| 0049D4 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   31| 0049D8 bc       4200FFB4   1     BCT       ctr=CL.1144,taken=100%(100,0)
   30| 0049DC addi     38A50001   1     AI        gr5=gr5,1
   30| 0049E0 cmpld    7C25D840   1     CL8       cr0=gr5,gr27
   30| 0049E4 bc       4180FF5C   1     BT        CL.1141,cr0,0x8/llt,taken=80%(80,20)
   24|                              CL.4658:
   24| 0049E8 stw      90C10094   1     ST4Z      <a19:d148:l4>(gr1,148)=gr6
   30| 0049EC b        4BFFFE94   1     B         CL.1088,-1
   30|                              CL.1180:
    0| 0049F0 addi     38E5FFFF   1     AI        gr7=gr5,-1
    0| 0049F4 rlwinm   5726F87E   1     RN4       gr6=gr25,31,0x7FFFFFFF
   31| 0049F8 addi     38A00000   1     LI        gr5=0
    0| 0049FC rlwinm   54E7003E   1     RN4       gr7=gr7,0,0xFFFFFFFF
    0| 004A00 rldicl   7B8807E1   1     RN8_R     gr8,cr0=gr28,0,0x1
    0| 004A04 cmpdi    2F260000   1     C8        cr6=gr6,0
   31|                              CL.1182:
    0| 004A08 lfs      C0010080   1     LFS       fp0=<a19:d128:l4>(gr1,128)
   23| 004A0C and      7C082038   1     N         gr8=gr0,gr4
   23| 004A10 rldicr   79081764   1     SLL8      gr8=gr8,2
   23| 004A14 addi     39440001   1     AI        gr10=gr4,1
   23| 004A18 or       7C892378   1     LR        gr9=gr4
   23| 004A1C rlwinm   554B003E   1     RN4       gr11=gr10,0,0xFFFFFFFF
   24| 004A20 or       7FE4FB78   1     LR        gr4=gr31
   23| 004A24 stfsx    7C03452E   1     STFS      (float).rns94.(gr3,gr8,0)=fp0
    0| 004A28 ori      60210000   1     XNOP      
    0| 004A2C ori      60210000   1     XNOP      
   22|                              CL.1183:
   23| 004A30 rldicl   78880020   1     RN8       gr8=gr4,0,0xFFFFFFFF
   24| 004A34 addi     38840001   1     AI        gr4=gr4,1
   23| 004A38 add      7D085A14   1     A         gr8=gr8,gr11
   24| 004A3C cmpld    7CA43840   1     CL8       cr1=gr4,gr7
   23| 004A40 and      7C084038   1     N         gr8=gr0,gr8
   23| 004A44 rldicr   79081764   1     SLL8      gr8=gr8,2
   23| 004A48 stfsx    7C03452E   1     STFS      (float).rns94.(gr3,gr8,0)=fp0
   24| 004A4C bc       4184FFE4   1     BT        CL.1183,cr1,0x8/llt,taken=80%(80,20)
   24| 004A50 add      7C875214   1     A         gr4=gr7,gr10
    0| 004A54 mtspr    7CC903A6   1     LCTR      ctr=gr6
   24| 004A58 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
    0| 004A5C bc       4182002C   1     BT        CL.2500,cr0,0x4/eq,taken=50%(0,0)
   23| 004A60 lfs      C0010080   1     LFS       fp0=<a19:d128:l4>(gr1,128)
   23| 004A64 addi     39290002   1     AI        gr9=gr9,2
   23| 004A68 and      7C082038   1     N         gr8=gr0,gr4
   23| 004A6C rldicr   79081764   1     SLL8      gr8=gr8,2
   23| 004A70 add      7D274A14   1     A         gr9=gr7,gr9
   23| 004A74 addi     39440001   1     AI        gr10=gr4,1
   23| 004A78 rlwinm   5524003E   1     RN4       gr4=gr9,0,0xFFFFFFFF
   23| 004A7C stfsx    7C03452E   1     STFS      (float).rns94.(gr3,gr8,0)=fp0
    0| 004A80 bc       419A0040   1     BT        CL.2501,cr6,0x4/eq,taken=20%(20,80)
    0| 004A84 ori      60210000   1     XNOP      
    0|                              CL.2500:
   31|                              CL.1185:
   23| 004A88 lfs      C0010080   1     LFS       fp0=<a19:d128:l4>(gr1,128)
   23| 004A8C and      7C082038   1     N         gr8=gr0,gr4
   23| 004A90 rldicr   79081764   1     SLL8      gr8=gr8,2
   23| 004A94 addi     39240001   1     AI        gr9=gr4,1
   23| 004A98 rlwinm   5524003E   1     RN4       gr4=gr9,0,0xFFFFFFFF
   23| 004A9C addi     39290001   1     AI        gr9=gr9,1
   23| 004AA0 and      7C0A2038   1     N         gr10=gr0,gr4
   23| 004AA4 stfsx    7C03452E   1     STFS      (float).rns94.(gr3,gr8,0)=fp0
   23| 004AA8 lfs      C0010080   1     LFS       fp0=<a19:d128:l4>(gr1,128)
   23| 004AAC rldicr   79481764   1     SLL8      gr8=gr10,2
   23| 004AB0 addi     39440001   1     AI        gr10=gr4,1
   23| 004AB4 rlwinm   5524003E   1     RN4       gr4=gr9,0,0xFFFFFFFF
   23| 004AB8 stfsx    7C03452E   1     STFS      (float).rns94.(gr3,gr8,0)=fp0
   31| 004ABC bc       4200FFCC   1     BCT       ctr=CL.1185,taken=100%(100,0)
    0|                              CL.2501:
   30| 004AC0 addi     38A50001   1     AI        gr5=gr5,1
   30| 004AC4 cmpld    7CA5D840   1     CL8       cr1=gr5,gr27
   30| 004AC8 bc       4184FF40   1     BT        CL.1182,cr1,0x8/llt,taken=80%(80,20)
   31| 004ACC stw      91410094   1     ST4Z      <a19:d148:l4>(gr1,148)=gr10
   30| 004AD0 b        4BFFFDB0   1     B         CL.1088,-1
   30|                              CL.1190:
   31| 004AD4 bc       41860088   1     BT        CL.1200,cr1,0x4/eq,taken=50%(0,0)
    0| 004AD8 addi     38C6FFFF   1     AI        gr6=gr6,-1
   31| 004ADC addi     38A00000   1     LI        gr5=0
    0| 004AE0 rlwinm   54C7003E   1     RN4       gr7=gr6,0,0xFFFFFFFF
   31|                              CL.1192:
    0| 004AE4 lfs      C0010080   1     LFS       fp0=<a19:d128:l4>(gr1,128)
   23| 004AE8 and      7C062038   1     N         gr6=gr0,gr4
   23| 004AEC rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 004AF0 addi     38840001   1     AI        gr4=gr4,1
    0| 004AF4 mtspr    7F8903A6   1     LCTR      ctr=gr28
   23| 004AF8 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   23| 004AFC stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
   31|                              CL.1195:
   30| 004B00 lfs      C0010080   1     LFS       fp0=<a19:d128:l4>(gr1,128)
   23| 004B04 and      7C062038   1     N         gr6=gr0,gr4
   23| 004B08 rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 004B0C addi     39040001   1     AI        gr8=gr4,1
   24| 004B10 or       7FE4FB78   1     LR        gr4=gr31
   23| 004B14 rlwinm   5509003E   1     RN4       gr9=gr8,0,0xFFFFFFFF
   23| 004B18 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
    0| 004B1C ori      60210000   1     XNOP      
   22|                              CL.1196:
   23| 004B20 rldicl   78860020   1     RN8       gr6=gr4,0,0xFFFFFFFF
   24| 004B24 addi     38840001   1     AI        gr4=gr4,1
   23| 004B28 add      7CC64A14   1     A         gr6=gr6,gr9
   24| 004B2C cmpld    7C243840   1     CL8       cr0=gr4,gr7
   23| 004B30 and      7C063038   1     N         gr6=gr0,gr6
   23| 004B34 rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 004B38 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
   24| 004B3C bc       4180FFE4   1     BT        CL.1196,cr0,0x8/llt,taken=80%(80,20)
   24| 004B40 add      7CC74214   1     A         gr6=gr7,gr8
   24| 004B44 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   31| 004B48 bc       4200FFB8   1     BCT       ctr=CL.1195,taken=100%(100,0)
   30| 004B4C addi     38A50001   1     AI        gr5=gr5,1
   30| 004B50 cmpld    7C25D840   1     CL8       cr0=gr5,gr27
   30| 004B54 bc       4180FF90   1     BT        CL.1192,cr0,0x8/llt,taken=80%(80,20)
   24| 004B58 b        4BFFFE90   1     B         CL.4658,-1
   30|                              CL.1200:
    0| 004B5C rlwinm   5725F87E   1     RN4       gr5=gr25,31,0x7FFFFFFF
    0| 004B60 rldicl   7B8607E1   1     RN8_R     gr6,cr0=gr28,0,0x1
    0| 004B64 cmpdi    2CA50000   1     C8        cr1=gr5,0
   31|                              CL.1201:
    0| 004B68 lfs      C0010080   1     LFS       fp0=<a19:d128:l4>(gr1,128)
   23| 004B6C and      7C062038   1     N         gr6=gr0,gr4
   23| 004B70 rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 004B74 addi     39040001   1     AI        gr8=gr4,1
   23| 004B78 or       7C872378   1     LR        gr7=gr4
   23| 004B7C rlwinm   5504003E   1     RN4       gr4=gr8,0,0xFFFFFFFF
    0| 004B80 mtspr    7CA903A6   1     LCTR      ctr=gr5
   23| 004B84 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
    0| 004B88 bc       41820024   1     BT        CL.2503,cr0,0x4/eq,taken=50%(0,0)
   23| 004B8C lfs      C0010080   1     LFS       fp0=<a19:d128:l4>(gr1,128)
   23| 004B90 and      7C840038   1     N         gr4=gr4,gr0
   23| 004B94 rldicr   78861764   1     SLL8      gr6=gr4,2
   23| 004B98 addi     38870002   1     AI        gr4=gr7,2
   23| 004B9C rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   23| 004BA0 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
    0| 004BA4 bc       4186003C   1     BT        CL.2504,cr1,0x4/eq,taken=20%(20,80)
    0| 004BA8 ori      60210000   1     XNOP      
    0|                              CL.2503:
   31|                              CL.1204:
   23| 004BAC lfs      C0010080   1     LFS       fp0=<a19:d128:l4>(gr1,128)
   23| 004BB0 and      7C062038   1     N         gr6=gr0,gr4
   23| 004BB4 rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 004BB8 addi     38840001   1     AI        gr4=gr4,1
   23| 004BBC rlwinm   5487003E   1     RN4       gr7=gr4,0,0xFFFFFFFF
   23| 004BC0 addi     38840001   1     AI        gr4=gr4,1
   23| 004BC4 and      7C073838   1     N         gr7=gr0,gr7
   23| 004BC8 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
   23| 004BCC lfs      C0010080   1     LFS       fp0=<a19:d128:l4>(gr1,128)
   23| 004BD0 rldicr   78E61764   1     SLL8      gr6=gr7,2
   23| 004BD4 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   23| 004BD8 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
   31| 004BDC bc       4200FFD0   1     BCT       ctr=CL.1204,taken=100%(100,0)
    0|                              CL.2504:
   30| 004BE0 addi     3BFF0001   1     AI        gr31=gr31,1
   30| 004BE4 cmpld    7F3FD840   1     CL8       cr6=gr31,gr27
   30| 004BE8 bc       4198FF80   1     BT        CL.1201,cr6,0x8/llt,taken=80%(80,20)
   30|                              CL.2346:
   30| 004BEC stw      90810094   1     ST4Z      <a19:d148:l4>(gr1,148)=gr4
   30| 004BF0 b        4BFFFC90   1     B         CL.1088,-1
   30|                              CL.1151:
    0| 004BF4 lwz      80A10088   1     L4Z       gr5=<a19:d136:l4>(gr1,136)
    0| 004BF8 cmplwi   28050001   1     CL4       cr0=gr5,1
   31| 004BFC bc       418600DC   1     BT        CL.1163,cr1,0x4/eq,taken=50%(0,0)
   31| 004C00 bc       41820060   1     BT        CL.1211,cr0,0x4/eq,taken=50%(0,0)
    0| 004C04 addi     38A5FFFF   1     AI        gr5=gr5,-1
    0| 004C08 mtspr    7F6903A6   1     LCTR      ctr=gr27
    0| 004C0C rlwinm   54A6003E   1     RN4       gr6=gr5,0,0xFFFFFFFF
   31|                              CL.1153:
    0| 004C10 lfs      C0010080   1     LFS       fp0=<a19:d128:l4>(gr1,128)
   23| 004C14 and      7C052038   1     N         gr5=gr0,gr4
   23| 004C18 rldicr   78A51764   1     SLL8      gr5=gr5,2
   23| 004C1C addi     38E40001   1     AI        gr7=gr4,1
   24| 004C20 or       7FE4FB78   1     LR        gr4=gr31
   23| 004C24 rlwinm   54E8003E   1     RN4       gr8=gr7,0,0xFFFFFFFF
   23| 004C28 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
    0| 004C2C ori      60210000   1     XNOP      
   22|                              CL.1154:
   23| 004C30 rldicl   78850020   1     RN8       gr5=gr4,0,0xFFFFFFFF
   24| 004C34 addi     38840001   1     AI        gr4=gr4,1
   23| 004C38 add      7CA54214   1     A         gr5=gr5,gr8
   24| 004C3C cmpld    7C243040   1     CL8       cr0=gr4,gr6
   23| 004C40 and      7C052838   1     N         gr5=gr0,gr5
   23| 004C44 rldicr   78A51764   1     SLL8      gr5=gr5,2
   23| 004C48 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
   24| 004C4C bc       4180FFE4   1     BT        CL.1154,cr0,0x8/llt,taken=80%(80,20)
   24| 004C50 add      7C863A14   1     A         gr4=gr6,gr7
   24| 004C54 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   30| 004C58 bc       4200FFB8   1     BCT       ctr=CL.1153,taken=100%(100,0)
   30| 004C5C b        4BFFFF90   1     B         CL.2346,-1
   30|                              CL.1211:
    0| 004C60 rlwinm   5705F87E   1     RN4       gr5=gr24,31,0x7FFFFFFF
    0| 004C64 rldicl   7B6607E1   1     RN8_R     gr6,cr0=gr27,0,0x1
    0| 004C68 cmpdi    2CA50000   1     C8        cr1=gr5,0
    0| 004C6C mtspr    7CA903A6   1     LCTR      ctr=gr5
    0| 004C70 bc       41820028   1     BT        CL.2506,cr0,0x4/eq,taken=50%(0,0)
    0| 004C74 lfs      C0010080   1     LFS       fp0=<a19:d128:l4>(gr1,128)
   23| 004C78 and      7C052038   1     N         gr5=gr0,gr4
   23| 004C7C rldicr   78A51764   1     SLL8      gr5=gr5,2
   23| 004C80 addi     38E40001   1     AI        gr7=gr4,1
   23| 004C84 rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   23| 004C88 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
    0| 004C8C bc       41860044   1     BT        CL.2507,cr1,0x4/eq,taken=20%(20,80)
    0| 004C90 ori      60210000   1     XNOP      
    0| 004C94 ori      60210000   1     XNOP      
    0|                              CL.2506:
   31|                              CL.1213:
    0| 004C98 lfs      C0010080   1     LFS       fp0=<a19:d128:l4>(gr1,128)
   23| 004C9C and      7C052038   1     N         gr5=gr0,gr4
   23| 004CA0 rldicr   78A51764   1     SLL8      gr5=gr5,2
   23| 004CA4 addi     38C40001   1     AI        gr6=gr4,1
   23| 004CA8 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   23| 004CAC addi     38C60001   1     AI        gr6=gr6,1
   23| 004CB0 and      7C072038   1     N         gr7=gr0,gr4
   23| 004CB4 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
    0| 004CB8 lfs      C0010080   1     LFS       fp0=<a19:d128:l4>(gr1,128)
   23| 004CBC rldicr   78E51764   1     SLL8      gr5=gr7,2
   23| 004CC0 addi     38E40001   1     AI        gr7=gr4,1
   23| 004CC4 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   23| 004CC8 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
   30| 004CCC bc       4200FFCC   1     BCT       ctr=CL.1213,taken=100%(100,0)
    0|                              CL.2507:
   30| 004CD0 stw      90E10094   1     ST4Z      <a19:d148:l4>(gr1,148)=gr7
   30| 004CD4 b        4BFFFBAC   1     B         CL.1088,-1
   30|                              CL.1163:
   31| 004CD8 bc       41820068   1     BT        CL.1218,cr0,0x4/eq,taken=50%(0,0)
    0| 004CDC addi     38A5FFFF   1     AI        gr5=gr5,-1
    0| 004CE0 mtspr    7F6903A6   1     LCTR      ctr=gr27
    0| 004CE4 rlwinm   54A6003E   1     RN4       gr6=gr5,0,0xFFFFFFFF
   31|                              CL.1164:
    0| 004CE8 lfs      C0010080   1     LFS       fp0=<a19:d128:l4>(gr1,128)
   23| 004CEC and      7C052038   1     N         gr5=gr0,gr4
   23| 004CF0 rldicr   78A51764   1     SLL8      gr5=gr5,2
   23| 004CF4 addi     38E40001   1     AI        gr7=gr4,1
   24| 004CF8 or       7FE4FB78   1     LR        gr4=gr31
   23| 004CFC rlwinm   54E8003E   1     RN4       gr8=gr7,0,0xFFFFFFFF
   23| 004D00 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
    0| 004D04 ori      60210000   1     XNOP      
    0| 004D08 ori      60210000   1     XNOP      
    0| 004D0C ori      60210000   1     XNOP      
   22|                              CL.1165:
   23| 004D10 rldicl   78850020   1     RN8       gr5=gr4,0,0xFFFFFFFF
   24| 004D14 addi     38840001   1     AI        gr4=gr4,1
   23| 004D18 add      7CA54214   1     A         gr5=gr5,gr8
   24| 004D1C cmpld    7C243040   1     CL8       cr0=gr4,gr6
   23| 004D20 and      7C052838   1     N         gr5=gr0,gr5
   23| 004D24 rldicr   78A51764   1     SLL8      gr5=gr5,2
   23| 004D28 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
   24| 004D2C bc       4180FFE4   1     BT        CL.1165,cr0,0x8/llt,taken=80%(80,20)
   24| 004D30 add      7C863A14   1     A         gr4=gr6,gr7
   24| 004D34 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   30| 004D38 bc       4200FFB0   1     BCT       ctr=CL.1164,taken=100%(100,0)
    0| 004D3C b        4BFFFEB0   1     B         CL.2346,-1
   30|                              CL.1218:
    0| 004D40 rlwinm   5705F87E   1     RN4       gr5=gr24,31,0x7FFFFFFF
    0| 004D44 rldicl   7B6607E1   1     RN8_R     gr6,cr0=gr27,0,0x1
    0| 004D48 cmpdi    2CA50000   1     C8        cr1=gr5,0
    0| 004D4C mtspr    7CA903A6   1     LCTR      ctr=gr5
    0| 004D50 bc       41820028   1     BT        CL.2509,cr0,0x4/eq,taken=50%(0,0)
    0| 004D54 lfs      C0010080   1     LFS       fp0=<a19:d128:l4>(gr1,128)
   23| 004D58 and      7C052038   1     N         gr5=gr0,gr4
   23| 004D5C rldicr   78A51764   1     SLL8      gr5=gr5,2
   23| 004D60 addi     38E40001   1     AI        gr7=gr4,1
   23| 004D64 rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   23| 004D68 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
    0| 004D6C bc       4186FF64   1     BT        CL.2507,cr1,0x4/eq,taken=20%(20,80)
    0| 004D70 ori      60210000   1     XNOP      
    0| 004D74 ori      60210000   1     XNOP      
    0|                              CL.2509:
   31|                              CL.1220:
    0| 004D78 lfs      C0010080   1     LFS       fp0=<a19:d128:l4>(gr1,128)
   23| 004D7C and      7C052038   1     N         gr5=gr0,gr4
   23| 004D80 rldicr   78A51764   1     SLL8      gr5=gr5,2
   23| 004D84 addi     38C40001   1     AI        gr6=gr4,1
   23| 004D88 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   23| 004D8C addi     38C60001   1     AI        gr6=gr6,1
   23| 004D90 and      7C072038   1     N         gr7=gr0,gr4
   23| 004D94 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
    0| 004D98 lfs      C0010080   1     LFS       fp0=<a19:d128:l4>(gr1,128)
   23| 004D9C rldicr   78E51764   1     SLL8      gr5=gr7,2
   23| 004DA0 addi     38E40001   1     AI        gr7=gr4,1
   23| 004DA4 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   23| 004DA8 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
   30| 004DAC bc       4200FFCC   1     BCT       ctr=CL.1220,taken=100%(100,0)
   30| 004DB0 b        4BFFFF20   1     B         CL.2507,-1
    0|                              CL.4650:
   24| 004DB4 addi     38000001   1     LI        gr0=1
   24| 004DB8 addi     38800000   1     LI        gr4=0
   24| 004DBC stb      980100C3   1     ST1Z      <a19:d195:l1>(gr1,195)=gr0
   24| 004DC0 addi     38A001FF   1     LI        gr5=511
   24| 004DC4 addi     38C00010   1     LI        gr6=16
   24| 004DC8 addi     38E00400   1     LI        gr7=1024
   24| 004DCC bl       48000001   1     CALL      gr3=_ZN9RCqsmodelC1Ebjjj,5,(char).rns161.",gr3-gr7,#ProcAlias",_ZN9RCqsmodelC1Ebjjj",fcr",#MX_TEMP19",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   24| 004DD0 ori      60000000   1
   24| 004DD4 stb      9BE100C3   1     ST1Z      <a19:d195:l1>(gr1,195)=gr31
    0| 004DD8 ld       EB4100A0   1     L8        gr26=__364(gr1,160)
    0| 004DDC b        4BFFF740   1     B         CL.1078,-1
     |               Tag Table
     | 004DE0        00000000 00092A41 800D0500 00000000 00000960 00000001
     | 004DF8        000000C0 00295F5A 31326465 636F6D70 72657373 33644966
     | 004E10        4C6A3845 45765039 52436465 636F6465 7250545F 6A6A6A
     |               Instruction count          600
     |               Straight-line exec time    600
 GPR's set/used:   ssus ssss ssss s---  ---- ssss ssss ssss
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ----
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     decompress3d<float,16>(RCdecoder *, float *, unsigned int, unsigned int, unsigned int)
     | 000000                           AKA       _Z12decompress3dIfLj16EEvP9RCdecoderPT_jjj
   14|                                  PROC      rd,data,nx,ny,nz,gr3-gr7
    0| 004E30 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 004E34 std      FBC1FFF0   1     ST8       #stack(gr1,-16)=gr30
    0| 004E38 std      FBA1FFE8   1     ST8       #stack(gr1,-24)=gr29
    0| 004E3C std      FB81FFE0   1     ST8       #stack(gr1,-32)=gr28
    0| 004E40 std      FB61FFD8   1     ST8       #stack(gr1,-40)=gr27
    0| 004E44 std      FB41FFD0   1     ST8       #stack(gr1,-48)=gr26
    0| 004E48 std      FB21FFC8   1     ST8       #stack(gr1,-56)=gr25
    0| 004E4C std      FB01FFC0   1     ST8       #stack(gr1,-64)=gr24
    0| 004E50 std      FAE1FFB8   1     ST8       #stack(gr1,-72)=gr23
    0| 004E54 std      FAC1FFB0   1     ST8       #stack(gr1,-80)=gr22
    0| 004E58 std      FAA1FFA8   1     ST8       #stack(gr1,-88)=gr21
    0| 004E5C std      FA81FFA0   1     ST8       #stack(gr1,-96)=gr20
    0| 004E60 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 004E64 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 004E68 stdu     F821FEC1   1     ST8U      gr1,#stack(gr1,-320)=gr1
    0| 004E6C or       7C771B78   1     LR        gr23=gr3
   24| 004E70 addi     38600048   1     LI        gr3=72
   53| 004E74 std      F8410028   1     ST8       #cur_toc(gr1,40)=gr2
    0| 004E78 ld       E9020000   1     L8        gr8=.$STATIC(gr2,0)
    0| 004E7C addi     3BE00000   1     LI        gr31=0
    0| 004E80 or       7CB82B78   1     LR        gr24=gr5
    0| 004E84 stw      93E100C0   1     ST4Z      <a20:d192:l4>(gr1,192)=gr31
    0| 004E88 std      FBE100D0   1     ST8       <a20:d208:l8>(gr1,208)=gr31
    0| 004E8C or       7C9E2378   1     LR        gr30=gr4
    0| 004E90 addi     380801E0   1     AI        gr0=gr8,480
    0| 004E94 stw      93E100D8   1     ST4Z      <a20:d216:l4>(gr1,216)=gr31
    0| 004E98 std      F80100C8   1     ST8       <a20:d200:l8>(gr1,200)=gr0
    0| 004E9C or       7CB92B78   1     LR        gr25=gr5
    0| 004EA0 rlwinm   54BD003E   1     RN4       gr29=gr5,0,0xFFFFFFFF
    0| 004EA4 or       7CD63378   1     LR        gr22=gr6
    0| 004EA8 rlwinm   54DC003E   1     RN4       gr28=gr6,0,0xFFFFFFFF
    0| 004EAC or       7CF53B78   1     LR        gr21=gr7
    0| 004EB0 rlwinm   54FB003E   1     RN4       gr27=gr7,0,0xFFFFFFFF
   24| 004EB4 bl       48000001   1     CALL      gr3=_Znwm,1,gr3,#ProcAlias",_Znwm",fcr",#MX_TEMP20",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   24| 004EB8 ori      60000000   1
   24| 004EBC or       7C7A1B79   1     LR_R      gr26,cr0=gr3
   24| 004EC0 std      F86100A0   1     ST8       __419(gr1,160)=gr3
   24| 004EC4 bc       40820830   1     BF        CL.4784,cr0,0x4/eq,taken=40%(40,60)
   24|                              CL.1243:
   25| 004EC8 addi     38600018   1     LI        gr3=24
   25| 004ECC bl       48000001   1     CALL      gr3=_Znwm,1,gr3,#ProcAlias",_Znwm",fcr",#MX_TEMP20",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   25| 004ED0 ori      60000000   1
   25| 004ED4 std      FB4100A8   1     ST8       rm(gr1,168)=gr26
   25| 004ED8 or       7C7A1B79   1     LR_R      gr26,cr0=gr3
   25| 004EDC bc       41820010   1     BT        CL.1246,cr0,0x4/eq,taken=50%(0,0)
   34| 004EE0 std      FAFA0008   1     ST8       (PCdecoder<float,PCmap<float,16,void>,1>).rd@8.rns190.(gr26,8)=gr23
   34| 004EE4 addi     380100A8   1     AI        gr0=gr1,168
   34| 004EE8 std      F81A0010   1     ST8       (PCdecoder<float,PCmap<float,16,void>,1>).rm@10.rns191.(gr26,16)=gr0
   34|                              CL.1246:
    9| 004EEC addi     381D0001   1     AI        gr0=gr29,1
    9| 004EF0 addi     387C0001   1     AI        gr3=gr28,1
    9| 004EF4 addi     38800001   1     LI        gr4=1
    9| 004EF8 mulld    7C0019D2   1     M         gr0=gr0,gr3
    9| 004EFC std      F8810080   1     ST8       f.|zero@0#654|dx@4#655_20(gr1,128)=gr4
    9| 004F00 stw      9001008C   1     ST4Z      <a20:d140:l4>(gr1,140)=gr0
    9| 004F04 addi     38780001   1     AI        gr3=gr24,1
   45| 004F08 add      7C80EA14   1     A         gr4=gr0,gr29
    9| 004F0C stw      90610088   1     ST4Z      <a20:d136:l4>(gr1,136)=gr3
   45| 004F10 addi     38640002   1     AI        gr3=gr4,2
   45| 004F14 addi     38840001   1     AI        gr4=gr4,1
   45| 004F18 and      7C602038   1     N         gr0=gr3,gr4
   45| 004F1C rlwinm   5483003E   1     RN4       gr3=gr4,0,0xFFFFFFFF
   45| 004F20 cmpwi    2C000000   1     C4        cr0=gr0,0
    0| 004F24 addi     38030001   1     AI        gr0=gr3,1
   45| 004F28 bc       41820018   1     BT        CL.1250,cr0,0x4/eq,taken=20%(20,80)
   45|                              CL.1248:
    9| 004F2C or       7C001B78   1     O         gr0=gr0,gr3
    9| 004F30 rldicl   78030020   1     RN8       gr3=gr0,0,0xFFFFFFFF
   45| 004F34 addi     38030001   1     AI        gr0=gr3,1
   45| 004F38 and      7C640039   1     N_R       gr4,cr0=gr3,gr0
   45| 004F3C bc       4082FFF0   1     BF        CL.1248,cr0,0x4/eq,taken=80%(80,20)
   45|                              CL.1250:
   47| 004F40 stw      90610090   1     ST4Z      <a20:d144:l4>(gr1,144)=gr3
   10| 004F44 stw      93E10094   1     ST4Z      <a20:d148:l4>(gr1,148)=gr31
   10| 004F48 rldic    78031788   1     RN8       gr3=gr0,2,0x3FFFFFFFC
   10| 004F4C bl       48000001   1     CALL      gr3=_Znam,1,gr3,#ProcAlias",_Znam",fcr",#MX_TEMP20",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   10| 004F50 ori      60000000   1
   10| 004F54 addi     38000002   1     LI        gr0=2
   24| 004F58 lwz      80A1008C   1     L4Z       gr5=<a20:d140:l4>(gr1,140)
   10| 004F5C stb      980100C3   1     ST1Z      <a20:d195:l1>(gr1,195)=gr0
   23| 004F60 lfs      C0010080   1     LFS       fp0=<a20:d128:l4>(gr1,128)
   10| 004F64 std      F8610098   1     ST8       <a20:d152:l8>(gr1,152)=gr3
   23| 004F68 lwz      80010090   1     L4Z       gr0=<a20:d144:l4>(gr1,144)
   23| 004F6C lwz      80C10094   1     L4Z       gr6=<a20:d148:l4>(gr1,148)
   24| 004F70 cmplwi   28050001   1     CL4       cr0=gr5,1
   24| 004F74 addi     3905FFFF   1     AI        gr8=gr5,-1
   23| 004F78 and      7C043038   1     N         gr4=gr0,gr6
   23| 004F7C rldicr   78841764   1     SLL8      gr4=gr4,2
   23| 004F80 addi     38E60001   1     AI        gr7=gr6,1
   23| 004F84 stfsx    7C03252E   1     STFS      (float).rns178.(gr3,gr4,0)=fp0
   23| 004F88 stw      90E10094   1     ST4Z      <a20:d148:l4>(gr1,148)=gr7
   23| 004F8C rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   24| 004F90 bc       4182003C   1     BT        CL.1284,cr0,0x4/eq,taken=20%(20,80)
   24| 004F94 addi     38E00000   1     LI        gr7=0
    0| 004F98 rlwinm   5509003E   1     RN4       gr9=gr8,0,0xFFFFFFFF
    0| 004F9C ori      60210000   1     XNOP      
   22|                              CL.1254:
   23| 004FA0 rldicl   78E80020   1     RN8       gr8=gr7,0,0xFFFFFFFF
   24| 004FA4 addi     38E70001   1     AI        gr7=gr7,1
   23| 004FA8 add      7D044214   1     A         gr8=gr4,gr8
   24| 004FAC cmpld    7C274840   1     CL8       cr0=gr7,gr9
   23| 004FB0 and      7C084038   1     N         gr8=gr0,gr8
   23| 004FB4 rldicr   79081764   1     SLL8      gr8=gr8,2
   23| 004FB8 stfsx    7C03452E   1     STFS      (float).rns178.(gr3,gr8,0)=fp0
   24| 004FBC bc       4180FFE4   1     BT        CL.1254,cr0,0x8/llt,taken=80%(80,20)
   24| 004FC0 add      7C853214   1     A         gr4=gr5,gr6
   24| 004FC4 stw      90810094   1     ST4Z      <a20:d148:l4>(gr1,148)=gr4
   24| 004FC8 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   24|                              CL.1284:
   31| 004FCC cmpdi    2C3B0000   1     C8        cr0=gr27,0
   31| 004FD0 bc       418201F0   1     BT        CL.1253,cr0,0x4/eq,taken=50%(0,0)
   31| 004FD4 cmpdi    2C3C0000   1     C8        cr0=gr28,0
    0| 004FD8 cmpdi    2CBD0000   1     C8        cr1=gr29,0
   31| 004FDC bc       41820558   1     BT        CL.1311,cr0,0x4/eq,taken=50%(0,0)
   31| 004FE0 bc       41860270   1     BT        CL.1299,cr1,0x4/eq,taken=50%(0,0)
   31| 004FE4 addi     3A800000   1     LI        gr20=0
    0| 004FE8 rldic    7B391788   1     RN8       gr25=gr25,2,0x3FFFFFFFC
   31|                              CL.1251:
   24| 004FEC lwz      80A10088   1     L4Z       gr5=<a20:d136:l4>(gr1,136)
    0| 004FF0 lfs      C0010080   1     LFS       fp0=<a20:d128:l4>(gr1,128)
   23| 004FF4 and      7C062038   1     N         gr6=gr0,gr4
   23| 004FF8 rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 004FFC addi     38E40001   1     AI        gr7=gr4,1
   23| 005000 or       7C882378   1     LR        gr8=gr4
   24| 005004 cmplwi   28050001   1     CL4       cr0=gr5,1
   24| 005008 addi     3925FFFF   1     AI        gr9=gr5,-1
   23| 00500C rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   23| 005010 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
   24| 005014 bc       41820034   1     BT        CL.1285,cr0,0x4/eq,taken=20%(20,80)
   24| 005018 or       7FE6FB78   1     LR        gr6=gr31
    0| 00501C rlwinm   5529003E   1     RN4       gr9=gr9,0,0xFFFFFFFF
   22|                              CL.1260:
   23| 005020 rldicl   78C70020   1     RN8       gr7=gr6,0,0xFFFFFFFF
   24| 005024 addi     38C60001   1     AI        gr6=gr6,1
   23| 005028 add      7CE43A14   1     A         gr7=gr4,gr7
   24| 00502C cmpld    7C264840   1     CL8       cr0=gr6,gr9
   23| 005030 and      7C073838   1     N         gr7=gr0,gr7
   23| 005034 rldicr   78E71764   1     SLL8      gr7=gr7,2
   23| 005038 stfsx    7C033D2E   1     STFS      (float).rns94.(gr3,gr7,0)=fp0
   24| 00503C bc       4180FFE4   1     BT        CL.1260,cr0,0x8/llt,taken=80%(80,20)
   24| 005040 add      7C854214   1     A         gr4=gr5,gr8
   24| 005044 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   24|                              CL.1285:
   31| 005048 or       7FF8FB78   1     LR        gr24=gr31
    0| 00504C addi     3AFEFFFC   1     AI        gr23=gr30,-4
   31|                              CL.1257:
   24| 005050 lwz      80A10084   1     L4Z       gr5=<a20:d132:l4>(gr1,132)
   30| 005054 lfs      C0010080   1     LFS       fp0=<a20:d128:l4>(gr1,128)
   23| 005058 and      7C062038   1     N         gr6=gr0,gr4
   23| 00505C rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 005060 addi     38E40001   1     AI        gr7=gr4,1
   23| 005064 or       7C882378   1     LR        gr8=gr4
   24| 005068 addi     3925FFFF   1     AI        gr9=gr5,-1
   23| 00506C stw      90E10094   1     ST4Z      <a20:d148:l4>(gr1,148)=gr7
   24| 005070 cmplwi   28050001   1     CL4       cr0=gr5,1
   23| 005074 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
   23| 005078 rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   24| 00507C bc       41820040   1     BT        CL.1286,cr0,0x4/eq,taken=20%(20,80)
   24| 005080 or       7FE6FB78   1     LR        gr6=gr31
    0| 005084 rlwinm   5529003E   1     RN4       gr9=gr9,0,0xFFFFFFFF
    0| 005088 ori      60210000   1     XNOP      
    0| 00508C ori      60210000   1     XNOP      
   22|                              CL.1266:
   23| 005090 rldicl   78C70020   1     RN8       gr7=gr6,0,0xFFFFFFFF
   24| 005094 addi     38C60001   1     AI        gr6=gr6,1
   23| 005098 add      7CE43A14   1     A         gr7=gr4,gr7
   24| 00509C cmpld    7C264840   1     CL8       cr0=gr6,gr9
   23| 0050A0 and      7C073838   1     N         gr7=gr0,gr7
   23| 0050A4 rldicr   78E71764   1     SLL8      gr7=gr7,2
   23| 0050A8 stfsx    7C033D2E   1     STFS      (float).rns94.(gr3,gr7,0)=fp0
   24| 0050AC bc       4180FFE4   1     BT        CL.1266,cr0,0x8/llt,taken=80%(80,20)
   24| 0050B0 add      7C854214   1     A         gr4=gr5,gr8
   24| 0050B4 stw      90810094   1     ST4Z      <a20:d148:l4>(gr1,148)=gr4
   24| 0050B8 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   24|                              CL.1286:
   31| 0050BC or       7FF6FB78   1     LR        gr22=gr31
   48| 0050C0 or       7EF5BB78   1     LR        gr21=gr23
    0| 0050C4 ori      60210000   1     XNOP      
   31|                              CL.1263:
   47| 0050C8 lwz      81010088   1     L4Z       gr8=<a20:d136:l4>(gr1,136)
    0| 0050CC lwz      80C10084   1     L4Z       gr6=<a20:d132:l4>(gr1,132)
   47| 0050D0 lwz      8121008C   1     L4Z       gr9=<a20:d140:l4>(gr1,140)
   47| 0050D4 addi     38A00000   1     LI        gr5=0
   47| 0050D8 subf     7D482050   1     S         gr10=gr4,gr8
   47| 0050DC subf     7D662050   1     S         gr11=gr4,gr6
   47| 0050E0 subf     7CE95050   1     S         gr7=gr10,gr9
   47| 0050E4 and      7C065838   1     N         gr6=gr0,gr11
   47| 0050E8 and      7C073838   1     N         gr7=gr0,gr7
   47| 0050EC rldicr   78C61764   1     SLL8      gr6=gr6,2
   47| 0050F0 rldicr   78E71764   1     SLL8      gr7=gr7,2
   47| 0050F4 lfsx     7C23342E   1     LFS       fp1=(float).rns94.(gr3,gr6,0)
   47| 0050F8 lfsx     7C433C2E   1     LFS       fp2=(float).rns94.(gr3,gr7,0)
   47| 0050FC and      7C065038   1     N         gr6=gr0,gr10
   47| 005100 rldicr   78C61764   1     SLL8      gr6=gr6,2
   47| 005104 subf     7CE95850   1     S         gr7=gr11,gr9
   47| 005108 lfsx     7C03342E   1     LFS       fp0=(float).rns94.(gr3,gr6,0)
   47| 00510C and      7C063838   1     N         gr6=gr0,gr7
   47| 005110 rldicr   78C61764   1     SLL8      gr6=gr6,2
   47| 005114 fsubs    EC211028   1     SFS       fp1=fp1,fp2,fcr
   47| 005118 subf     7C892050   1     S         gr4=gr4,gr9
   47| 00511C lfsx     7C43342E   1     LFS       fp2=(float).rns94.(gr3,gr6,0)
   47| 005120 and      7C042038   1     N         gr4=gr0,gr4
   47| 005124 rldicr   78841764   1     SLL8      gr4=gr4,2
   47| 005128 subf     7CC85850   1     S         gr6=gr11,gr8
   47| 00512C fadds    EC21002A   1     AFS       fp1=fp1,fp0,fcr
   47| 005130 lfsx     7C03242E   1     LFS       fp0=(float).rns94.(gr3,gr4,0)
   47| 005134 and      7C043038   1     N         gr4=gr0,gr6
   47| 005138 rldicr   78841764   1     SLL8      gr4=gr4,2
   47| 00513C subf     7CC93050   1     S         gr6=gr6,gr9
   47| 005140 lfsx     7C63242E   1     LFS       fp3=(float).rns94.(gr3,gr4,0)
   47| 005144 fsubs    EC211028   1     SFS       fp1=fp1,fp2,fcr
   47| 005148 and      7C003038   1     N         gr0=gr0,gr6
   47| 00514C rldicr   78041764   1     SLL8      gr4=gr0,2
   47| 005150 lfsx     7C43242E   1     LFS       fp2=(float).rns94.(gr3,gr4,0)
   47| 005154 or       7F43D378   1     LR        gr3=gr26
   47| 005158 fadds    EC01002A   1     AFS       fp0=fp1,fp0,fcr
   47| 00515C fsubs    EC001828   1     SFS       fp0=fp0,fp3,fcr
   47| 005160 fadds    EC20102A   1     AFS       fp1=fp0,fp2,fcr
   47| 005164 bl       48001C4D   1     CALL      fp1=PCdecoder<float,PCmap<float,16,void>,1>::decode(float, unsigned int),3,(PCdecoder<float,PCmap<float,16,void>,1>).rns182.",gr3,fp1,gr5,#ProcAlias",PCdecoder<float,PCmap<float,16,void>,1>::decode(float, unsigned int)",fcr",#MX_TEMP20",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   47| 005168 ori      60000000   1
   23| 00516C lwz      80010090   1     L4Z       gr0=<a20:d144:l4>(gr1,144)
   23| 005170 lwz      80A10094   1     L4Z       gr5=<a20:d148:l4>(gr1,148)
   23| 005174 ld       E8610098   1     L8        gr3=<a20:d152:l8>(gr1,152)
   32| 005178 addi     3AD60001   1     AI        gr22=gr22,1
   48| 00517C stfsu    D4350004   1     STFSU     gr21,(float).rns94.(gr21,4)=fp1
   32| 005180 cmpld    7C36E840   1     CL8       cr0=gr22,gr29
   23| 005184 and      7C042838   1     N         gr4=gr0,gr5
   23| 005188 rldicr   78841764   1     SLL8      gr4=gr4,2
   23| 00518C addi     38A50001   1     AI        gr5=gr5,1
   23| 005190 stfsx    7C23252E   1     STFS      (float).rns94.(gr3,gr4,0)=fp1
   23| 005194 stw      90A10094   1     ST4Z      <a20:d148:l4>(gr1,148)=gr5
   23| 005198 rlwinm   54A4003E   1     RN4       gr4=gr5,0,0xFFFFFFFF
   32| 00519C bc       4180FF2C   1     BT        CL.1263,cr0,0x8/llt,taken=80%(80,20)
   31| 0051A0 addi     3B180001   1     AI        gr24=gr24,1
   32| 0051A4 add      7FDECA14   1     A         gr30=gr30,gr25
   31| 0051A8 cmpld    7C38E040   1     CL8       cr0=gr24,gr28
    0| 0051AC add      7EF7CA14   1     A         gr23=gr23,gr25
   31| 0051B0 bc       4180FEA0   1     BT        CL.1257,cr0,0x8/llt,taken=80%(80,20)
   30| 0051B4 addi     3A940001   1     AI        gr20=gr20,1
   30| 0051B8 cmpld    7C34D840   1     CL8       cr0=gr20,gr27
   30| 0051BC bc       4180FE30   1     BT        CL.1251,cr0,0x8/llt,taken=80%(80,20)
   30|                              CL.1253:
   52| 0051C0 cmpdi    2C3A0000   1     C8        cr0=gr26,0
   52| 0051C4 bc       4082007C   1     BF        CL.4785,cr0,0x4/eq,taken=40%(40,60)
   35|                              CL.1273:
   53| 0051C8 ld       E86100A8   1     L8        gr3=rm(gr1,168)
   53| 0051CC cmpdi    2C230000   1     C8        cr0=gr3,0
   53| 0051D0 bc       41820024   1     BT        CL.1276,cr0,0x4/eq,taken=30%(30,70)
   53| 0051D4 ld       E8830000   1     L8        gr4=(RCmodel)[]@0.rns112.(gr3,0)
   53| 0051D8 ld       E8840008   1     L8        gr4=((*)();__vftTypeGCCV3).rns19.(gr4,8)
   53| 0051DC ld       E8040000   1     L8        gr0=#fnc_adr(gr4,0)
   53| 0051E0 ld       E9640010   1     L8        gr11=#new_env(gr4,16)
   53| 0051E4 mtspr    7C0903A6   1     LCTR      ctr=gr0
   53| 0051E8 ld       E8440008   1     CALL      gr3=gr4,1,(char).rns108.",gr3,#ProcAlias",fcr",#MX_TEMP20",(()vf).rns187.",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr",#fnc_adr,#cur_toc,ctr,gr11,#new_env,#(glue_dr_n,0,(()vf).rns187."
   53| 0051EC bcctrl   4E800421   1
   53| 0051F0 ld       E8410028   1
   53|                              CL.1276:
   11| 0051F4 ld       E8610098   1     L8        gr3=<a20:d152:l8>(gr1,152)
   11| 0051F8 bl       48000001   1     CALL      _ZdaPv,1,(char).rns108.",gr3,#ProcAlias",_ZdaPv",fcr",#MX_TEMP20",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   11| 0051FC ori      60000000   1
   54| 005200 ld       E9810150   1     L8        gr12=#stack(gr1,336)
   54| 005204 addi     38210140   1     AI        gr1=gr1,320
   54| 005208 ld       EA81FFA0   1     L8        gr20=#stack(gr1,-96)
   54| 00520C ld       EAA1FFA8   1     L8        gr21=#stack(gr1,-88)
   54| 005210 ld       EAC1FFB0   1     L8        gr22=#stack(gr1,-80)
   54| 005214 mtspr    7D8803A6   1     LLR       lr=gr12
   54| 005218 ld       EAE1FFB8   1     L8        gr23=#stack(gr1,-72)
   54| 00521C ld       EB01FFC0   1     L8        gr24=#stack(gr1,-64)
   54| 005220 ld       EB21FFC8   1     L8        gr25=#stack(gr1,-56)
   54| 005224 ld       EB41FFD0   1     L8        gr26=#stack(gr1,-48)
   54| 005228 ld       EB61FFD8   1     L8        gr27=#stack(gr1,-40)
   54| 00522C ld       EB81FFE0   1     L8        gr28=#stack(gr1,-32)
   54| 005230 ld       EBA1FFE8   1     L8        gr29=#stack(gr1,-24)
   54| 005234 ld       EBC1FFF0   1     L8        gr30=#stack(gr1,-16)
   54| 005238 ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
   54| 00523C bclr     4E800020   1     BA        lr
    0|                              CL.4785:
   35| 005240 or       7F43D378   1     LR        gr3=gr26
   35| 005244 bl       48000001   1     CALL      _ZdlPv,1,(char).rns185.",gr3,#ProcAlias",_ZdlPv",fcr",#MX_TEMP20",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   35| 005248 ori      60000000   1
    0| 00524C b        4BFFFF7C   1     B         CL.1273,-1
   30|                              CL.1299:
   31| 005250 lwz      80A10088   1     L4Z       gr5=<a20:d136:l4>(gr1,136)
    0| 005254 lwz      80C10084   1     L4Z       gr6=<a20:d132:l4>(gr1,132)
   31| 005258 cmplwi   28050001   1     CL4       cr0=gr5,1
    0| 00525C cmplwi   28860001   1     CL4       cr1=gr6,1
   31| 005260 bc       418201B4   1     BT        CL.1350,cr0,0x4/eq,taken=50%(0,0)
   31| 005264 bc       418600CC   1     BT        CL.1340,cr1,0x4/eq,taken=50%(0,0)
    0| 005268 addi     38E5FFFF   1     AI        gr7=gr5,-1
    0| 00526C addi     38C6FFFF   1     AI        gr6=gr6,-1
   31| 005270 addi     38A00000   1     LI        gr5=0
    0| 005274 rlwinm   54E7003E   1     RN4       gr7=gr7,0,0xFFFFFFFF
    0| 005278 rlwinm   54C8003E   1     RN4       gr8=gr6,0,0xFFFFFFFF
   31|                              CL.1301:
    0| 00527C lfs      C0010080   1     LFS       fp0=<a20:d128:l4>(gr1,128)
   23| 005280 and      7C062038   1     N         gr6=gr0,gr4
   23| 005284 rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 005288 addi     39240001   1     AI        gr9=gr4,1
   24| 00528C or       7FE4FB78   1     LR        gr4=gr31
   23| 005290 rlwinm   552A003E   1     RN4       gr10=gr9,0,0xFFFFFFFF
   23| 005294 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
    0| 005298 ori      60210000   1     XNOP      
    0| 00529C ori      60210000   1     XNOP      
   22|                              CL.1302:
   23| 0052A0 rldicl   78860020   1     RN8       gr6=gr4,0,0xFFFFFFFF
   24| 0052A4 addi     38840001   1     AI        gr4=gr4,1
   23| 0052A8 add      7CC65214   1     A         gr6=gr6,gr10
   24| 0052AC cmpld    7C243840   1     CL8       cr0=gr4,gr7
   23| 0052B0 and      7C063038   1     N         gr6=gr0,gr6
   23| 0052B4 rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 0052B8 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
   24| 0052BC bc       4180FFE4   1     BT        CL.1302,cr0,0x8/llt,taken=80%(80,20)
   24| 0052C0 add      7C874A14   1     A         gr4=gr7,gr9
    0| 0052C4 mtspr    7F8903A6   1     LCTR      ctr=gr28
   24| 0052C8 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   31|                              CL.1304:
   30| 0052CC lfs      C0010080   1     LFS       fp0=<a20:d128:l4>(gr1,128)
    0| 0052D0 and      7C062038   1     N         gr6=gr0,gr4
   23| 0052D4 rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 0052D8 addi     39240001   1     AI        gr9=gr4,1
   24| 0052DC or       7FE4FB78   1     LR        gr4=gr31
   23| 0052E0 rlwinm   552A003E   1     RN4       gr10=gr9,0,0xFFFFFFFF
   23| 0052E4 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
    0| 0052E8 ori      60210000   1     XNOP      
    0| 0052EC ori      60210000   1     XNOP      
   22|                              CL.1305:
   23| 0052F0 rldicl   78860020   1     RN8       gr6=gr4,0,0xFFFFFFFF
   24| 0052F4 addi     38840001   1     AI        gr4=gr4,1
   23| 0052F8 add      7CC65214   1     A         gr6=gr6,gr10
   24| 0052FC cmpld    7C244040   1     CL8       cr0=gr4,gr8
   23| 005300 and      7C063038   1     N         gr6=gr0,gr6
   23| 005304 rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 005308 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
   24| 00530C bc       4180FFE4   1     BT        CL.1305,cr0,0x8/llt,taken=80%(80,20)
   24| 005310 add      7CC84A14   1     A         gr6=gr8,gr9
   24| 005314 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   31| 005318 bc       4200FFB4   1     BCT       ctr=CL.1304,taken=100%(100,0)
   30| 00531C addi     38A50001   1     AI        gr5=gr5,1
   30| 005320 cmpld    7C25D840   1     CL8       cr0=gr5,gr27
   30| 005324 bc       4180FF58   1     BT        CL.1301,cr0,0x8/llt,taken=80%(80,20)
   24|                              CL.4792:
   24| 005328 stw      90C10094   1     ST4Z      <a20:d148:l4>(gr1,148)=gr6
   30| 00532C b        4BFFFE94   1     B         CL.1253,-1
   30|                              CL.1340:
    0| 005330 addi     38E5FFFF   1     AI        gr7=gr5,-1
    0| 005334 rlwinm   56C6F87E   1     RN4       gr6=gr22,31,0x7FFFFFFF
   31| 005338 addi     38A00000   1     LI        gr5=0
    0| 00533C rlwinm   54E7003E   1     RN4       gr7=gr7,0,0xFFFFFFFF
    0| 005340 rldicl   7B8807E1   1     RN8_R     gr8,cr0=gr28,0,0x1
    0| 005344 cmpdi    2F260000   1     C8        cr6=gr6,0
   31|                              CL.1342:
    0| 005348 lfs      C0010080   1     LFS       fp0=<a20:d128:l4>(gr1,128)
   23| 00534C and      7C082038   1     N         gr8=gr0,gr4
   23| 005350 rldicr   79081764   1     SLL8      gr8=gr8,2
   23| 005354 addi     39440001   1     AI        gr10=gr4,1
   23| 005358 or       7C892378   1     LR        gr9=gr4
   23| 00535C rlwinm   554B003E   1     RN4       gr11=gr10,0,0xFFFFFFFF
   24| 005360 or       7FE4FB78   1     LR        gr4=gr31
   23| 005364 stfsx    7C03452E   1     STFS      (float).rns94.(gr3,gr8,0)=fp0
    0| 005368 ori      60210000   1     XNOP      
    0| 00536C ori      60210000   1     XNOP      
   22|                              CL.1343:
   23| 005370 rldicl   78880020   1     RN8       gr8=gr4,0,0xFFFFFFFF
   24| 005374 addi     38840001   1     AI        gr4=gr4,1
   23| 005378 add      7D085A14   1     A         gr8=gr8,gr11
   24| 00537C cmpld    7CA43840   1     CL8       cr1=gr4,gr7
   23| 005380 and      7C084038   1     N         gr8=gr0,gr8
   23| 005384 rldicr   79081764   1     SLL8      gr8=gr8,2
   23| 005388 stfsx    7C03452E   1     STFS      (float).rns94.(gr3,gr8,0)=fp0
   24| 00538C bc       4184FFE4   1     BT        CL.1343,cr1,0x8/llt,taken=80%(80,20)
   24| 005390 add      7C875214   1     A         gr4=gr7,gr10
    0| 005394 mtspr    7CC903A6   1     LCTR      ctr=gr6
   24| 005398 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
    0| 00539C bc       4182002C   1     BT        CL.3181,cr0,0x4/eq,taken=50%(0,0)
   23| 0053A0 lfs      C0010080   1     LFS       fp0=<a20:d128:l4>(gr1,128)
   23| 0053A4 addi     39290002   1     AI        gr9=gr9,2
   23| 0053A8 and      7C082038   1     N         gr8=gr0,gr4
   23| 0053AC rldicr   79081764   1     SLL8      gr8=gr8,2
   23| 0053B0 add      7D274A14   1     A         gr9=gr7,gr9
   23| 0053B4 addi     39440001   1     AI        gr10=gr4,1
   23| 0053B8 rlwinm   5524003E   1     RN4       gr4=gr9,0,0xFFFFFFFF
   23| 0053BC stfsx    7C03452E   1     STFS      (float).rns94.(gr3,gr8,0)=fp0
    0| 0053C0 bc       419A0040   1     BT        CL.3182,cr6,0x4/eq,taken=20%(20,80)
    0| 0053C4 ori      60210000   1     XNOP      
    0|                              CL.3181:
   31|                              CL.1345:
   23| 0053C8 lfs      C0010080   1     LFS       fp0=<a20:d128:l4>(gr1,128)
   23| 0053CC and      7C082038   1     N         gr8=gr0,gr4
   23| 0053D0 rldicr   79081764   1     SLL8      gr8=gr8,2
   23| 0053D4 addi     39240001   1     AI        gr9=gr4,1
   23| 0053D8 rlwinm   5524003E   1     RN4       gr4=gr9,0,0xFFFFFFFF
   23| 0053DC addi     39290001   1     AI        gr9=gr9,1
   23| 0053E0 and      7C0A2038   1     N         gr10=gr0,gr4
   23| 0053E4 stfsx    7C03452E   1     STFS      (float).rns94.(gr3,gr8,0)=fp0
   23| 0053E8 lfs      C0010080   1     LFS       fp0=<a20:d128:l4>(gr1,128)
   23| 0053EC rldicr   79481764   1     SLL8      gr8=gr10,2
   23| 0053F0 addi     39440001   1     AI        gr10=gr4,1
   23| 0053F4 rlwinm   5524003E   1     RN4       gr4=gr9,0,0xFFFFFFFF
   23| 0053F8 stfsx    7C03452E   1     STFS      (float).rns94.(gr3,gr8,0)=fp0
   31| 0053FC bc       4200FFCC   1     BCT       ctr=CL.1345,taken=100%(100,0)
    0|                              CL.3182:
   30| 005400 addi     38A50001   1     AI        gr5=gr5,1
   30| 005404 cmpld    7CA5D840   1     CL8       cr1=gr5,gr27
   30| 005408 bc       4184FF40   1     BT        CL.1342,cr1,0x8/llt,taken=80%(80,20)
   31| 00540C stw      91410094   1     ST4Z      <a20:d148:l4>(gr1,148)=gr10
   30| 005410 b        4BFFFDB0   1     B         CL.1253,-1
   30|                              CL.1350:
   31| 005414 bc       41860088   1     BT        CL.1360,cr1,0x4/eq,taken=50%(0,0)
    0| 005418 addi     38C6FFFF   1     AI        gr6=gr6,-1
   31| 00541C addi     38A00000   1     LI        gr5=0
    0| 005420 rlwinm   54C7003E   1     RN4       gr7=gr6,0,0xFFFFFFFF
   31|                              CL.1352:
    0| 005424 lfs      C0010080   1     LFS       fp0=<a20:d128:l4>(gr1,128)
   23| 005428 and      7C062038   1     N         gr6=gr0,gr4
   23| 00542C rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 005430 addi     38840001   1     AI        gr4=gr4,1
    0| 005434 mtspr    7F8903A6   1     LCTR      ctr=gr28
   23| 005438 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   23| 00543C stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
   31|                              CL.1355:
   30| 005440 lfs      C0010080   1     LFS       fp0=<a20:d128:l4>(gr1,128)
   23| 005444 and      7C062038   1     N         gr6=gr0,gr4
   23| 005448 rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 00544C addi     39040001   1     AI        gr8=gr4,1
   24| 005450 or       7FE4FB78   1     LR        gr4=gr31
   23| 005454 rlwinm   5509003E   1     RN4       gr9=gr8,0,0xFFFFFFFF
   23| 005458 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
    0| 00545C ori      60210000   1     XNOP      
   22|                              CL.1356:
   23| 005460 rldicl   78860020   1     RN8       gr6=gr4,0,0xFFFFFFFF
   24| 005464 addi     38840001   1     AI        gr4=gr4,1
   23| 005468 add      7CC64A14   1     A         gr6=gr6,gr9
   24| 00546C cmpld    7C243840   1     CL8       cr0=gr4,gr7
   23| 005470 and      7C063038   1     N         gr6=gr0,gr6
   23| 005474 rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 005478 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
   24| 00547C bc       4180FFE4   1     BT        CL.1356,cr0,0x8/llt,taken=80%(80,20)
   24| 005480 add      7CC74214   1     A         gr6=gr7,gr8
   24| 005484 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   31| 005488 bc       4200FFB8   1     BCT       ctr=CL.1355,taken=100%(100,0)
   30| 00548C addi     38A50001   1     AI        gr5=gr5,1
   30| 005490 cmpld    7C25D840   1     CL8       cr0=gr5,gr27
   30| 005494 bc       4180FF90   1     BT        CL.1352,cr0,0x8/llt,taken=80%(80,20)
   24| 005498 b        4BFFFE90   1     B         CL.4792,-1
   30|                              CL.1360:
    0| 00549C rlwinm   56C5F87E   1     RN4       gr5=gr22,31,0x7FFFFFFF
    0| 0054A0 rldicl   7B8607E1   1     RN8_R     gr6,cr0=gr28,0,0x1
    0| 0054A4 cmpdi    2CA50000   1     C8        cr1=gr5,0
   31|                              CL.1361:
    0| 0054A8 lfs      C0010080   1     LFS       fp0=<a20:d128:l4>(gr1,128)
   23| 0054AC and      7C062038   1     N         gr6=gr0,gr4
   23| 0054B0 rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 0054B4 addi     39040001   1     AI        gr8=gr4,1
   23| 0054B8 or       7C872378   1     LR        gr7=gr4
   23| 0054BC rlwinm   5504003E   1     RN4       gr4=gr8,0,0xFFFFFFFF
    0| 0054C0 mtspr    7CA903A6   1     LCTR      ctr=gr5
   23| 0054C4 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
    0| 0054C8 bc       41820024   1     BT        CL.3184,cr0,0x4/eq,taken=50%(0,0)
   23| 0054CC lfs      C0010080   1     LFS       fp0=<a20:d128:l4>(gr1,128)
   23| 0054D0 and      7C840038   1     N         gr4=gr4,gr0
   23| 0054D4 rldicr   78861764   1     SLL8      gr6=gr4,2
   23| 0054D8 addi     38870002   1     AI        gr4=gr7,2
   23| 0054DC rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   23| 0054E0 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
    0| 0054E4 bc       4186003C   1     BT        CL.3185,cr1,0x4/eq,taken=20%(20,80)
    0| 0054E8 ori      60210000   1     XNOP      
    0|                              CL.3184:
   31|                              CL.1364:
   23| 0054EC lfs      C0010080   1     LFS       fp0=<a20:d128:l4>(gr1,128)
   23| 0054F0 and      7C062038   1     N         gr6=gr0,gr4
   23| 0054F4 rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 0054F8 addi     38840001   1     AI        gr4=gr4,1
   23| 0054FC rlwinm   5487003E   1     RN4       gr7=gr4,0,0xFFFFFFFF
   23| 005500 addi     38840001   1     AI        gr4=gr4,1
   23| 005504 and      7C073838   1     N         gr7=gr0,gr7
   23| 005508 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
   23| 00550C lfs      C0010080   1     LFS       fp0=<a20:d128:l4>(gr1,128)
   23| 005510 rldicr   78E61764   1     SLL8      gr6=gr7,2
   23| 005514 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   23| 005518 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
   31| 00551C bc       4200FFD0   1     BCT       ctr=CL.1364,taken=100%(100,0)
    0|                              CL.3185:
   30| 005520 addi     3BFF0001   1     AI        gr31=gr31,1
   30| 005524 cmpld    7F3FD840   1     CL8       cr6=gr31,gr27
   30| 005528 bc       4198FF80   1     BT        CL.1361,cr6,0x8/llt,taken=80%(80,20)
   30|                              CL.3027:
   30| 00552C stw      90810094   1     ST4Z      <a20:d148:l4>(gr1,148)=gr4
   30| 005530 b        4BFFFC90   1     B         CL.1253,-1
   30|                              CL.1311:
    0| 005534 lwz      80A10088   1     L4Z       gr5=<a20:d136:l4>(gr1,136)
    0| 005538 cmplwi   28050001   1     CL4       cr0=gr5,1
   31| 00553C bc       418600DC   1     BT        CL.1323,cr1,0x4/eq,taken=50%(0,0)
   31| 005540 bc       41820060   1     BT        CL.1371,cr0,0x4/eq,taken=50%(0,0)
    0| 005544 addi     38A5FFFF   1     AI        gr5=gr5,-1
    0| 005548 mtspr    7F6903A6   1     LCTR      ctr=gr27
    0| 00554C rlwinm   54A6003E   1     RN4       gr6=gr5,0,0xFFFFFFFF
   31|                              CL.1313:
    0| 005550 lfs      C0010080   1     LFS       fp0=<a20:d128:l4>(gr1,128)
   23| 005554 and      7C052038   1     N         gr5=gr0,gr4
   23| 005558 rldicr   78A51764   1     SLL8      gr5=gr5,2
   23| 00555C addi     38E40001   1     AI        gr7=gr4,1
   24| 005560 or       7FE4FB78   1     LR        gr4=gr31
   23| 005564 rlwinm   54E8003E   1     RN4       gr8=gr7,0,0xFFFFFFFF
   23| 005568 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
    0| 00556C ori      60210000   1     XNOP      
   22|                              CL.1314:
   23| 005570 rldicl   78850020   1     RN8       gr5=gr4,0,0xFFFFFFFF
   24| 005574 addi     38840001   1     AI        gr4=gr4,1
   23| 005578 add      7CA54214   1     A         gr5=gr5,gr8
   24| 00557C cmpld    7C243040   1     CL8       cr0=gr4,gr6
   23| 005580 and      7C052838   1     N         gr5=gr0,gr5
   23| 005584 rldicr   78A51764   1     SLL8      gr5=gr5,2
   23| 005588 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
   24| 00558C bc       4180FFE4   1     BT        CL.1314,cr0,0x8/llt,taken=80%(80,20)
   24| 005590 add      7C863A14   1     A         gr4=gr6,gr7
   24| 005594 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   30| 005598 bc       4200FFB8   1     BCT       ctr=CL.1313,taken=100%(100,0)
   30| 00559C b        4BFFFF90   1     B         CL.3027,-1
   30|                              CL.1371:
    0| 0055A0 rlwinm   56A5F87E   1     RN4       gr5=gr21,31,0x7FFFFFFF
    0| 0055A4 rldicl   7B6607E1   1     RN8_R     gr6,cr0=gr27,0,0x1
    0| 0055A8 cmpdi    2CA50000   1     C8        cr1=gr5,0
    0| 0055AC mtspr    7CA903A6   1     LCTR      ctr=gr5
    0| 0055B0 bc       41820028   1     BT        CL.3187,cr0,0x4/eq,taken=50%(0,0)
    0| 0055B4 lfs      C0010080   1     LFS       fp0=<a20:d128:l4>(gr1,128)
   23| 0055B8 and      7C052038   1     N         gr5=gr0,gr4
   23| 0055BC rldicr   78A51764   1     SLL8      gr5=gr5,2
   23| 0055C0 addi     38E40001   1     AI        gr7=gr4,1
   23| 0055C4 rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   23| 0055C8 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
    0| 0055CC bc       41860044   1     BT        CL.3188,cr1,0x4/eq,taken=20%(20,80)
    0| 0055D0 ori      60210000   1     XNOP      
    0| 0055D4 ori      60210000   1     XNOP      
    0|                              CL.3187:
   31|                              CL.1373:
    0| 0055D8 lfs      C0010080   1     LFS       fp0=<a20:d128:l4>(gr1,128)
   23| 0055DC and      7C052038   1     N         gr5=gr0,gr4
   23| 0055E0 rldicr   78A51764   1     SLL8      gr5=gr5,2
   23| 0055E4 addi     38C40001   1     AI        gr6=gr4,1
   23| 0055E8 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   23| 0055EC addi     38C60001   1     AI        gr6=gr6,1
   23| 0055F0 and      7C072038   1     N         gr7=gr0,gr4
   23| 0055F4 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
    0| 0055F8 lfs      C0010080   1     LFS       fp0=<a20:d128:l4>(gr1,128)
   23| 0055FC rldicr   78E51764   1     SLL8      gr5=gr7,2
   23| 005600 addi     38E40001   1     AI        gr7=gr4,1
   23| 005604 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   23| 005608 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
   30| 00560C bc       4200FFCC   1     BCT       ctr=CL.1373,taken=100%(100,0)
    0|                              CL.3188:
   30| 005610 stw      90E10094   1     ST4Z      <a20:d148:l4>(gr1,148)=gr7
   30| 005614 b        4BFFFBAC   1     B         CL.1253,-1
   30|                              CL.1323:
   31| 005618 bc       41820068   1     BT        CL.1378,cr0,0x4/eq,taken=50%(0,0)
    0| 00561C addi     38A5FFFF   1     AI        gr5=gr5,-1
    0| 005620 mtspr    7F6903A6   1     LCTR      ctr=gr27
    0| 005624 rlwinm   54A6003E   1     RN4       gr6=gr5,0,0xFFFFFFFF
   31|                              CL.1324:
    0| 005628 lfs      C0010080   1     LFS       fp0=<a20:d128:l4>(gr1,128)
   23| 00562C and      7C052038   1     N         gr5=gr0,gr4
   23| 005630 rldicr   78A51764   1     SLL8      gr5=gr5,2
   23| 005634 addi     38E40001   1     AI        gr7=gr4,1
   24| 005638 or       7FE4FB78   1     LR        gr4=gr31
   23| 00563C rlwinm   54E8003E   1     RN4       gr8=gr7,0,0xFFFFFFFF
   23| 005640 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
    0| 005644 ori      60210000   1     XNOP      
    0| 005648 ori      60210000   1     XNOP      
    0| 00564C ori      60210000   1     XNOP      
   22|                              CL.1325:
   23| 005650 rldicl   78850020   1     RN8       gr5=gr4,0,0xFFFFFFFF
   24| 005654 addi     38840001   1     AI        gr4=gr4,1
   23| 005658 add      7CA54214   1     A         gr5=gr5,gr8
   24| 00565C cmpld    7C243040   1     CL8       cr0=gr4,gr6
   23| 005660 and      7C052838   1     N         gr5=gr0,gr5
   23| 005664 rldicr   78A51764   1     SLL8      gr5=gr5,2
   23| 005668 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
   24| 00566C bc       4180FFE4   1     BT        CL.1325,cr0,0x8/llt,taken=80%(80,20)
   24| 005670 add      7C863A14   1     A         gr4=gr6,gr7
   24| 005674 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   30| 005678 bc       4200FFB0   1     BCT       ctr=CL.1324,taken=100%(100,0)
    0| 00567C b        4BFFFEB0   1     B         CL.3027,-1
   30|                              CL.1378:
    0| 005680 rlwinm   56A5F87E   1     RN4       gr5=gr21,31,0x7FFFFFFF
    0| 005684 rldicl   7B6607E1   1     RN8_R     gr6,cr0=gr27,0,0x1
    0| 005688 cmpdi    2CA50000   1     C8        cr1=gr5,0
    0| 00568C mtspr    7CA903A6   1     LCTR      ctr=gr5
    0| 005690 bc       41820028   1     BT        CL.3190,cr0,0x4/eq,taken=50%(0,0)
    0| 005694 lfs      C0010080   1     LFS       fp0=<a20:d128:l4>(gr1,128)
   23| 005698 and      7C052038   1     N         gr5=gr0,gr4
   23| 00569C rldicr   78A51764   1     SLL8      gr5=gr5,2
   23| 0056A0 addi     38E40001   1     AI        gr7=gr4,1
   23| 0056A4 rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   23| 0056A8 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
    0| 0056AC bc       4186FF64   1     BT        CL.3188,cr1,0x4/eq,taken=20%(20,80)
    0| 0056B0 ori      60210000   1     XNOP      
    0| 0056B4 ori      60210000   1     XNOP      
    0|                              CL.3190:
   31|                              CL.1380:
    0| 0056B8 lfs      C0010080   1     LFS       fp0=<a20:d128:l4>(gr1,128)
   23| 0056BC and      7C052038   1     N         gr5=gr0,gr4
   23| 0056C0 rldicr   78A51764   1     SLL8      gr5=gr5,2
   23| 0056C4 addi     38C40001   1     AI        gr6=gr4,1
   23| 0056C8 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   23| 0056CC addi     38C60001   1     AI        gr6=gr6,1
   23| 0056D0 and      7C072038   1     N         gr7=gr0,gr4
   23| 0056D4 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
    0| 0056D8 lfs      C0010080   1     LFS       fp0=<a20:d128:l4>(gr1,128)
   23| 0056DC rldicr   78E51764   1     SLL8      gr5=gr7,2
   23| 0056E0 addi     38E40001   1     AI        gr7=gr4,1
   23| 0056E4 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   23| 0056E8 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
   30| 0056EC bc       4200FFCC   1     BCT       ctr=CL.1380,taken=100%(100,0)
   30| 0056F0 b        4BFFFF20   1     B         CL.3188,-1
    0|                              CL.4784:
   24| 0056F4 addi     38000001   1     LI        gr0=1
   24| 0056F8 addi     38800000   1     LI        gr4=0
   24| 0056FC stb      980100C3   1     ST1Z      <a20:d195:l1>(gr1,195)=gr0
   24| 005700 addi     38A00021   1     LI        gr5=33
   24| 005704 addi     38C00010   1     LI        gr6=16
   24| 005708 addi     38E00400   1     LI        gr7=1024
   24| 00570C bl       48000001   1     CALL      gr3=_ZN9RCqsmodelC1Ebjjj,5,(char).rns177.",gr3-gr7,#ProcAlias",_ZN9RCqsmodelC1Ebjjj",fcr",#MX_TEMP20",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   24| 005710 ori      60000000   1
   24| 005714 stb      9BE100C3   1     ST1Z      <a20:d195:l1>(gr1,195)=gr31
    0| 005718 ld       EB4100A0   1     L8        gr26=__419(gr1,160)
    0| 00571C b        4BFFF7AC   1     B         CL.1243,-1
     |               Tag Table
     | 005720        00000000 00092A41 800C0500 00000000 000008F0 00000001
     | 005738        000000C0 002A5F5A 31326465 636F6D70 72657373 33644966
     | 005750        4C6A3136 45457650 39524364 65636F64 65725054 5F6A6A6A
     |               Instruction count          572
     |               Straight-line exec time    572
 GPR's set/used:   ssus ssss ssss s---  ---- ssss ssss ssss
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ----
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     decompress3d<float,24>(RCdecoder *, float *, unsigned int, unsigned int, unsigned int)
     | 000000                           AKA       _Z12decompress3dIfLj24EEvP9RCdecoderPT_jjj
   14|                                  PROC      rd,data,nx,ny,nz,gr3-gr7
    0| 005770 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 005774 std      FBC1FFF0   1     ST8       #stack(gr1,-16)=gr30
    0| 005778 std      FBA1FFE8   1     ST8       #stack(gr1,-24)=gr29
    0| 00577C std      FB81FFE0   1     ST8       #stack(gr1,-32)=gr28
    0| 005780 std      FB61FFD8   1     ST8       #stack(gr1,-40)=gr27
    0| 005784 std      FB41FFD0   1     ST8       #stack(gr1,-48)=gr26
    0| 005788 std      FB21FFC8   1     ST8       #stack(gr1,-56)=gr25
    0| 00578C std      FB01FFC0   1     ST8       #stack(gr1,-64)=gr24
    0| 005790 std      FAE1FFB8   1     ST8       #stack(gr1,-72)=gr23
    0| 005794 std      FAC1FFB0   1     ST8       #stack(gr1,-80)=gr22
    0| 005798 std      FAA1FFA8   1     ST8       #stack(gr1,-88)=gr21
    0| 00579C std      FA81FFA0   1     ST8       #stack(gr1,-96)=gr20
    0| 0057A0 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 0057A4 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 0057A8 stdu     F821FEC1   1     ST8U      gr1,#stack(gr1,-320)=gr1
    0| 0057AC or       7C771B78   1     LR        gr23=gr3
   24| 0057B0 addi     38600048   1     LI        gr3=72
   53| 0057B4 std      F8410028   1     ST8       #cur_toc(gr1,40)=gr2
    0| 0057B8 ld       E9020000   1     L8        gr8=.$STATIC(gr2,0)
    0| 0057BC addi     3BE00000   1     LI        gr31=0
    0| 0057C0 or       7CB82B78   1     LR        gr24=gr5
    0| 0057C4 stw      93E100C0   1     ST4Z      <a21:d192:l4>(gr1,192)=gr31
    0| 0057C8 std      FBE100D0   1     ST8       <a21:d208:l8>(gr1,208)=gr31
    0| 0057CC or       7C9E2378   1     LR        gr30=gr4
    0| 0057D0 addi     38080240   1     AI        gr0=gr8,576
    0| 0057D4 stw      93E100D8   1     ST4Z      <a21:d216:l4>(gr1,216)=gr31
    0| 0057D8 std      F80100C8   1     ST8       <a21:d200:l8>(gr1,200)=gr0
    0| 0057DC or       7CB92B78   1     LR        gr25=gr5
    0| 0057E0 rlwinm   54BD003E   1     RN4       gr29=gr5,0,0xFFFFFFFF
    0| 0057E4 or       7CD63378   1     LR        gr22=gr6
    0| 0057E8 rlwinm   54DC003E   1     RN4       gr28=gr6,0,0xFFFFFFFF
    0| 0057EC or       7CF53B78   1     LR        gr21=gr7
    0| 0057F0 rlwinm   54FB003E   1     RN4       gr27=gr7,0,0xFFFFFFFF
   24| 0057F4 bl       48000001   1     CALL      gr3=_Znwm,1,gr3,#ProcAlias",_Znwm",fcr",#MX_TEMP21",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   24| 0057F8 ori      60000000   1
   24| 0057FC or       7C7A1B79   1     LR_R      gr26,cr0=gr3
   24| 005800 std      F86100A0   1     ST8       __474(gr1,160)=gr3
   24| 005804 bc       40820830   1     BF        CL.4918,cr0,0x4/eq,taken=40%(40,60)
   24|                              CL.1404:
   25| 005808 addi     38600018   1     LI        gr3=24
   25| 00580C bl       48000001   1     CALL      gr3=_Znwm,1,gr3,#ProcAlias",_Znwm",fcr",#MX_TEMP21",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   25| 005810 ori      60000000   1
   25| 005814 std      FB4100A8   1     ST8       rm(gr1,168)=gr26
   25| 005818 or       7C7A1B79   1     LR_R      gr26,cr0=gr3
   25| 00581C bc       41820010   1     BT        CL.1407,cr0,0x4/eq,taken=50%(0,0)
   34| 005820 std      FAFA0008   1     ST8       (PCdecoder<float,PCmap<float,24,void>,1>).rd@8.rns206.(gr26,8)=gr23
   34| 005824 addi     380100A8   1     AI        gr0=gr1,168
   34| 005828 std      F81A0010   1     ST8       (PCdecoder<float,PCmap<float,24,void>,1>).rm@10.rns207.(gr26,16)=gr0
   34|                              CL.1407:
    9| 00582C addi     381D0001   1     AI        gr0=gr29,1
    9| 005830 addi     387C0001   1     AI        gr3=gr28,1
    9| 005834 addi     38800001   1     LI        gr4=1
    9| 005838 mulld    7C0019D2   1     M         gr0=gr0,gr3
    9| 00583C std      F8810080   1     ST8       f.|zero@0#710|dx@4#711_21(gr1,128)=gr4
    9| 005840 stw      9001008C   1     ST4Z      <a21:d140:l4>(gr1,140)=gr0
    9| 005844 addi     38780001   1     AI        gr3=gr24,1
   45| 005848 add      7C80EA14   1     A         gr4=gr0,gr29
    9| 00584C stw      90610088   1     ST4Z      <a21:d136:l4>(gr1,136)=gr3
   45| 005850 addi     38640002   1     AI        gr3=gr4,2
   45| 005854 addi     38840001   1     AI        gr4=gr4,1
   45| 005858 and      7C602038   1     N         gr0=gr3,gr4
   45| 00585C rlwinm   5483003E   1     RN4       gr3=gr4,0,0xFFFFFFFF
   45| 005860 cmpwi    2C000000   1     C4        cr0=gr0,0
    0| 005864 addi     38030001   1     AI        gr0=gr3,1
   45| 005868 bc       41820018   1     BT        CL.1411,cr0,0x4/eq,taken=20%(20,80)
   45|                              CL.1409:
    9| 00586C or       7C001B78   1     O         gr0=gr0,gr3
    9| 005870 rldicl   78030020   1     RN8       gr3=gr0,0,0xFFFFFFFF
   45| 005874 addi     38030001   1     AI        gr0=gr3,1
   45| 005878 and      7C640039   1     N_R       gr4,cr0=gr3,gr0
   45| 00587C bc       4082FFF0   1     BF        CL.1409,cr0,0x4/eq,taken=80%(80,20)
   45|                              CL.1411:
   47| 005880 stw      90610090   1     ST4Z      <a21:d144:l4>(gr1,144)=gr3
   10| 005884 stw      93E10094   1     ST4Z      <a21:d148:l4>(gr1,148)=gr31
   10| 005888 rldic    78031788   1     RN8       gr3=gr0,2,0x3FFFFFFFC
   10| 00588C bl       48000001   1     CALL      gr3=_Znam,1,gr3,#ProcAlias",_Znam",fcr",#MX_TEMP21",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   10| 005890 ori      60000000   1
   10| 005894 addi     38000002   1     LI        gr0=2
   24| 005898 lwz      80A1008C   1     L4Z       gr5=<a21:d140:l4>(gr1,140)
   10| 00589C stb      980100C3   1     ST1Z      <a21:d195:l1>(gr1,195)=gr0
   23| 0058A0 lfs      C0010080   1     LFS       fp0=<a21:d128:l4>(gr1,128)
   10| 0058A4 std      F8610098   1     ST8       <a21:d152:l8>(gr1,152)=gr3
   23| 0058A8 lwz      80010090   1     L4Z       gr0=<a21:d144:l4>(gr1,144)
   23| 0058AC lwz      80C10094   1     L4Z       gr6=<a21:d148:l4>(gr1,148)
   24| 0058B0 cmplwi   28050001   1     CL4       cr0=gr5,1
   24| 0058B4 addi     3905FFFF   1     AI        gr8=gr5,-1
   23| 0058B8 and      7C043038   1     N         gr4=gr0,gr6
   23| 0058BC rldicr   78841764   1     SLL8      gr4=gr4,2
   23| 0058C0 addi     38E60001   1     AI        gr7=gr6,1
   23| 0058C4 stfsx    7C03252E   1     STFS      (float).rns194.(gr3,gr4,0)=fp0
   23| 0058C8 stw      90E10094   1     ST4Z      <a21:d148:l4>(gr1,148)=gr7
   23| 0058CC rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   24| 0058D0 bc       4182003C   1     BT        CL.1445,cr0,0x4/eq,taken=20%(20,80)
   24| 0058D4 addi     38E00000   1     LI        gr7=0
    0| 0058D8 rlwinm   5509003E   1     RN4       gr9=gr8,0,0xFFFFFFFF
    0| 0058DC ori      60210000   1     XNOP      
   22|                              CL.1415:
   23| 0058E0 rldicl   78E80020   1     RN8       gr8=gr7,0,0xFFFFFFFF
   24| 0058E4 addi     38E70001   1     AI        gr7=gr7,1
   23| 0058E8 add      7D044214   1     A         gr8=gr4,gr8
   24| 0058EC cmpld    7C274840   1     CL8       cr0=gr7,gr9
   23| 0058F0 and      7C084038   1     N         gr8=gr0,gr8
   23| 0058F4 rldicr   79081764   1     SLL8      gr8=gr8,2
   23| 0058F8 stfsx    7C03452E   1     STFS      (float).rns194.(gr3,gr8,0)=fp0
   24| 0058FC bc       4180FFE4   1     BT        CL.1415,cr0,0x8/llt,taken=80%(80,20)
   24| 005900 add      7C853214   1     A         gr4=gr5,gr6
   24| 005904 stw      90810094   1     ST4Z      <a21:d148:l4>(gr1,148)=gr4
   24| 005908 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   24|                              CL.1445:
   31| 00590C cmpdi    2C3B0000   1     C8        cr0=gr27,0
   31| 005910 bc       418201F0   1     BT        CL.1414,cr0,0x4/eq,taken=50%(0,0)
   31| 005914 cmpdi    2C3C0000   1     C8        cr0=gr28,0
    0| 005918 cmpdi    2CBD0000   1     C8        cr1=gr29,0
   31| 00591C bc       41820558   1     BT        CL.1472,cr0,0x4/eq,taken=50%(0,0)
   31| 005920 bc       41860270   1     BT        CL.1460,cr1,0x4/eq,taken=50%(0,0)
   31| 005924 addi     3A800000   1     LI        gr20=0
    0| 005928 rldic    7B391788   1     RN8       gr25=gr25,2,0x3FFFFFFFC
   31|                              CL.1412:
   24| 00592C lwz      80A10088   1     L4Z       gr5=<a21:d136:l4>(gr1,136)
    0| 005930 lfs      C0010080   1     LFS       fp0=<a21:d128:l4>(gr1,128)
   23| 005934 and      7C062038   1     N         gr6=gr0,gr4
   23| 005938 rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 00593C addi     38E40001   1     AI        gr7=gr4,1
   23| 005940 or       7C882378   1     LR        gr8=gr4
   24| 005944 cmplwi   28050001   1     CL4       cr0=gr5,1
   24| 005948 addi     3925FFFF   1     AI        gr9=gr5,-1
   23| 00594C rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   23| 005950 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
   24| 005954 bc       41820034   1     BT        CL.1446,cr0,0x4/eq,taken=20%(20,80)
   24| 005958 or       7FE6FB78   1     LR        gr6=gr31
    0| 00595C rlwinm   5529003E   1     RN4       gr9=gr9,0,0xFFFFFFFF
   22|                              CL.1421:
   23| 005960 rldicl   78C70020   1     RN8       gr7=gr6,0,0xFFFFFFFF
   24| 005964 addi     38C60001   1     AI        gr6=gr6,1
   23| 005968 add      7CE43A14   1     A         gr7=gr4,gr7
   24| 00596C cmpld    7C264840   1     CL8       cr0=gr6,gr9
   23| 005970 and      7C073838   1     N         gr7=gr0,gr7
   23| 005974 rldicr   78E71764   1     SLL8      gr7=gr7,2
   23| 005978 stfsx    7C033D2E   1     STFS      (float).rns94.(gr3,gr7,0)=fp0
   24| 00597C bc       4180FFE4   1     BT        CL.1421,cr0,0x8/llt,taken=80%(80,20)
   24| 005980 add      7C854214   1     A         gr4=gr5,gr8
   24| 005984 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   24|                              CL.1446:
   31| 005988 or       7FF8FB78   1     LR        gr24=gr31
    0| 00598C addi     3AFEFFFC   1     AI        gr23=gr30,-4
   31|                              CL.1418:
   24| 005990 lwz      80A10084   1     L4Z       gr5=<a21:d132:l4>(gr1,132)
   30| 005994 lfs      C0010080   1     LFS       fp0=<a21:d128:l4>(gr1,128)
   23| 005998 and      7C062038   1     N         gr6=gr0,gr4
   23| 00599C rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 0059A0 addi     38E40001   1     AI        gr7=gr4,1
   23| 0059A4 or       7C882378   1     LR        gr8=gr4
   24| 0059A8 addi     3925FFFF   1     AI        gr9=gr5,-1
   23| 0059AC stw      90E10094   1     ST4Z      <a21:d148:l4>(gr1,148)=gr7
   24| 0059B0 cmplwi   28050001   1     CL4       cr0=gr5,1
   23| 0059B4 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
   23| 0059B8 rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   24| 0059BC bc       41820040   1     BT        CL.1447,cr0,0x4/eq,taken=20%(20,80)
   24| 0059C0 or       7FE6FB78   1     LR        gr6=gr31
    0| 0059C4 rlwinm   5529003E   1     RN4       gr9=gr9,0,0xFFFFFFFF
    0| 0059C8 ori      60210000   1     XNOP      
    0| 0059CC ori      60210000   1     XNOP      
   22|                              CL.1427:
   23| 0059D0 rldicl   78C70020   1     RN8       gr7=gr6,0,0xFFFFFFFF
   24| 0059D4 addi     38C60001   1     AI        gr6=gr6,1
   23| 0059D8 add      7CE43A14   1     A         gr7=gr4,gr7
   24| 0059DC cmpld    7C264840   1     CL8       cr0=gr6,gr9
   23| 0059E0 and      7C073838   1     N         gr7=gr0,gr7
   23| 0059E4 rldicr   78E71764   1     SLL8      gr7=gr7,2
   23| 0059E8 stfsx    7C033D2E   1     STFS      (float).rns94.(gr3,gr7,0)=fp0
   24| 0059EC bc       4180FFE4   1     BT        CL.1427,cr0,0x8/llt,taken=80%(80,20)
   24| 0059F0 add      7C854214   1     A         gr4=gr5,gr8
   24| 0059F4 stw      90810094   1     ST4Z      <a21:d148:l4>(gr1,148)=gr4
   24| 0059F8 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   24|                              CL.1447:
   31| 0059FC or       7FF6FB78   1     LR        gr22=gr31
   48| 005A00 or       7EF5BB78   1     LR        gr21=gr23
    0| 005A04 ori      60210000   1     XNOP      
   31|                              CL.1424:
   47| 005A08 lwz      81010088   1     L4Z       gr8=<a21:d136:l4>(gr1,136)
    0| 005A0C lwz      80C10084   1     L4Z       gr6=<a21:d132:l4>(gr1,132)
   47| 005A10 lwz      8121008C   1     L4Z       gr9=<a21:d140:l4>(gr1,140)
   47| 005A14 addi     38A00000   1     LI        gr5=0
   47| 005A18 subf     7D482050   1     S         gr10=gr4,gr8
   47| 005A1C subf     7D662050   1     S         gr11=gr4,gr6
   47| 005A20 subf     7CE95050   1     S         gr7=gr10,gr9
   47| 005A24 and      7C065838   1     N         gr6=gr0,gr11
   47| 005A28 and      7C073838   1     N         gr7=gr0,gr7
   47| 005A2C rldicr   78C61764   1     SLL8      gr6=gr6,2
   47| 005A30 rldicr   78E71764   1     SLL8      gr7=gr7,2
   47| 005A34 lfsx     7C23342E   1     LFS       fp1=(float).rns94.(gr3,gr6,0)
   47| 005A38 lfsx     7C433C2E   1     LFS       fp2=(float).rns94.(gr3,gr7,0)
   47| 005A3C and      7C065038   1     N         gr6=gr0,gr10
   47| 005A40 rldicr   78C61764   1     SLL8      gr6=gr6,2
   47| 005A44 subf     7CE95850   1     S         gr7=gr11,gr9
   47| 005A48 lfsx     7C03342E   1     LFS       fp0=(float).rns94.(gr3,gr6,0)
   47| 005A4C and      7C063838   1     N         gr6=gr0,gr7
   47| 005A50 rldicr   78C61764   1     SLL8      gr6=gr6,2
   47| 005A54 fsubs    EC211028   1     SFS       fp1=fp1,fp2,fcr
   47| 005A58 subf     7C892050   1     S         gr4=gr4,gr9
   47| 005A5C lfsx     7C43342E   1     LFS       fp2=(float).rns94.(gr3,gr6,0)
   47| 005A60 and      7C042038   1     N         gr4=gr0,gr4
   47| 005A64 rldicr   78841764   1     SLL8      gr4=gr4,2
   47| 005A68 subf     7CC85850   1     S         gr6=gr11,gr8
   47| 005A6C fadds    EC21002A   1     AFS       fp1=fp1,fp0,fcr
   47| 005A70 lfsx     7C03242E   1     LFS       fp0=(float).rns94.(gr3,gr4,0)
   47| 005A74 and      7C043038   1     N         gr4=gr0,gr6
   47| 005A78 rldicr   78841764   1     SLL8      gr4=gr4,2
   47| 005A7C subf     7CC93050   1     S         gr6=gr6,gr9
   47| 005A80 lfsx     7C63242E   1     LFS       fp3=(float).rns94.(gr3,gr4,0)
   47| 005A84 fsubs    EC211028   1     SFS       fp1=fp1,fp2,fcr
   47| 005A88 and      7C003038   1     N         gr0=gr0,gr6
   47| 005A8C rldicr   78041764   1     SLL8      gr4=gr0,2
   47| 005A90 lfsx     7C43242E   1     LFS       fp2=(float).rns94.(gr3,gr4,0)
   47| 005A94 or       7F43D378   1     LR        gr3=gr26
   47| 005A98 fadds    EC01002A   1     AFS       fp0=fp1,fp0,fcr
   47| 005A9C fsubs    EC001828   1     SFS       fp0=fp0,fp3,fcr
   47| 005AA0 fadds    EC20102A   1     AFS       fp1=fp0,fp2,fcr
   47| 005AA4 bl       480015CD   1     CALL      fp1=PCdecoder<float,PCmap<float,24,void>,1>::decode(float, unsigned int),3,(PCdecoder<float,PCmap<float,24,void>,1>).rns198.",gr3,fp1,gr5,#ProcAlias",PCdecoder<float,PCmap<float,24,void>,1>::decode(float, unsigned int)",fcr",#MX_TEMP21",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   47| 005AA8 ori      60000000   1
   23| 005AAC lwz      80010090   1     L4Z       gr0=<a21:d144:l4>(gr1,144)
   23| 005AB0 lwz      80A10094   1     L4Z       gr5=<a21:d148:l4>(gr1,148)
   23| 005AB4 ld       E8610098   1     L8        gr3=<a21:d152:l8>(gr1,152)
   32| 005AB8 addi     3AD60001   1     AI        gr22=gr22,1
   48| 005ABC stfsu    D4350004   1     STFSU     gr21,(float).rns94.(gr21,4)=fp1
   32| 005AC0 cmpld    7C36E840   1     CL8       cr0=gr22,gr29
   23| 005AC4 and      7C042838   1     N         gr4=gr0,gr5
   23| 005AC8 rldicr   78841764   1     SLL8      gr4=gr4,2
   23| 005ACC addi     38A50001   1     AI        gr5=gr5,1
   23| 005AD0 stfsx    7C23252E   1     STFS      (float).rns94.(gr3,gr4,0)=fp1
   23| 005AD4 stw      90A10094   1     ST4Z      <a21:d148:l4>(gr1,148)=gr5
   23| 005AD8 rlwinm   54A4003E   1     RN4       gr4=gr5,0,0xFFFFFFFF
   32| 005ADC bc       4180FF2C   1     BT        CL.1424,cr0,0x8/llt,taken=80%(80,20)
   31| 005AE0 addi     3B180001   1     AI        gr24=gr24,1
   32| 005AE4 add      7FDECA14   1     A         gr30=gr30,gr25
   31| 005AE8 cmpld    7C38E040   1     CL8       cr0=gr24,gr28
    0| 005AEC add      7EF7CA14   1     A         gr23=gr23,gr25
   31| 005AF0 bc       4180FEA0   1     BT        CL.1418,cr0,0x8/llt,taken=80%(80,20)
   30| 005AF4 addi     3A940001   1     AI        gr20=gr20,1
   30| 005AF8 cmpld    7C34D840   1     CL8       cr0=gr20,gr27
   30| 005AFC bc       4180FE30   1     BT        CL.1412,cr0,0x8/llt,taken=80%(80,20)
   30|                              CL.1414:
   52| 005B00 cmpdi    2C3A0000   1     C8        cr0=gr26,0
   52| 005B04 bc       4082007C   1     BF        CL.4919,cr0,0x4/eq,taken=40%(40,60)
   35|                              CL.1434:
   53| 005B08 ld       E86100A8   1     L8        gr3=rm(gr1,168)
   53| 005B0C cmpdi    2C230000   1     C8        cr0=gr3,0
   53| 005B10 bc       41820024   1     BT        CL.1437,cr0,0x4/eq,taken=30%(30,70)
   53| 005B14 ld       E8830000   1     L8        gr4=(RCmodel)[]@0.rns112.(gr3,0)
   53| 005B18 ld       E8840008   1     L8        gr4=((*)();__vftTypeGCCV3).rns19.(gr4,8)
   53| 005B1C ld       E8040000   1     L8        gr0=#fnc_adr(gr4,0)
   53| 005B20 ld       E9640010   1     L8        gr11=#new_env(gr4,16)
   53| 005B24 mtspr    7C0903A6   1     LCTR      ctr=gr0
   53| 005B28 ld       E8440008   1     CALL      gr3=gr4,1,(char).rns108.",gr3,#ProcAlias",fcr",#MX_TEMP21",(()vf).rns203.",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr",#fnc_adr,#cur_toc,ctr,gr11,#new_env,#(glue_dr_n,0,(()vf).rns203."
   53| 005B2C bcctrl   4E800421   1
   53| 005B30 ld       E8410028   1
   53|                              CL.1437:
   11| 005B34 ld       E8610098   1     L8        gr3=<a21:d152:l8>(gr1,152)
   11| 005B38 bl       48000001   1     CALL      _ZdaPv,1,(char).rns108.",gr3,#ProcAlias",_ZdaPv",fcr",#MX_TEMP21",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   11| 005B3C ori      60000000   1
   54| 005B40 ld       E9810150   1     L8        gr12=#stack(gr1,336)
   54| 005B44 addi     38210140   1     AI        gr1=gr1,320
   54| 005B48 ld       EA81FFA0   1     L8        gr20=#stack(gr1,-96)
   54| 005B4C ld       EAA1FFA8   1     L8        gr21=#stack(gr1,-88)
   54| 005B50 ld       EAC1FFB0   1     L8        gr22=#stack(gr1,-80)
   54| 005B54 mtspr    7D8803A6   1     LLR       lr=gr12
   54| 005B58 ld       EAE1FFB8   1     L8        gr23=#stack(gr1,-72)
   54| 005B5C ld       EB01FFC0   1     L8        gr24=#stack(gr1,-64)
   54| 005B60 ld       EB21FFC8   1     L8        gr25=#stack(gr1,-56)
   54| 005B64 ld       EB41FFD0   1     L8        gr26=#stack(gr1,-48)
   54| 005B68 ld       EB61FFD8   1     L8        gr27=#stack(gr1,-40)
   54| 005B6C ld       EB81FFE0   1     L8        gr28=#stack(gr1,-32)
   54| 005B70 ld       EBA1FFE8   1     L8        gr29=#stack(gr1,-24)
   54| 005B74 ld       EBC1FFF0   1     L8        gr30=#stack(gr1,-16)
   54| 005B78 ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
   54| 005B7C bclr     4E800020   1     BA        lr
    0|                              CL.4919:
   35| 005B80 or       7F43D378   1     LR        gr3=gr26
   35| 005B84 bl       48000001   1     CALL      _ZdlPv,1,(char).rns201.",gr3,#ProcAlias",_ZdlPv",fcr",#MX_TEMP21",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   35| 005B88 ori      60000000   1
    0| 005B8C b        4BFFFF7C   1     B         CL.1434,-1
   30|                              CL.1460:
   31| 005B90 lwz      80A10088   1     L4Z       gr5=<a21:d136:l4>(gr1,136)
    0| 005B94 lwz      80C10084   1     L4Z       gr6=<a21:d132:l4>(gr1,132)
   31| 005B98 cmplwi   28050001   1     CL4       cr0=gr5,1
    0| 005B9C cmplwi   28860001   1     CL4       cr1=gr6,1
   31| 005BA0 bc       418201B4   1     BT        CL.1511,cr0,0x4/eq,taken=50%(0,0)
   31| 005BA4 bc       418600CC   1     BT        CL.1501,cr1,0x4/eq,taken=50%(0,0)
    0| 005BA8 addi     38E5FFFF   1     AI        gr7=gr5,-1
    0| 005BAC addi     38C6FFFF   1     AI        gr6=gr6,-1
   31| 005BB0 addi     38A00000   1     LI        gr5=0
    0| 005BB4 rlwinm   54E7003E   1     RN4       gr7=gr7,0,0xFFFFFFFF
    0| 005BB8 rlwinm   54C8003E   1     RN4       gr8=gr6,0,0xFFFFFFFF
   31|                              CL.1462:
    0| 005BBC lfs      C0010080   1     LFS       fp0=<a21:d128:l4>(gr1,128)
   23| 005BC0 and      7C062038   1     N         gr6=gr0,gr4
   23| 005BC4 rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 005BC8 addi     39240001   1     AI        gr9=gr4,1
   24| 005BCC or       7FE4FB78   1     LR        gr4=gr31
   23| 005BD0 rlwinm   552A003E   1     RN4       gr10=gr9,0,0xFFFFFFFF
   23| 005BD4 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
    0| 005BD8 ori      60210000   1     XNOP      
    0| 005BDC ori      60210000   1     XNOP      
   22|                              CL.1463:
   23| 005BE0 rldicl   78860020   1     RN8       gr6=gr4,0,0xFFFFFFFF
   24| 005BE4 addi     38840001   1     AI        gr4=gr4,1
   23| 005BE8 add      7CC65214   1     A         gr6=gr6,gr10
   24| 005BEC cmpld    7C243840   1     CL8       cr0=gr4,gr7
   23| 005BF0 and      7C063038   1     N         gr6=gr0,gr6
   23| 005BF4 rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 005BF8 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
   24| 005BFC bc       4180FFE4   1     BT        CL.1463,cr0,0x8/llt,taken=80%(80,20)
   24| 005C00 add      7C874A14   1     A         gr4=gr7,gr9
    0| 005C04 mtspr    7F8903A6   1     LCTR      ctr=gr28
   24| 005C08 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   31|                              CL.1465:
   30| 005C0C lfs      C0010080   1     LFS       fp0=<a21:d128:l4>(gr1,128)
    0| 005C10 and      7C062038   1     N         gr6=gr0,gr4
   23| 005C14 rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 005C18 addi     39240001   1     AI        gr9=gr4,1
   24| 005C1C or       7FE4FB78   1     LR        gr4=gr31
   23| 005C20 rlwinm   552A003E   1     RN4       gr10=gr9,0,0xFFFFFFFF
   23| 005C24 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
    0| 005C28 ori      60210000   1     XNOP      
    0| 005C2C ori      60210000   1     XNOP      
   22|                              CL.1466:
   23| 005C30 rldicl   78860020   1     RN8       gr6=gr4,0,0xFFFFFFFF
   24| 005C34 addi     38840001   1     AI        gr4=gr4,1
   23| 005C38 add      7CC65214   1     A         gr6=gr6,gr10
   24| 005C3C cmpld    7C244040   1     CL8       cr0=gr4,gr8
   23| 005C40 and      7C063038   1     N         gr6=gr0,gr6
   23| 005C44 rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 005C48 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
   24| 005C4C bc       4180FFE4   1     BT        CL.1466,cr0,0x8/llt,taken=80%(80,20)
   24| 005C50 add      7CC84A14   1     A         gr6=gr8,gr9
   24| 005C54 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   31| 005C58 bc       4200FFB4   1     BCT       ctr=CL.1465,taken=100%(100,0)
   30| 005C5C addi     38A50001   1     AI        gr5=gr5,1
   30| 005C60 cmpld    7C25D840   1     CL8       cr0=gr5,gr27
   30| 005C64 bc       4180FF58   1     BT        CL.1462,cr0,0x8/llt,taken=80%(80,20)
   24|                              CL.4926:
   24| 005C68 stw      90C10094   1     ST4Z      <a21:d148:l4>(gr1,148)=gr6
   30| 005C6C b        4BFFFE94   1     B         CL.1414,-1
   30|                              CL.1501:
    0| 005C70 addi     38E5FFFF   1     AI        gr7=gr5,-1
    0| 005C74 rlwinm   56C6F87E   1     RN4       gr6=gr22,31,0x7FFFFFFF
   31| 005C78 addi     38A00000   1     LI        gr5=0
    0| 005C7C rlwinm   54E7003E   1     RN4       gr7=gr7,0,0xFFFFFFFF
    0| 005C80 rldicl   7B8807E1   1     RN8_R     gr8,cr0=gr28,0,0x1
    0| 005C84 cmpdi    2F260000   1     C8        cr6=gr6,0
   31|                              CL.1503:
    0| 005C88 lfs      C0010080   1     LFS       fp0=<a21:d128:l4>(gr1,128)
   23| 005C8C and      7C082038   1     N         gr8=gr0,gr4
   23| 005C90 rldicr   79081764   1     SLL8      gr8=gr8,2
   23| 005C94 addi     39440001   1     AI        gr10=gr4,1
   23| 005C98 or       7C892378   1     LR        gr9=gr4
   23| 005C9C rlwinm   554B003E   1     RN4       gr11=gr10,0,0xFFFFFFFF
   24| 005CA0 or       7FE4FB78   1     LR        gr4=gr31
   23| 005CA4 stfsx    7C03452E   1     STFS      (float).rns94.(gr3,gr8,0)=fp0
    0| 005CA8 ori      60210000   1     XNOP      
    0| 005CAC ori      60210000   1     XNOP      
   22|                              CL.1504:
   23| 005CB0 rldicl   78880020   1     RN8       gr8=gr4,0,0xFFFFFFFF
   24| 005CB4 addi     38840001   1     AI        gr4=gr4,1
   23| 005CB8 add      7D085A14   1     A         gr8=gr8,gr11
   24| 005CBC cmpld    7CA43840   1     CL8       cr1=gr4,gr7
   23| 005CC0 and      7C084038   1     N         gr8=gr0,gr8
   23| 005CC4 rldicr   79081764   1     SLL8      gr8=gr8,2
   23| 005CC8 stfsx    7C03452E   1     STFS      (float).rns94.(gr3,gr8,0)=fp0
   24| 005CCC bc       4184FFE4   1     BT        CL.1504,cr1,0x8/llt,taken=80%(80,20)
   24| 005CD0 add      7C875214   1     A         gr4=gr7,gr10
    0| 005CD4 mtspr    7CC903A6   1     LCTR      ctr=gr6
   24| 005CD8 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
    0| 005CDC bc       4182002C   1     BT        CL.2954,cr0,0x4/eq,taken=50%(0,0)
   23| 005CE0 lfs      C0010080   1     LFS       fp0=<a21:d128:l4>(gr1,128)
   23| 005CE4 addi     39290002   1     AI        gr9=gr9,2
   23| 005CE8 and      7C082038   1     N         gr8=gr0,gr4
   23| 005CEC rldicr   79081764   1     SLL8      gr8=gr8,2
   23| 005CF0 add      7D274A14   1     A         gr9=gr7,gr9
   23| 005CF4 addi     39440001   1     AI        gr10=gr4,1
   23| 005CF8 rlwinm   5524003E   1     RN4       gr4=gr9,0,0xFFFFFFFF
   23| 005CFC stfsx    7C03452E   1     STFS      (float).rns94.(gr3,gr8,0)=fp0
    0| 005D00 bc       419A0040   1     BT        CL.2955,cr6,0x4/eq,taken=20%(20,80)
    0| 005D04 ori      60210000   1     XNOP      
    0|                              CL.2954:
   31|                              CL.1506:
   23| 005D08 lfs      C0010080   1     LFS       fp0=<a21:d128:l4>(gr1,128)
   23| 005D0C and      7C082038   1     N         gr8=gr0,gr4
   23| 005D10 rldicr   79081764   1     SLL8      gr8=gr8,2
   23| 005D14 addi     39240001   1     AI        gr9=gr4,1
   23| 005D18 rlwinm   5524003E   1     RN4       gr4=gr9,0,0xFFFFFFFF
   23| 005D1C addi     39290001   1     AI        gr9=gr9,1
   23| 005D20 and      7C0A2038   1     N         gr10=gr0,gr4
   23| 005D24 stfsx    7C03452E   1     STFS      (float).rns94.(gr3,gr8,0)=fp0
   23| 005D28 lfs      C0010080   1     LFS       fp0=<a21:d128:l4>(gr1,128)
   23| 005D2C rldicr   79481764   1     SLL8      gr8=gr10,2
   23| 005D30 addi     39440001   1     AI        gr10=gr4,1
   23| 005D34 rlwinm   5524003E   1     RN4       gr4=gr9,0,0xFFFFFFFF
   23| 005D38 stfsx    7C03452E   1     STFS      (float).rns94.(gr3,gr8,0)=fp0
   31| 005D3C bc       4200FFCC   1     BCT       ctr=CL.1506,taken=100%(100,0)
    0|                              CL.2955:
   30| 005D40 addi     38A50001   1     AI        gr5=gr5,1
   30| 005D44 cmpld    7CA5D840   1     CL8       cr1=gr5,gr27
   30| 005D48 bc       4184FF40   1     BT        CL.1503,cr1,0x8/llt,taken=80%(80,20)
   31| 005D4C stw      91410094   1     ST4Z      <a21:d148:l4>(gr1,148)=gr10
   30| 005D50 b        4BFFFDB0   1     B         CL.1414,-1
   30|                              CL.1511:
   31| 005D54 bc       41860088   1     BT        CL.1521,cr1,0x4/eq,taken=50%(0,0)
    0| 005D58 addi     38C6FFFF   1     AI        gr6=gr6,-1
   31| 005D5C addi     38A00000   1     LI        gr5=0
    0| 005D60 rlwinm   54C7003E   1     RN4       gr7=gr6,0,0xFFFFFFFF
   31|                              CL.1513:
    0| 005D64 lfs      C0010080   1     LFS       fp0=<a21:d128:l4>(gr1,128)
   23| 005D68 and      7C062038   1     N         gr6=gr0,gr4
   23| 005D6C rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 005D70 addi     38840001   1     AI        gr4=gr4,1
    0| 005D74 mtspr    7F8903A6   1     LCTR      ctr=gr28
   23| 005D78 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   23| 005D7C stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
   31|                              CL.1516:
   30| 005D80 lfs      C0010080   1     LFS       fp0=<a21:d128:l4>(gr1,128)
   23| 005D84 and      7C062038   1     N         gr6=gr0,gr4
   23| 005D88 rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 005D8C addi     39040001   1     AI        gr8=gr4,1
   24| 005D90 or       7FE4FB78   1     LR        gr4=gr31
   23| 005D94 rlwinm   5509003E   1     RN4       gr9=gr8,0,0xFFFFFFFF
   23| 005D98 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
    0| 005D9C ori      60210000   1     XNOP      
   22|                              CL.1517:
   23| 005DA0 rldicl   78860020   1     RN8       gr6=gr4,0,0xFFFFFFFF
   24| 005DA4 addi     38840001   1     AI        gr4=gr4,1
   23| 005DA8 add      7CC64A14   1     A         gr6=gr6,gr9
   24| 005DAC cmpld    7C243840   1     CL8       cr0=gr4,gr7
   23| 005DB0 and      7C063038   1     N         gr6=gr0,gr6
   23| 005DB4 rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 005DB8 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
   24| 005DBC bc       4180FFE4   1     BT        CL.1517,cr0,0x8/llt,taken=80%(80,20)
   24| 005DC0 add      7CC74214   1     A         gr6=gr7,gr8
   24| 005DC4 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   31| 005DC8 bc       4200FFB8   1     BCT       ctr=CL.1516,taken=100%(100,0)
   30| 005DCC addi     38A50001   1     AI        gr5=gr5,1
   30| 005DD0 cmpld    7C25D840   1     CL8       cr0=gr5,gr27
   30| 005DD4 bc       4180FF90   1     BT        CL.1513,cr0,0x8/llt,taken=80%(80,20)
   24| 005DD8 b        4BFFFE90   1     B         CL.4926,-1
   30|                              CL.1521:
    0| 005DDC rlwinm   56C5F87E   1     RN4       gr5=gr22,31,0x7FFFFFFF
    0| 005DE0 rldicl   7B8607E1   1     RN8_R     gr6,cr0=gr28,0,0x1
    0| 005DE4 cmpdi    2CA50000   1     C8        cr1=gr5,0
   31|                              CL.1522:
    0| 005DE8 lfs      C0010080   1     LFS       fp0=<a21:d128:l4>(gr1,128)
   23| 005DEC and      7C062038   1     N         gr6=gr0,gr4
   23| 005DF0 rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 005DF4 addi     39040001   1     AI        gr8=gr4,1
   23| 005DF8 or       7C872378   1     LR        gr7=gr4
   23| 005DFC rlwinm   5504003E   1     RN4       gr4=gr8,0,0xFFFFFFFF
    0| 005E00 mtspr    7CA903A6   1     LCTR      ctr=gr5
   23| 005E04 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
    0| 005E08 bc       41820024   1     BT        CL.2957,cr0,0x4/eq,taken=50%(0,0)
   23| 005E0C lfs      C0010080   1     LFS       fp0=<a21:d128:l4>(gr1,128)
   23| 005E10 and      7C840038   1     N         gr4=gr4,gr0
   23| 005E14 rldicr   78861764   1     SLL8      gr6=gr4,2
   23| 005E18 addi     38870002   1     AI        gr4=gr7,2
   23| 005E1C rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   23| 005E20 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
    0| 005E24 bc       4186003C   1     BT        CL.2958,cr1,0x4/eq,taken=20%(20,80)
    0| 005E28 ori      60210000   1     XNOP      
    0|                              CL.2957:
   31|                              CL.1525:
   23| 005E2C lfs      C0010080   1     LFS       fp0=<a21:d128:l4>(gr1,128)
   23| 005E30 and      7C062038   1     N         gr6=gr0,gr4
   23| 005E34 rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 005E38 addi     38840001   1     AI        gr4=gr4,1
   23| 005E3C rlwinm   5487003E   1     RN4       gr7=gr4,0,0xFFFFFFFF
   23| 005E40 addi     38840001   1     AI        gr4=gr4,1
   23| 005E44 and      7C073838   1     N         gr7=gr0,gr7
   23| 005E48 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
   23| 005E4C lfs      C0010080   1     LFS       fp0=<a21:d128:l4>(gr1,128)
   23| 005E50 rldicr   78E61764   1     SLL8      gr6=gr7,2
   23| 005E54 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   23| 005E58 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
   31| 005E5C bc       4200FFD0   1     BCT       ctr=CL.1525,taken=100%(100,0)
    0|                              CL.2958:
   30| 005E60 addi     3BFF0001   1     AI        gr31=gr31,1
   30| 005E64 cmpld    7F3FD840   1     CL8       cr6=gr31,gr27
   30| 005E68 bc       4198FF80   1     BT        CL.1522,cr6,0x8/llt,taken=80%(80,20)
   30|                              CL.2800:
   30| 005E6C stw      90810094   1     ST4Z      <a21:d148:l4>(gr1,148)=gr4
   30| 005E70 b        4BFFFC90   1     B         CL.1414,-1
   30|                              CL.1472:
    0| 005E74 lwz      80A10088   1     L4Z       gr5=<a21:d136:l4>(gr1,136)
    0| 005E78 cmplwi   28050001   1     CL4       cr0=gr5,1
   31| 005E7C bc       418600DC   1     BT        CL.1484,cr1,0x4/eq,taken=50%(0,0)
   31| 005E80 bc       41820060   1     BT        CL.1532,cr0,0x4/eq,taken=50%(0,0)
    0| 005E84 addi     38A5FFFF   1     AI        gr5=gr5,-1
    0| 005E88 mtspr    7F6903A6   1     LCTR      ctr=gr27
    0| 005E8C rlwinm   54A6003E   1     RN4       gr6=gr5,0,0xFFFFFFFF
   31|                              CL.1474:
    0| 005E90 lfs      C0010080   1     LFS       fp0=<a21:d128:l4>(gr1,128)
   23| 005E94 and      7C052038   1     N         gr5=gr0,gr4
   23| 005E98 rldicr   78A51764   1     SLL8      gr5=gr5,2
   23| 005E9C addi     38E40001   1     AI        gr7=gr4,1
   24| 005EA0 or       7FE4FB78   1     LR        gr4=gr31
   23| 005EA4 rlwinm   54E8003E   1     RN4       gr8=gr7,0,0xFFFFFFFF
   23| 005EA8 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
    0| 005EAC ori      60210000   1     XNOP      
   22|                              CL.1475:
   23| 005EB0 rldicl   78850020   1     RN8       gr5=gr4,0,0xFFFFFFFF
   24| 005EB4 addi     38840001   1     AI        gr4=gr4,1
   23| 005EB8 add      7CA54214   1     A         gr5=gr5,gr8
   24| 005EBC cmpld    7C243040   1     CL8       cr0=gr4,gr6
   23| 005EC0 and      7C052838   1     N         gr5=gr0,gr5
   23| 005EC4 rldicr   78A51764   1     SLL8      gr5=gr5,2
   23| 005EC8 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
   24| 005ECC bc       4180FFE4   1     BT        CL.1475,cr0,0x8/llt,taken=80%(80,20)
   24| 005ED0 add      7C863A14   1     A         gr4=gr6,gr7
   24| 005ED4 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   30| 005ED8 bc       4200FFB8   1     BCT       ctr=CL.1474,taken=100%(100,0)
   30| 005EDC b        4BFFFF90   1     B         CL.2800,-1
   30|                              CL.1532:
    0| 005EE0 rlwinm   56A5F87E   1     RN4       gr5=gr21,31,0x7FFFFFFF
    0| 005EE4 rldicl   7B6607E1   1     RN8_R     gr6,cr0=gr27,0,0x1
    0| 005EE8 cmpdi    2CA50000   1     C8        cr1=gr5,0
    0| 005EEC mtspr    7CA903A6   1     LCTR      ctr=gr5
    0| 005EF0 bc       41820028   1     BT        CL.2960,cr0,0x4/eq,taken=50%(0,0)
    0| 005EF4 lfs      C0010080   1     LFS       fp0=<a21:d128:l4>(gr1,128)
   23| 005EF8 and      7C052038   1     N         gr5=gr0,gr4
   23| 005EFC rldicr   78A51764   1     SLL8      gr5=gr5,2
   23| 005F00 addi     38E40001   1     AI        gr7=gr4,1
   23| 005F04 rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   23| 005F08 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
    0| 005F0C bc       41860044   1     BT        CL.2961,cr1,0x4/eq,taken=20%(20,80)
    0| 005F10 ori      60210000   1     XNOP      
    0| 005F14 ori      60210000   1     XNOP      
    0|                              CL.2960:
   31|                              CL.1534:
    0| 005F18 lfs      C0010080   1     LFS       fp0=<a21:d128:l4>(gr1,128)
   23| 005F1C and      7C052038   1     N         gr5=gr0,gr4
   23| 005F20 rldicr   78A51764   1     SLL8      gr5=gr5,2
   23| 005F24 addi     38C40001   1     AI        gr6=gr4,1
   23| 005F28 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   23| 005F2C addi     38C60001   1     AI        gr6=gr6,1
   23| 005F30 and      7C072038   1     N         gr7=gr0,gr4
   23| 005F34 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
    0| 005F38 lfs      C0010080   1     LFS       fp0=<a21:d128:l4>(gr1,128)
   23| 005F3C rldicr   78E51764   1     SLL8      gr5=gr7,2
   23| 005F40 addi     38E40001   1     AI        gr7=gr4,1
   23| 005F44 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   23| 005F48 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
   30| 005F4C bc       4200FFCC   1     BCT       ctr=CL.1534,taken=100%(100,0)
    0|                              CL.2961:
   30| 005F50 stw      90E10094   1     ST4Z      <a21:d148:l4>(gr1,148)=gr7
   30| 005F54 b        4BFFFBAC   1     B         CL.1414,-1
   30|                              CL.1484:
   31| 005F58 bc       41820068   1     BT        CL.1539,cr0,0x4/eq,taken=50%(0,0)
    0| 005F5C addi     38A5FFFF   1     AI        gr5=gr5,-1
    0| 005F60 mtspr    7F6903A6   1     LCTR      ctr=gr27
    0| 005F64 rlwinm   54A6003E   1     RN4       gr6=gr5,0,0xFFFFFFFF
   31|                              CL.1485:
    0| 005F68 lfs      C0010080   1     LFS       fp0=<a21:d128:l4>(gr1,128)
   23| 005F6C and      7C052038   1     N         gr5=gr0,gr4
   23| 005F70 rldicr   78A51764   1     SLL8      gr5=gr5,2
   23| 005F74 addi     38E40001   1     AI        gr7=gr4,1
   24| 005F78 or       7FE4FB78   1     LR        gr4=gr31
   23| 005F7C rlwinm   54E8003E   1     RN4       gr8=gr7,0,0xFFFFFFFF
   23| 005F80 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
    0| 005F84 ori      60210000   1     XNOP      
    0| 005F88 ori      60210000   1     XNOP      
    0| 005F8C ori      60210000   1     XNOP      
   22|                              CL.1486:
   23| 005F90 rldicl   78850020   1     RN8       gr5=gr4,0,0xFFFFFFFF
   24| 005F94 addi     38840001   1     AI        gr4=gr4,1
   23| 005F98 add      7CA54214   1     A         gr5=gr5,gr8
   24| 005F9C cmpld    7C243040   1     CL8       cr0=gr4,gr6
   23| 005FA0 and      7C052838   1     N         gr5=gr0,gr5
   23| 005FA4 rldicr   78A51764   1     SLL8      gr5=gr5,2
   23| 005FA8 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
   24| 005FAC bc       4180FFE4   1     BT        CL.1486,cr0,0x8/llt,taken=80%(80,20)
   24| 005FB0 add      7C863A14   1     A         gr4=gr6,gr7
   24| 005FB4 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   30| 005FB8 bc       4200FFB0   1     BCT       ctr=CL.1485,taken=100%(100,0)
    0| 005FBC b        4BFFFEB0   1     B         CL.2800,-1
   30|                              CL.1539:
    0| 005FC0 rlwinm   56A5F87E   1     RN4       gr5=gr21,31,0x7FFFFFFF
    0| 005FC4 rldicl   7B6607E1   1     RN8_R     gr6,cr0=gr27,0,0x1
    0| 005FC8 cmpdi    2CA50000   1     C8        cr1=gr5,0
    0| 005FCC mtspr    7CA903A6   1     LCTR      ctr=gr5
    0| 005FD0 bc       41820028   1     BT        CL.2963,cr0,0x4/eq,taken=50%(0,0)
    0| 005FD4 lfs      C0010080   1     LFS       fp0=<a21:d128:l4>(gr1,128)
   23| 005FD8 and      7C052038   1     N         gr5=gr0,gr4
   23| 005FDC rldicr   78A51764   1     SLL8      gr5=gr5,2
   23| 005FE0 addi     38E40001   1     AI        gr7=gr4,1
   23| 005FE4 rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   23| 005FE8 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
    0| 005FEC bc       4186FF64   1     BT        CL.2961,cr1,0x4/eq,taken=20%(20,80)
    0| 005FF0 ori      60210000   1     XNOP      
    0| 005FF4 ori      60210000   1     XNOP      
    0|                              CL.2963:
   31|                              CL.1541:
    0| 005FF8 lfs      C0010080   1     LFS       fp0=<a21:d128:l4>(gr1,128)
   23| 005FFC and      7C052038   1     N         gr5=gr0,gr4
   23| 006000 rldicr   78A51764   1     SLL8      gr5=gr5,2
   23| 006004 addi     38C40001   1     AI        gr6=gr4,1
   23| 006008 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   23| 00600C addi     38C60001   1     AI        gr6=gr6,1
   23| 006010 and      7C072038   1     N         gr7=gr0,gr4
   23| 006014 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
    0| 006018 lfs      C0010080   1     LFS       fp0=<a21:d128:l4>(gr1,128)
   23| 00601C rldicr   78E51764   1     SLL8      gr5=gr7,2
   23| 006020 addi     38E40001   1     AI        gr7=gr4,1
   23| 006024 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   23| 006028 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
   30| 00602C bc       4200FFCC   1     BCT       ctr=CL.1541,taken=100%(100,0)
   30| 006030 b        4BFFFF20   1     B         CL.2961,-1
    0|                              CL.4918:
   24| 006034 addi     38000001   1     LI        gr0=1
   24| 006038 addi     38800000   1     LI        gr4=0
   24| 00603C stb      980100C3   1     ST1Z      <a21:d195:l1>(gr1,195)=gr0
   24| 006040 addi     38A00031   1     LI        gr5=49
   24| 006044 addi     38C00010   1     LI        gr6=16
   24| 006048 addi     38E00400   1     LI        gr7=1024
   24| 00604C bl       48000001   1     CALL      gr3=_ZN9RCqsmodelC1Ebjjj,5,(char).rns193.",gr3-gr7,#ProcAlias",_ZN9RCqsmodelC1Ebjjj",fcr",#MX_TEMP21",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   24| 006050 ori      60000000   1
   24| 006054 stb      9BE100C3   1     ST1Z      <a21:d195:l1>(gr1,195)=gr31
    0| 006058 ld       EB4100A0   1     L8        gr26=__474(gr1,160)
    0| 00605C b        4BFFF7AC   1     B         CL.1404,-1
     |               Tag Table
     | 006060        00000000 00092A41 800C0500 00000000 000008F0 00000001
     | 006078        000000C0 002A5F5A 31326465 636F6D70 72657373 33644966
     | 006090        4C6A3234 45457650 39524364 65636F64 65725054 5F6A6A6A
     |               Instruction count          572
     |               Straight-line exec time    572
 GPR's set/used:   ssus ssss ssss s---  ---- ssss ssss ssss
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ----
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     decompress3d<float,32>(RCdecoder *, float *, unsigned int, unsigned int, unsigned int)
     | 000000                           AKA       _Z12decompress3dIfLj32EEvP9RCdecoderPT_jjj
   14|                                  PROC      rd,data,nx,ny,nz,gr3-gr7
    0| 0060B0 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 0060B4 std      FBC1FFF0   1     ST8       #stack(gr1,-16)=gr30
    0| 0060B8 std      FBA1FFE8   1     ST8       #stack(gr1,-24)=gr29
    0| 0060BC std      FB81FFE0   1     ST8       #stack(gr1,-32)=gr28
    0| 0060C0 std      FB61FFD8   1     ST8       #stack(gr1,-40)=gr27
    0| 0060C4 std      FB41FFD0   1     ST8       #stack(gr1,-48)=gr26
    0| 0060C8 std      FB21FFC8   1     ST8       #stack(gr1,-56)=gr25
    0| 0060CC std      FB01FFC0   1     ST8       #stack(gr1,-64)=gr24
    0| 0060D0 std      FAE1FFB8   1     ST8       #stack(gr1,-72)=gr23
    0| 0060D4 std      FAC1FFB0   1     ST8       #stack(gr1,-80)=gr22
    0| 0060D8 std      FAA1FFA8   1     ST8       #stack(gr1,-88)=gr21
    0| 0060DC std      FA81FFA0   1     ST8       #stack(gr1,-96)=gr20
    0| 0060E0 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 0060E4 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 0060E8 stdu     F821FEC1   1     ST8U      gr1,#stack(gr1,-320)=gr1
    0| 0060EC or       7C771B78   1     LR        gr23=gr3
   24| 0060F0 addi     38600048   1     LI        gr3=72
   53| 0060F4 std      F8410028   1     ST8       #cur_toc(gr1,40)=gr2
    0| 0060F8 ld       E9020000   1     L8        gr8=.$STATIC(gr2,0)
    0| 0060FC addi     3BE00000   1     LI        gr31=0
    0| 006100 or       7CB82B78   1     LR        gr24=gr5
    0| 006104 stw      93E100C0   1     ST4Z      <a22:d192:l4>(gr1,192)=gr31
    0| 006108 std      FBE100D0   1     ST8       <a22:d208:l8>(gr1,208)=gr31
    0| 00610C or       7C9E2378   1     LR        gr30=gr4
    0| 006110 addi     380802A0   1     AI        gr0=gr8,672
    0| 006114 stw      93E100D8   1     ST4Z      <a22:d216:l4>(gr1,216)=gr31
    0| 006118 std      F80100C8   1     ST8       <a22:d200:l8>(gr1,200)=gr0
    0| 00611C or       7CB92B78   1     LR        gr25=gr5
    0| 006120 rlwinm   54BD003E   1     RN4       gr29=gr5,0,0xFFFFFFFF
    0| 006124 or       7CD63378   1     LR        gr22=gr6
    0| 006128 rlwinm   54DC003E   1     RN4       gr28=gr6,0,0xFFFFFFFF
    0| 00612C or       7CF53B78   1     LR        gr21=gr7
    0| 006130 rlwinm   54FB003E   1     RN4       gr27=gr7,0,0xFFFFFFFF
   24| 006134 bl       48000001   1     CALL      gr3=_Znwm,1,gr3,#ProcAlias",_Znwm",fcr",#MX_TEMP22",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   24| 006138 ori      60000000   1
   24| 00613C or       7C7A1B79   1     LR_R      gr26,cr0=gr3
   24| 006140 std      F86100A0   1     ST8       __529(gr1,160)=gr3
   24| 006144 bc       40820830   1     BF        CL.4526,cr0,0x4/eq,taken=40%(40,60)
   24|                              CL.1565:
   25| 006148 addi     38600018   1     LI        gr3=24
   25| 00614C bl       48000001   1     CALL      gr3=_Znwm,1,gr3,#ProcAlias",_Znwm",fcr",#MX_TEMP22",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   25| 006150 ori      60000000   1
   25| 006154 std      FB4100A8   1     ST8       rm(gr1,168)=gr26
   25| 006158 or       7C7A1B79   1     LR_R      gr26,cr0=gr3
   25| 00615C bc       41820010   1     BT        CL.1568,cr0,0x4/eq,taken=50%(0,0)
   34| 006160 std      FAFA0008   1     ST8       (PCdecoder<float,PCmap<float,32,void>,1>).rd@8.rns222.(gr26,8)=gr23
   34| 006164 addi     380100A8   1     AI        gr0=gr1,168
   34| 006168 std      F81A0010   1     ST8       (PCdecoder<float,PCmap<float,32,void>,1>).rm@10.rns223.(gr26,16)=gr0
   34|                              CL.1568:
    9| 00616C addi     381D0001   1     AI        gr0=gr29,1
    9| 006170 addi     387C0001   1     AI        gr3=gr28,1
    9| 006174 addi     38800001   1     LI        gr4=1
    9| 006178 mulld    7C0019D2   1     M         gr0=gr0,gr3
    9| 00617C std      F8810080   1     ST8       f.|zero@0#760|dx@4#761_22(gr1,128)=gr4
    9| 006180 stw      9001008C   1     ST4Z      <a22:d140:l4>(gr1,140)=gr0
    9| 006184 addi     38780001   1     AI        gr3=gr24,1
   45| 006188 add      7C80EA14   1     A         gr4=gr0,gr29
    9| 00618C stw      90610088   1     ST4Z      <a22:d136:l4>(gr1,136)=gr3
   45| 006190 addi     38640002   1     AI        gr3=gr4,2
   45| 006194 addi     38840001   1     AI        gr4=gr4,1
   45| 006198 and      7C602038   1     N         gr0=gr3,gr4
   45| 00619C rlwinm   5483003E   1     RN4       gr3=gr4,0,0xFFFFFFFF
   45| 0061A0 cmpwi    2C000000   1     C4        cr0=gr0,0
    0| 0061A4 addi     38030001   1     AI        gr0=gr3,1
   45| 0061A8 bc       41820018   1     BT        CL.1572,cr0,0x4/eq,taken=20%(20,80)
   45|                              CL.1570:
    9| 0061AC or       7C001B78   1     O         gr0=gr0,gr3
    9| 0061B0 rldicl   78030020   1     RN8       gr3=gr0,0,0xFFFFFFFF
   45| 0061B4 addi     38030001   1     AI        gr0=gr3,1
   45| 0061B8 and      7C640039   1     N_R       gr4,cr0=gr3,gr0
   45| 0061BC bc       4082FFF0   1     BF        CL.1570,cr0,0x4/eq,taken=80%(80,20)
   45|                              CL.1572:
   47| 0061C0 stw      90610090   1     ST4Z      <a22:d144:l4>(gr1,144)=gr3
   10| 0061C4 stw      93E10094   1     ST4Z      <a22:d148:l4>(gr1,148)=gr31
   10| 0061C8 rldic    78031788   1     RN8       gr3=gr0,2,0x3FFFFFFFC
   10| 0061CC bl       48000001   1     CALL      gr3=_Znam,1,gr3,#ProcAlias",_Znam",fcr",#MX_TEMP22",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   10| 0061D0 ori      60000000   1
   10| 0061D4 addi     38000002   1     LI        gr0=2
   24| 0061D8 lwz      80A1008C   1     L4Z       gr5=<a22:d140:l4>(gr1,140)
   10| 0061DC stb      980100C3   1     ST1Z      <a22:d195:l1>(gr1,195)=gr0
   23| 0061E0 lfs      C0010080   1     LFS       fp0=<a22:d128:l4>(gr1,128)
   10| 0061E4 std      F8610098   1     ST8       <a22:d152:l8>(gr1,152)=gr3
   23| 0061E8 lwz      80010090   1     L4Z       gr0=<a22:d144:l4>(gr1,144)
   23| 0061EC lwz      80C10094   1     L4Z       gr6=<a22:d148:l4>(gr1,148)
   24| 0061F0 cmplwi   28050001   1     CL4       cr0=gr5,1
   24| 0061F4 addi     3905FFFF   1     AI        gr8=gr5,-1
   23| 0061F8 and      7C043038   1     N         gr4=gr0,gr6
   23| 0061FC rldicr   78841764   1     SLL8      gr4=gr4,2
   23| 006200 addi     38E60001   1     AI        gr7=gr6,1
   23| 006204 stfsx    7C03252E   1     STFS      (float).rns210.(gr3,gr4,0)=fp0
   23| 006208 stw      90E10094   1     ST4Z      <a22:d148:l4>(gr1,148)=gr7
   23| 00620C rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   24| 006210 bc       4182003C   1     BT        CL.1606,cr0,0x4/eq,taken=20%(20,80)
   24| 006214 addi     38E00000   1     LI        gr7=0
    0| 006218 rlwinm   5509003E   1     RN4       gr9=gr8,0,0xFFFFFFFF
    0| 00621C ori      60210000   1     XNOP      
   22|                              CL.1576:
   23| 006220 rldicl   78E80020   1     RN8       gr8=gr7,0,0xFFFFFFFF
   24| 006224 addi     38E70001   1     AI        gr7=gr7,1
   23| 006228 add      7D044214   1     A         gr8=gr4,gr8
   24| 00622C cmpld    7C274840   1     CL8       cr0=gr7,gr9
   23| 006230 and      7C084038   1     N         gr8=gr0,gr8
   23| 006234 rldicr   79081764   1     SLL8      gr8=gr8,2
   23| 006238 stfsx    7C03452E   1     STFS      (float).rns210.(gr3,gr8,0)=fp0
   24| 00623C bc       4180FFE4   1     BT        CL.1576,cr0,0x8/llt,taken=80%(80,20)
   24| 006240 add      7C853214   1     A         gr4=gr5,gr6
   24| 006244 stw      90810094   1     ST4Z      <a22:d148:l4>(gr1,148)=gr4
   24| 006248 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   24|                              CL.1606:
   31| 00624C cmpdi    2C3B0000   1     C8        cr0=gr27,0
   31| 006250 bc       418201F0   1     BT        CL.1575,cr0,0x4/eq,taken=50%(0,0)
   31| 006254 cmpdi    2C3C0000   1     C8        cr0=gr28,0
    0| 006258 cmpdi    2CBD0000   1     C8        cr1=gr29,0
   31| 00625C bc       41820558   1     BT        CL.1633,cr0,0x4/eq,taken=50%(0,0)
   31| 006260 bc       41860270   1     BT        CL.1621,cr1,0x4/eq,taken=50%(0,0)
   31| 006264 addi     3A800000   1     LI        gr20=0
    0| 006268 rldic    7B391788   1     RN8       gr25=gr25,2,0x3FFFFFFFC
   31|                              CL.1573:
   24| 00626C lwz      80A10088   1     L4Z       gr5=<a22:d136:l4>(gr1,136)
    0| 006270 lfs      C0010080   1     LFS       fp0=<a22:d128:l4>(gr1,128)
   23| 006274 and      7C062038   1     N         gr6=gr0,gr4
   23| 006278 rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 00627C addi     38E40001   1     AI        gr7=gr4,1
   23| 006280 or       7C882378   1     LR        gr8=gr4
   24| 006284 cmplwi   28050001   1     CL4       cr0=gr5,1
   24| 006288 addi     3925FFFF   1     AI        gr9=gr5,-1
   23| 00628C rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   23| 006290 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
   24| 006294 bc       41820034   1     BT        CL.1607,cr0,0x4/eq,taken=20%(20,80)
   24| 006298 or       7FE6FB78   1     LR        gr6=gr31
    0| 00629C rlwinm   5529003E   1     RN4       gr9=gr9,0,0xFFFFFFFF
   22|                              CL.1582:
   23| 0062A0 rldicl   78C70020   1     RN8       gr7=gr6,0,0xFFFFFFFF
   24| 0062A4 addi     38C60001   1     AI        gr6=gr6,1
   23| 0062A8 add      7CE43A14   1     A         gr7=gr4,gr7
   24| 0062AC cmpld    7C264840   1     CL8       cr0=gr6,gr9
   23| 0062B0 and      7C073838   1     N         gr7=gr0,gr7
   23| 0062B4 rldicr   78E71764   1     SLL8      gr7=gr7,2
   23| 0062B8 stfsx    7C033D2E   1     STFS      (float).rns94.(gr3,gr7,0)=fp0
   24| 0062BC bc       4180FFE4   1     BT        CL.1582,cr0,0x8/llt,taken=80%(80,20)
   24| 0062C0 add      7C854214   1     A         gr4=gr5,gr8
   24| 0062C4 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   24|                              CL.1607:
   31| 0062C8 or       7FF8FB78   1     LR        gr24=gr31
    0| 0062CC addi     3AFEFFFC   1     AI        gr23=gr30,-4
   31|                              CL.1579:
   24| 0062D0 lwz      80A10084   1     L4Z       gr5=<a22:d132:l4>(gr1,132)
   30| 0062D4 lfs      C0010080   1     LFS       fp0=<a22:d128:l4>(gr1,128)
   23| 0062D8 and      7C062038   1     N         gr6=gr0,gr4
   23| 0062DC rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 0062E0 addi     38E40001   1     AI        gr7=gr4,1
   23| 0062E4 or       7C882378   1     LR        gr8=gr4
   24| 0062E8 addi     3925FFFF   1     AI        gr9=gr5,-1
   23| 0062EC stw      90E10094   1     ST4Z      <a22:d148:l4>(gr1,148)=gr7
   24| 0062F0 cmplwi   28050001   1     CL4       cr0=gr5,1
   23| 0062F4 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
   23| 0062F8 rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   24| 0062FC bc       41820040   1     BT        CL.1608,cr0,0x4/eq,taken=20%(20,80)
   24| 006300 or       7FE6FB78   1     LR        gr6=gr31
    0| 006304 rlwinm   5529003E   1     RN4       gr9=gr9,0,0xFFFFFFFF
    0| 006308 ori      60210000   1     XNOP      
    0| 00630C ori      60210000   1     XNOP      
   22|                              CL.1588:
   23| 006310 rldicl   78C70020   1     RN8       gr7=gr6,0,0xFFFFFFFF
   24| 006314 addi     38C60001   1     AI        gr6=gr6,1
   23| 006318 add      7CE43A14   1     A         gr7=gr4,gr7
   24| 00631C cmpld    7C264840   1     CL8       cr0=gr6,gr9
   23| 006320 and      7C073838   1     N         gr7=gr0,gr7
   23| 006324 rldicr   78E71764   1     SLL8      gr7=gr7,2
   23| 006328 stfsx    7C033D2E   1     STFS      (float).rns94.(gr3,gr7,0)=fp0
   24| 00632C bc       4180FFE4   1     BT        CL.1588,cr0,0x8/llt,taken=80%(80,20)
   24| 006330 add      7C854214   1     A         gr4=gr5,gr8
   24| 006334 stw      90810094   1     ST4Z      <a22:d148:l4>(gr1,148)=gr4
   24| 006338 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   24|                              CL.1608:
   31| 00633C or       7FF6FB78   1     LR        gr22=gr31
   48| 006340 or       7EF5BB78   1     LR        gr21=gr23
    0| 006344 ori      60210000   1     XNOP      
   31|                              CL.1585:
   47| 006348 lwz      81010088   1     L4Z       gr8=<a22:d136:l4>(gr1,136)
    0| 00634C lwz      80C10084   1     L4Z       gr6=<a22:d132:l4>(gr1,132)
   47| 006350 lwz      8121008C   1     L4Z       gr9=<a22:d140:l4>(gr1,140)
   47| 006354 addi     38A00000   1     LI        gr5=0
   47| 006358 subf     7D482050   1     S         gr10=gr4,gr8
   47| 00635C subf     7D662050   1     S         gr11=gr4,gr6
   47| 006360 subf     7CE95050   1     S         gr7=gr10,gr9
   47| 006364 and      7C065838   1     N         gr6=gr0,gr11
   47| 006368 and      7C073838   1     N         gr7=gr0,gr7
   47| 00636C rldicr   78C61764   1     SLL8      gr6=gr6,2
   47| 006370 rldicr   78E71764   1     SLL8      gr7=gr7,2
   47| 006374 lfsx     7C23342E   1     LFS       fp1=(float).rns94.(gr3,gr6,0)
   47| 006378 lfsx     7C433C2E   1     LFS       fp2=(float).rns94.(gr3,gr7,0)
   47| 00637C and      7C065038   1     N         gr6=gr0,gr10
   47| 006380 rldicr   78C61764   1     SLL8      gr6=gr6,2
   47| 006384 subf     7CE95850   1     S         gr7=gr11,gr9
   47| 006388 lfsx     7C03342E   1     LFS       fp0=(float).rns94.(gr3,gr6,0)
   47| 00638C and      7C063838   1     N         gr6=gr0,gr7
   47| 006390 rldicr   78C61764   1     SLL8      gr6=gr6,2
   47| 006394 fsubs    EC211028   1     SFS       fp1=fp1,fp2,fcr
   47| 006398 subf     7C892050   1     S         gr4=gr4,gr9
   47| 00639C lfsx     7C43342E   1     LFS       fp2=(float).rns94.(gr3,gr6,0)
   47| 0063A0 and      7C042038   1     N         gr4=gr0,gr4
   47| 0063A4 rldicr   78841764   1     SLL8      gr4=gr4,2
   47| 0063A8 subf     7CC85850   1     S         gr6=gr11,gr8
   47| 0063AC fadds    EC21002A   1     AFS       fp1=fp1,fp0,fcr
   47| 0063B0 lfsx     7C03242E   1     LFS       fp0=(float).rns94.(gr3,gr4,0)
   47| 0063B4 and      7C043038   1     N         gr4=gr0,gr6
   47| 0063B8 rldicr   78841764   1     SLL8      gr4=gr4,2
   47| 0063BC subf     7CC93050   1     S         gr6=gr6,gr9
   47| 0063C0 lfsx     7C63242E   1     LFS       fp3=(float).rns94.(gr3,gr4,0)
   47| 0063C4 fsubs    EC211028   1     SFS       fp1=fp1,fp2,fcr
   47| 0063C8 and      7C003038   1     N         gr0=gr0,gr6
   47| 0063CC rldicr   78041764   1     SLL8      gr4=gr0,2
   47| 0063D0 lfsx     7C43242E   1     LFS       fp2=(float).rns94.(gr3,gr4,0)
   47| 0063D4 or       7F43D378   1     LR        gr3=gr26
   47| 0063D8 fadds    EC01002A   1     AFS       fp0=fp1,fp0,fcr
   47| 0063DC fsubs    EC001828   1     SFS       fp0=fp0,fp3,fcr
   47| 0063E0 fadds    EC20102A   1     AFS       fp1=fp0,fp2,fcr
   47| 0063E4 bl       48000F4D   1     CALL      fp1=PCdecoder<float,PCmap<float,32,void>,1>::decode(float, unsigned int),3,(PCdecoder<float,PCmap<float,32,void>,1>).rns214.",gr3,fp1,gr5,#ProcAlias",PCdecoder<float,PCmap<float,32,void>,1>::decode(float, unsigned int)",fcr",#MX_TEMP22",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   47| 0063E8 ori      60000000   1
   23| 0063EC lwz      80010090   1     L4Z       gr0=<a22:d144:l4>(gr1,144)
   23| 0063F0 lwz      80A10094   1     L4Z       gr5=<a22:d148:l4>(gr1,148)
   23| 0063F4 ld       E8610098   1     L8        gr3=<a22:d152:l8>(gr1,152)
   32| 0063F8 addi     3AD60001   1     AI        gr22=gr22,1
   48| 0063FC stfsu    D4350004   1     STFSU     gr21,(float).rns94.(gr21,4)=fp1
   32| 006400 cmpld    7C36E840   1     CL8       cr0=gr22,gr29
   23| 006404 and      7C042838   1     N         gr4=gr0,gr5
   23| 006408 rldicr   78841764   1     SLL8      gr4=gr4,2
   23| 00640C addi     38A50001   1     AI        gr5=gr5,1
   23| 006410 stfsx    7C23252E   1     STFS      (float).rns94.(gr3,gr4,0)=fp1
   23| 006414 stw      90A10094   1     ST4Z      <a22:d148:l4>(gr1,148)=gr5
   23| 006418 rlwinm   54A4003E   1     RN4       gr4=gr5,0,0xFFFFFFFF
   32| 00641C bc       4180FF2C   1     BT        CL.1585,cr0,0x8/llt,taken=80%(80,20)
   31| 006420 addi     3B180001   1     AI        gr24=gr24,1
   32| 006424 add      7FDECA14   1     A         gr30=gr30,gr25
   31| 006428 cmpld    7C38E040   1     CL8       cr0=gr24,gr28
    0| 00642C add      7EF7CA14   1     A         gr23=gr23,gr25
   31| 006430 bc       4180FEA0   1     BT        CL.1579,cr0,0x8/llt,taken=80%(80,20)
   30| 006434 addi     3A940001   1     AI        gr20=gr20,1
   30| 006438 cmpld    7C34D840   1     CL8       cr0=gr20,gr27
   30| 00643C bc       4180FE30   1     BT        CL.1573,cr0,0x8/llt,taken=80%(80,20)
   30|                              CL.1575:
   52| 006440 cmpdi    2C3A0000   1     C8        cr0=gr26,0
   52| 006444 bc       4082007C   1     BF        CL.4527,cr0,0x4/eq,taken=40%(40,60)
   35|                              CL.1595:
   53| 006448 ld       E86100A8   1     L8        gr3=rm(gr1,168)
   53| 00644C cmpdi    2C230000   1     C8        cr0=gr3,0
   53| 006450 bc       41820024   1     BT        CL.1598,cr0,0x4/eq,taken=30%(30,70)
   53| 006454 ld       E8830000   1     L8        gr4=(RCmodel)[]@0.rns112.(gr3,0)
   53| 006458 ld       E8840008   1     L8        gr4=((*)();__vftTypeGCCV3).rns19.(gr4,8)
   53| 00645C ld       E8040000   1     L8        gr0=#fnc_adr(gr4,0)
   53| 006460 ld       E9640010   1     L8        gr11=#new_env(gr4,16)
   53| 006464 mtspr    7C0903A6   1     LCTR      ctr=gr0
   53| 006468 ld       E8440008   1     CALL      gr3=gr4,1,(char).rns108.",gr3,#ProcAlias",fcr",#MX_TEMP22",(()vf).rns219.",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr",#fnc_adr,#cur_toc,ctr,gr11,#new_env,#(glue_dr_n,0,(()vf).rns219."
   53| 00646C bcctrl   4E800421   1
   53| 006470 ld       E8410028   1
   53|                              CL.1598:
   11| 006474 ld       E8610098   1     L8        gr3=<a22:d152:l8>(gr1,152)
   11| 006478 bl       48000001   1     CALL      _ZdaPv,1,(char).rns108.",gr3,#ProcAlias",_ZdaPv",fcr",#MX_TEMP22",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   11| 00647C ori      60000000   1
   54| 006480 ld       E9810150   1     L8        gr12=#stack(gr1,336)
   54| 006484 addi     38210140   1     AI        gr1=gr1,320
   54| 006488 ld       EA81FFA0   1     L8        gr20=#stack(gr1,-96)
   54| 00648C ld       EAA1FFA8   1     L8        gr21=#stack(gr1,-88)
   54| 006490 ld       EAC1FFB0   1     L8        gr22=#stack(gr1,-80)
   54| 006494 mtspr    7D8803A6   1     LLR       lr=gr12
   54| 006498 ld       EAE1FFB8   1     L8        gr23=#stack(gr1,-72)
   54| 00649C ld       EB01FFC0   1     L8        gr24=#stack(gr1,-64)
   54| 0064A0 ld       EB21FFC8   1     L8        gr25=#stack(gr1,-56)
   54| 0064A4 ld       EB41FFD0   1     L8        gr26=#stack(gr1,-48)
   54| 0064A8 ld       EB61FFD8   1     L8        gr27=#stack(gr1,-40)
   54| 0064AC ld       EB81FFE0   1     L8        gr28=#stack(gr1,-32)
   54| 0064B0 ld       EBA1FFE8   1     L8        gr29=#stack(gr1,-24)
   54| 0064B4 ld       EBC1FFF0   1     L8        gr30=#stack(gr1,-16)
   54| 0064B8 ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
   54| 0064BC bclr     4E800020   1     BA        lr
    0|                              CL.4527:
   35| 0064C0 or       7F43D378   1     LR        gr3=gr26
   35| 0064C4 bl       48000001   1     CALL      _ZdlPv,1,(char).rns217.",gr3,#ProcAlias",_ZdlPv",fcr",#MX_TEMP22",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   35| 0064C8 ori      60000000   1
    0| 0064CC b        4BFFFF7C   1     B         CL.1595,-1
   30|                              CL.1621:
   31| 0064D0 lwz      80A10088   1     L4Z       gr5=<a22:d136:l4>(gr1,136)
    0| 0064D4 lwz      80C10084   1     L4Z       gr6=<a22:d132:l4>(gr1,132)
   31| 0064D8 cmplwi   28050001   1     CL4       cr0=gr5,1
    0| 0064DC cmplwi   28860001   1     CL4       cr1=gr6,1
   31| 0064E0 bc       418201B4   1     BT        CL.1672,cr0,0x4/eq,taken=50%(0,0)
   31| 0064E4 bc       418600CC   1     BT        CL.1662,cr1,0x4/eq,taken=50%(0,0)
    0| 0064E8 addi     38E5FFFF   1     AI        gr7=gr5,-1
    0| 0064EC addi     38C6FFFF   1     AI        gr6=gr6,-1
   31| 0064F0 addi     38A00000   1     LI        gr5=0
    0| 0064F4 rlwinm   54E7003E   1     RN4       gr7=gr7,0,0xFFFFFFFF
    0| 0064F8 rlwinm   54C8003E   1     RN4       gr8=gr6,0,0xFFFFFFFF
   31|                              CL.1623:
    0| 0064FC lfs      C0010080   1     LFS       fp0=<a22:d128:l4>(gr1,128)
   23| 006500 and      7C062038   1     N         gr6=gr0,gr4
   23| 006504 rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 006508 addi     39240001   1     AI        gr9=gr4,1
   24| 00650C or       7FE4FB78   1     LR        gr4=gr31
   23| 006510 rlwinm   552A003E   1     RN4       gr10=gr9,0,0xFFFFFFFF
   23| 006514 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
    0| 006518 ori      60210000   1     XNOP      
    0| 00651C ori      60210000   1     XNOP      
   22|                              CL.1624:
   23| 006520 rldicl   78860020   1     RN8       gr6=gr4,0,0xFFFFFFFF
   24| 006524 addi     38840001   1     AI        gr4=gr4,1
   23| 006528 add      7CC65214   1     A         gr6=gr6,gr10
   24| 00652C cmpld    7C243840   1     CL8       cr0=gr4,gr7
   23| 006530 and      7C063038   1     N         gr6=gr0,gr6
   23| 006534 rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 006538 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
   24| 00653C bc       4180FFE4   1     BT        CL.1624,cr0,0x8/llt,taken=80%(80,20)
   24| 006540 add      7C874A14   1     A         gr4=gr7,gr9
    0| 006544 mtspr    7F8903A6   1     LCTR      ctr=gr28
   24| 006548 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   31|                              CL.1626:
   30| 00654C lfs      C0010080   1     LFS       fp0=<a22:d128:l4>(gr1,128)
    0| 006550 and      7C062038   1     N         gr6=gr0,gr4
   23| 006554 rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 006558 addi     39240001   1     AI        gr9=gr4,1
   24| 00655C or       7FE4FB78   1     LR        gr4=gr31
   23| 006560 rlwinm   552A003E   1     RN4       gr10=gr9,0,0xFFFFFFFF
   23| 006564 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
    0| 006568 ori      60210000   1     XNOP      
    0| 00656C ori      60210000   1     XNOP      
   22|                              CL.1627:
   23| 006570 rldicl   78860020   1     RN8       gr6=gr4,0,0xFFFFFFFF
   24| 006574 addi     38840001   1     AI        gr4=gr4,1
   23| 006578 add      7CC65214   1     A         gr6=gr6,gr10
   24| 00657C cmpld    7C244040   1     CL8       cr0=gr4,gr8
   23| 006580 and      7C063038   1     N         gr6=gr0,gr6
   23| 006584 rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 006588 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
   24| 00658C bc       4180FFE4   1     BT        CL.1627,cr0,0x8/llt,taken=80%(80,20)
   24| 006590 add      7CC84A14   1     A         gr6=gr8,gr9
   24| 006594 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   31| 006598 bc       4200FFB4   1     BCT       ctr=CL.1626,taken=100%(100,0)
   30| 00659C addi     38A50001   1     AI        gr5=gr5,1
   30| 0065A0 cmpld    7C25D840   1     CL8       cr0=gr5,gr27
   30| 0065A4 bc       4180FF58   1     BT        CL.1623,cr0,0x8/llt,taken=80%(80,20)
   24|                              CL.4534:
   24| 0065A8 stw      90C10094   1     ST4Z      <a22:d148:l4>(gr1,148)=gr6
   30| 0065AC b        4BFFFE94   1     B         CL.1575,-1
   30|                              CL.1662:
    0| 0065B0 addi     38E5FFFF   1     AI        gr7=gr5,-1
    0| 0065B4 rlwinm   56C6F87E   1     RN4       gr6=gr22,31,0x7FFFFFFF
   31| 0065B8 addi     38A00000   1     LI        gr5=0
    0| 0065BC rlwinm   54E7003E   1     RN4       gr7=gr7,0,0xFFFFFFFF
    0| 0065C0 rldicl   7B8807E1   1     RN8_R     gr8,cr0=gr28,0,0x1
    0| 0065C4 cmpdi    2F260000   1     C8        cr6=gr6,0
   31|                              CL.1664:
    0| 0065C8 lfs      C0010080   1     LFS       fp0=<a22:d128:l4>(gr1,128)
   23| 0065CC and      7C082038   1     N         gr8=gr0,gr4
   23| 0065D0 rldicr   79081764   1     SLL8      gr8=gr8,2
   23| 0065D4 addi     39440001   1     AI        gr10=gr4,1
   23| 0065D8 or       7C892378   1     LR        gr9=gr4
   23| 0065DC rlwinm   554B003E   1     RN4       gr11=gr10,0,0xFFFFFFFF
   24| 0065E0 or       7FE4FB78   1     LR        gr4=gr31
   23| 0065E4 stfsx    7C03452E   1     STFS      (float).rns94.(gr3,gr8,0)=fp0
    0| 0065E8 ori      60210000   1     XNOP      
    0| 0065EC ori      60210000   1     XNOP      
   22|                              CL.1665:
   23| 0065F0 rldicl   78880020   1     RN8       gr8=gr4,0,0xFFFFFFFF
   24| 0065F4 addi     38840001   1     AI        gr4=gr4,1
   23| 0065F8 add      7D085A14   1     A         gr8=gr8,gr11
   24| 0065FC cmpld    7CA43840   1     CL8       cr1=gr4,gr7
   23| 006600 and      7C084038   1     N         gr8=gr0,gr8
   23| 006604 rldicr   79081764   1     SLL8      gr8=gr8,2
   23| 006608 stfsx    7C03452E   1     STFS      (float).rns94.(gr3,gr8,0)=fp0
   24| 00660C bc       4184FFE4   1     BT        CL.1665,cr1,0x8/llt,taken=80%(80,20)
   24| 006610 add      7C875214   1     A         gr4=gr7,gr10
    0| 006614 mtspr    7CC903A6   1     LCTR      ctr=gr6
   24| 006618 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
    0| 00661C bc       4182002C   1     BT        CL.2727,cr0,0x4/eq,taken=50%(0,0)
   23| 006620 lfs      C0010080   1     LFS       fp0=<a22:d128:l4>(gr1,128)
   23| 006624 addi     39290002   1     AI        gr9=gr9,2
   23| 006628 and      7C082038   1     N         gr8=gr0,gr4
   23| 00662C rldicr   79081764   1     SLL8      gr8=gr8,2
   23| 006630 add      7D274A14   1     A         gr9=gr7,gr9
   23| 006634 addi     39440001   1     AI        gr10=gr4,1
   23| 006638 rlwinm   5524003E   1     RN4       gr4=gr9,0,0xFFFFFFFF
   23| 00663C stfsx    7C03452E   1     STFS      (float).rns94.(gr3,gr8,0)=fp0
    0| 006640 bc       419A0040   1     BT        CL.2728,cr6,0x4/eq,taken=20%(20,80)
    0| 006644 ori      60210000   1     XNOP      
    0|                              CL.2727:
   31|                              CL.1667:
   23| 006648 lfs      C0010080   1     LFS       fp0=<a22:d128:l4>(gr1,128)
   23| 00664C and      7C082038   1     N         gr8=gr0,gr4
   23| 006650 rldicr   79081764   1     SLL8      gr8=gr8,2
   23| 006654 addi     39240001   1     AI        gr9=gr4,1
   23| 006658 rlwinm   5524003E   1     RN4       gr4=gr9,0,0xFFFFFFFF
   23| 00665C addi     39290001   1     AI        gr9=gr9,1
   23| 006660 and      7C0A2038   1     N         gr10=gr0,gr4
   23| 006664 stfsx    7C03452E   1     STFS      (float).rns94.(gr3,gr8,0)=fp0
   23| 006668 lfs      C0010080   1     LFS       fp0=<a22:d128:l4>(gr1,128)
   23| 00666C rldicr   79481764   1     SLL8      gr8=gr10,2
   23| 006670 addi     39440001   1     AI        gr10=gr4,1
   23| 006674 rlwinm   5524003E   1     RN4       gr4=gr9,0,0xFFFFFFFF
   23| 006678 stfsx    7C03452E   1     STFS      (float).rns94.(gr3,gr8,0)=fp0
   31| 00667C bc       4200FFCC   1     BCT       ctr=CL.1667,taken=100%(100,0)
    0|                              CL.2728:
   30| 006680 addi     38A50001   1     AI        gr5=gr5,1
   30| 006684 cmpld    7CA5D840   1     CL8       cr1=gr5,gr27
   30| 006688 bc       4184FF40   1     BT        CL.1664,cr1,0x8/llt,taken=80%(80,20)
   31| 00668C stw      91410094   1     ST4Z      <a22:d148:l4>(gr1,148)=gr10
   30| 006690 b        4BFFFDB0   1     B         CL.1575,-1
   30|                              CL.1672:
   31| 006694 bc       41860088   1     BT        CL.1682,cr1,0x4/eq,taken=50%(0,0)
    0| 006698 addi     38C6FFFF   1     AI        gr6=gr6,-1
   31| 00669C addi     38A00000   1     LI        gr5=0
    0| 0066A0 rlwinm   54C7003E   1     RN4       gr7=gr6,0,0xFFFFFFFF
   31|                              CL.1674:
    0| 0066A4 lfs      C0010080   1     LFS       fp0=<a22:d128:l4>(gr1,128)
   23| 0066A8 and      7C062038   1     N         gr6=gr0,gr4
   23| 0066AC rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 0066B0 addi     38840001   1     AI        gr4=gr4,1
    0| 0066B4 mtspr    7F8903A6   1     LCTR      ctr=gr28
   23| 0066B8 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   23| 0066BC stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
   31|                              CL.1677:
   30| 0066C0 lfs      C0010080   1     LFS       fp0=<a22:d128:l4>(gr1,128)
   23| 0066C4 and      7C062038   1     N         gr6=gr0,gr4
   23| 0066C8 rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 0066CC addi     39040001   1     AI        gr8=gr4,1
   24| 0066D0 or       7FE4FB78   1     LR        gr4=gr31
   23| 0066D4 rlwinm   5509003E   1     RN4       gr9=gr8,0,0xFFFFFFFF
   23| 0066D8 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
    0| 0066DC ori      60210000   1     XNOP      
   22|                              CL.1678:
   23| 0066E0 rldicl   78860020   1     RN8       gr6=gr4,0,0xFFFFFFFF
   24| 0066E4 addi     38840001   1     AI        gr4=gr4,1
   23| 0066E8 add      7CC64A14   1     A         gr6=gr6,gr9
   24| 0066EC cmpld    7C243840   1     CL8       cr0=gr4,gr7
   23| 0066F0 and      7C063038   1     N         gr6=gr0,gr6
   23| 0066F4 rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 0066F8 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
   24| 0066FC bc       4180FFE4   1     BT        CL.1678,cr0,0x8/llt,taken=80%(80,20)
   24| 006700 add      7CC74214   1     A         gr6=gr7,gr8
   24| 006704 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   31| 006708 bc       4200FFB8   1     BCT       ctr=CL.1677,taken=100%(100,0)
   30| 00670C addi     38A50001   1     AI        gr5=gr5,1
   30| 006710 cmpld    7C25D840   1     CL8       cr0=gr5,gr27
   30| 006714 bc       4180FF90   1     BT        CL.1674,cr0,0x8/llt,taken=80%(80,20)
   24| 006718 b        4BFFFE90   1     B         CL.4534,-1
   30|                              CL.1682:
    0| 00671C rlwinm   56C5F87E   1     RN4       gr5=gr22,31,0x7FFFFFFF
    0| 006720 rldicl   7B8607E1   1     RN8_R     gr6,cr0=gr28,0,0x1
    0| 006724 cmpdi    2CA50000   1     C8        cr1=gr5,0
   31|                              CL.1683:
    0| 006728 lfs      C0010080   1     LFS       fp0=<a22:d128:l4>(gr1,128)
   23| 00672C and      7C062038   1     N         gr6=gr0,gr4
   23| 006730 rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 006734 addi     39040001   1     AI        gr8=gr4,1
   23| 006738 or       7C872378   1     LR        gr7=gr4
   23| 00673C rlwinm   5504003E   1     RN4       gr4=gr8,0,0xFFFFFFFF
    0| 006740 mtspr    7CA903A6   1     LCTR      ctr=gr5
   23| 006744 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
    0| 006748 bc       41820024   1     BT        CL.2730,cr0,0x4/eq,taken=50%(0,0)
   23| 00674C lfs      C0010080   1     LFS       fp0=<a22:d128:l4>(gr1,128)
   23| 006750 and      7C840038   1     N         gr4=gr4,gr0
   23| 006754 rldicr   78861764   1     SLL8      gr6=gr4,2
   23| 006758 addi     38870002   1     AI        gr4=gr7,2
   23| 00675C rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   23| 006760 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
    0| 006764 bc       4186003C   1     BT        CL.2731,cr1,0x4/eq,taken=20%(20,80)
    0| 006768 ori      60210000   1     XNOP      
    0|                              CL.2730:
   31|                              CL.1686:
   23| 00676C lfs      C0010080   1     LFS       fp0=<a22:d128:l4>(gr1,128)
   23| 006770 and      7C062038   1     N         gr6=gr0,gr4
   23| 006774 rldicr   78C61764   1     SLL8      gr6=gr6,2
   23| 006778 addi     38840001   1     AI        gr4=gr4,1
   23| 00677C rlwinm   5487003E   1     RN4       gr7=gr4,0,0xFFFFFFFF
   23| 006780 addi     38840001   1     AI        gr4=gr4,1
   23| 006784 and      7C073838   1     N         gr7=gr0,gr7
   23| 006788 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
   23| 00678C lfs      C0010080   1     LFS       fp0=<a22:d128:l4>(gr1,128)
   23| 006790 rldicr   78E61764   1     SLL8      gr6=gr7,2
   23| 006794 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   23| 006798 stfsx    7C03352E   1     STFS      (float).rns94.(gr3,gr6,0)=fp0
   31| 00679C bc       4200FFD0   1     BCT       ctr=CL.1686,taken=100%(100,0)
    0|                              CL.2731:
   30| 0067A0 addi     3BFF0001   1     AI        gr31=gr31,1
   30| 0067A4 cmpld    7F3FD840   1     CL8       cr6=gr31,gr27
   30| 0067A8 bc       4198FF80   1     BT        CL.1683,cr6,0x8/llt,taken=80%(80,20)
   30|                              CL.2573:
   30| 0067AC stw      90810094   1     ST4Z      <a22:d148:l4>(gr1,148)=gr4
   30| 0067B0 b        4BFFFC90   1     B         CL.1575,-1
   30|                              CL.1633:
    0| 0067B4 lwz      80A10088   1     L4Z       gr5=<a22:d136:l4>(gr1,136)
    0| 0067B8 cmplwi   28050001   1     CL4       cr0=gr5,1
   31| 0067BC bc       418600DC   1     BT        CL.1645,cr1,0x4/eq,taken=50%(0,0)
   31| 0067C0 bc       41820060   1     BT        CL.1693,cr0,0x4/eq,taken=50%(0,0)
    0| 0067C4 addi     38A5FFFF   1     AI        gr5=gr5,-1
    0| 0067C8 mtspr    7F6903A6   1     LCTR      ctr=gr27
    0| 0067CC rlwinm   54A6003E   1     RN4       gr6=gr5,0,0xFFFFFFFF
   31|                              CL.1635:
    0| 0067D0 lfs      C0010080   1     LFS       fp0=<a22:d128:l4>(gr1,128)
   23| 0067D4 and      7C052038   1     N         gr5=gr0,gr4
   23| 0067D8 rldicr   78A51764   1     SLL8      gr5=gr5,2
   23| 0067DC addi     38E40001   1     AI        gr7=gr4,1
   24| 0067E0 or       7FE4FB78   1     LR        gr4=gr31
   23| 0067E4 rlwinm   54E8003E   1     RN4       gr8=gr7,0,0xFFFFFFFF
   23| 0067E8 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
    0| 0067EC ori      60210000   1     XNOP      
   22|                              CL.1636:
   23| 0067F0 rldicl   78850020   1     RN8       gr5=gr4,0,0xFFFFFFFF
   24| 0067F4 addi     38840001   1     AI        gr4=gr4,1
   23| 0067F8 add      7CA54214   1     A         gr5=gr5,gr8
   24| 0067FC cmpld    7C243040   1     CL8       cr0=gr4,gr6
   23| 006800 and      7C052838   1     N         gr5=gr0,gr5
   23| 006804 rldicr   78A51764   1     SLL8      gr5=gr5,2
   23| 006808 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
   24| 00680C bc       4180FFE4   1     BT        CL.1636,cr0,0x8/llt,taken=80%(80,20)
   24| 006810 add      7C863A14   1     A         gr4=gr6,gr7
   24| 006814 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   30| 006818 bc       4200FFB8   1     BCT       ctr=CL.1635,taken=100%(100,0)
   30| 00681C b        4BFFFF90   1     B         CL.2573,-1
   30|                              CL.1693:
    0| 006820 rlwinm   56A5F87E   1     RN4       gr5=gr21,31,0x7FFFFFFF
    0| 006824 rldicl   7B6607E1   1     RN8_R     gr6,cr0=gr27,0,0x1
    0| 006828 cmpdi    2CA50000   1     C8        cr1=gr5,0
    0| 00682C mtspr    7CA903A6   1     LCTR      ctr=gr5
    0| 006830 bc       41820028   1     BT        CL.2733,cr0,0x4/eq,taken=50%(0,0)
    0| 006834 lfs      C0010080   1     LFS       fp0=<a22:d128:l4>(gr1,128)
   23| 006838 and      7C052038   1     N         gr5=gr0,gr4
   23| 00683C rldicr   78A51764   1     SLL8      gr5=gr5,2
   23| 006840 addi     38E40001   1     AI        gr7=gr4,1
   23| 006844 rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   23| 006848 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
    0| 00684C bc       41860044   1     BT        CL.2734,cr1,0x4/eq,taken=20%(20,80)
    0| 006850 ori      60210000   1     XNOP      
    0| 006854 ori      60210000   1     XNOP      
    0|                              CL.2733:
   31|                              CL.1695:
    0| 006858 lfs      C0010080   1     LFS       fp0=<a22:d128:l4>(gr1,128)
   23| 00685C and      7C052038   1     N         gr5=gr0,gr4
   23| 006860 rldicr   78A51764   1     SLL8      gr5=gr5,2
   23| 006864 addi     38C40001   1     AI        gr6=gr4,1
   23| 006868 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   23| 00686C addi     38C60001   1     AI        gr6=gr6,1
   23| 006870 and      7C072038   1     N         gr7=gr0,gr4
   23| 006874 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
    0| 006878 lfs      C0010080   1     LFS       fp0=<a22:d128:l4>(gr1,128)
   23| 00687C rldicr   78E51764   1     SLL8      gr5=gr7,2
   23| 006880 addi     38E40001   1     AI        gr7=gr4,1
   23| 006884 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   23| 006888 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
   30| 00688C bc       4200FFCC   1     BCT       ctr=CL.1695,taken=100%(100,0)
    0|                              CL.2734:
   30| 006890 stw      90E10094   1     ST4Z      <a22:d148:l4>(gr1,148)=gr7
   30| 006894 b        4BFFFBAC   1     B         CL.1575,-1
   30|                              CL.1645:
   31| 006898 bc       41820068   1     BT        CL.1700,cr0,0x4/eq,taken=50%(0,0)
    0| 00689C addi     38A5FFFF   1     AI        gr5=gr5,-1
    0| 0068A0 mtspr    7F6903A6   1     LCTR      ctr=gr27
    0| 0068A4 rlwinm   54A6003E   1     RN4       gr6=gr5,0,0xFFFFFFFF
   31|                              CL.1646:
    0| 0068A8 lfs      C0010080   1     LFS       fp0=<a22:d128:l4>(gr1,128)
   23| 0068AC and      7C052038   1     N         gr5=gr0,gr4
   23| 0068B0 rldicr   78A51764   1     SLL8      gr5=gr5,2
   23| 0068B4 addi     38E40001   1     AI        gr7=gr4,1
   24| 0068B8 or       7FE4FB78   1     LR        gr4=gr31
   23| 0068BC rlwinm   54E8003E   1     RN4       gr8=gr7,0,0xFFFFFFFF
   23| 0068C0 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
    0| 0068C4 ori      60210000   1     XNOP      
    0| 0068C8 ori      60210000   1     XNOP      
    0| 0068CC ori      60210000   1     XNOP      
   22|                              CL.1647:
   23| 0068D0 rldicl   78850020   1     RN8       gr5=gr4,0,0xFFFFFFFF
   24| 0068D4 addi     38840001   1     AI        gr4=gr4,1
   23| 0068D8 add      7CA54214   1     A         gr5=gr5,gr8
   24| 0068DC cmpld    7C243040   1     CL8       cr0=gr4,gr6
   23| 0068E0 and      7C052838   1     N         gr5=gr0,gr5
   23| 0068E4 rldicr   78A51764   1     SLL8      gr5=gr5,2
   23| 0068E8 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
   24| 0068EC bc       4180FFE4   1     BT        CL.1647,cr0,0x8/llt,taken=80%(80,20)
   24| 0068F0 add      7C863A14   1     A         gr4=gr6,gr7
   24| 0068F4 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
   30| 0068F8 bc       4200FFB0   1     BCT       ctr=CL.1646,taken=100%(100,0)
    0| 0068FC b        4BFFFEB0   1     B         CL.2573,-1
   30|                              CL.1700:
    0| 006900 rlwinm   56A5F87E   1     RN4       gr5=gr21,31,0x7FFFFFFF
    0| 006904 rldicl   7B6607E1   1     RN8_R     gr6,cr0=gr27,0,0x1
    0| 006908 cmpdi    2CA50000   1     C8        cr1=gr5,0
    0| 00690C mtspr    7CA903A6   1     LCTR      ctr=gr5
    0| 006910 bc       41820028   1     BT        CL.2736,cr0,0x4/eq,taken=50%(0,0)
    0| 006914 lfs      C0010080   1     LFS       fp0=<a22:d128:l4>(gr1,128)
   23| 006918 and      7C052038   1     N         gr5=gr0,gr4
   23| 00691C rldicr   78A51764   1     SLL8      gr5=gr5,2
   23| 006920 addi     38E40001   1     AI        gr7=gr4,1
   23| 006924 rlwinm   54E4003E   1     RN4       gr4=gr7,0,0xFFFFFFFF
   23| 006928 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
    0| 00692C bc       4186FF64   1     BT        CL.2734,cr1,0x4/eq,taken=20%(20,80)
    0| 006930 ori      60210000   1     XNOP      
    0| 006934 ori      60210000   1     XNOP      
    0|                              CL.2736:
   31|                              CL.1702:
    0| 006938 lfs      C0010080   1     LFS       fp0=<a22:d128:l4>(gr1,128)
   23| 00693C and      7C052038   1     N         gr5=gr0,gr4
   23| 006940 rldicr   78A51764   1     SLL8      gr5=gr5,2
   23| 006944 addi     38C40001   1     AI        gr6=gr4,1
   23| 006948 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   23| 00694C addi     38C60001   1     AI        gr6=gr6,1
   23| 006950 and      7C072038   1     N         gr7=gr0,gr4
   23| 006954 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
    0| 006958 lfs      C0010080   1     LFS       fp0=<a22:d128:l4>(gr1,128)
   23| 00695C rldicr   78E51764   1     SLL8      gr5=gr7,2
   23| 006960 addi     38E40001   1     AI        gr7=gr4,1
   23| 006964 rlwinm   54C4003E   1     RN4       gr4=gr6,0,0xFFFFFFFF
   23| 006968 stfsx    7C032D2E   1     STFS      (float).rns94.(gr3,gr5,0)=fp0
   30| 00696C bc       4200FFCC   1     BCT       ctr=CL.1702,taken=100%(100,0)
   30| 006970 b        4BFFFF20   1     B         CL.2734,-1
    0|                              CL.4526:
   24| 006974 addi     38000001   1     LI        gr0=1
   24| 006978 addi     38800000   1     LI        gr4=0
   24| 00697C stb      980100C3   1     ST1Z      <a22:d195:l1>(gr1,195)=gr0
   24| 006980 addi     38A00041   1     LI        gr5=65
   24| 006984 addi     38C00010   1     LI        gr6=16
   24| 006988 addi     38E00400   1     LI        gr7=1024
   24| 00698C bl       48000001   1     CALL      gr3=_ZN9RCqsmodelC1Ebjjj,5,(char).rns209.",gr3-gr7,#ProcAlias",_ZN9RCqsmodelC1Ebjjj",fcr",#MX_TEMP22",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   24| 006990 ori      60000000   1
   24| 006994 stb      9BE100C3   1     ST1Z      <a22:d195:l1>(gr1,195)=gr31
    0| 006998 ld       EB4100A0   1     L8        gr26=__529(gr1,160)
    0| 00699C b        4BFFF7AC   1     B         CL.1565,-1
     |               Tag Table
     | 0069A0        00000000 00092A41 800C0500 00000000 000008F0 00000001
     | 0069B8        000000C0 002A5F5A 31326465 636F6D70 72657373 33644966
     | 0069D0        4C6A3332 45457650 39524364 65636F64 65725054 5F6A6A6A
     |               Instruction count          572
     |               Straight-line exec time    572
 GPR's set/used:   ss-s ssss ssss s---  ---- ---- ---- ---s
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ----
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     FRONT<double>::~FRONT()
     | 000000                           AKA       _ZN5FRONTIdED1Ev
   11|                                  PROC      this,gr3
    0| 0069F0 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 0069F4 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 0069F8 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 0069FC stdu     F821FF61   1     ST8U      gr1,#stack(gr1,-160)=gr1
    0| 006A00 or       7C7F1B78   1     LR        gr31=gr3
   11| 006A04 ld       E8630020   1     L8        gr3=(FRONT<double>).a@20.rns233.(gr3,32)
   11| 006A08 bl       48000001   1     CALL      _ZdaPv,1,(char).rns108.",gr3,#ProcAlias",_ZdaPv",fcr",#MX_TEMP23",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   11| 006A0C ori      60000000   1
   11| 006A10 ld       E98100B0   1     L8        gr12=#stack(gr1,176)
   11| 006A14 addi     382100A0   1     AI        gr1=gr1,160
   11| 006A18 or       7FE3FB78   1     LR        gr3=gr31
   11| 006A1C ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
   11| 006A20 mtspr    7D8803A6   1     LLR       lr=gr12
   11| 006A24 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 006A28        00000000 00092041 80010100 00000000 00000038 00105F5A
     | 006A40        4E354652 4F4E5449 64454431 4576
     |               Instruction count           14
     |               Straight-line exec time     14
 GPR's set/used:   ss-s ssss ssss s---  ---- ---- --ss ssss
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ---s
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     PCdecoder<double,PCmap<double,64,void>,1>::decode(double, unsigned int)
     | 000000                           AKA       _ZN9PCdecoderId5PCmapIdLj64EvELb1EE6decodeEdj
   47|                                  PROC      this,pred,context,gr3,fp1,gr5
    0| 006A50 stfd     DBE1FFF8   1     STFL      #stack(gr1,-8)=fp31
    0| 006A54 std      FBE1FFF0   1     ST8       #stack(gr1,-16)=gr31
    0| 006A58 std      FBC1FFE8   1     ST8       #stack(gr1,-24)=gr30
    0| 006A5C std      FBA1FFE0   1     ST8       #stack(gr1,-32)=gr29
    0| 006A60 std      FB81FFD8   1     ST8       #stack(gr1,-40)=gr28
    0| 006A64 std      FB61FFD0   1     ST8       #stack(gr1,-48)=gr27
    0| 006A68 std      FB41FFC8   1     ST8       #stack(gr1,-56)=gr26
    0| 006A6C mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 006A70 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 006A74 stdu     F821FEC1   1     ST8U      gr1,#stack(gr1,-320)=gr1
   50| 006A78 ld       E8830010   1     L8        gr4=(PCdecoder<double,PCmap<double,64,void>,1>).rm@10.rns254.(gr3,16)
    0| 006A7C fmr      FFE00890   1     LRFL      fp31=fp1
    0| 006A80 or       7C7F1B78   2     LR        gr31=gr3
   50| 006A84 ld       E8630008   1     L8        gr3=(PCdecoder<double,PCmap<double,64,void>,1>).rd@8.rns255.(gr3,8)
   50| 006A88 rldic    78A51F48   1     RN8       gr5=gr5,3,0x7FFFFFFF8
   50| 006A8C ldx      7C84282A   1     L8        gr4=(RCmodel *).rns225.(gr4,gr5,0)
   50| 006A90 bl       48000001   1     CALL      gr3=_ZN9RCdecoder6decodeEP7RCmodel,2,(char).rns108.",gr3,(char).rns108.",gr4,#ProcAlias",_ZN9RCdecoder6decodeEP7RCmodel",fcr",#MX_TEMP24",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   50| 006A94 ori      60000000   1
   51| 006A98 cmplwi   28030040   1     CL4       cr0=gr3,64
   51| 006A9C bc       408100F8   1     BF        CL.1726,cr0,0x10/lgt,taken=50%(0,0)
   53| 006AA0 addi     3B43FFBF   1     AI        gr26=gr3,-65
   53| 006AA4 ld       EBFF0008   1     L8        gr31=(PCdecoder<double,PCmap<double,64,void>,1>).rd@8.rns255.(gr31,8)
   53| 006AA8 rlwinm   575E003E   1     RN4       gr30=gr26,0,0xFFFFFFFF
    4| 006AAC addi     3BA00000   1     LI        gr29=0
    5| 006AB0 addi     3B800000   1     LI        gr28=0
    6| 006AB4 addi     3B600000   1     LI        gr27=0
    0| 006AB8 ori      60210000   1     XNOP      
    6|                              CL.1728:
    7| 006ABC cmplwi   281E0010   1     CL4       cr0=gr30,16
    7| 006AC0 bc       418100A0   1     BT        CL.3509,cr0,0x10/lgt,taken=40%(40,60)
    6| 006AC4 addi     3B7B0001   1     AI        gr27=gr27,1
    6| 006AC8 cmpldi   283B0003   1     CL8       cr0=gr27,3
    6| 006ACC bc       4180FFF0   1     BT        CL.1728,cr0,0x8/llt,taken=80%(80,20)
    0| 006AD0 ori      60210000   1     XNOP      
    0| 006AD4 ori      60210000   1     XNOP      
    0|                              CL.3506:
   12| 006AD8 or       7FE3FB78   1     LR        gr3=gr31
   12| 006ADC or       7FC4F378   1     LR        gr4=gr30
   12| 006AE0 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns108.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP24",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   12| 006AE4 ori      60000000   1
   71| 006AE8 stfd     DBE10080   1     STFL      shared(gr1,128)=fp31
   55| 006AEC addi     38000001   1     LI        gr0=1
   55| 006AF0 sld      7C63E036   1     SLL8      gr3=gr3,gr28
   55| 006AF4 sld      7C00D036   1     SLL8      gr0=gr0,gr26
   55| 006AF8 add      7C00EA14   1     A         gr0=gr0,gr29
   72| 006AFC ld       E8A10080   1     L8        gr5=shared(gr1,128)
  104| 006B00 nor      7CA428F8   1     NOR       gr4=gr5,gr5
  104| 006B04 rldicl   78840FE0   1     SRL8      gr4=gr4,63
  104| 006B08 neg      7C8400D0   1     COMP      gr4=gr4
  104| 006B0C rldicl   7884F842   1     SRL8      gr4=gr4,1
  104| 006B10 eqv      7C842A38   1     EQV       gr4=gr4,gr5
   55| 006B14 add      7C632214   1     A         gr3=gr3,gr4
   55| 006B18 add      7C601A14   1     A         gr3=gr0,gr3
  111| 006B1C rldicl   78600FE0   1     SRL8      gr0=gr3,63
  111| 006B20 neg      7C0000D0   1     COMP      gr0=gr0
  111| 006B24 rldicl   7800F842   1     SRL8      gr0=gr0,1
  113| 006B28 eqv      7C001A38   1     EQV       gr0=gr0,gr3
   87| 006B2C std      F80100A0   1     ST8       shared(gr1,160)=gr0
   88| 006B30 lfd      C82100A0   1     LFL       fp1=shared(gr1,160)
   66|                              CL.1948:
   67| 006B34 ld       E9810150   1     L8        gr12=#stack(gr1,336)
   67| 006B38 lfd      CBE10138   1     LFL       fp31=#stack(gr1,312)
   67| 006B3C addi     38210140   1     AI        gr1=gr1,320
   67| 006B40 ld       EB41FFC8   1     L8        gr26=#stack(gr1,-56)
   67| 006B44 ld       EB61FFD0   1     L8        gr27=#stack(gr1,-48)
   67| 006B48 mtspr    7D8803A6   1     LLR       lr=gr12
   67| 006B4C ld       EB81FFD8   1     L8        gr28=#stack(gr1,-40)
   67| 006B50 ld       EBA1FFE0   1     L8        gr29=#stack(gr1,-32)
   67| 006B54 ld       EBC1FFE8   1     L8        gr30=#stack(gr1,-24)
   67| 006B58 ld       EBE1FFF0   1     L8        gr31=#stack(gr1,-16)
   67| 006B5C bclr     4E800020   1     BA        lr
    0|                              CL.3509:
    3| 006B60 or       7FE3FB78   1     LR        gr3=gr31
    3| 006B64 addi     38800010   1     LI        gr4=16
    3| 006B68 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns108.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP24",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    3| 006B6C ori      60000000   1
    6| 006B70 addi     3B7B0001   1     AI        gr27=gr27,1
    8| 006B74 sld      7C60E036   1     SLL8      gr0=gr3,gr28
   10| 006B78 addi     387EFFF0   1     AI        gr3=gr30,-16
    6| 006B7C cmpldi   283B0003   1     CL8       cr0=gr27,3
    8| 006B80 add      7FBD0214   1     A         gr29=gr29,gr0
    9| 006B84 addi     3B9C0010   1     AI        gr28=gr28,16
   10| 006B88 rlwinm   547E003E   1     RN4       gr30=gr3,0,0xFFFFFFFF
    6| 006B8C bc       4080FF4C   1     BF        CL.3506,cr0,0x8/llt,taken=20%(20,80)
    6| 006B90 b        4BFFFF2C   1     B         CL.1728,-1
   57|                              CL.1726:
   58| 006B94 bc       408000D0   1     BF        CL.1734,cr0,0x8/llt,taken=30%(30,70)
   60| 006B98 subfic   2343003F   1     SFI       gr26=63,gr3,ca"
   60| 006B9C ld       EBFF0008   1     L8        gr31=(PCdecoder<double,PCmap<double,64,void>,1>).rd@8.rns255.(gr31,8)
   60| 006BA0 rlwinm   575E003E   1     RN4       gr30=gr26,0,0xFFFFFFFF
    4| 006BA4 addi     3BA00000   1     LI        gr29=0
    5| 006BA8 addi     3B800000   1     LI        gr28=0
    6| 006BAC addi     3B600000   1     LI        gr27=0
    0| 006BB0 ori      60210000   1     XNOP      
    0| 006BB4 ori      60210000   1     XNOP      
    0| 006BB8 ori      60210000   1     XNOP      
    6|                              CL.1736:
    7| 006BBC cmplwi   281E0010   1     CL4       cr0=gr30,16
    7| 006BC0 bc       41810070   1     BT        CL.3510,cr0,0x10/lgt,taken=40%(40,60)
    6| 006BC4 addi     3B7B0001   1     AI        gr27=gr27,1
    6| 006BC8 cmpldi   283B0003   1     CL8       cr0=gr27,3
    6| 006BCC bc       4180FFF0   1     BT        CL.1736,cr0,0x8/llt,taken=80%(80,20)
    0|                              CL.3508:
   12| 006BD0 or       7FE3FB78   1     LR        gr3=gr31
   12| 006BD4 or       7FC4F378   1     LR        gr4=gr30
   12| 006BD8 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns108.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP24",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   12| 006BDC ori      60000000   1
   71| 006BE0 stfd     DBE10080   1     STFL      shared(gr1,128)=fp31
   62| 006BE4 addi     38000001   1     LI        gr0=1
   62| 006BE8 sld      7C63E036   1     SLL8      gr3=gr3,gr28
   62| 006BEC sld      7C00D036   1     SLL8      gr0=gr0,gr26
   62| 006BF0 add      7C00EA14   1     A         gr0=gr0,gr29
   62| 006BF4 add      7C001A14   1     A         gr0=gr0,gr3
   72| 006BF8 ld       E8810080   1     L8        gr4=shared(gr1,128)
  104| 006BFC nor      7C8320F8   1     NOR       gr3=gr4,gr4
  104| 006C00 rldicl   78630FE0   1     SRL8      gr3=gr3,63
  104| 006C04 neg      7C6300D0   1     COMP      gr3=gr3
  104| 006C08 rldicl   7863F842   1     SRL8      gr3=gr3,1
  104| 006C0C eqv      7C632238   1     EQV       gr3=gr3,gr4
   62| 006C10 subf     7C601850   1     S         gr3=gr3,gr0
  111| 006C14 rldicl   78600FE0   1     SRL8      gr0=gr3,63
  111| 006C18 neg      7C0000D0   1     COMP      gr0=gr0
  111| 006C1C rldicl   7800F842   1     SRL8      gr0=gr0,1
  113| 006C20 eqv      7C001A38   1     EQV       gr0=gr0,gr3
   87| 006C24 std      F80100A0   1     ST8       shared(gr1,160)=gr0
   88| 006C28 lfd      C82100A0   1     LFL       fp1=shared(gr1,160)
   63| 006C2C b        4BFFFF08   1     B         CL.1948,-1
    0|                              CL.3510:
    3| 006C30 or       7FE3FB78   1     LR        gr3=gr31
    3| 006C34 addi     38800010   1     LI        gr4=16
    3| 006C38 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns108.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP24",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    3| 006C3C ori      60000000   1
    6| 006C40 addi     3B7B0001   1     AI        gr27=gr27,1
    8| 006C44 sld      7C60E036   1     SLL8      gr0=gr3,gr28
   10| 006C48 addi     387EFFF0   1     AI        gr3=gr30,-16
    6| 006C4C cmpldi   283B0003   1     CL8       cr0=gr27,3
    8| 006C50 add      7FBD0214   1     A         gr29=gr29,gr0
    9| 006C54 addi     3B9C0010   1     AI        gr28=gr28,16
   10| 006C58 rlwinm   547E003E   1     RN4       gr30=gr3,0,0xFFFFFFFF
    6| 006C5C bc       4080FF74   1     BF        CL.3508,cr0,0x8/llt,taken=20%(20,80)
    6| 006C60 b        4BFFFF5C   1     B         CL.1736,-1
   64|                              CL.1734:
   71| 006C64 stfd     DBE100C0   1     STFL      shared(gr1,192)=fp31
   67| 006C68 ld       E9810150   1     L8        gr12=#stack(gr1,336)
   67| 006C6C lfd      CBE10138   1     LFL       fp31=#stack(gr1,312)
   67| 006C70 mtspr    7D8803A6   1     LLR       lr=gr12
   72| 006C74 ld       E80100C0   1     L8        gr0=shared(gr1,192)
   87| 006C78 std      F80100E0   1     ST8       shared(gr1,224)=gr0
   88| 006C7C lfd      C82100E0   1     LFL       fp1=shared(gr1,224)
   67| 006C80 addi     38210140   1     AI        gr1=gr1,320
   67| 006C84 ld       EBE1FFF0   1     L8        gr31=#stack(gr1,-16)
   67| 006C88 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 006C8C        00000000 00092241 81060200 60000000 0000023C 002D5F5A
     | 006CA4        4E395043 6465636F 64657249 64355043 6D617049 644C6A36
     | 006CBC        34457645 4C623145 45366465 636F6465 45646A
     |               Instruction count          143
     |               Straight-line exec time    144
 GPR's set/used:   ss-s ssss ssss s---  ---- ---- ---- --ss
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ----
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     PCdecoder<float,PCmap<float,8,void>,0>::decode(float, unsigned int)
     | 000000                           AKA       _ZN9PCdecoderIf5PCmapIfLj8EvELb0EE6decodeEfj
   19|                                  PROC      this,pred,context,gr3,fp1,gr5
    0| 006CD0 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 006CD4 std      FBC1FFF0   1     ST8       #stack(gr1,-16)=gr30
    0| 006CD8 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 006CDC std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 006CE0 stdu     F821FF21   1     ST8U      gr1,#stack(gr1,-224)=gr1
    8| 006CE4 stfs     D0210080   1     STFS      shared(gr1,128)=fp1
   23| 006CE8 ld       E8030008   1     L8        gr0=(PCdecoder<float,PCmap<float,8,void>,0>).rd@8.rns261.(gr3,8)
   41| 006CEC addi     3880FFFF   1     LI        gr4=-1
   23| 006CF0 rldic    78A51F48   1     RN8       gr5=gr5,3,0x7FFFFFFF8
   41| 006CF4 rldicl   789E0020   1     RN8       gr30=gr4,0,0xFFFFFFFF
   23| 006CF8 ld       E8830010   1     L8        gr4=(PCdecoder<float,PCmap<float,8,void>,0>).rm@10.rns260.(gr3,16)
   23| 006CFC or       7C030378   1     LR        gr3=gr0
    9| 006D00 lwz      80010080   1     L4Z       gr0=shared(gr1,128)
   23| 006D04 ldx      7C84282A   1     L8        gr4=(RCmodel *).rns225.(gr4,gr5,0)
   41| 006D08 nor      7C0000F8   1     NOR       gr0=gr0,gr0
   41| 006D0C rlwinm   54050FFE   1     SRL4      gr5=gr0,31
   41| 006D10 rlwinm   5400463E   1     SRL4      gr0=gr0,24
   41| 006D14 mulld    7CA5F1D2   1     M         gr5=gr5,gr30
   41| 006D18 rlwinm   54A53E7E   1     SRL4      gr5=gr5,25
   41| 006D1C xor      7C1F2A78   1     X         gr31=gr0,gr5
   23| 006D20 bl       48000001   1     CALL      gr3=_ZN9RCdecoder6decodeEP7RCmodel,2,(char).rns108.",gr3,(char).rns108.",gr4,#ProcAlias",_ZN9RCdecoder6decodeEP7RCmodel",fcr",#MX_TEMP25",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   23| 006D24 ori      60000000   1
   25| 006D28 add      7C63FA14   1     A         gr3=gr3,gr31
   27| 006D2C ld       E98100F0   1     L8        gr12=#stack(gr1,240)
   25| 006D30 addi     3863FF01   1     AI        gr3=gr3,-255
   48| 006D34 rlwinm   5460C9FE   1     SRL4      gr0=gr3,7
   48| 006D38 mulld    7C00F1D2   1     M         gr0=gr0,gr30
   27| 006D3C mtspr    7D8803A6   1     LLR       lr=gr12
   48| 006D40 rlwinm   54003E7E   1     SRL4      gr0=gr0,25
   48| 006D44 xor      7C001A78   1     X         gr0=gr0,gr3
   50| 006D48 nor      7C0000F8   1     NOR       gr0=gr0,gr0
   50| 006D4C rlwinm   5400C00E   1     SLL4      gr0=gr0,24
   24| 006D50 stw      900100A0   1     ST4Z      shared(gr1,160)=gr0
   25| 006D54 lfs      C02100A0   1     LFS       fp1=shared(gr1,160)
   27| 006D58 addi     382100E0   1     AI        gr1=gr1,224
   27| 006D5C ld       EBC1FFF0   1     L8        gr30=#stack(gr1,-16)
   27| 006D60 ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
   27| 006D64 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 006D68        00000000 00092241 80020200 40000000 00000098 002C5F5A
     | 006D80        4E395043 6465636F 64657249 66355043 6D617049 664C6A38
     | 006D98        4576454C 62304545 36646563 6F646545 666A
     |               Instruction count           38
     |               Straight-line exec time     38
 GPR's set/used:   ss-s ssss ssss s---  ---- ---- -sss ssss
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ---s
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     PCdecoder<float,PCmap<float,16,void>,1>::decode(float, unsigned int)
     | 000000                           AKA       _ZN9PCdecoderIf5PCmapIfLj16EvELb1EE6decodeEfj
   47|                                  PROC      this,pred,context,gr3,fp1,gr5
    0| 006DB0 stfd     DBE1FFF8   1     STFL      #stack(gr1,-8)=fp31
    0| 006DB4 std      FBE1FFF0   1     ST8       #stack(gr1,-16)=gr31
    0| 006DB8 std      FBC1FFE8   1     ST8       #stack(gr1,-24)=gr30
    0| 006DBC std      FBA1FFE0   1     ST8       #stack(gr1,-32)=gr29
    0| 006DC0 std      FB81FFD8   1     ST8       #stack(gr1,-40)=gr28
    0| 006DC4 std      FB61FFD0   1     ST8       #stack(gr1,-48)=gr27
    0| 006DC8 std      FB41FFC8   1     ST8       #stack(gr1,-56)=gr26
    0| 006DCC std      FB21FFC0   1     ST8       #stack(gr1,-64)=gr25
    0| 006DD0 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 006DD4 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 006DD8 stdu     F821FEC1   1     ST8U      gr1,#stack(gr1,-320)=gr1
   50| 006DDC ld       E8830010   1     L8        gr4=(PCdecoder<float,PCmap<float,16,void>,1>).rm@10.rns270.(gr3,16)
    0| 006DE0 fmr      FFE00890   1     LRFL      fp31=fp1
    0| 006DE4 or       7C7F1B78   2     LR        gr31=gr3
   50| 006DE8 ld       E8630008   1     L8        gr3=(PCdecoder<float,PCmap<float,16,void>,1>).rd@8.rns271.(gr3,8)
   50| 006DEC rldic    78A51F48   1     RN8       gr5=gr5,3,0x7FFFFFFF8
   50| 006DF0 ldx      7C84282A   1     L8        gr4=(RCmodel *).rns225.(gr4,gr5,0)
   50| 006DF4 bl       48000001   1     CALL      gr3=_ZN9RCdecoder6decodeEP7RCmodel,2,(char).rns108.",gr3,(char).rns108.",gr4,#ProcAlias",_ZN9RCdecoder6decodeEP7RCmodel",fcr",#MX_TEMP26",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   50| 006DF8 ori      60000000   1
   51| 006DFC cmplwi   28030010   1     CL4       cr0=gr3,16
   51| 006E00 bc       40810114   1     BF        CL.1759,cr0,0x10/lgt,taken=50%(0,0)
   53| 006E04 addi     3B23FFEF   1     AI        gr25=gr3,-17
   53| 006E08 ld       EBFF0008   1     L8        gr31=(PCdecoder<float,PCmap<float,16,void>,1>).rd@8.rns271.(gr31,8)
   53| 006E0C rlwinm   573E003E   1     RN4       gr30=gr25,0,0xFFFFFFFF
    4| 006E10 addi     3BA00000   1     LI        gr29=0
    5| 006E14 addi     3B800000   1     LI        gr28=0
    6| 006E18 addi     3B600000   1     LI        gr27=0
    0| 006E1C addi     3B400001   1     LI        gr26=1
    0| 006E20 ori      60210000   1     XNOP      
    0| 006E24 ori      60210000   1     XNOP      
    0| 006E28 ori      60210000   1     XNOP      
    6|                              CL.1761:
    7| 006E2C cmplwi   281E0010   1     CL4       cr0=gr30,16
    7| 006E30 bc       418100B0   1     BT        CL.3023,cr0,0x10/lgt,taken=40%(40,60)
    6| 006E34 addi     3B7B0001   1     AI        gr27=gr27,1
    6| 006E38 cmpldi   283B0001   1     CL8       cr0=gr27,1
    6| 006E3C bc       4180FFF0   1     BT        CL.1761,cr0,0x8/llt,taken=80%(80,20)
    0| 006E40 ori      60210000   1     XNOP      
    0| 006E44 ori      60210000   1     XNOP      
    0|                              CL.3020:
   12| 006E48 or       7FE3FB78   1     LR        gr3=gr31
   12| 006E4C or       7FC4F378   1     LR        gr4=gr30
   12| 006E50 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns108.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP26",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   12| 006E54 ori      60000000   1
    8| 006E58 stfs     D3E10080   1     STFS      shared(gr1,128)=fp31
   41| 006E5C addi     3800FFFF   1     LI        gr0=-1
   55| 006E60 slw      7F44C830   1     SLL4      gr4=gr26,gr25
   41| 006E64 rldicl   78000020   1     RN8       gr0=gr0,0,0xFFFFFFFF
   55| 006E68 slw      7C63E030   1     SLL4      gr3=gr3,gr28
   55| 006E6C add      7C84EA14   1     A         gr4=gr4,gr29
    9| 006E70 lwz      80A10080   1     L4Z       gr5=shared(gr1,128)
   41| 006E74 nor      7CA528F8   1     NOR       gr5=gr5,gr5
   41| 006E78 rlwinm   54A60FFE   1     SRL4      gr6=gr5,31
   41| 006E7C rlwinm   54A5843E   1     SRL4      gr5=gr5,16
   41| 006E80 mulld    7CC601D2   1     M         gr6=gr6,gr0
   41| 006E84 rlwinm   54C67C7E   1     SRL4      gr6=gr6,17
   41| 006E88 xor      7CA53278   1     X         gr5=gr5,gr6
   55| 006E8C add      7C632A14   1     A         gr3=gr3,gr5
   55| 006E90 add      7C841A14   1     A         gr4=gr4,gr3
   48| 006E94 rlwinm   54838BFE   1     SRL4      gr3=gr4,15
   48| 006E98 mulld    7C0019D2   1     M         gr0=gr0,gr3
   48| 006E9C rlwinm   54007C7E   1     SRL4      gr0=gr0,17
   50| 006EA0 eqv      7C002238   1     EQV       gr0=gr0,gr4
   50| 006EA4 rlwinm   5400801E   1     SLL4      gr0=gr0,16
   24| 006EA8 stw      900100A0   1     ST4Z      shared(gr1,160)=gr0
   25| 006EAC lfs      C02100A0   1     LFS       fp1=shared(gr1,160)
   66|                              CL.1951:
   67| 006EB0 ld       E9810150   1     L8        gr12=#stack(gr1,336)
   67| 006EB4 lfd      CBE10138   1     LFL       fp31=#stack(gr1,312)
   67| 006EB8 addi     38210140   1     AI        gr1=gr1,320
   67| 006EBC ld       EB21FFC0   1     L8        gr25=#stack(gr1,-64)
   67| 006EC0 ld       EB41FFC8   1     L8        gr26=#stack(gr1,-56)
   67| 006EC4 mtspr    7D8803A6   1     LLR       lr=gr12
   67| 006EC8 ld       EB61FFD0   1     L8        gr27=#stack(gr1,-48)
   67| 006ECC ld       EB81FFD8   1     L8        gr28=#stack(gr1,-40)
   67| 006ED0 ld       EBA1FFE0   1     L8        gr29=#stack(gr1,-32)
   67| 006ED4 ld       EBC1FFE8   1     L8        gr30=#stack(gr1,-24)
   67| 006ED8 ld       EBE1FFF0   1     L8        gr31=#stack(gr1,-16)
   67| 006EDC bclr     4E800020   1     BA        lr
    0|                              CL.3023:
    3| 006EE0 or       7FE3FB78   1     LR        gr3=gr31
    3| 006EE4 addi     38800010   1     LI        gr4=16
    3| 006EE8 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns108.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP26",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    3| 006EEC ori      60000000   1
    6| 006EF0 addi     3B7B0001   1     AI        gr27=gr27,1
    8| 006EF4 slw      7C60E030   1     SLL4      gr0=gr3,gr28
   10| 006EF8 addi     387EFFF0   1     AI        gr3=gr30,-16
    6| 006EFC cmpldi   283B0001   1     CL8       cr0=gr27,1
    8| 006F00 add      7FBD0214   1     A         gr29=gr29,gr0
    9| 006F04 addi     3B9C0010   1     AI        gr28=gr28,16
   10| 006F08 rlwinm   547E003E   1     RN4       gr30=gr3,0,0xFFFFFFFF
    6| 006F0C bc       4080FF3C   1     BF        CL.3020,cr0,0x8/llt,taken=20%(20,80)
    6| 006F10 b        4BFFFF1C   1     B         CL.1761,-1
   57|                              CL.1759:
   58| 006F14 bc       408000E0   1     BF        CL.1767,cr0,0x8/llt,taken=30%(30,70)
   60| 006F18 subfic   2323000F   1     SFI       gr25=15,gr3,ca"
   60| 006F1C ld       EBFF0008   1     L8        gr31=(PCdecoder<float,PCmap<float,16,void>,1>).rd@8.rns271.(gr31,8)
   60| 006F20 rlwinm   573E003E   1     RN4       gr30=gr25,0,0xFFFFFFFF
    4| 006F24 addi     3BA00000   1     LI        gr29=0
    5| 006F28 addi     3B800000   1     LI        gr28=0
    6| 006F2C addi     3B600000   1     LI        gr27=0
    0| 006F30 addi     3B400001   1     LI        gr26=1
    0| 006F34 ori      60210000   1     XNOP      
    0| 006F38 ori      60210000   1     XNOP      
    6|                              CL.1769:
    7| 006F3C cmplwi   281E0010   1     CL4       cr0=gr30,16
    7| 006F40 bc       41810080   1     BT        CL.3024,cr0,0x10/lgt,taken=40%(40,60)
    6| 006F44 addi     3B7B0001   1     AI        gr27=gr27,1
    6| 006F48 cmpldi   283B0001   1     CL8       cr0=gr27,1
    6| 006F4C bc       4180FFF0   1     BT        CL.1769,cr0,0x8/llt,taken=80%(80,20)
    0| 006F50 ori      60210000   1     XNOP      
    0|                              CL.3022:
   12| 006F54 or       7FE3FB78   1     LR        gr3=gr31
   12| 006F58 or       7FC4F378   1     LR        gr4=gr30
   12| 006F5C bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns108.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP26",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   12| 006F60 ori      60000000   1
    8| 006F64 stfs     D3E10080   1     STFS      shared(gr1,128)=fp31
   62| 006F68 slw      7F44C830   1     SLL4      gr4=gr26,gr25
   62| 006F6C slw      7C63E030   1     SLL4      gr3=gr3,gr28
   62| 006F70 add      7C84EA14   1     A         gr4=gr4,gr29
   41| 006F74 addi     3800FFFF   1     LI        gr0=-1
   62| 006F78 add      7C632214   1     A         gr3=gr3,gr4
   41| 006F7C rldicl   78000020   1     RN8       gr0=gr0,0,0xFFFFFFFF
    9| 006F80 lwz      80810080   1     L4Z       gr4=shared(gr1,128)
   41| 006F84 nor      7C8420F8   1     NOR       gr4=gr4,gr4
   41| 006F88 rlwinm   54850FFE   1     SRL4      gr5=gr4,31
   41| 006F8C rlwinm   5484843E   1     SRL4      gr4=gr4,16
   41| 006F90 mulld    7CA501D2   1     M         gr5=gr5,gr0
   41| 006F94 rlwinm   54A57C7E   1     SRL4      gr5=gr5,17
   41| 006F98 xor      7C842A78   1     X         gr4=gr4,gr5
   62| 006F9C subf     7C832050   1     S         gr4=gr4,gr3
   48| 006FA0 rlwinm   54838BFE   1     SRL4      gr3=gr4,15
   48| 006FA4 mulld    7C0019D2   1     M         gr0=gr0,gr3
   48| 006FA8 rlwinm   54007C7E   1     SRL4      gr0=gr0,17
   50| 006FAC eqv      7C002238   1     EQV       gr0=gr0,gr4
   50| 006FB0 rlwinm   5400801E   1     SLL4      gr0=gr0,16
   24| 006FB4 stw      900100A0   1     ST4Z      shared(gr1,160)=gr0
   25| 006FB8 lfs      C02100A0   1     LFS       fp1=shared(gr1,160)
   63| 006FBC b        4BFFFEF4   1     B         CL.1951,-1
    0|                              CL.3024:
    3| 006FC0 or       7FE3FB78   1     LR        gr3=gr31
    3| 006FC4 addi     38800010   1     LI        gr4=16
    3| 006FC8 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns108.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP26",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    3| 006FCC ori      60000000   1
    6| 006FD0 addi     3B7B0001   1     AI        gr27=gr27,1
    8| 006FD4 slw      7C60E030   1     SLL4      gr0=gr3,gr28
   10| 006FD8 addi     387EFFF0   1     AI        gr3=gr30,-16
    6| 006FDC cmpldi   283B0001   1     CL8       cr0=gr27,1
    8| 006FE0 add      7FBD0214   1     A         gr29=gr29,gr0
    9| 006FE4 addi     3B9C0010   1     AI        gr28=gr28,16
   10| 006FE8 rlwinm   547E003E   1     RN4       gr30=gr3,0,0xFFFFFFFF
    6| 006FEC bc       4080FF68   1     BF        CL.3022,cr0,0x8/llt,taken=20%(20,80)
    6| 006FF0 b        4BFFFF4C   1     B         CL.1769,-1
   64|                              CL.1767:
    8| 006FF4 stfs     D3E100C0   1     STFS      shared(gr1,192)=fp31
   67| 006FF8 ld       E9810150   1     L8        gr12=#stack(gr1,336)
   67| 006FFC lfd      CBE10138   1     LFL       fp31=#stack(gr1,312)
   67| 007000 mtspr    7D8803A6   1     LLR       lr=gr12
    9| 007004 lwz      800100C0   1     L4Z       gr0=shared(gr1,192)
   60| 007008 rlwinm   5400001E   1     RN4       gr0=gr0,0,0xFFFF0000
   24| 00700C stw      900100E0   1     ST4Z      shared(gr1,224)=gr0
   25| 007010 lfs      C02100E0   1     LFS       fp1=shared(gr1,224)
   67| 007014 addi     38210140   1     AI        gr1=gr1,320
   67| 007018 ld       EBE1FFF0   1     L8        gr31=#stack(gr1,-16)
   67| 00701C bclr     4E800020   1     BA        lr
     |               Tag Table
     | 007020        00000000 00092241 81070200 40000000 00000270 002D5F5A
     | 007038        4E395043 6465636F 64657249 66355043 6D617049 664C6A31
     | 007050        36457645 4C623145 45366465 636F6465 45666A
     |               Instruction count          156
     |               Straight-line exec time    157
 GPR's set/used:   ss-s ssss ssss s---  ---- ---- -sss ssss
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ---s
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     PCdecoder<float,PCmap<float,24,void>,1>::decode(float, unsigned int)
     | 000000                           AKA       _ZN9PCdecoderIf5PCmapIfLj24EvELb1EE6decodeEfj
   47|                                  PROC      this,pred,context,gr3,fp1,gr5
    0| 007070 stfd     DBE1FFF8   1     STFL      #stack(gr1,-8)=fp31
    0| 007074 std      FBE1FFF0   1     ST8       #stack(gr1,-16)=gr31
    0| 007078 std      FBC1FFE8   1     ST8       #stack(gr1,-24)=gr30
    0| 00707C std      FBA1FFE0   1     ST8       #stack(gr1,-32)=gr29
    0| 007080 std      FB81FFD8   1     ST8       #stack(gr1,-40)=gr28
    0| 007084 std      FB61FFD0   1     ST8       #stack(gr1,-48)=gr27
    0| 007088 std      FB41FFC8   1     ST8       #stack(gr1,-56)=gr26
    0| 00708C std      FB21FFC0   1     ST8       #stack(gr1,-64)=gr25
    0| 007090 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 007094 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 007098 stdu     F821FEC1   1     ST8U      gr1,#stack(gr1,-320)=gr1
   50| 00709C ld       E8830010   1     L8        gr4=(PCdecoder<float,PCmap<float,24,void>,1>).rm@10.rns277.(gr3,16)
    0| 0070A0 fmr      FFE00890   1     LRFL      fp31=fp1
    0| 0070A4 or       7C7F1B78   2     LR        gr31=gr3
   50| 0070A8 ld       E8630008   1     L8        gr3=(PCdecoder<float,PCmap<float,24,void>,1>).rd@8.rns278.(gr3,8)
   50| 0070AC rldic    78A51F48   1     RN8       gr5=gr5,3,0x7FFFFFFF8
   50| 0070B0 ldx      7C84282A   1     L8        gr4=(RCmodel *).rns225.(gr4,gr5,0)
   50| 0070B4 bl       48000001   1     CALL      gr3=_ZN9RCdecoder6decodeEP7RCmodel,2,(char).rns108.",gr3,(char).rns108.",gr4,#ProcAlias",_ZN9RCdecoder6decodeEP7RCmodel",fcr",#MX_TEMP27",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   50| 0070B8 ori      60000000   1
   51| 0070BC cmplwi   28030018   1     CL4       cr0=gr3,24
   51| 0070C0 bc       40810114   1     BF        CL.1787,cr0,0x10/lgt,taken=50%(0,0)
   53| 0070C4 addi     3B23FFE7   1     AI        gr25=gr3,-25
   53| 0070C8 ld       EBFF0008   1     L8        gr31=(PCdecoder<float,PCmap<float,24,void>,1>).rd@8.rns278.(gr31,8)
   53| 0070CC rlwinm   573E003E   1     RN4       gr30=gr25,0,0xFFFFFFFF
    4| 0070D0 addi     3BA00000   1     LI        gr29=0
    5| 0070D4 addi     3B800000   1     LI        gr28=0
    6| 0070D8 addi     3B600000   1     LI        gr27=0
    0| 0070DC addi     3B400001   1     LI        gr26=1
    0| 0070E0 ori      60210000   1     XNOP      
    0| 0070E4 ori      60210000   1     XNOP      
    0| 0070E8 ori      60210000   1     XNOP      
    6|                              CL.1789:
    7| 0070EC cmplwi   281E0010   1     CL4       cr0=gr30,16
    7| 0070F0 bc       418100B0   1     BT        CL.2796,cr0,0x10/lgt,taken=40%(40,60)
    6| 0070F4 addi     3B7B0001   1     AI        gr27=gr27,1
    6| 0070F8 cmpldi   283B0001   1     CL8       cr0=gr27,1
    6| 0070FC bc       4180FFF0   1     BT        CL.1789,cr0,0x8/llt,taken=80%(80,20)
    0| 007100 ori      60210000   1     XNOP      
    0| 007104 ori      60210000   1     XNOP      
    0|                              CL.2793:
   12| 007108 or       7FE3FB78   1     LR        gr3=gr31
   12| 00710C or       7FC4F378   1     LR        gr4=gr30
   12| 007110 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns108.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP27",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   12| 007114 ori      60000000   1
    8| 007118 stfs     D3E10080   1     STFS      shared(gr1,128)=fp31
   41| 00711C addi     3800FFFF   1     LI        gr0=-1
   55| 007120 slw      7F44C830   1     SLL4      gr4=gr26,gr25
   41| 007124 rldicl   78000020   1     RN8       gr0=gr0,0,0xFFFFFFFF
   55| 007128 slw      7C63E030   1     SLL4      gr3=gr3,gr28
   55| 00712C add      7C84EA14   1     A         gr4=gr4,gr29
    9| 007130 lwz      80A10080   1     L4Z       gr5=shared(gr1,128)
   41| 007134 nor      7CA528F8   1     NOR       gr5=gr5,gr5
   41| 007138 rlwinm   54A60FFE   1     SRL4      gr6=gr5,31
   41| 00713C rlwinm   54A5C23E   1     SRL4      gr5=gr5,8
   41| 007140 mulld    7CC601D2   1     M         gr6=gr6,gr0
   41| 007144 rlwinm   54C6BA7E   1     SRL4      gr6=gr6,9
   41| 007148 xor      7CA53278   1     X         gr5=gr5,gr6
   55| 00714C add      7C632A14   1     A         gr3=gr3,gr5
   55| 007150 add      7C841A14   1     A         gr4=gr4,gr3
   48| 007154 rlwinm   54834DFE   1     SRL4      gr3=gr4,23
   48| 007158 mulld    7C0019D2   1     M         gr0=gr0,gr3
   48| 00715C rlwinm   5400BA7E   1     SRL4      gr0=gr0,9
   50| 007160 eqv      7C002238   1     EQV       gr0=gr0,gr4
   50| 007164 rlwinm   5400402E   1     SLL4      gr0=gr0,8
   24| 007168 stw      900100A0   1     ST4Z      shared(gr1,160)=gr0
   25| 00716C lfs      C02100A0   1     LFS       fp1=shared(gr1,160)
   66|                              CL.1952:
   67| 007170 ld       E9810150   1     L8        gr12=#stack(gr1,336)
   67| 007174 lfd      CBE10138   1     LFL       fp31=#stack(gr1,312)
   67| 007178 addi     38210140   1     AI        gr1=gr1,320
   67| 00717C ld       EB21FFC0   1     L8        gr25=#stack(gr1,-64)
   67| 007180 ld       EB41FFC8   1     L8        gr26=#stack(gr1,-56)
   67| 007184 mtspr    7D8803A6   1     LLR       lr=gr12
   67| 007188 ld       EB61FFD0   1     L8        gr27=#stack(gr1,-48)
   67| 00718C ld       EB81FFD8   1     L8        gr28=#stack(gr1,-40)
   67| 007190 ld       EBA1FFE0   1     L8        gr29=#stack(gr1,-32)
   67| 007194 ld       EBC1FFE8   1     L8        gr30=#stack(gr1,-24)
   67| 007198 ld       EBE1FFF0   1     L8        gr31=#stack(gr1,-16)
   67| 00719C bclr     4E800020   1     BA        lr
    0|                              CL.2796:
    3| 0071A0 or       7FE3FB78   1     LR        gr3=gr31
    3| 0071A4 addi     38800010   1     LI        gr4=16
    3| 0071A8 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns108.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP27",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    3| 0071AC ori      60000000   1
    6| 0071B0 addi     3B7B0001   1     AI        gr27=gr27,1
    8| 0071B4 slw      7C60E030   1     SLL4      gr0=gr3,gr28
   10| 0071B8 addi     387EFFF0   1     AI        gr3=gr30,-16
    6| 0071BC cmpldi   283B0001   1     CL8       cr0=gr27,1
    8| 0071C0 add      7FBD0214   1     A         gr29=gr29,gr0
    9| 0071C4 addi     3B9C0010   1     AI        gr28=gr28,16
   10| 0071C8 rlwinm   547E003E   1     RN4       gr30=gr3,0,0xFFFFFFFF
    6| 0071CC bc       4080FF3C   1     BF        CL.2793,cr0,0x8/llt,taken=20%(20,80)
    6| 0071D0 b        4BFFFF1C   1     B         CL.1789,-1
   57|                              CL.1787:
   58| 0071D4 bc       408000E0   1     BF        CL.1795,cr0,0x8/llt,taken=30%(30,70)
   60| 0071D8 subfic   23230017   1     SFI       gr25=23,gr3,ca"
   60| 0071DC ld       EBFF0008   1     L8        gr31=(PCdecoder<float,PCmap<float,24,void>,1>).rd@8.rns278.(gr31,8)
   60| 0071E0 rlwinm   573E003E   1     RN4       gr30=gr25,0,0xFFFFFFFF
    4| 0071E4 addi     3BA00000   1     LI        gr29=0
    5| 0071E8 addi     3B800000   1     LI        gr28=0
    6| 0071EC addi     3B600000   1     LI        gr27=0
    0| 0071F0 addi     3B400001   1     LI        gr26=1
    0| 0071F4 ori      60210000   1     XNOP      
    0| 0071F8 ori      60210000   1     XNOP      
    6|                              CL.1797:
    7| 0071FC cmplwi   281E0010   1     CL4       cr0=gr30,16
    7| 007200 bc       41810080   1     BT        CL.2797,cr0,0x10/lgt,taken=40%(40,60)
    6| 007204 addi     3B7B0001   1     AI        gr27=gr27,1
    6| 007208 cmpldi   283B0001   1     CL8       cr0=gr27,1
    6| 00720C bc       4180FFF0   1     BT        CL.1797,cr0,0x8/llt,taken=80%(80,20)
    0| 007210 ori      60210000   1     XNOP      
    0|                              CL.2795:
   12| 007214 or       7FE3FB78   1     LR        gr3=gr31
   12| 007218 or       7FC4F378   1     LR        gr4=gr30
   12| 00721C bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns108.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP27",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   12| 007220 ori      60000000   1
    8| 007224 stfs     D3E10080   1     STFS      shared(gr1,128)=fp31
   62| 007228 slw      7F44C830   1     SLL4      gr4=gr26,gr25
   62| 00722C slw      7C63E030   1     SLL4      gr3=gr3,gr28
   62| 007230 add      7C84EA14   1     A         gr4=gr4,gr29
   41| 007234 addi     3800FFFF   1     LI        gr0=-1
   62| 007238 add      7C632214   1     A         gr3=gr3,gr4
   41| 00723C rldicl   78000020   1     RN8       gr0=gr0,0,0xFFFFFFFF
    9| 007240 lwz      80810080   1     L4Z       gr4=shared(gr1,128)
   41| 007244 nor      7C8420F8   1     NOR       gr4=gr4,gr4
   41| 007248 rlwinm   54850FFE   1     SRL4      gr5=gr4,31
   41| 00724C rlwinm   5484C23E   1     SRL4      gr4=gr4,8
   41| 007250 mulld    7CA501D2   1     M         gr5=gr5,gr0
   41| 007254 rlwinm   54A5BA7E   1     SRL4      gr5=gr5,9
   41| 007258 xor      7C842A78   1     X         gr4=gr4,gr5
   62| 00725C subf     7C832050   1     S         gr4=gr4,gr3
   48| 007260 rlwinm   54834DFE   1     SRL4      gr3=gr4,23
   48| 007264 mulld    7C0019D2   1     M         gr0=gr0,gr3
   48| 007268 rlwinm   5400BA7E   1     SRL4      gr0=gr0,9
   50| 00726C eqv      7C002238   1     EQV       gr0=gr0,gr4
   50| 007270 rlwinm   5400402E   1     SLL4      gr0=gr0,8
   24| 007274 stw      900100A0   1     ST4Z      shared(gr1,160)=gr0
   25| 007278 lfs      C02100A0   1     LFS       fp1=shared(gr1,160)
   63| 00727C b        4BFFFEF4   1     B         CL.1952,-1
    0|                              CL.2797:
    3| 007280 or       7FE3FB78   1     LR        gr3=gr31
    3| 007284 addi     38800010   1     LI        gr4=16
    3| 007288 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns108.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP27",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    3| 00728C ori      60000000   1
    6| 007290 addi     3B7B0001   1     AI        gr27=gr27,1
    8| 007294 slw      7C60E030   1     SLL4      gr0=gr3,gr28
   10| 007298 addi     387EFFF0   1     AI        gr3=gr30,-16
    6| 00729C cmpldi   283B0001   1     CL8       cr0=gr27,1
    8| 0072A0 add      7FBD0214   1     A         gr29=gr29,gr0
    9| 0072A4 addi     3B9C0010   1     AI        gr28=gr28,16
   10| 0072A8 rlwinm   547E003E   1     RN4       gr30=gr3,0,0xFFFFFFFF
    6| 0072AC bc       4080FF68   1     BF        CL.2795,cr0,0x8/llt,taken=20%(20,80)
    6| 0072B0 b        4BFFFF4C   1     B         CL.1797,-1
   64|                              CL.1795:
    8| 0072B4 stfs     D3E100C0   1     STFS      shared(gr1,192)=fp31
   67| 0072B8 ld       E9810150   1     L8        gr12=#stack(gr1,336)
   67| 0072BC lfd      CBE10138   1     LFL       fp31=#stack(gr1,312)
   67| 0072C0 mtspr    7D8803A6   1     LLR       lr=gr12
    9| 0072C4 lwz      800100C0   1     L4Z       gr0=shared(gr1,192)
   60| 0072C8 rlwinm   5400002E   1     RN4       gr0=gr0,0,0xFFFFFF00
   24| 0072CC stw      900100E0   1     ST4Z      shared(gr1,224)=gr0
   25| 0072D0 lfs      C02100E0   1     LFS       fp1=shared(gr1,224)
   67| 0072D4 addi     38210140   1     AI        gr1=gr1,320
   67| 0072D8 ld       EBE1FFF0   1     L8        gr31=#stack(gr1,-16)
   67| 0072DC bclr     4E800020   1     BA        lr
     |               Tag Table
     | 0072E0        00000000 00092241 81070200 40000000 00000270 002D5F5A
     | 0072F8        4E395043 6465636F 64657249 66355043 6D617049 664C6A32
     | 007310        34457645 4C623145 45366465 636F6465 45666A
     |               Instruction count          156
     |               Straight-line exec time    157
 GPR's set/used:   ss-s ssss ssss s---  ---- ---- -sss ssss
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ---s
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     PCdecoder<float,PCmap<float,32,void>,1>::decode(float, unsigned int)
     | 000000                           AKA       _ZN9PCdecoderIf5PCmapIfLj32EvELb1EE6decodeEfj
   47|                                  PROC      this,pred,context,gr3,fp1,gr5
    0| 007330 stfd     DBE1FFF8   1     STFL      #stack(gr1,-8)=fp31
    0| 007334 std      FBE1FFF0   1     ST8       #stack(gr1,-16)=gr31
    0| 007338 std      FBC1FFE8   1     ST8       #stack(gr1,-24)=gr30
    0| 00733C std      FBA1FFE0   1     ST8       #stack(gr1,-32)=gr29
    0| 007340 std      FB81FFD8   1     ST8       #stack(gr1,-40)=gr28
    0| 007344 std      FB61FFD0   1     ST8       #stack(gr1,-48)=gr27
    0| 007348 std      FB41FFC8   1     ST8       #stack(gr1,-56)=gr26
    0| 00734C std      FB21FFC0   1     ST8       #stack(gr1,-64)=gr25
    0| 007350 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 007354 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 007358 stdu     F821FEC1   1     ST8U      gr1,#stack(gr1,-320)=gr1
   50| 00735C ld       E8830010   1     L8        gr4=(PCdecoder<float,PCmap<float,32,void>,1>).rm@10.rns284.(gr3,16)
    0| 007360 fmr      FFE00890   1     LRFL      fp31=fp1
    0| 007364 or       7C7F1B78   2     LR        gr31=gr3
   50| 007368 ld       E8630008   1     L8        gr3=(PCdecoder<float,PCmap<float,32,void>,1>).rd@8.rns285.(gr3,8)
   50| 00736C rldic    78A51F48   1     RN8       gr5=gr5,3,0x7FFFFFFF8
   50| 007370 ldx      7C84282A   1     L8        gr4=(RCmodel *).rns225.(gr4,gr5,0)
   50| 007374 bl       48000001   1     CALL      gr3=_ZN9RCdecoder6decodeEP7RCmodel,2,(char).rns108.",gr3,(char).rns108.",gr4,#ProcAlias",_ZN9RCdecoder6decodeEP7RCmodel",fcr",#MX_TEMP28",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   50| 007378 ori      60000000   1
   51| 00737C cmplwi   28030020   1     CL4       cr0=gr3,32
   51| 007380 bc       40810104   1     BF        CL.1815,cr0,0x10/lgt,taken=50%(0,0)
   53| 007384 addi     3B23FFDF   1     AI        gr25=gr3,-33
   53| 007388 ld       EBFF0008   1     L8        gr31=(PCdecoder<float,PCmap<float,32,void>,1>).rd@8.rns285.(gr31,8)
   53| 00738C rlwinm   573E003E   1     RN4       gr30=gr25,0,0xFFFFFFFF
    4| 007390 addi     3BA00000   1     LI        gr29=0
    5| 007394 addi     3B800000   1     LI        gr28=0
    6| 007398 addi     3B600000   1     LI        gr27=0
    0| 00739C addi     3B400001   1     LI        gr26=1
    0| 0073A0 ori      60210000   1     XNOP      
    0| 0073A4 ori      60210000   1     XNOP      
    0| 0073A8 ori      60210000   1     XNOP      
    6|                              CL.1817:
    7| 0073AC cmplwi   281E0010   1     CL4       cr0=gr30,16
    7| 0073B0 bc       418100A0   1     BT        CL.2569,cr0,0x10/lgt,taken=40%(40,60)
    6| 0073B4 addi     3B7B0001   1     AI        gr27=gr27,1
    6| 0073B8 cmpldi   283B0001   1     CL8       cr0=gr27,1
    6| 0073BC bc       4180FFF0   1     BT        CL.1817,cr0,0x8/llt,taken=80%(80,20)
    0|                              CL.2566:
   12| 0073C0 or       7FE3FB78   1     LR        gr3=gr31
   12| 0073C4 or       7FC4F378   1     LR        gr4=gr30
   12| 0073C8 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns108.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP28",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   12| 0073CC ori      60000000   1
    8| 0073D0 stfs     D3E10080   1     STFS      shared(gr1,128)=fp31
   41| 0073D4 addi     3800FFFF   1     LI        gr0=-1
   55| 0073D8 slw      7F44C830   1     SLL4      gr4=gr26,gr25
   41| 0073DC rldicl   78000020   1     RN8       gr0=gr0,0,0xFFFFFFFF
   55| 0073E0 slw      7C63E030   1     SLL4      gr3=gr3,gr28
   55| 0073E4 add      7C84EA14   1     A         gr4=gr4,gr29
    9| 0073E8 lwz      80C10080   1     L4Z       gr6=shared(gr1,128)
   41| 0073EC nor      7CC530F8   1     NOR       gr5=gr6,gr6
   41| 0073F0 rlwinm   54A50FFE   1     SRL4      gr5=gr5,31
   41| 0073F4 mulld    7CA501D2   1     M         gr5=gr5,gr0
   41| 0073F8 rlwinm   54A5F87E   1     SRL4      gr5=gr5,1
   41| 0073FC eqv      7CA53238   1     EQV       gr5=gr5,gr6
   55| 007400 add      7C632A14   1     A         gr3=gr3,gr5
   55| 007404 add      7C841A14   1     A         gr4=gr4,gr3
   48| 007408 rlwinm   54830FFE   1     SRL4      gr3=gr4,31
   48| 00740C mulld    7C0019D2   1     M         gr0=gr0,gr3
   48| 007410 rlwinm   5400F87E   1     SRL4      gr0=gr0,1
   50| 007414 eqv      7C002238   1     EQV       gr0=gr0,gr4
   24| 007418 stw      900100A0   1     ST4Z      shared(gr1,160)=gr0
   25| 00741C lfs      C02100A0   1     LFS       fp1=shared(gr1,160)
   66|                              CL.1953:
   67| 007420 ld       E9810150   1     L8        gr12=#stack(gr1,336)
   67| 007424 lfd      CBE10138   1     LFL       fp31=#stack(gr1,312)
   67| 007428 addi     38210140   1     AI        gr1=gr1,320
   67| 00742C ld       EB21FFC0   1     L8        gr25=#stack(gr1,-64)
   67| 007430 ld       EB41FFC8   1     L8        gr26=#stack(gr1,-56)
   67| 007434 mtspr    7D8803A6   1     LLR       lr=gr12
   67| 007438 ld       EB61FFD0   1     L8        gr27=#stack(gr1,-48)
   67| 00743C ld       EB81FFD8   1     L8        gr28=#stack(gr1,-40)
   67| 007440 ld       EBA1FFE0   1     L8        gr29=#stack(gr1,-32)
   67| 007444 ld       EBC1FFE8   1     L8        gr30=#stack(gr1,-24)
   67| 007448 ld       EBE1FFF0   1     L8        gr31=#stack(gr1,-16)
   67| 00744C bclr     4E800020   1     BA        lr
    0|                              CL.2569:
    3| 007450 or       7FE3FB78   1     LR        gr3=gr31
    3| 007454 addi     38800010   1     LI        gr4=16
    3| 007458 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns108.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP28",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    3| 00745C ori      60000000   1
    6| 007460 addi     3B7B0001   1     AI        gr27=gr27,1
    8| 007464 slw      7C60E030   1     SLL4      gr0=gr3,gr28
   10| 007468 addi     387EFFF0   1     AI        gr3=gr30,-16
    6| 00746C cmpldi   283B0001   1     CL8       cr0=gr27,1
    8| 007470 add      7FBD0214   1     A         gr29=gr29,gr0
    9| 007474 addi     3B9C0010   1     AI        gr28=gr28,16
   10| 007478 rlwinm   547E003E   1     RN4       gr30=gr3,0,0xFFFFFFFF
    6| 00747C bc       4080FF44   1     BF        CL.2566,cr0,0x8/llt,taken=20%(20,80)
    6| 007480 b        4BFFFF2C   1     B         CL.1817,-1
   57|                              CL.1815:
   58| 007484 bc       408000E0   1     BF        CL.1823,cr0,0x8/llt,taken=30%(30,70)
   60| 007488 subfic   2323001F   1     SFI       gr25=31,gr3,ca"
   60| 00748C ld       EBFF0008   1     L8        gr31=(PCdecoder<float,PCmap<float,32,void>,1>).rd@8.rns285.(gr31,8)
   60| 007490 rlwinm   573E003E   1     RN4       gr30=gr25,0,0xFFFFFFFF
    4| 007494 addi     3BA00000   1     LI        gr29=0
    5| 007498 addi     3B800000   1     LI        gr28=0
    6| 00749C addi     3B600000   1     LI        gr27=0
    0| 0074A0 addi     3B400001   1     LI        gr26=1
    0| 0074A4 ori      60210000   1     XNOP      
    0| 0074A8 ori      60210000   1     XNOP      
    6|                              CL.1825:
    7| 0074AC cmplwi   281E0010   1     CL4       cr0=gr30,16
    7| 0074B0 bc       41810080   1     BT        CL.2570,cr0,0x10/lgt,taken=40%(40,60)
    6| 0074B4 addi     3B7B0001   1     AI        gr27=gr27,1
    6| 0074B8 cmpldi   283B0001   1     CL8       cr0=gr27,1
    6| 0074BC bc       4180FFF0   1     BT        CL.1825,cr0,0x8/llt,taken=80%(80,20)
    0| 0074C0 ori      60210000   1     XNOP      
    0| 0074C4 ori      60210000   1     XNOP      
    0| 0074C8 ori      60210000   1     XNOP      
    0|                              CL.2568:
   12| 0074CC or       7FE3FB78   1     LR        gr3=gr31
   12| 0074D0 or       7FC4F378   1     LR        gr4=gr30
   12| 0074D4 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns108.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP28",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   12| 0074D8 ori      60000000   1
    8| 0074DC stfs     D3E10080   1     STFS      shared(gr1,128)=fp31
   62| 0074E0 slw      7F44C830   1     SLL4      gr4=gr26,gr25
   62| 0074E4 slw      7C63E030   1     SLL4      gr3=gr3,gr28
   62| 0074E8 add      7C84EA14   1     A         gr4=gr4,gr29
   41| 0074EC addi     3800FFFF   1     LI        gr0=-1
   62| 0074F0 add      7C632214   1     A         gr3=gr3,gr4
   41| 0074F4 rldicl   78000020   1     RN8       gr0=gr0,0,0xFFFFFFFF
    9| 0074F8 lwz      80A10080   1     L4Z       gr5=shared(gr1,128)
   41| 0074FC nor      7CA428F8   1     NOR       gr4=gr5,gr5
   41| 007500 rlwinm   54840FFE   1     SRL4      gr4=gr4,31
   41| 007504 mulld    7C8401D2   1     M         gr4=gr4,gr0
   41| 007508 rlwinm   5484F87E   1     SRL4      gr4=gr4,1
   41| 00750C eqv      7C842A38   1     EQV       gr4=gr4,gr5
   62| 007510 subf     7C832050   1     S         gr4=gr4,gr3
   48| 007514 rlwinm   54830FFE   1     SRL4      gr3=gr4,31
   48| 007518 mulld    7C0019D2   1     M         gr0=gr0,gr3
   48| 00751C rlwinm   5400F87E   1     SRL4      gr0=gr0,1
   50| 007520 eqv      7C002238   1     EQV       gr0=gr0,gr4
   24| 007524 stw      900100A0   1     ST4Z      shared(gr1,160)=gr0
   25| 007528 lfs      C02100A0   1     LFS       fp1=shared(gr1,160)
   63| 00752C b        4BFFFEF4   1     B         CL.1953,-1
    0|                              CL.2570:
    3| 007530 or       7FE3FB78   1     LR        gr3=gr31
    3| 007534 addi     38800010   1     LI        gr4=16
    3| 007538 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns108.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP28",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    3| 00753C ori      60000000   1
    6| 007540 addi     3B7B0001   1     AI        gr27=gr27,1
    8| 007544 slw      7C60E030   1     SLL4      gr0=gr3,gr28
   10| 007548 addi     387EFFF0   1     AI        gr3=gr30,-16
    6| 00754C cmpldi   283B0001   1     CL8       cr0=gr27,1
    8| 007550 add      7FBD0214   1     A         gr29=gr29,gr0
    9| 007554 addi     3B9C0010   1     AI        gr28=gr28,16
   10| 007558 rlwinm   547E003E   1     RN4       gr30=gr3,0,0xFFFFFFFF
    6| 00755C bc       4080FF70   1     BF        CL.2568,cr0,0x8/llt,taken=20%(20,80)
    6| 007560 b        4BFFFF4C   1     B         CL.1825,-1
   64|                              CL.1823:
    8| 007564 stfs     D3E100C0   1     STFS      shared(gr1,192)=fp31
   67| 007568 ld       E9810150   1     L8        gr12=#stack(gr1,336)
   67| 00756C lfd      CBE10138   1     LFL       fp31=#stack(gr1,312)
   67| 007570 mtspr    7D8803A6   1     LLR       lr=gr12
    9| 007574 lwz      800100C0   1     L4Z       gr0=shared(gr1,192)
   24| 007578 stw      900100E0   1     ST4Z      shared(gr1,224)=gr0
   25| 00757C lfs      C02100E0   1     LFS       fp1=shared(gr1,224)
   67| 007580 addi     38210140   1     AI        gr1=gr1,320
   67| 007584 ld       EBE1FFF0   1     L8        gr31=#stack(gr1,-16)
   67| 007588 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 00758C        00000000 00092241 81070200 40000000 0000025C 002D5F5A
     | 0075A4        4E395043 6465636F 64657249 66355043 6D617049 664C6A33
     | 0075BC        32457645 4C623145 45366465 636F6465 45666A
     |               Instruction count          151
     |               Straight-line exec time    152
 GPR's set/used:   su-- u--- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -s-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<double,16,void>::inverse(unsigned long long) const
     | 000000                           AKA       _ZNK5PCmapIdLj16EvE7inverseEy
  109|                                  PROC      this,r,gr3,gr4
  111| 0075D0 rldicl   78808BC2   1     SRL8      gr0=gr4,15
  111| 0075D4 neg      7C0000D0   1     COMP      gr0=gr0
  111| 0075D8 rldicl   78007C60   1     SRL8      gr0=gr0,49
  111| 0075DC xor      7C002278   1     X         gr0=gr0,gr4
  113| 0075E0 nor      7C0000F8   1     NOR       gr0=gr0,gr0
  113| 0075E4 rldicr   780083C6   1     SLL8      gr0=gr0,48
   87| 0075E8 std      F801FFE0   1     ST8       shared(gr1,-32)=gr0
   88| 0075EC lfd      C821FFE0   1     LFL       fp1=shared(gr1,-32)
  115| 0075F0 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 0075F4        00000000 00092240 00000200 00000000 00000024 001D5F5A
     | 00760C        4E4B3550 436D6170 49644C6A 31364576 4537696E 76657273
     | 007624        654579
     |               Instruction count            9
     |               Straight-line exec time      9
 GPR's set/used:   su-- ---- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -s-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<double,16,void>::identity(double) const
     | 000000                           AKA       _ZNK5PCmapIdLj16EvE8identityEd
  119|                                  PROC      this,d,gr3,fp1
   71| 007630 stfd     D821FFC0   1     STFL      shared(gr1,-64)=fp1
   72| 007634 ld       E801FFC0   1     L8        gr0=shared(gr1,-64)
  123| 007638 rldicr   780003C4   1     RN8       gr0=gr0,0,0xFFFF000000000000
   87| 00763C std      F801FFE0   1     ST8       shared(gr1,-32)=gr0
   88| 007640 lfd      C821FFE0   1     LFL       fp1=shared(gr1,-32)
  125| 007644 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 007648        00000000 00092240 00000100 60000000 00000018 001E5F5A
     | 007660        4E4B3550 436D6170 49644C6A 31364576 45386964 656E7469
     | 007678        74794564
     |               Instruction count            6
     |               Straight-line exec time      6
 GPR's set/used:   su-- u--- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -s-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<double,32,void>::inverse(unsigned long long) const
     | 000000                           AKA       _ZNK5PCmapIdLj32EvE7inverseEy
  109|                                  PROC      this,r,gr3,gr4
  111| 007680 rldicl   78800FC2   1     SRL8      gr0=gr4,31
  111| 007684 neg      7C0000D0   1     COMP      gr0=gr0
  111| 007688 rldicl   7800F860   1     SRL8      gr0=gr0,33
  111| 00768C xor      7C002278   1     X         gr0=gr0,gr4
  113| 007690 nor      7C0000F8   1     NOR       gr0=gr0,gr0
  113| 007694 rldicr   780007C6   1     SLL8      gr0=gr0,32
   87| 007698 std      F801FFE0   1     ST8       shared(gr1,-32)=gr0
   88| 00769C lfd      C821FFE0   1     LFL       fp1=shared(gr1,-32)
  115| 0076A0 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 0076A4        00000000 00092240 00000200 00000000 00000024 001D5F5A
     | 0076BC        4E4B3550 436D6170 49644C6A 33324576 4537696E 76657273
     | 0076D4        654579
     |               Instruction count            9
     |               Straight-line exec time      9
 GPR's set/used:   su-- ---- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -s-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<double,32,void>::identity(double) const
     | 000000                           AKA       _ZNK5PCmapIdLj32EvE8identityEd
  119|                                  PROC      this,d,gr3,fp1
   71| 0076E0 stfd     D821FFC0   1     STFL      shared(gr1,-64)=fp1
   72| 0076E4 ld       E801FFC0   1     L8        gr0=shared(gr1,-64)
  123| 0076E8 rldicr   780007C4   1     RN8       gr0=gr0,0,0xFFFFFFFF00000000
   87| 0076EC std      F801FFE0   1     ST8       shared(gr1,-32)=gr0
   88| 0076F0 lfd      C821FFE0   1     LFL       fp1=shared(gr1,-32)
  125| 0076F4 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 0076F8        00000000 00092240 00000100 60000000 00000018 001E5F5A
     | 007710        4E4B3550 436D6170 49644C6A 33324576 45386964 656E7469
     | 007728        74794564
     |               Instruction count            6
     |               Straight-line exec time      6
 GPR's set/used:   su-- u--- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -s-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<double,48,void>::inverse(unsigned long long) const
     | 000000                           AKA       _ZNK5PCmapIdLj48EvE7inverseEy
  109|                                  PROC      this,r,gr3,gr4
  111| 007730 rldicl   78808BE0   1     SRL8      gr0=gr4,47
  111| 007734 neg      7C0000D0   1     COMP      gr0=gr0
  111| 007738 rldicl   78007C42   1     SRL8      gr0=gr0,17
  111| 00773C xor      7C002278   1     X         gr0=gr0,gr4
  113| 007740 nor      7C0000F8   1     NOR       gr0=gr0,gr0
  113| 007744 rldicr   780083E4   1     SLL8      gr0=gr0,16
   87| 007748 std      F801FFE0   1     ST8       shared(gr1,-32)=gr0
   88| 00774C lfd      C821FFE0   1     LFL       fp1=shared(gr1,-32)
  115| 007750 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 007754        00000000 00092240 00000200 00000000 00000024 001D5F5A
     | 00776C        4E4B3550 436D6170 49644C6A 34384576 4537696E 76657273
     | 007784        654579
     |               Instruction count            9
     |               Straight-line exec time      9
 GPR's set/used:   su-- ---- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -s-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<double,48,void>::identity(double) const
     | 000000                           AKA       _ZNK5PCmapIdLj48EvE8identityEd
  119|                                  PROC      this,d,gr3,fp1
   71| 007790 stfd     D821FFC0   1     STFL      shared(gr1,-64)=fp1
   72| 007794 ld       E801FFC0   1     L8        gr0=shared(gr1,-64)
  123| 007798 rldicr   780003E4   1     RN8       gr0=gr0,0,0xFFFFFFFFFFFF0000
   87| 00779C std      F801FFE0   1     ST8       shared(gr1,-32)=gr0
   88| 0077A0 lfd      C821FFE0   1     LFL       fp1=shared(gr1,-32)
  125| 0077A4 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 0077A8        00000000 00092240 00000100 60000000 00000018 001E5F5A
     | 0077C0        4E4B3550 436D6170 49644C6A 34384576 45386964 656E7469
     | 0077D8        74794564
     |               Instruction count            6
     |               Straight-line exec time      6
 GPR's set/used:   su-- u--- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -s-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<double,64,void>::inverse(unsigned long long) const
     | 000000                           AKA       _ZNK5PCmapIdLj64EvE7inverseEy
  109|                                  PROC      this,r,gr3,gr4
  111| 0077E0 rldicl   78800FE0   1     SRL8      gr0=gr4,63
  111| 0077E4 neg      7C0000D0   1     COMP      gr0=gr0
  111| 0077E8 rldicl   7800F842   1     SRL8      gr0=gr0,1
  111| 0077EC xor      7C002278   1     X         gr0=gr0,gr4
  113| 0077F0 nor      7C0000F8   1     NOR       gr0=gr0,gr0
   87| 0077F4 std      F801FFE0   1     ST8       shared(gr1,-32)=gr0
   88| 0077F8 lfd      C821FFE0   1     LFL       fp1=shared(gr1,-32)
  115| 0077FC bclr     4E800020   1     BA        lr
     |               Tag Table
     | 007800        00000000 00092240 00000200 00000000 00000020 001D5F5A
     | 007818        4E4B3550 436D6170 49644C6A 36344576 4537696E 76657273
     | 007830        654579
     |               Instruction count            8
     |               Straight-line exec time      8
 GPR's set/used:   su-- ---- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -s-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<double,64,void>::identity(double) const
     | 000000                           AKA       _ZNK5PCmapIdLj64EvE8identityEd
  119|                                  PROC      this,d,gr3,fp1
   71| 007840 stfd     D821FFC0   1     STFL      shared(gr1,-64)=fp1
   72| 007844 ld       E801FFC0   1     L8        gr0=shared(gr1,-64)
   87| 007848 std      F801FFE0   1     ST8       shared(gr1,-32)=gr0
   88| 00784C lfd      C821FFE0   1     LFL       fp1=shared(gr1,-32)
  125| 007850 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 007854        00000000 00092240 00000100 60000000 00000014 001E5F5A
     | 00786C        4E4B3550 436D6170 49644C6A 36344576 45386964 656E7469
     | 007884        74794564
     |               Instruction count            5
     |               Straight-line exec time      5
 GPR's set/used:   su-s u--- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -s-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<float,8,void>::inverse(unsigned int) const
     | 000000                           AKA       _ZNK5PCmapIfLj8EvE7inverseEj
   46|                                  PROC      this,r,gr3,gr4
   48| 007890 addi     3800FFFF   1     LI        gr0=-1
   48| 007894 rlwinm   5483C9FE   1     SRL4      gr3=gr4,7
   48| 007898 rldicl   78000020   1     RN8       gr0=gr0,0,0xFFFFFFFF
   48| 00789C mulld    7C0019D2   1     M         gr0=gr0,gr3
   48| 0078A0 rlwinm   54003E7E   1     SRL4      gr0=gr0,25
   48| 0078A4 xor      7C002278   1     X         gr0=gr0,gr4
   50| 0078A8 nor      7C0000F8   1     NOR       gr0=gr0,gr0
   50| 0078AC rlwinm   5400C00E   1     SLL4      gr0=gr0,24
   24| 0078B0 stw      9001FFE0   1     ST4Z      shared(gr1,-32)=gr0
   25| 0078B4 lfs      C021FFE0   1     LFS       fp1=shared(gr1,-32)
   52| 0078B8 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 0078BC        00000000 00092240 00000200 00000000 0000002C 001C5F5A
     | 0078D4        4E4B3550 436D6170 49664C6A 38457645 37696E76 65727365
     | 0078EC        456A
     |               Instruction count           11
     |               Straight-line exec time     11
 GPR's set/used:   su-s u--- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -s-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<float,16,void>::inverse(unsigned int) const
     | 000000                           AKA       _ZNK5PCmapIfLj16EvE7inverseEj
   46|                                  PROC      this,r,gr3,gr4
   48| 0078F0 addi     3800FFFF   1     LI        gr0=-1
   48| 0078F4 rlwinm   54838BFE   1     SRL4      gr3=gr4,15
   48| 0078F8 rldicl   78000020   1     RN8       gr0=gr0,0,0xFFFFFFFF
   48| 0078FC mulld    7C0019D2   1     M         gr0=gr0,gr3
   48| 007900 rlwinm   54007C7E   1     SRL4      gr0=gr0,17
   48| 007904 xor      7C002278   1     X         gr0=gr0,gr4
   50| 007908 nor      7C0000F8   1     NOR       gr0=gr0,gr0
   50| 00790C rlwinm   5400801E   1     SLL4      gr0=gr0,16
   24| 007910 stw      9001FFE0   1     ST4Z      shared(gr1,-32)=gr0
   25| 007914 lfs      C021FFE0   1     LFS       fp1=shared(gr1,-32)
   52| 007918 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 00791C        00000000 00092240 00000200 00000000 0000002C 001D5F5A
     | 007934        4E4B3550 436D6170 49664C6A 31364576 4537696E 76657273
     | 00794C        65456A
     |               Instruction count           11
     |               Straight-line exec time     11
 GPR's set/used:   su-- ---- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -s-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<float,16,void>::identity(float) const
     | 000000                           AKA       _ZNK5PCmapIfLj16EvE8identityEf
   56|                                  PROC      this,d,gr3,fp1
    8| 007950 stfs     D021FFC0   1     STFS      shared(gr1,-64)=fp1
    9| 007954 lwz      8001FFC0   1     L4Z       gr0=shared(gr1,-64)
   60| 007958 rlwinm   5400001E   1     RN4       gr0=gr0,0,0xFFFF0000
   24| 00795C stw      9001FFE0   1     ST4Z      shared(gr1,-32)=gr0
   25| 007960 lfs      C021FFE0   1     LFS       fp1=shared(gr1,-32)
   62| 007964 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 007968        00000000 00092240 00000100 40000000 00000018 001E5F5A
     | 007980        4E4B3550 436D6170 49664C6A 31364576 45386964 656E7469
     | 007998        74794566
     |               Instruction count            6
     |               Straight-line exec time      6
 GPR's set/used:   su-s u--- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -s-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<float,24,void>::inverse(unsigned int) const
     | 000000                           AKA       _ZNK5PCmapIfLj24EvE7inverseEj
   46|                                  PROC      this,r,gr3,gr4
   48| 0079A0 addi     3800FFFF   1     LI        gr0=-1
   48| 0079A4 rlwinm   54834DFE   1     SRL4      gr3=gr4,23
   48| 0079A8 rldicl   78000020   1     RN8       gr0=gr0,0,0xFFFFFFFF
   48| 0079AC mulld    7C0019D2   1     M         gr0=gr0,gr3
   48| 0079B0 rlwinm   5400BA7E   1     SRL4      gr0=gr0,9
   48| 0079B4 xor      7C002278   1     X         gr0=gr0,gr4
   50| 0079B8 nor      7C0000F8   1     NOR       gr0=gr0,gr0
   50| 0079BC rlwinm   5400402E   1     SLL4      gr0=gr0,8
   24| 0079C0 stw      9001FFE0   1     ST4Z      shared(gr1,-32)=gr0
   25| 0079C4 lfs      C021FFE0   1     LFS       fp1=shared(gr1,-32)
   52| 0079C8 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 0079CC        00000000 00092240 00000200 00000000 0000002C 001D5F5A
     | 0079E4        4E4B3550 436D6170 49664C6A 32344576 4537696E 76657273
     | 0079FC        65456A
     |               Instruction count           11
     |               Straight-line exec time     11
 GPR's set/used:   su-- ---- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -s-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<float,24,void>::identity(float) const
     | 000000                           AKA       _ZNK5PCmapIfLj24EvE8identityEf
   56|                                  PROC      this,d,gr3,fp1
    8| 007A00 stfs     D021FFC0   1     STFS      shared(gr1,-64)=fp1
    9| 007A04 lwz      8001FFC0   1     L4Z       gr0=shared(gr1,-64)
   60| 007A08 rlwinm   5400002E   1     RN4       gr0=gr0,0,0xFFFFFF00
   24| 007A0C stw      9001FFE0   1     ST4Z      shared(gr1,-32)=gr0
   25| 007A10 lfs      C021FFE0   1     LFS       fp1=shared(gr1,-32)
   62| 007A14 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 007A18        00000000 00092240 00000100 40000000 00000018 001E5F5A
     | 007A30        4E4B3550 436D6170 49664C6A 32344576 45386964 656E7469
     | 007A48        74794566
     |               Instruction count            6
     |               Straight-line exec time      6
 GPR's set/used:   su-s u--- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -s-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<float,32,void>::inverse(unsigned int) const
     | 000000                           AKA       _ZNK5PCmapIfLj32EvE7inverseEj
   46|                                  PROC      this,r,gr3,gr4
   48| 007A50 addi     3800FFFF   1     LI        gr0=-1
   48| 007A54 rlwinm   54830FFE   1     SRL4      gr3=gr4,31
   48| 007A58 rldicl   78000020   1     RN8       gr0=gr0,0,0xFFFFFFFF
   48| 007A5C mulld    7C6019D2   1     M         gr3=gr0,gr3
   48| 007A60 rlwinm   5463F87E   1     SRL4      gr3=gr3,1
   48| 007A64 xor      7C632278   1     X         gr3=gr3,gr4
   50| 007A68 andc     7C001878   1     ANDC      gr0=gr0,gr3
   24| 007A6C stw      9001FFE0   1     ST4Z      shared(gr1,-32)=gr0
   25| 007A70 lfs      C021FFE0   1     LFS       fp1=shared(gr1,-32)
   52| 007A74 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 007A78        00000000 00092240 00000200 00000000 00000028 001D5F5A
     | 007A90        4E4B3550 436D6170 49664C6A 33324576 4537696E 76657273
     | 007AA8        65456A
     |               Instruction count           10
     |               Straight-line exec time     10
 GPR's set/used:   su-- ---- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -s-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<float,32,void>::identity(float) const
     | 000000                           AKA       _ZNK5PCmapIfLj32EvE8identityEf
   56|                                  PROC      this,d,gr3,fp1
    8| 007AB0 stfs     D021FFC0   1     STFS      shared(gr1,-64)=fp1
    9| 007AB4 lwz      8001FFC0   1     L4Z       gr0=shared(gr1,-64)
   24| 007AB8 stw      9001FFE0   1     ST4Z      shared(gr1,-32)=gr0
   25| 007ABC lfs      C021FFE0   1     LFS       fp1=shared(gr1,-32)
   62| 007AC0 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 007AC4        00000000 00092240 00000100 40000000 00000014 001E5F5A
     | 007ADC        4E4B3550 436D6170 49664C6A 33324576 45386964 656E7469
     | 007AF4        74794566
     |               Instruction count            5
     |               Straight-line exec time      5
 GPR's set/used:   ss-s ssss ssss s---  ---- ---- ---- ----
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ----
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     RCfiledecoder::getbyte()
     | 000000                           AKA       _ZN13RCfiledecoder7getbyteEv
   11|                                  PROC      this_77_44,gr3
    0| 007B00 stdu     F821FF81   1     ST8U      gr1,#stack(gr1,-128)=gr1
    0| 007B04 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 007B08 std      F8010090   1     ST8       #stack(gr1,144)=gr0
   13| 007B0C lwz      80830024   1     L4Z       gr4=(RCfiledecoder).index@24.rns28.(gr3,36)
   13| 007B10 lwz      80030028   1     L4Z       gr0=(RCfiledecoder).size@28.rns29.(gr3,40)
   13| 007B14 cmplw    7C040040   1     CL4       cr0=gr4,gr0
   13| 007B18 bc       41820020   1     BT        CL.4324,cr0,0x4/eq,taken=40%(40,60)
   23| 007B1C addi     38A3002C   1     AI        gr5=gr3,44
   23| 007B20 addi     38040001   1     AI        gr0=gr4,1
   23| 007B24 lbzx     7C8520AE   1     L1Z       gr4=(RCfiledecoder).buffer[]@2c.rns327.(gr5,gr4,0)
   23| 007B28 stw      90030024   1     ST4Z      (RCfiledecoder).index@24.rns28.(gr3,36)=gr0
   24| 007B2C addi     38210080   1     AI        gr1=gr1,128
   23| 007B30 or       7C832378   1     LR        gr3=gr4
   24| 007B34 bclr     4E800020   1     BA        lr
    0|                              CL.4324:
   24| 007B38 addi     38210080   1     AI        gr1=gr1,128
   24| 007B3C b        48000A04   1     CALLF     gr3=RCfiledecoder::getbyte()$AF77_44,1,gr3,fcr",#MX_TEMP44",RCfiledecoder::getbyte()$AF77_44",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   24| 007B40 ori      60000000   1
   23|                              CL.2021:
     |               Tag Table
     | 007B44        00000000 00092041 80000100 00000000 00000044 001C5F5A
     | 007B5C        4E313352 4366696C 65646563 6F646572 37676574 62797465
     | 007B74        4576
     |               Instruction count           17
     |               Straight-line exec time     17
 GPR's set/used:   s--s s--- ---- ----  ---- ---- ---- ----
 FPR's set/used:   ---- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     RCmemdecoder::getbyte()
     | 000000                           AKA       _ZN12RCmemdecoder7getbyteEv
   58|                                  PROC      this,gr3
   58| 007B80 ld       E8830018   1     L8        gr4=(RCmemdecoder).ptr@18.rns330.(gr3,24)
   58| 007B84 lbz      88040000   1     L1Z       gr0=(char).rns108.(gr4,0)
   58| 007B88 addi     38840001   1     AI        gr4=gr4,1
   58| 007B8C std      F8830018   1     ST8       (RCmemdecoder).ptr@18.rns330.(gr3,24)=gr4
   58| 007B90 or       7C030378   1     LR        gr3=gr0
   58| 007B94 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 007B98        00000000 00092040 00000100 00000000 00000018 001B5F5A
     | 007BB0        4E313252 436D656D 6465636F 64657237 67657462 79746545
     | 007BC8        76
     |               Instruction count            6
     |               Straight-line exec time      6
 GPR's set/used:   ss-s ssss ssss s---  ---- ---- ---- ---s
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ----
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     FRONT<float>::~FRONT()
     | 000000                           AKA       _ZN5FRONTIfED1Ev
   11|                                  PROC      this,gr3
    0| 007BD0 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 007BD4 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 007BD8 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 007BDC stdu     F821FF61   1     ST8U      gr1,#stack(gr1,-160)=gr1
    0| 007BE0 or       7C7F1B78   1     LR        gr31=gr3
   11| 007BE4 ld       E8630018   1     L8        gr3=(FRONT<float>).a@18.rns263.(gr3,24)
   11| 007BE8 bl       48000001   1     CALL      _ZdaPv,1,(char).rns108.",gr3,#ProcAlias",_ZdaPv",fcr",#MX_TEMP46",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   11| 007BEC ori      60000000   1
   11| 007BF0 ld       E98100B0   1     L8        gr12=#stack(gr1,176)
   11| 007BF4 addi     382100A0   1     AI        gr1=gr1,160
   11| 007BF8 or       7FE3FB78   1     LR        gr3=gr31
   11| 007BFC ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
   11| 007C00 mtspr    7D8803A6   1     LLR       lr=gr12
   11| 007C04 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 007C08        00000000 00092041 80010100 00000000 00000038 00105F5A
     | 007C20        4E354652 4F4E5449 66454431 4576
     |               Instruction count           14
     |               Straight-line exec time     14
 GPR's set/used:   su-s ---- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -u-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<double,16,void>::forward(double) const
     | 000000                           AKA       _ZNK5PCmapIdLj16EvE7forwardEd
   98|                                  PROC      this,d,gr3,fp1
   71| 007C30 stfd     D821FFE0   1     STFL      shared(gr1,-32)=fp1
   72| 007C34 ld       E801FFE0   1     L8        gr0=shared(gr1,-32)
  104| 007C38 nor      7C0000F8   1     NOR       gr0=gr0,gr0
  104| 007C3C rldicl   78030FE0   1     SRL8      gr3=gr0,63
  104| 007C40 rldicl   78008420   1     SRL8      gr0=gr0,48
  104| 007C44 neg      7C6300D0   1     COMP      gr3=gr3
  104| 007C48 rldicl   78637C60   1     SRL8      gr3=gr3,49
  104| 007C4C xor      7C630278   1     X         gr3=gr3,gr0
  105| 007C50 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 007C54        00000000 00092240 00000100 60000000 00000024 001D5F5A
     | 007C6C        4E4B3550 436D6170 49644C6A 31364576 4537666F 72776172
     | 007C84        644564
     |               Instruction count            9
     |               Straight-line exec time      9
 GPR's set/used:   su-s ---- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -u-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<double,32,void>::forward(double) const
     | 000000                           AKA       _ZNK5PCmapIdLj32EvE7forwardEd
   98|                                  PROC      this,d,gr3,fp1
   71| 007C90 stfd     D821FFE0   1     STFL      shared(gr1,-32)=fp1
   72| 007C94 ld       E801FFE0   1     L8        gr0=shared(gr1,-32)
  104| 007C98 nor      7C0000F8   1     NOR       gr0=gr0,gr0
  104| 007C9C rldicl   78030FE0   1     SRL8      gr3=gr0,63
  104| 007CA0 rldicl   78000022   1     SRL8      gr0=gr0,32
  104| 007CA4 neg      7C6300D0   1     COMP      gr3=gr3
  104| 007CA8 rldicl   7863F860   1     SRL8      gr3=gr3,33
  104| 007CAC xor      7C630278   1     X         gr3=gr3,gr0
  105| 007CB0 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 007CB4        00000000 00092240 00000100 60000000 00000024 001D5F5A
     | 007CCC        4E4B3550 436D6170 49644C6A 33324576 4537666F 72776172
     | 007CE4        644564
     |               Instruction count            9
     |               Straight-line exec time      9
 GPR's set/used:   su-s ---- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -u-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<double,48,void>::forward(double) const
     | 000000                           AKA       _ZNK5PCmapIdLj48EvE7forwardEd
   98|                                  PROC      this,d,gr3,fp1
   71| 007CF0 stfd     D821FFE0   1     STFL      shared(gr1,-32)=fp1
   72| 007CF4 ld       E801FFE0   1     L8        gr0=shared(gr1,-32)
  104| 007CF8 nor      7C0000F8   1     NOR       gr0=gr0,gr0
  104| 007CFC rldicl   78030FE0   1     SRL8      gr3=gr0,63
  104| 007D00 rldicl   78008402   1     SRL8      gr0=gr0,16
  104| 007D04 neg      7C6300D0   1     COMP      gr3=gr3
  104| 007D08 rldicl   78637C42   1     SRL8      gr3=gr3,17
  104| 007D0C xor      7C630278   1     X         gr3=gr3,gr0
  105| 007D10 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 007D14        00000000 00092240 00000100 60000000 00000024 001D5F5A
     | 007D2C        4E4B3550 436D6170 49644C6A 34384576 4537666F 72776172
     | 007D44        644564
     |               Instruction count            9
     |               Straight-line exec time      9
 GPR's set/used:   su-s ---- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -u-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<double,64,void>::forward(double) const
     | 000000                           AKA       _ZNK5PCmapIdLj64EvE7forwardEd
   98|                                  PROC      this,d,gr3,fp1
   71| 007D50 stfd     D821FFE0   1     STFL      shared(gr1,-32)=fp1
   72| 007D54 ld       E861FFE0   1     L8        gr3=shared(gr1,-32)
  104| 007D58 nor      7C6018F8   1     NOR       gr0=gr3,gr3
  104| 007D5C rldicl   78000FE0   1     SRL8      gr0=gr0,63
  104| 007D60 neg      7C0000D0   1     COMP      gr0=gr0
  104| 007D64 rldicl   7800F842   1     SRL8      gr0=gr0,1
  104| 007D68 eqv      7C630238   1     EQV       gr3=gr3,gr0
  105| 007D6C bclr     4E800020   1     BA        lr
     |               Tag Table
     | 007D70        00000000 00092240 00000100 60000000 00000020 001D5F5A
     | 007D88        4E4B3550 436D6170 49644C6A 36344576 4537666F 72776172
     | 007DA0        644564
     |               Instruction count            8
     |               Straight-line exec time      8
 GPR's set/used:   su-s s--- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -u-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<float,8,void>::forward(float) const
     | 000000                           AKA       _ZNK5PCmapIfLj8EvE7forwardEf
   35|                                  PROC      this,d,gr3,fp1
    8| 007DB0 stfs     D021FFE0   1     STFS      shared(gr1,-32)=fp1
   41| 007DB4 addi     3800FFFF   1     LI        gr0=-1
   41| 007DB8 rldicl   78000020   1     RN8       gr0=gr0,0,0xFFFFFFFF
    9| 007DBC lwz      8061FFE0   1     L4Z       gr3=shared(gr1,-32)
   41| 007DC0 nor      7C6318F8   1     NOR       gr3=gr3,gr3
   41| 007DC4 rlwinm   54640FFE   1     SRL4      gr4=gr3,31
   41| 007DC8 rlwinm   5463463E   1     SRL4      gr3=gr3,24
   41| 007DCC mulld    7C0021D2   1     M         gr0=gr0,gr4
   41| 007DD0 rlwinm   54003E7E   1     SRL4      gr0=gr0,25
   41| 007DD4 xor      7C031A78   1     X         gr3=gr0,gr3
   42| 007DD8 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 007DDC        00000000 00092240 00000100 40000000 0000002C 001C5F5A
     | 007DF4        4E4B3550 436D6170 49664C6A 38457645 37666F72 77617264
     | 007E0C        4566
     |               Instruction count           11
     |               Straight-line exec time     11
 GPR's set/used:   su-s s--- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -u-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<float,16,void>::forward(float) const
     | 000000                           AKA       _ZNK5PCmapIfLj16EvE7forwardEf
   35|                                  PROC      this,d,gr3,fp1
    8| 007E10 stfs     D021FFE0   1     STFS      shared(gr1,-32)=fp1
   41| 007E14 addi     3800FFFF   1     LI        gr0=-1
   41| 007E18 rldicl   78000020   1     RN8       gr0=gr0,0,0xFFFFFFFF
    9| 007E1C lwz      8061FFE0   1     L4Z       gr3=shared(gr1,-32)
   41| 007E20 nor      7C6318F8   1     NOR       gr3=gr3,gr3
   41| 007E24 rlwinm   54640FFE   1     SRL4      gr4=gr3,31
   41| 007E28 rlwinm   5463843E   1     SRL4      gr3=gr3,16
   41| 007E2C mulld    7C0021D2   1     M         gr0=gr0,gr4
   41| 007E30 rlwinm   54007C7E   1     SRL4      gr0=gr0,17
   41| 007E34 xor      7C031A78   1     X         gr3=gr0,gr3
   42| 007E38 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 007E3C        00000000 00092240 00000100 40000000 0000002C 001D5F5A
     | 007E54        4E4B3550 436D6170 49664C6A 31364576 4537666F 72776172
     | 007E6C        644566
     |               Instruction count           11
     |               Straight-line exec time     11
 GPR's set/used:   su-s s--- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -u-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<float,24,void>::forward(float) const
     | 000000                           AKA       _ZNK5PCmapIfLj24EvE7forwardEf
   35|                                  PROC      this,d,gr3,fp1
    8| 007E70 stfs     D021FFE0   1     STFS      shared(gr1,-32)=fp1
   41| 007E74 addi     3800FFFF   1     LI        gr0=-1
   41| 007E78 rldicl   78000020   1     RN8       gr0=gr0,0,0xFFFFFFFF
    9| 007E7C lwz      8061FFE0   1     L4Z       gr3=shared(gr1,-32)
   41| 007E80 nor      7C6318F8   1     NOR       gr3=gr3,gr3
   41| 007E84 rlwinm   54640FFE   1     SRL4      gr4=gr3,31
   41| 007E88 rlwinm   5463C23E   1     SRL4      gr3=gr3,8
   41| 007E8C mulld    7C0021D2   1     M         gr0=gr0,gr4
   41| 007E90 rlwinm   5400BA7E   1     SRL4      gr0=gr0,9
   41| 007E94 xor      7C031A78   1     X         gr3=gr0,gr3
   42| 007E98 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 007E9C        00000000 00092240 00000100 40000000 0000002C 001D5F5A
     | 007EB4        4E4B3550 436D6170 49664C6A 32344576 4537666F 72776172
     | 007ECC        644566
     |               Instruction count           11
     |               Straight-line exec time     11
 GPR's set/used:   su-s s--- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -u-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<float,32,void>::forward(float) const
     | 000000                           AKA       _ZNK5PCmapIfLj32EvE7forwardEf
   35|                                  PROC      this,d,gr3,fp1
    8| 007ED0 stfs     D021FFE0   1     STFS      shared(gr1,-32)=fp1
   41| 007ED4 addi     3800FFFF   1     LI        gr0=-1
   41| 007ED8 rldicl   78000020   1     RN8       gr0=gr0,0,0xFFFFFFFF
    9| 007EDC lwz      8081FFE0   1     L4Z       gr4=shared(gr1,-32)
   41| 007EE0 nor      7C8320F8   1     NOR       gr3=gr4,gr4
   41| 007EE4 rlwinm   54630FFE   1     SRL4      gr3=gr3,31
   41| 007EE8 mulld    7C0019D2   1     M         gr0=gr0,gr3
   41| 007EEC rlwinm   5400F87E   1     SRL4      gr0=gr0,1
   41| 007EF0 eqv      7C002238   1     EQV       gr0=gr0,gr4
   41| 007EF4 rlwinm   5403003E   1     RN4       gr3=gr0,0,0xFFFFFFFF
   42| 007EF8 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 007EFC        00000000 00092240 00000100 40000000 0000002C 001D5F5A
     | 007F14        4E4B3550 436D6170 49664C6A 33324576 4537666F 72776172
     | 007F2C        644566
     |               Instruction count           11
     |               Straight-line exec time     11
 GPR's set/used:   -u-s ---- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -u-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<double,16,void>::fcast(double) const
     | 000000                           AKA       _ZNK5PCmapIdLj16EvE5fcastEd
   66|                                  PROC      this,d,gr3,fp1
   71| 007F30 stfd     D821FFE0   1     STFL      shared(gr1,-32)=fp1
   72| 007F34 ld       E861FFE0   1     L8        gr3=shared(gr1,-32)
   78| 007F38 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 007F3C        00000000 00092240 00000100 60000000 0000000C 001B5F5A
     | 007F54        4E4B3550 436D6170 49644C6A 31364576 45356663 61737445
     | 007F6C        64
     |               Instruction count            3
     |               Straight-line exec time      3
 GPR's set/used:   -u-- u--- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -s-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<double,16,void>::icast(unsigned long long) const
     | 000000                           AKA       _ZNK5PCmapIdLj16EvE5icastEy
   82|                                  PROC      this,r,gr3,gr4
   87| 007F70 std      F881FFE0   1     ST8       shared(gr1,-32)=gr4
   88| 007F74 lfd      C821FFE0   1     LFL       fp1=shared(gr1,-32)
   94| 007F78 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 007F7C        00000000 00092240 00000200 00000000 0000000C 001B5F5A
     | 007F94        4E4B3550 436D6170 49644C6A 31364576 45356963 61737445
     | 007FAC        79
     |               Instruction count            3
     |               Straight-line exec time      3
 GPR's set/used:   -u-s ---- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -u-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<double,32,void>::fcast(double) const
     | 000000                           AKA       _ZNK5PCmapIdLj32EvE5fcastEd
   66|                                  PROC      this,d,gr3,fp1
   71| 007FB0 stfd     D821FFE0   1     STFL      shared(gr1,-32)=fp1
   72| 007FB4 ld       E861FFE0   1     L8        gr3=shared(gr1,-32)
   78| 007FB8 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 007FBC        00000000 00092240 00000100 60000000 0000000C 001B5F5A
     | 007FD4        4E4B3550 436D6170 49644C6A 33324576 45356663 61737445
     | 007FEC        64
     |               Instruction count            3
     |               Straight-line exec time      3
 GPR's set/used:   -u-- u--- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -s-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<double,32,void>::icast(unsigned long long) const
     | 000000                           AKA       _ZNK5PCmapIdLj32EvE5icastEy
   82|                                  PROC      this,r,gr3,gr4
   87| 007FF0 std      F881FFE0   1     ST8       shared(gr1,-32)=gr4
   88| 007FF4 lfd      C821FFE0   1     LFL       fp1=shared(gr1,-32)
   94| 007FF8 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 007FFC        00000000 00092240 00000200 00000000 0000000C 001B5F5A
     | 008014        4E4B3550 436D6170 49644C6A 33324576 45356963 61737445
     | 00802C        79
     |               Instruction count            3
     |               Straight-line exec time      3
 GPR's set/used:   -u-s ---- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -u-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<double,48,void>::fcast(double) const
     | 000000                           AKA       _ZNK5PCmapIdLj48EvE5fcastEd
   66|                                  PROC      this,d,gr3,fp1
   71| 008030 stfd     D821FFE0   1     STFL      shared(gr1,-32)=fp1
   72| 008034 ld       E861FFE0   1     L8        gr3=shared(gr1,-32)
   78| 008038 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 00803C        00000000 00092240 00000100 60000000 0000000C 001B5F5A
     | 008054        4E4B3550 436D6170 49644C6A 34384576 45356663 61737445
     | 00806C        64
     |               Instruction count            3
     |               Straight-line exec time      3
 GPR's set/used:   -u-- u--- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -s-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<double,48,void>::icast(unsigned long long) const
     | 000000                           AKA       _ZNK5PCmapIdLj48EvE5icastEy
   82|                                  PROC      this,r,gr3,gr4
   87| 008070 std      F881FFE0   1     ST8       shared(gr1,-32)=gr4
   88| 008074 lfd      C821FFE0   1     LFL       fp1=shared(gr1,-32)
   94| 008078 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 00807C        00000000 00092240 00000200 00000000 0000000C 001B5F5A
     | 008094        4E4B3550 436D6170 49644C6A 34384576 45356963 61737445
     | 0080AC        79
     |               Instruction count            3
     |               Straight-line exec time      3
 GPR's set/used:   -u-s ---- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -u-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<double,64,void>::fcast(double) const
     | 000000                           AKA       _ZNK5PCmapIdLj64EvE5fcastEd
   66|                                  PROC      this,d,gr3,fp1
   71| 0080B0 stfd     D821FFE0   1     STFL      shared(gr1,-32)=fp1
   72| 0080B4 ld       E861FFE0   1     L8        gr3=shared(gr1,-32)
   78| 0080B8 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 0080BC        00000000 00092240 00000100 60000000 0000000C 001B5F5A
     | 0080D4        4E4B3550 436D6170 49644C6A 36344576 45356663 61737445
     | 0080EC        64
     |               Instruction count            3
     |               Straight-line exec time      3
 GPR's set/used:   -u-- u--- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -s-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<double,64,void>::icast(unsigned long long) const
     | 000000                           AKA       _ZNK5PCmapIdLj64EvE5icastEy
   82|                                  PROC      this,r,gr3,gr4
   87| 0080F0 std      F881FFE0   1     ST8       shared(gr1,-32)=gr4
   88| 0080F4 lfd      C821FFE0   1     LFL       fp1=shared(gr1,-32)
   94| 0080F8 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 0080FC        00000000 00092240 00000200 00000000 0000000C 001B5F5A
     | 008114        4E4B3550 436D6170 49644C6A 36344576 45356963 61737445
     | 00812C        79
     |               Instruction count            3
     |               Straight-line exec time      3
 GPR's set/used:   -u-s ---- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -u-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<float,8,void>::fcast(float) const
     | 000000                           AKA       _ZNK5PCmapIfLj8EvE5fcastEf
    3|                                  PROC      this,d,gr3,fp1
    8| 008130 stfs     D021FFE0   1     STFS      shared(gr1,-32)=fp1
    9| 008134 lwz      8061FFE0   1     L4Z       gr3=shared(gr1,-32)
   15| 008138 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 00813C        00000000 00092240 00000100 40000000 0000000C 001A5F5A
     | 008154        4E4B3550 436D6170 49664C6A 38457645 35666361 73744566
     |               Instruction count            3
     |               Straight-line exec time      3
 GPR's set/used:   -u-- u--- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -s-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<float,8,void>::icast(unsigned int) const
     | 000000                           AKA       _ZNK5PCmapIfLj8EvE5icastEj
   19|                                  PROC      this,r,gr3,gr4
   24| 008170 stw      9081FFE0   1     ST4Z      shared(gr1,-32)=gr4
   25| 008174 lfs      C021FFE0   1     LFS       fp1=shared(gr1,-32)
   31| 008178 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 00817C        00000000 00092240 00000200 00000000 0000000C 001A5F5A
     | 008194        4E4B3550 436D6170 49664C6A 38457645 35696361 7374456A
     |               Instruction count            3
     |               Straight-line exec time      3
 GPR's set/used:   -u-s ---- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -u-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<float,16,void>::fcast(float) const
     | 000000                           AKA       _ZNK5PCmapIfLj16EvE5fcastEf
    3|                                  PROC      this,d,gr3,fp1
    8| 0081B0 stfs     D021FFE0   1     STFS      shared(gr1,-32)=fp1
    9| 0081B4 lwz      8061FFE0   1     L4Z       gr3=shared(gr1,-32)
   15| 0081B8 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 0081BC        00000000 00092240 00000100 40000000 0000000C 001B5F5A
     | 0081D4        4E4B3550 436D6170 49664C6A 31364576 45356663 61737445
     | 0081EC        66
     |               Instruction count            3
     |               Straight-line exec time      3
 GPR's set/used:   -u-- u--- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -s-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<float,16,void>::icast(unsigned int) const
     | 000000                           AKA       _ZNK5PCmapIfLj16EvE5icastEj
   19|                                  PROC      this,r,gr3,gr4
   24| 0081F0 stw      9081FFE0   1     ST4Z      shared(gr1,-32)=gr4
   25| 0081F4 lfs      C021FFE0   1     LFS       fp1=shared(gr1,-32)
   31| 0081F8 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 0081FC        00000000 00092240 00000200 00000000 0000000C 001B5F5A
     | 008214        4E4B3550 436D6170 49664C6A 31364576 45356963 61737445
     | 00822C        6A
     |               Instruction count            3
     |               Straight-line exec time      3
 GPR's set/used:   -u-s ---- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -u-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<float,24,void>::fcast(float) const
     | 000000                           AKA       _ZNK5PCmapIfLj24EvE5fcastEf
    3|                                  PROC      this,d,gr3,fp1
    8| 008230 stfs     D021FFE0   1     STFS      shared(gr1,-32)=fp1
    9| 008234 lwz      8061FFE0   1     L4Z       gr3=shared(gr1,-32)
   15| 008238 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 00823C        00000000 00092240 00000100 40000000 0000000C 001B5F5A
     | 008254        4E4B3550 436D6170 49664C6A 32344576 45356663 61737445
     | 00826C        66
     |               Instruction count            3
     |               Straight-line exec time      3
 GPR's set/used:   -u-- u--- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -s-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<float,24,void>::icast(unsigned int) const
     | 000000                           AKA       _ZNK5PCmapIfLj24EvE5icastEj
   19|                                  PROC      this,r,gr3,gr4
   24| 008270 stw      9081FFE0   1     ST4Z      shared(gr1,-32)=gr4
   25| 008274 lfs      C021FFE0   1     LFS       fp1=shared(gr1,-32)
   31| 008278 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 00827C        00000000 00092240 00000200 00000000 0000000C 001B5F5A
     | 008294        4E4B3550 436D6170 49664C6A 32344576 45356963 61737445
     | 0082AC        6A
     |               Instruction count            3
     |               Straight-line exec time      3
 GPR's set/used:   -u-s ---- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -u-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<float,32,void>::fcast(float) const
     | 000000                           AKA       _ZNK5PCmapIfLj32EvE5fcastEf
    3|                                  PROC      this,d,gr3,fp1
    8| 0082B0 stfs     D021FFE0   1     STFS      shared(gr1,-32)=fp1
    9| 0082B4 lwz      8061FFE0   1     L4Z       gr3=shared(gr1,-32)
   15| 0082B8 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 0082BC        00000000 00092240 00000100 40000000 0000000C 001B5F5A
     | 0082D4        4E4B3550 436D6170 49664C6A 33324576 45356663 61737445
     | 0082EC        66
     |               Instruction count            3
     |               Straight-line exec time      3
 GPR's set/used:   -u-- u--- ---- ----  ---- ---- ---- ----
 FPR's set/used:   -s-- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     PCmap<float,32,void>::icast(unsigned int) const
     | 000000                           AKA       _ZNK5PCmapIfLj32EvE5icastEj
   19|                                  PROC      this,r,gr3,gr4
   24| 0082F0 stw      9081FFE0   1     ST4Z      shared(gr1,-32)=gr4
   25| 0082F4 lfs      C021FFE0   1     LFS       fp1=shared(gr1,-32)
   31| 0082F8 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 0082FC        00000000 00092240 00000200 00000000 0000000C 001B5F5A
     | 008314        4E4B3550 436D6170 49664C6A 33324576 45356963 61737445
     | 00832C        6A
     |               Instruction count            3
     |               Straight-line exec time      3
 GPR's set/used:   s-uu s--- ---- ----  ---- ---- ---- ----
 FPR's set/used:   ---- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     RCdecoder::~RCdecoder()
     | 000000                           AKA       _ZN9RCdecoderD1Ev
    9|                                  PROC      this,gr3
    9| 008330 ld       E8820000   1     L8        gr4=._ZTV9RCdecoder(gr2,0)
    9| 008334 addi     38040010   1     AI        gr0=gr4,16
    9| 008338 std      F8030000   1     ST8       (RCdecoder)[]@0.rns319.(gr3,0)=gr0
    9| 00833C bclr     4E800020   1     BA        lr
     |               Tag Table
     | 008340        00000000 00092040 00000100 00000000 00000010 00115F5A
     | 008358        4E395243 6465636F 64657244 314576
     |               Instruction count            4
     |               Straight-line exec time      4
 GPR's set/used:   ssus ssss ssss s---  ---- ---- ---- ---s
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ----
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     RCdecoder::~RCdecoder()
     | 000000                           AKA       _ZN9RCdecoderD0Ev
    9|                                  PROC      this,gr3
    0| 008370 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 008374 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 008378 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 00837C stdu     F821FF61   1     ST8U      gr1,#stack(gr1,-160)=gr1
    9| 008380 ld       E8820000   1     L8        gr4=._ZTV9RCdecoder(gr2,0)
    0| 008384 or       7C7F1B78   1     LR        gr31=gr3
    9| 008388 addi     38040010   1     AI        gr0=gr4,16
    9| 00838C std      F81F0000   1     ST8       (RCdecoder)[]@0.rns314.(gr31,0)=gr0
    9| 008390 bl       48000001   1     CALL      _ZdlPv,1,(char).rns108.",gr3,#ProcAlias",_ZdlPv",fcr",#MX_TEMP72",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    9| 008394 ori      60000000   1
    9| 008398 ld       E98100B0   1     L8        gr12=#stack(gr1,176)
    9| 00839C addi     382100A0   1     AI        gr1=gr1,160
    9| 0083A0 or       7FE3FB78   1     LR        gr3=gr31
    9| 0083A4 ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
    9| 0083A8 mtspr    7D8803A6   1     LLR       lr=gr12
    9| 0083AC bclr     4E800020   1     BA        lr
     |               Tag Table
     | 0083B0        00000000 00092041 80010100 00000000 00000040 00115F5A
     | 0083C8        4E395243 6465636F 64657244 304576
     |               Instruction count           16
     |               Straight-line exec time     16
 GPR's set/used:   s-uu s--- ---- ----  ---- ---- ---- ----
 FPR's set/used:   ---- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     RCmemdecoder::~RCmemdecoder()
     | 000000                           AKA       _ZN12RCmemdecoderD1Ev
    0|                                  PROC      this,gr3
    0| 0083E0 ld       E8820000   1     L8        gr4=._ZTV9RCdecoder(gr2,0)
    0| 0083E4 addi     38040010   1     AI        gr0=gr4,16
    0| 0083E8 std      F8030000   1     ST8       (RCdecoder)[]@0.rns309.(gr3,0)=gr0
    0| 0083EC bclr     4E800020   1     BA        lr
     |               Tag Table
     | 0083F0        00000000 00092040 00000100 00000000 00000010 00155F5A
     | 008408        4E313252 436D656D 6465636F 64657244 314576
     |               Instruction count            4
     |               Straight-line exec time      4
 GPR's set/used:   ssus ssss ssss s---  ---- ---- ---- ---s
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ----
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     RCmemdecoder::~RCmemdecoder()
     | 000000                           AKA       _ZN12RCmemdecoderD0Ev
    0|                                  PROC      this,gr3
    0| 008420 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 008424 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 008428 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 00842C stdu     F821FF61   1     ST8U      gr1,#stack(gr1,-160)=gr1
    0| 008430 ld       E8820000   1     L8        gr4=._ZTV9RCdecoder(gr2,0)
    0| 008434 or       7C7F1B78   1     LR        gr31=gr3
    0| 008438 addi     38040010   1     AI        gr0=gr4,16
    0| 00843C std      F81F0000   1     ST8       (RCdecoder)[]@0.rns314.(gr31,0)=gr0
    0| 008440 bl       48000001   1     CALL      _ZdlPv,1,(char).rns108.",gr3,#ProcAlias",_ZdlPv",fcr",#MX_TEMP74",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    0| 008444 ori      60000000   1
    0| 008448 ld       E98100B0   1     L8        gr12=#stack(gr1,176)
    0| 00844C addi     382100A0   1     AI        gr1=gr1,160
    0| 008450 or       7FE3FB78   1     LR        gr3=gr31
    0| 008454 ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
    0| 008458 mtspr    7D8803A6   1     LLR       lr=gr12
    0| 00845C bclr     4E800020   1     BA        lr
     |               Tag Table
     | 008460        00000000 00092041 80010100 00000000 00000040 00155F5A
     | 008478        4E313252 436D656D 6465636F 64657244 304576
     |               Instruction count           16
     |               Straight-line exec time     16
 GPR's set/used:   s-uu s--- ---- ----  ---- ---- ---- ----
 FPR's set/used:   ---- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ---- ----
     | 000000                           PDEF     RCfiledecoder::~RCfiledecoder()
     | 000000                           AKA       _ZN13RCfiledecoderD1Ev
    0|                                  PROC      this,gr3
    0| 008490 ld       E8820000   1     L8        gr4=._ZTV9RCdecoder(gr2,0)
    0| 008494 addi     38040010   1     AI        gr0=gr4,16
    0| 008498 std      F8030000   1     ST8       (RCdecoder)[]@0.rns311.(gr3,0)=gr0
    0| 00849C bclr     4E800020   1     BA        lr
     |               Tag Table
     | 0084A0        00000000 00092040 00000100 00000000 00000010 00165F5A
     | 0084B8        4E313352 4366696C 65646563 6F646572 44314576
     |               Instruction count            4
     |               Straight-line exec time      4
 GPR's set/used:   ssus ssss ssss s---  ---- ---- ---- ---s
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ----
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     RCfiledecoder::~RCfiledecoder()
     | 000000                           AKA       _ZN13RCfiledecoderD0Ev
    0|                                  PROC      this,gr3
    0| 0084D0 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 0084D4 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 0084D8 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 0084DC stdu     F821FF61   1     ST8U      gr1,#stack(gr1,-160)=gr1
    0| 0084E0 ld       E8820000   1     L8        gr4=._ZTV9RCdecoder(gr2,0)
    0| 0084E4 or       7C7F1B78   1     LR        gr31=gr3
    0| 0084E8 addi     38040010   1     AI        gr0=gr4,16
    0| 0084EC std      F81F0000   1     ST8       (RCdecoder)[]@0.rns314.(gr31,0)=gr0
    0| 0084F0 bl       48000001   1     CALL      _ZdlPv,1,(char).rns108.",gr3,#ProcAlias",_ZdlPv",fcr",#MX_TEMP76",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    0| 0084F4 ori      60000000   1
    0| 0084F8 ld       E98100B0   1     L8        gr12=#stack(gr1,176)
    0| 0084FC addi     382100A0   1     AI        gr1=gr1,160
    0| 008500 or       7FE3FB78   1     LR        gr3=gr31
    0| 008504 ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
    0| 008508 mtspr    7D8803A6   1     LLR       lr=gr12
    0| 00850C bclr     4E800020   1     BA        lr
     |               Tag Table
     | 008510        00000000 00092041 80010100 00000000 00000040 00165F5A
     | 008528        4E313352 4366696C 65646563 6F646572 44304576
     |               Instruction count           16
     |               Straight-line exec time     16
 GPR's set/used:   ss-s ssss ssss s---  ---- ---- ---- ---s
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ----
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     RCfiledecoder::getbyte()$AF77_44
     | 000000                           AKA       _ZN13RCfiledecoder7getbyteEv$AF77_44
   11|                                  PROC      gr3=this
    0| 008540 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 008544 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 008548 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 00854C stdu     F821FF61   1     ST8U      gr1,#stack(gr1,-160)=gr1
    0| 008550 or       7C7F1B78   1     LR        gr31=gr3
   13| 008554 addi     3863002C   1     AI        gr3=gr3,44
   13| 008558 ld       E8DF0018   1     L8        gr6=(RCfiledecoder).file@18.rns26.(gr31,24)
   13| 00855C addi     38800001   1     LI        gr4=1
   13| 008560 addi     38A01000   1     LI        gr5=4096
   13| 008564 bl       48000001   1     CALL      gr3=fread,4,(char).rns108.",gr3-gr5,(_IO_FILE).rns2.",gr6,#ProcAlias",fread",fcr",#MX_TEMP77",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   13| 008568 ori      60000000   1
   14| 00856C stw      907F0028   1     ST4Z      (RCfiledecoder).size@28.rns29.(gr31,40)=gr3
   15| 008570 cmpwi    2C030000   1     C4        cr0=gr3,0
   15| 008574 bc       41820024   1     BT        CL.4323,cr0,0x4/eq,taken=50%(0,0)
   20| 008578 lwz      801F0020   1     L4Z       gr0=(RCfiledecoder).count@20.rns27.(gr31,32)
   23| 00857C or       7FE4FB78   1     LR        gr4=gr31
   23| 008580 addi     38A00001   1     LI        gr5=1
   23| 008584 stw      90BF0024   1     ST4Z      (RCfiledecoder).index@24.rns28.(gr31,36)=gr5
   20| 008588 add      7C001A14   1     A         gr0=gr0,gr3
   23| 00858C lbzu     8C64002C   1     L1ZU      gr3,gr4=(RCfiledecoder).buffer[]@2c.rns327.(gr4,44)
   20| 008590 stw      901F0020   1     ST4Z      (RCfiledecoder).count@20.rns27.(gr31,32)=gr0
    0| 008594 b        48000020   1     B         CL.1999,-1
    0|                              CL.4323:
   16| 008598 addi     38000001   1     LI        gr0=1
   23| 00859C or       7FE4FB78   1     LR        gr4=gr31
   16| 0085A0 stw      901F0028   1     ST4Z      (RCfiledecoder).size@28.rns29.(gr31,40)=gr0
   17| 0085A4 stb      981F0014   1     ST1Z      (RCfiledecoder).error@14.rns25.(gr31,20)=gr0
   23| 0085A8 addi     38600001   1     LI        gr3=1
   23| 0085AC stw      907F0024   1     ST4Z      (RCfiledecoder).index@24.rns28.(gr31,36)=gr3
   23| 0085B0 lbzu     8C64002C   1     L1ZU      gr3,gr4=(RCfiledecoder).buffer[]@2c.rns327.(gr4,44)
   23|                              CL.1999:
   24| 0085B4 ld       E98100B0   1     L8        gr12=#stack(gr1,176)
   24| 0085B8 addi     382100A0   1     AI        gr1=gr1,160
   24| 0085BC ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
   24| 0085C0 mtspr    7D8803A6   1     LLR       lr=gr12
   24| 0085C4 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 0085C8        00000000 00092041 80010100 00000000 00000088 00245F5A
     | 0085E0        4E313352 4366696C 65646563 6F646572 37676574 62797465
     | 0085F8        45762441 4637375F 3434
     |               Instruction count           34
     |               Straight-line exec time     34
 GPR's set/used:   ssus ssss ssss s---  ---s ssss ssss ssss
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ----
 CCR's set/used:   ss-- ssss
     | 000000                           PDEF     decompress4d<float>(RCdecoder *, float *, int *, unsigned int, unsigned int, unsigned int, unsigned int)$AF78_4
     | 000000                           AKA       _Z12decompress4dIfEvP9RCdecoderPT_Pijjjj$AF78_4
  135|                                  PROC      gr3-gr9=rd,data,prec,nx,ny,nz,nf
    0| 008610 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 008614 std      FBC1FFF0   1     ST8       #stack(gr1,-16)=gr30
    0| 008618 std      FBA1FFE8   1     ST8       #stack(gr1,-24)=gr29
    0| 00861C std      FB81FFE0   1     ST8       #stack(gr1,-32)=gr28
    0| 008620 std      FB61FFD8   1     ST8       #stack(gr1,-40)=gr27
    0| 008624 std      FB41FFD0   1     ST8       #stack(gr1,-48)=gr26
    0| 008628 std      FB21FFC8   1     ST8       #stack(gr1,-56)=gr25
    0| 00862C std      FB01FFC0   1     ST8       #stack(gr1,-64)=gr24
    0| 008630 std      FAE1FFB8   1     ST8       #stack(gr1,-72)=gr23
    0| 008634 std      FAC1FFB0   1     ST8       #stack(gr1,-80)=gr22
    0| 008638 std      FAA1FFA8   1     ST8       #stack(gr1,-88)=gr21
    0| 00863C std      FA81FFA0   1     ST8       #stack(gr1,-96)=gr20
    0| 008640 std      FA61FF98   1     ST8       #stack(gr1,-104)=gr19
    0| 008644 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 008648 mfcr     7D800026   1     LFCR      gr12=cr4,4
    0| 00864C stw      91810008   1     ST4A      #stack(gr1,8)=gr12
    0| 008650 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 008654 stdu     F821FF01   1     ST8U      gr1,#stack(gr1,-256)=gr1
  135| 008658 rlwinm   54FF003E   1     RN4       gr31=gr7,0,0xFFFFFFFF
  135| 00865C rlwinm   551E003E   1     RN4       gr30=gr8,0,0xFFFFFFFF
    0| 008660 or       7CBD2B79   1     LR_R      gr29,cr0=gr5
  146| 008664 mulld    7C1EF9D2   1     M         gr0=gr30,gr31
    0| 008668 or       7C7C1B78   1     LR        gr28=gr3
  146| 00866C mulld    7C0031D2   1     M         gr0=gr0,gr6
    0| 008670 mcrf     4E000000   1     LRCR      cr4=cr0
  135| 008674 rlwinm   54DB003E   1     RN4       gr27=gr6,0,0xFFFFFFFF
  135| 008678 rlwinm   553A003E   1     RN4       gr26=gr9,0,0xFFFFFFFF
  146| 00867C addi     3B200000   1     LI        gr25=0
    0| 008680 rldic    78181788   1     RN8       gr24=gr0,2,0x3FFFFFFFC
    0| 008684 or       7C972378   1     LR        gr23=gr4
  146|                              CL.212:
  147| 008688 addi     3AC00020   1     LI        gr22=32
    4| 00868C addi     3AA00000   1     LI        gr21=0
    5| 008690 addi     3A800000   1     LI        gr20=0
    6| 008694 addi     3A600000   1     LI        gr19=0
    0| 008698 ori      60210000   1     XNOP      
    6|                              CL.215:
    7| 00869C cmplwi   28160010   1     CL4       cr0=gr22,16
    7| 0086A0 bc       41810194   1     BT        CL.3261,cr0,0x10/lgt,taken=40%(40,60)
    6| 0086A4 addi     3A730001   1     AI        gr19=gr19,1
    6| 0086A8 cmpldi   28330001   1     CL8       cr0=gr19,1
    6| 0086AC bc       4180FFF0   1     BT        CL.215,cr0,0x8/llt,taken=80%(80,20)
    0|                              CL.3259:
   12| 0086B0 or       7F83E378   1     LR        gr3=gr28
   12| 0086B4 or       7EC4B378   1     LR        gr4=gr22
   12| 0086B8 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns92.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP78",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   12| 0086BC ori      60000000   1
    0| 0086C0 slw      7C60A030   1     SLL4      gr0=gr3,gr20
    0| 0086C4 add      7C00AA14   1     A         gr0=gr0,gr21
    0| 0086C8 extsw    7C0507B4   1     EXTS4     gr5=gr0
  148| 0086CC bc       41920150   1     BT        CL.3250,cr4,0x4/eq,taken=50%(0,0)
  149| 0086D0 rldicl   7B230020   1     RN8       gr3=gr25,0,0xFFFFFFFF
  150| 0086D4 cmpwi    2C000008   1     C4        cr0=gr0,8
  149| 0086D8 rldicr   78631764   1     SLL8      gr3=gr3,2
  150| 0086DC cmpwi    2C800010   1     C4        cr1=gr0,16
  149| 0086E0 stwx     7C1D192E   1     ST4Z      (int).rns93.(gr29,gr3,0)=gr0
  150| 0086E4 cmpwi    2F000018   1     C4        cr6=gr0,24
  150| 0086E8 cmpwi    2F800020   1     C4        cr7=gr0,32
  150| 0086EC bc       41820110   1     BT        CL.229,cr0,0x4/eq,taken=40%(40,60)
    0|                              CL.3255:
  150| 0086F0 bc       418600E4   1     BT        CL.228,cr1,0x4/eq,taken=40%(40,60)
  150| 0086F4 bc       419A00B0   1     BT        CL.227,cr6,0x4/eq,taken=40%(40,60)
  150| 0086F8 bc       409E0088   1     BF        CL.3234,cr7,0x4/eq,taken=10%(10,90)
  161| 0086FC or       7F83E378   1     LR        gr3=gr28
  161| 008700 or       7EE4BB78   1     LR        gr4=gr23
  161| 008704 or       7F65DB78   1     LR        gr5=gr27
  161| 008708 or       7FE6FB78   1     LR        gr6=gr31
  161| 00870C or       7FC7F378   1     LR        gr7=gr30
  161| 008710 bl       4BFFD9A1   1     CALL      decompress3d<float,32>(RCdecoder *, float *, unsigned int, unsigned int, unsigned int),5,(char).rns92.",gr3,(float).rns94.",gr4-gr7,#ProcAlias",decompress3d<float,32>(RCdecoder *, float *, unsigned int, unsigned int, unsigned int)",fcr",#MX_TEMP78",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  161| 008714 ori      60000000   1
    0|                              CL.3256:
  146| 008718 addi     3B390001   1     AI        gr25=gr25,1
    0| 00871C add      7EF7C214   1     A         gr23=gr23,gr24
  146| 008720 cmpld    7C39D040   1     CL8       cr0=gr25,gr26
  146| 008724 bc       4180FF64   1     BT        CL.212,cr0,0x8/llt,taken=80%(80,20)
    0| 008728 ori      60210000   1     XNOP      
    0| 00872C ori      60210000   1     XNOP      
    0| 008730 ori      60210000   1     XNOP      
  165|                              CL.1935:
  170| 008734 ld       E8010110   1     L8        gr0=#stack(gr1,272)
  170| 008738 lwa      E981010A   1     L4A       gr12=#stack(gr1,264)
  170| 00873C addi     38210100   1     AI        gr1=gr1,256
  170| 008740 ld       EA61FF98   1     L8        gr19=#stack(gr1,-104)
  170| 008744 ld       EA81FFA0   1     L8        gr20=#stack(gr1,-96)
  170| 008748 mtspr    7C0803A6   1     LLR       lr=gr0
  170| 00874C mtcrf    7D808120   1     MTCRF     cr4=gr12
  170| 008750 ld       EAA1FFA8   1     L8        gr21=#stack(gr1,-88)
  170| 008754 ld       EAC1FFB0   1     L8        gr22=#stack(gr1,-80)
  170| 008758 ld       EAE1FFB8   1     L8        gr23=#stack(gr1,-72)
  170| 00875C ld       EB01FFC0   1     L8        gr24=#stack(gr1,-64)
  170| 008760 ld       EB21FFC8   1     L8        gr25=#stack(gr1,-56)
  170| 008764 ld       EB41FFD0   1     L8        gr26=#stack(gr1,-48)
  170| 008768 ld       EB61FFD8   1     L8        gr27=#stack(gr1,-40)
  170| 00876C ld       EB81FFE0   1     L8        gr28=#stack(gr1,-32)
  170| 008770 ld       EBA1FFE8   1     L8        gr29=#stack(gr1,-24)
  170| 008774 ld       EBC1FFF0   1     L8        gr30=#stack(gr1,-16)
  170| 008778 ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
  170| 00877C bclr     4E800020   1     BA        lr
    0|                              CL.3234:
  164| 008780 ld       E8620000   1     L8        gr3=.stderr(gr2,0)
  164| 008784 ld       E8820000   1     L8        gr4=.+CONSTANT_AREA(gr2,0)
  164| 008788 ld       E8630000   1     L8        gr3=<s52:d0:l8>(gr3,0)
  164| 00878C addi     38840098   1     AI        gr4=gr4,152
  164| 008790 bl       48000001   1     CALL      gr3=fprintf,3,(_IO_FILE).rns2.",gr3-gr5,#ProcAlias",fprintf",fcr",#MX_TEMP78",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  164| 008794 ori      60000000   1
  165| 008798 bl       48000001   1     CALL      abort,0,#ProcAlias",abort",fcr",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  165| 00879C ori      60000000   1
  165| 0087A0 tw       7C8E7008   1     TRAP      9
  157|                              CL.227:
  158| 0087A4 or       7F83E378   1     LR        gr3=gr28
  158| 0087A8 or       7EE4BB78   1     LR        gr4=gr23
  158| 0087AC or       7F65DB78   1     LR        gr5=gr27
  158| 0087B0 or       7FE6FB78   1     LR        gr6=gr31
  158| 0087B4 or       7FC7F378   1     LR        gr7=gr30
  158| 0087B8 bl       4BFFCFB9   1     CALL      decompress3d<float,24>(RCdecoder *, float *, unsigned int, unsigned int, unsigned int),5,(char).rns92.",gr3,(float).rns94.",gr4-gr7,#ProcAlias",decompress3d<float,24>(RCdecoder *, float *, unsigned int, unsigned int, unsigned int)",fcr",#MX_TEMP78",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  158| 0087BC ori      60000000   1
  146| 0087C0 addi     3B390001   1     AI        gr25=gr25,1
    0| 0087C4 add      7EF7C214   1     A         gr23=gr23,gr24
  146| 0087C8 cmpld    7C39D040   1     CL8       cr0=gr25,gr26
  146| 0087CC bc       4080FF68   1     BF        CL.1935,cr0,0x8/llt,taken=20%(20,80)
  146| 0087D0 b        4BFFFEB8   1     B         CL.212,-1
  154|                              CL.228:
  155| 0087D4 or       7F83E378   1     LR        gr3=gr28
  155| 0087D8 or       7EE4BB78   1     LR        gr4=gr23
  155| 0087DC or       7F65DB78   1     LR        gr5=gr27
  155| 0087E0 or       7FE6FB78   1     LR        gr6=gr31
  155| 0087E4 or       7FC7F378   1     LR        gr7=gr30
  155| 0087E8 bl       4BFFC649   1     CALL      decompress3d<float,16>(RCdecoder *, float *, unsigned int, unsigned int, unsigned int),5,(char).rns92.",gr3,(float).rns94.",gr4-gr7,#ProcAlias",decompress3d<float,16>(RCdecoder *, float *, unsigned int, unsigned int, unsigned int)",fcr",#MX_TEMP78",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  155| 0087EC ori      60000000   1
  156| 0087F0 b        4BFFFF28   1     B         CL.3256,-1
    0| 0087F4 ori      60210000   1     XNOP      
    0| 0087F8 ori      60210000   1     XNOP      
  151|                              CL.229:
  152| 0087FC or       7F83E378   1     LR        gr3=gr28
  152| 008800 or       7EE4BB78   1     LR        gr4=gr23
  152| 008804 or       7F65DB78   1     LR        gr5=gr27
  152| 008808 or       7FE6FB78   1     LR        gr6=gr31
  152| 00880C or       7FC7F378   1     LR        gr7=gr30
  152| 008810 bl       4BFFBC71   1     CALL      decompress3d<float,8>(RCdecoder *, float *, unsigned int, unsigned int, unsigned int),5,(char).rns92.",gr3,(float).rns94.",gr4-gr7,#ProcAlias",decompress3d<float,8>(RCdecoder *, float *, unsigned int, unsigned int, unsigned int)",fcr",#MX_TEMP78",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  152| 008814 ori      60000000   1
    0| 008818 b        4BFFFF00   1     B         CL.3256,-1
    0|                              CL.3250:
  150| 00881C cmpwi    2C000008   1     C4        cr0=gr0,8
  150| 008820 cmpwi    2C800010   1     C4        cr1=gr0,16
  150| 008824 cmpwi    2F000018   1     C4        cr6=gr0,24
  150| 008828 cmpwi    2F800020   1     C4        cr7=gr0,32
  150| 00882C bc       4182FFD0   1     BT        CL.229,cr0,0x4/eq,taken=40%(40,60)
    0| 008830 b        4BFFFEC0   1     B         CL.3255,-1
    0|                              CL.3261:
    3| 008834 or       7F83E378   1     LR        gr3=gr28
    3| 008838 addi     38800010   1     LI        gr4=16
    3| 00883C bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns92.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP78",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    3| 008840 ori      60000000   1
    6| 008844 addi     3A730001   1     AI        gr19=gr19,1
    8| 008848 slw      7C60A030   1     SLL4      gr0=gr3,gr20
   10| 00884C addi     3876FFF0   1     AI        gr3=gr22,-16
    6| 008850 cmpldi   28330001   1     CL8       cr0=gr19,1
    8| 008854 add      7EB50214   1     A         gr21=gr21,gr0
    9| 008858 addi     3A940010   1     AI        gr20=gr20,16
   10| 00885C rlwinm   5476003E   1     RN4       gr22=gr3,0,0xFFFFFFFF
    6| 008860 bc       4080FE50   1     BF        CL.3259,cr0,0x8/llt,taken=20%(20,80)
    6| 008864 b        4BFFFE38   1     B         CL.215,-1
     |               Tag Table
     | 008868        00000000 00092043 800D0700 00000000 00000258 002F5F5A
     | 008880        31326465 636F6D70 72657373 34644966 45765039 52436465
     | 008898        636F6465 7250545F 50696A6A 6A6A2441 4637385F 34
     |               Instruction count          150
     |               Straight-line exec time    150
 GPR's set/used:   ssus ssss ssss s---  ---s ssss ssss ssss
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ----
 CCR's set/used:   ss-- ssss
     | 000000                           PDEF     decompress4d<double>(RCdecoder *, double *, int *, unsigned int, unsigned int, unsigned int, unsigned int)$AF79_3
     | 000000                           AKA       _Z12decompress4dIdEvP9RCdecoderPT_Pijjjj$AF79_3
  135|                                  PROC      gr3-gr9=rd,data,prec,nx,ny,nz,nf
    0| 0088B0 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 0088B4 std      FBC1FFF0   1     ST8       #stack(gr1,-16)=gr30
    0| 0088B8 std      FBA1FFE8   1     ST8       #stack(gr1,-24)=gr29
    0| 0088BC std      FB81FFE0   1     ST8       #stack(gr1,-32)=gr28
    0| 0088C0 std      FB61FFD8   1     ST8       #stack(gr1,-40)=gr27
    0| 0088C4 std      FB41FFD0   1     ST8       #stack(gr1,-48)=gr26
    0| 0088C8 std      FB21FFC8   1     ST8       #stack(gr1,-56)=gr25
    0| 0088CC std      FB01FFC0   1     ST8       #stack(gr1,-64)=gr24
    0| 0088D0 std      FAE1FFB8   1     ST8       #stack(gr1,-72)=gr23
    0| 0088D4 std      FAC1FFB0   1     ST8       #stack(gr1,-80)=gr22
    0| 0088D8 std      FAA1FFA8   1     ST8       #stack(gr1,-88)=gr21
    0| 0088DC std      FA81FFA0   1     ST8       #stack(gr1,-96)=gr20
    0| 0088E0 std      FA61FF98   1     ST8       #stack(gr1,-104)=gr19
    0| 0088E4 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 0088E8 mfcr     7D800026   1     LFCR      gr12=cr4,4
    0| 0088EC stw      91810008   1     ST4A      #stack(gr1,8)=gr12
    0| 0088F0 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 0088F4 stdu     F821FF01   1     ST8U      gr1,#stack(gr1,-256)=gr1
  135| 0088F8 rlwinm   54FF003E   1     RN4       gr31=gr7,0,0xFFFFFFFF
  135| 0088FC rlwinm   551E003E   1     RN4       gr30=gr8,0,0xFFFFFFFF
    0| 008900 or       7CBD2B79   1     LR_R      gr29,cr0=gr5
  146| 008904 mulld    7C1EF9D2   1     M         gr0=gr30,gr31
    0| 008908 or       7C7C1B78   1     LR        gr28=gr3
  146| 00890C mulld    7C0031D2   1     M         gr0=gr0,gr6
    0| 008910 mcrf     4E000000   1     LRCR      cr4=cr0
  135| 008914 rlwinm   54DB003E   1     RN4       gr27=gr6,0,0xFFFFFFFF
  135| 008918 rlwinm   553A003E   1     RN4       gr26=gr9,0,0xFFFFFFFF
  146| 00891C addi     3B200000   1     LI        gr25=0
    0| 008920 rldic    78181F48   1     RN8       gr24=gr0,3,0x7FFFFFFF8
    0| 008924 or       7C972378   1     LR        gr23=gr4
  146|                              CL.188:
  147| 008928 addi     3AC00020   1     LI        gr22=32
    4| 00892C addi     3AA00000   1     LI        gr21=0
    5| 008930 addi     3A800000   1     LI        gr20=0
    6| 008934 addi     3A600000   1     LI        gr19=0
    0| 008938 ori      60210000   1     XNOP      
    6|                              CL.191:
    7| 00893C cmplwi   28160010   1     CL4       cr0=gr22,16
    7| 008940 bc       41810194   1     BT        CL.4201,cr0,0x10/lgt,taken=40%(40,60)
    6| 008944 addi     3A730001   1     AI        gr19=gr19,1
    6| 008948 cmpldi   28330001   1     CL8       cr0=gr19,1
    6| 00894C bc       4180FFF0   1     BT        CL.191,cr0,0x8/llt,taken=80%(80,20)
    0|                              CL.4199:
   12| 008950 or       7F83E378   1     LR        gr3=gr28
   12| 008954 or       7EC4B378   1     LR        gr4=gr22
   12| 008958 bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns87.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP79",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
   12| 00895C ori      60000000   1
    0| 008960 slw      7C60A030   1     SLL4      gr0=gr3,gr20
    0| 008964 add      7C00AA14   1     A         gr0=gr0,gr21
    0| 008968 extsw    7C0507B4   1     EXTS4     gr5=gr0
  148| 00896C bc       41920150   1     BT        CL.4190,cr4,0x4/eq,taken=50%(0,0)
  149| 008970 rldicl   7B230020   1     RN8       gr3=gr25,0,0xFFFFFFFF
  150| 008974 cmpwi    2C000010   1     C4        cr0=gr0,16
  149| 008978 rldicr   78631764   1     SLL8      gr3=gr3,2
  150| 00897C cmpwi    2C800020   1     C4        cr1=gr0,32
  149| 008980 stwx     7C1D192E   1     ST4Z      (int).rns88.(gr29,gr3,0)=gr0
  150| 008984 cmpwi    2F000030   1     C4        cr6=gr0,48
  150| 008988 cmpwi    2F800040   1     C4        cr7=gr0,64
  150| 00898C bc       41820110   1     BT        CL.205,cr0,0x4/eq,taken=40%(40,60)
    0|                              CL.4195:
  150| 008990 bc       418600E4   1     BT        CL.204,cr1,0x4/eq,taken=40%(40,60)
  150| 008994 bc       419A00B0   1     BT        CL.203,cr6,0x4/eq,taken=40%(40,60)
  150| 008998 bc       409E0088   1     BF        CL.4174,cr7,0x4/eq,taken=10%(10,90)
  161| 00899C or       7F83E378   1     LR        gr3=gr28
  161| 0089A0 or       7EE4BB78   1     LR        gr4=gr23
  161| 0089A4 or       7F65DB78   1     LR        gr5=gr27
  161| 0089A8 or       7FE6FB78   1     LR        gr6=gr31
  161| 0089AC or       7FC7F378   1     LR        gr7=gr30
  161| 0089B0 bl       4BFFB181   1     CALL      decompress3d<double,64>(RCdecoder *, double *, unsigned int, unsigned int, unsigned int),5,(char).rns87.",gr3,(double).rns89.",gr4-gr7,#ProcAlias",decompress3d<double,64>(RCdecoder *, double *, unsigned int, unsigned int, unsigned int)",fcr",#MX_TEMP79",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  161| 0089B4 ori      60000000   1
    0|                              CL.4196:
  146| 0089B8 addi     3B390001   1     AI        gr25=gr25,1
    0| 0089BC add      7EF7C214   1     A         gr23=gr23,gr24
  146| 0089C0 cmpld    7C39D040   1     CL8       cr0=gr25,gr26
  146| 0089C4 bc       4180FF64   1     BT        CL.188,cr0,0x8/llt,taken=80%(80,20)
    0| 0089C8 ori      60210000   1     XNOP      
    0| 0089CC ori      60210000   1     XNOP      
    0| 0089D0 ori      60210000   1     XNOP      
  165|                              CL.1933:
  170| 0089D4 ld       E8010110   1     L8        gr0=#stack(gr1,272)
  170| 0089D8 lwa      E981010A   1     L4A       gr12=#stack(gr1,264)
  170| 0089DC addi     38210100   1     AI        gr1=gr1,256
  170| 0089E0 ld       EA61FF98   1     L8        gr19=#stack(gr1,-104)
  170| 0089E4 ld       EA81FFA0   1     L8        gr20=#stack(gr1,-96)
  170| 0089E8 mtspr    7C0803A6   1     LLR       lr=gr0
  170| 0089EC mtcrf    7D808120   1     MTCRF     cr4=gr12
  170| 0089F0 ld       EAA1FFA8   1     L8        gr21=#stack(gr1,-88)
  170| 0089F4 ld       EAC1FFB0   1     L8        gr22=#stack(gr1,-80)
  170| 0089F8 ld       EAE1FFB8   1     L8        gr23=#stack(gr1,-72)
  170| 0089FC ld       EB01FFC0   1     L8        gr24=#stack(gr1,-64)
  170| 008A00 ld       EB21FFC8   1     L8        gr25=#stack(gr1,-56)
  170| 008A04 ld       EB41FFD0   1     L8        gr26=#stack(gr1,-48)
  170| 008A08 ld       EB61FFD8   1     L8        gr27=#stack(gr1,-40)
  170| 008A0C ld       EB81FFE0   1     L8        gr28=#stack(gr1,-32)
  170| 008A10 ld       EBA1FFE8   1     L8        gr29=#stack(gr1,-24)
  170| 008A14 ld       EBC1FFF0   1     L8        gr30=#stack(gr1,-16)
  170| 008A18 ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
  170| 008A1C bclr     4E800020   1     BA        lr
    0|                              CL.4174:
  164| 008A20 ld       E8620000   1     L8        gr3=.stderr(gr2,0)
  164| 008A24 ld       E8820000   1     L8        gr4=.+CONSTANT_AREA(gr2,0)
  164| 008A28 ld       E8630000   1     L8        gr3=<s52:d0:l8>(gr3,0)
  164| 008A2C addi     38840098   1     AI        gr4=gr4,152
  164| 008A30 bl       48000001   1     CALL      gr3=fprintf,3,(_IO_FILE).rns2.",gr3-gr5,#ProcAlias",fprintf",fcr",#MX_TEMP79",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  164| 008A34 ori      60000000   1
  165| 008A38 bl       48000001   1     CALL      abort,0,#ProcAlias",abort",fcr",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  165| 008A3C ori      60000000   1
  165| 008A40 tw       7C8E7008   1     TRAP      9
  157|                              CL.203:
  158| 008A44 or       7F83E378   1     LR        gr3=gr28
  158| 008A48 or       7EE4BB78   1     LR        gr4=gr23
  158| 008A4C or       7F65DB78   1     LR        gr5=gr27
  158| 008A50 or       7FE6FB78   1     LR        gr6=gr31
  158| 008A54 or       7FC7F378   1     LR        gr7=gr30
  158| 008A58 bl       4BFFA789   1     CALL      decompress3d<double,48>(RCdecoder *, double *, unsigned int, unsigned int, unsigned int),5,(char).rns87.",gr3,(double).rns89.",gr4-gr7,#ProcAlias",decompress3d<double,48>(RCdecoder *, double *, unsigned int, unsigned int, unsigned int)",fcr",#MX_TEMP79",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  158| 008A5C ori      60000000   1
  146| 008A60 addi     3B390001   1     AI        gr25=gr25,1
    0| 008A64 add      7EF7C214   1     A         gr23=gr23,gr24
  146| 008A68 cmpld    7C39D040   1     CL8       cr0=gr25,gr26
  146| 008A6C bc       4080FF68   1     BF        CL.1933,cr0,0x8/llt,taken=20%(20,80)
  146| 008A70 b        4BFFFEB8   1     B         CL.188,-1
  154|                              CL.204:
  155| 008A74 or       7F83E378   1     LR        gr3=gr28
  155| 008A78 or       7EE4BB78   1     LR        gr4=gr23
  155| 008A7C or       7F65DB78   1     LR        gr5=gr27
  155| 008A80 or       7FE6FB78   1     LR        gr6=gr31
  155| 008A84 or       7FC7F378   1     LR        gr7=gr30
  155| 008A88 bl       4BFF9E09   1     CALL      decompress3d<double,32>(RCdecoder *, double *, unsigned int, unsigned int, unsigned int),5,(char).rns87.",gr3,(double).rns89.",gr4-gr7,#ProcAlias",decompress3d<double,32>(RCdecoder *, double *, unsigned int, unsigned int, unsigned int)",fcr",#MX_TEMP79",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  155| 008A8C ori      60000000   1
  156| 008A90 b        4BFFFF28   1     B         CL.4196,-1
    0| 008A94 ori      60210000   1     XNOP      
    0| 008A98 ori      60210000   1     XNOP      
  151|                              CL.205:
  152| 008A9C or       7F83E378   1     LR        gr3=gr28
  152| 008AA0 or       7EE4BB78   1     LR        gr4=gr23
  152| 008AA4 or       7F65DB78   1     LR        gr5=gr27
  152| 008AA8 or       7FE6FB78   1     LR        gr6=gr31
  152| 008AAC or       7FC7F378   1     LR        gr7=gr30
  152| 008AB0 bl       4BFF94A1   1     CALL      decompress3d<double,16>(RCdecoder *, double *, unsigned int, unsigned int, unsigned int),5,(char).rns87.",gr3,(double).rns89.",gr4-gr7,#ProcAlias",decompress3d<double,16>(RCdecoder *, double *, unsigned int, unsigned int, unsigned int)",fcr",#MX_TEMP79",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
  152| 008AB4 ori      60000000   1
    0| 008AB8 b        4BFFFF00   1     B         CL.4196,-1
    0|                              CL.4190:
  150| 008ABC cmpwi    2C000010   1     C4        cr0=gr0,16
  150| 008AC0 cmpwi    2C800020   1     C4        cr1=gr0,32
  150| 008AC4 cmpwi    2F000030   1     C4        cr6=gr0,48
  150| 008AC8 cmpwi    2F800040   1     C4        cr7=gr0,64
  150| 008ACC bc       4182FFD0   1     BT        CL.205,cr0,0x4/eq,taken=40%(40,60)
    0| 008AD0 b        4BFFFEC0   1     B         CL.4195,-1
    0|                              CL.4201:
    3| 008AD4 or       7F83E378   1     LR        gr3=gr28
    3| 008AD8 addi     38800010   1     LI        gr4=16
    3| 008ADC bl       48000001   1     CALL      gr3=_ZN9RCdecoder12decode_shiftEj,2,(char).rns87.",gr3,gr4,#ProcAlias",_ZN9RCdecoder12decode_shiftEj",fcr",#MX_TEMP79",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",fcr",xer",fsr",ca",ctr"
    3| 008AE0 ori      60000000   1
    6| 008AE4 addi     3A730001   1     AI        gr19=gr19,1
    8| 008AE8 slw      7C60A030   1     SLL4      gr0=gr3,gr20
   10| 008AEC addi     3876FFF0   1     AI        gr3=gr22,-16
    6| 008AF0 cmpldi   28330001   1     CL8       cr0=gr19,1
    8| 008AF4 add      7EB50214   1     A         gr21=gr21,gr0
    9| 008AF8 addi     3A940010   1     AI        gr20=gr20,16
   10| 008AFC rlwinm   5476003E   1     RN4       gr22=gr3,0,0xFFFFFFFF
    6| 008B00 bc       4080FE50   1     BF        CL.4199,cr0,0x8/llt,taken=20%(20,80)
    6| 008B04 b        4BFFFE38   1     B         CL.191,-1
     |               Tag Table
     | 008B08        00000000 00092043 800D0700 00000000 00000258 002F5F5A
     | 008B20        31326465 636F6D70 72657373 34644964 45765039 52436465
     | 008B38        636F6465 7250545F 50696A6A 6A6A2441 4637395F 33
     |               Instruction count          150
     |               Straight-line exec time    150
     |               Constant Area
     | 000000        66707A69 703A206E 6F742061 6E206670 7A207374 7265616D
     | 000018        0A004942 66707A69 703A2066 6F726D61 74207665 7273696F
     | 000030        6E206E6F 74207375 70706F72 7465640A 0049424D 66707A69
     | 000048        703A2061 72726179 2064696D 656E7369 6F6E7320 646F206E
     | 000060        6F74206D 61746368 0A004942 66707A69 703A2066 6C6F6174
     | 000078        696E672D 706F696E 74207479 70652064 6F657320 6E6F7420
     | 000090        6D617463 680A0049 66707A69 703A2069 6E76616C 69642070
     | 0000A8        72656369 73696F6E 20256420 696E2066 696C650A 0049424D
     | 0000C0        72620049 66707A69 703A2063 616E6E6F 74206F70 656E2066
     | 0000D8        696C6520 25730A00 66707A69 703A2063 616E6E6F 74207265
     | 0000F0        61642066 696C6520 25730A00
